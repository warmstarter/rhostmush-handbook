INTALLATION HELP -- Welcome to RhostMUSH!  

Pronounced either Roast-MUSH or Rawst-MUSH.  The latter is the preferred
method as the name is based off the original mush Rhostshyl that was the
founding of this codebase back in 1989.

I.      What RhostMUSH is about and what's so great about RhostMUSH.
II.     What to type to Compile and Install RhostMUSH
III.    How to convert a database from another mush to RhostMUSH
IV.     What to type to configure and get your RhostMUSH up and running
V.      What to type to get the basics running if you did not choose a 
        pre-existing flatfile in step III.
VI.     Considerations to locking down restrictions in RhostMUSH
VII.    What FLAGS, TOGGLES, POWERS, and DEPOWERS mean in RhostMUSH
VIII.   Extended lockdown of the mush and considerations.
IX.     Methods to block anonymous connections and the pros and cons 
        of doing so.
X.      What may need to be modified to get softcode from PennMUSH, 
        TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost
XI.     The differences to expect to the end user between PennMUSH, MUX,
        and RhostMUSH as of 08/06/2016.
XII.    Advanced features of RhostMUSH
        A.  Debugging/Tracing
        B.  Zoning
        C.  Reality Levels
        D.  Function and Command Overriding
        E.  The Recycle Bin
        F.  Percent Substitution Adding/Overriding
        G.  Hooking
        H.  Command based uselocks
        I.  Differentating between command and listen locks
        J.  Wizard auto-overiding and how to disable it
        K.  Advanced FLAG and TOGGLE control
        L.  Advanced site control
        M.  Auto-Registration
        N.  Which bit level is best?
        O.  What are the limits for size/growth for RhostMUSH?
        P.  Sqlite and MySQL/Maria setup and why use it?
        Q.  Executing outside scripts and binaries within RhostMUSH.
        R.  Pulling external data into RhostMUSH
        S.  Integrating a unix cron right into RhostMUSH
        T.  Signal handling, how it works, and when and why use it
        U.  Setting up global parents, global inheritance, global attribute
            formatting, and all the other fun global setups for fun and profit
        V.  RhostMUSH limitations and how to get around them.
        W.  Things other mushes can do that Rhost can not and how to emulate it
        X.  Advanced guest setup 
        Y.  Attribute permission masking and the joys of the power behind it
        Z.  The amazing @cluster and what it can do for you
        ZZ. What we plan for the future
XIII.   Signals and why you need them for control
XIV.    Setting up an SSL tunnel for secure connection options
XV.     Multi-tiered bitlevel systems
XVI.    Adding hardcoded modules
XVII.   Shutting down gracefully
XVIII.  Stack limit and debugging
XIX.    Reality levels
XX.     Execscript and external programs and scripts
XXI.    Using printf() for advanced text output

