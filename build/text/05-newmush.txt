What to type to get the basics running if you did not choose a pre-existing flatfile
************************************************************************************

If you decided to get a bare-bone configuration, you will find your
mush has just two things.  The #1 (God) player and the starting room
#0.  That’s it.


Login to #1 from the connect screen
===================================

Nyctasia is the default password co #1 Nyctasia


Change #1’s password to something you’ll remember but is hard to guess
======================================================================

   Note: yourpasswordgoeshere can be any password you choose.  Choose
   well.

@password Nyctasia=YOURPASSWORDGOESHERE


Master Room
===========

   At this point you should create your master room: Reason: You need
   a master room to contain global $commands for players. Note:
   ^listens are not global for intentional reasons.  It’s far too much

      overhead for far too minimal gains that few people need or use.

@dig Master Room


Flag and protect Master Room
============================

   It will return a dbref#, it should be #2 if you’ve not created
   anything else.

@set #2=safe ind halt float


Player Holder Characters
========================

(feel free to change the password to what you want)
   Reason: You will want to chown global room or global areas to a
   given
      bitlevel and a method to keep organized.

   Note: wizhelp control will give you a complete breakdown of what
   each bit
      can do.


Immortal Holder
---------------

@pcreate ImmHolder=abc123 @set *Immholder=no_connect !wanderer
immortal @badsite *immholder=*


Royalty/Wizard Holder
---------------------

@pcreate WizHolder=abc123 @set *wizholder=no_connect !wanderer royalty
@badsite *wizholder=*


Councilor/Admin Holder
----------------------

@pcreate AdminHolder=abc123 @set *adminholder=no_connect !wanderer
councilor @badsite *adminholder=*


Architect/Staff Holder
----------------------

@pcreate StaffHolder=abc123 @set *staffholder=no_connect !wanderer
architect @badsite *staffholder=*


Guildmaster/Lead Holder
-----------------------

@pcreate GuildHolder=abc123 @set *guildholder=no_connect !wanderer
guildmaster @badsite *guildholder=*


Chown #0 (The starting room) and #2 (The Master room) to immholder
==================================================================

   Note: #0 you can chown to a different bitlevel if you want, but the
      master room should always be owned by an immortal

@chown/preserve #0=*immholder @chown/preserve #2=*immholder


Create yourself your own immortal player then log off #1 and into this immortal player
======================================================================================

   Note: Pick what you want for playername and playerpassword

@pcreate PLAYERNAME=PLAYERPASSWORD @set >>*<<playername=!wanderer
immortal


Log out of #1 and log into your immortal player
===============================================

   Note: use the playername and password you created in the step
   before

LOGOUT co PLAYERNAME PLAYERPASSWORD


Create your guest characters
============================

   Note: Feel free to change the description if you want

@dolist lnum(1,10)={@pcreate Guest##=guest;@set
>>*<<Guest##=guest;@adisconnect >>*<<Guest##=home;@lock
>>*<<Guest##=*Guest##;@desc >>*<<Guest##=A Stranger in a strange
land.}


Dig a closet to store important objects but non-master room
===========================================================

   Note: name it anything you want, just remember it.

@dig Closet


Set the flags on the closet and ownership of it
===============================================

   Note: use the dbref# that it returned when digging the closet and
   not #123

@set #123=inh safe ind float @chown/pres #123=*immholder


Create an Admin object for future ease of customization
=======================================================

@create AdminObject


Set the flags on the admin object and ownership and location
============================================================

   Note: this object must be immortal owned.  Use the dbref# returned
   previously
      instead of #123

   Note2: Use the closet dbref# instead of #234

@set AdminObject=halt safe ind @chown/pres #123=*immholder @tel
adminobject=#234


Add admin object to configuration
=================================

Modify the netrhost.conf file with the following line at the bottom
after
   the line ‘# define local alises here’ where you replace 123 with
   the dbref# of the admin object that you made:

admin_object 123


Reboot your mush to load up the change for the admin object
===========================================================

@reboot


Do @admin/list to see if it shows the admin object
==================================================

   Note: do wizhelp @admin for more information on how to use this

@admin/list


Load in all the various softcode that you want
==============================================

This is client dependant based on whatever method it uses to load
softcode.


Myrddin MushCron
----------------

Load in the Myrddin Mush Cron. It’s a very handy piece of software and

   strongly suggested to do so.  You can find this in the ‘Mushcode’
   directory off the main Rhost directory. Filename:
   ~/Rhost/Mushcode/MyrddinCRON

@chown/preserve the myrddin mush cron to immholder, then move to maste
room.
   Note: the globalroom() function returns the dbref# of the master
   room.  Handy!

@chown/pres Myrddin=*Immholder @tel Myrddin=#234 (where #234 is the
dbref# of your code closet)


AshCom
------

Load in default softcoded comsystem.  This is PennMUSH and MUX/TM3
compatible.
   Filename: ~/Rhost/Mushcode/comsys

Chown the Comsystem and everything inside it to immholder. @chown/pres
ChanSys=*Immholder @dolist lcon(chansys)=@chown/pres ##=*immholder
@tel Chansys=globalroom()


Mail Wrappers
-------------

Load in mail wrappers if you want MUX/TM3 and/or Penn mail wrapping.
   Filename: (MUX/TM3) ~/Rhost/Mushcode/mailwrappers/muxmail.wrap
   Filename: (Penn)    ~/Rhost/Mushcode/mailwrappers/pennmail.wrap

Chown to immholder @chown/pres MUX=*Immholder @chown/pres
Penn=*Immholder @tel/list mux penn=globalroom()


Myrddin BBS
-----------

Load in Myrddin’s BBS
   Filename: ~/Rhost/Mushcode/MyrddinBBS

Chown to immholder and the contents of it as well. @chown/pres
Myrddin=*Immholder @dolist lcon(myrddin)=@chown/pres ##=*immholder
@tel myrddin=globalroom()


Other Mushcode
--------------

There’s other code in the Mushcode directory that you are welcome to
install.  You would follow similar procedures for loading it in,
chowning it, and moving to the master room as you did above.

Likewise, any softcode you find on the internet or on other mushes
should be portable to RhostMUSH with little to no changes depending on
the complexity of the code in question.
