<document source="/home/pi/rhostmush/rhostmush-handbook/source/ambrosiadb.rst">
    <substitution_definition names="br">
        <raw format="html .. force a line break in html output (blank lines needed here)" xml:space="preserve">
            <br />
    <substitution_definition names="p">
        <raw format="html .. force a blank line in html output (blank lines needed here)" xml:space="preserve">
            <p></p>
    <comment xml:space="preserve">
        These are replacement strings for non-ASCII characters used within the project
        using the same name as the html entity names (e.g., &copy;) for that character
    <substitution_definition ltrim="1" names="copy">
        ©
    <substitution_definition ltrim="1" names="trade">
        ™
    <substitution_definition ltrim="1" names="reg">
        ®
    <substitution_definition ltrim="1" names="deg">
        °
    <substitution_definition names="plusminus" rtrim="1">
        ±
    <substitution_definition names="micro" rtrim="1">
        µ
    <substitution_definition ltrim="1" names="sup2">
        ²
    <section ids="ambrosia-s-minimal-rhost-db" names="ambrosia's\ minimal\ rhost\ db">
        <title>
            Ambrosia’s Minimal Rhost DB
        <section ids="version-1-0-5-2020-01-31" names="version:\ 1.0.5\ 2020-01-31">
            <title>
                Version: 1.0.5          2020-01-31
            <definition_list>
                <definition_list_item>
                    <term>
                        Version history:
                    <definition>
                        <definition_list>
                            <definition_list_item>
                                <term>
                                    1.0.0
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Initial database setup.
                            <definition_list_item>
                                <term>
                                    1.0.1
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Small fixes of objid(), isstaff() and bccheck() permissions and handling.
                                        <list_item>
                                            <paragraph>
                                                bittype() access lowered to Architect level
                                        <list_item>
                                            <paragraph>
                                                NO_CODE flag made visual to Architect
                            <definition_list_item>
                                <term>
                                    1.0.2
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Several convenience changes and fixes: _ Attributes moved to @aflags
                                                system, allowing Architects to set, Guildmasters to see them.
                                        <list_item>
                                            <paragraph>
                                                @flagdef lowered to Royalty level. @quota/max, @quota/unlock and @convert
                                                moved to Architect level.
                                        <list_item>
                                            <paragraph>
                                                NO_CODE flag made settable/unsettable by Architects.
                                        <list_item>
                                            <paragraph>
                                                Fixed typo in conf file: ifselse -> ifelse
                                        <list_item>
                                            <paragraph>
                                                Switched _Attributes to use the @aflags system
                                                See: Guildmaster
                                                Set: Architect
                            <definition_list_item>
                                <term>
                                    1.0.3
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Removed @flagdefs from in-game softcode, converted to flag_access_*
                                                config options
                                        <list_item>
                                            <paragraph>
                                                Lowered mailstatus() access to architect.
                            <definition_list_item>
                                <term>
                                    1.0.4
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Changed softcoded objid() to tag(), due to Rhost’s new hardcoded
                                                objid() which does perform a different functionality.
                                        <list_item>
                                            <paragraph>
                                                Added more staff recommendations to this file.
                                        <list_item>
                                            <paragraph>
                                                Added Reality TXLevel ‘Admin’ to all objects in the db except #1
                            <definition_list_item>
                                <term>
                                    1.0.5
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                Replaced softcoded tag() system with Rhost’s new hardcoded @tag/tag()
                                                system. All previous tags are set on the database. The Tag Object
                                                was removed.
                                        <list_item>
                                            <paragraph>
                                                @function startup on BC-Admin-Royalty fixed - @wait 1 workaround for
                                                Tags in place.
                                        <list_item>
                                            <paragraph>
                                                Places System @startup integrated into BC-Admin-Royalty’s @startup
                                        <list_item>
                                            <paragraph>
                                                Made @dump and @dump/flat available to Councilors in netrhost.conf
                            <definition_list_item>
                                <term>
                                    1.0.6
                                <definition>
                                    <bullet_list bullet="-">
                                        <list_item>
                                            <paragraph>
                                                A small typo fix in netrhost.conf. float_preciiosn -> precision and
                                                functions_max -> function_max. Thanks to 
                                                <reference refuri="mailto:Bobbi@COH">
                                                    Bobbi@COH
        <section ids="ambrosiadb-introduction" names="ambrosiadb\ introduction">
            <title>
                AmbrosiaDB Introduction
            <note>
                <paragraph>
                    READ THIS DOCUMENT CAREFULLY!
            <paragraph>
                Greetings,
            <paragraph>
                This minimal Rhost DB was made with a secure setup, and as a good base to start
                a new game off in mind.
        <section ids="ambrosiadb-features" names="ambrosiadb\ features">
            <title>
                AmbrosiaDB Features
            <section ids="ambrosiadb-configuration" names="ambrosiadb\ configuration">
                <title>
                    AmbrosiaDB Configuration
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            Limbo, Master Room and Auxiliary room.
                    <list_item>
                        <paragraph>
                            BC-Admin-<bitlevel> characters set up for each bitlevel to own global and
                            data objects, and inherit to.
                    <list_item>
                        <paragraph>
                            BC-Admin-Mortal is @powered EXAMINE_ALL(Guildmaster), NOFORCE(Architect) and
                            LONG_FINGERS.
                    <list_item>
                        <paragraph>
                            @startup on BC-Admin-Immortal lowers DARK flag access to Councilor level, and
                            NO_CODE visual access to Architect level.
                    <list_item>
                        <paragraph>
                            Global Command objects inheriting from each bitlevel, with a separate staff-only object for each level.
                    <list_item>
                        <paragraph>
                            Global Function objects inheriting from each bitlevel.
                    <list_item>
                        <paragraph>
                            local Function objects inheriting from each bitlevel.
                    <list_item>
                        <paragraph>
                            @function and @hook access lowered to Royalty level to remove immediate need
                            for Immortals or actual Immortal code.
                    <list_item>
                        <paragraph>
                            @rxlevel, @txlevel, bittype() access lowered to Architect level to remove
                            immediate need for Royalty in many cases.
                    <list_item>
                        <paragraph>
                            @startup on BC-Admin-Royalty to automatically load @hooks and @functions from
                            the Global Function objects, based on attribute naming.
                    <list_item>
                        <paragraph>
                            Misc Data object to hold general data, like Staff lists etc.
                    <list_item>
                        <paragraph>
                            Reality levels ‘Real’ and ‘Admin’.
                <note>
                    <paragraph>
                        All created items and players by default are in Recieve-Level ‘Real’ and
                        Transmit-Levels ‘Real’ and ‘Admin’.
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            All globals, Master Room, BCs-*, and other staff/code-related objects
                            currently have only ‘Admin’ as their Transmit-Level. This does not prevent
                            them fromi working properly. The only exception is #1, who has empty reality
                            levels.
                    <list_item>
                        <paragraph>
                            The supplied netrhost.conf offers a secure setup of options, allows Royalty
                            to use @hook and @function, and also sets the function_access of several
                            functions to !no_code, which allows NO_CODE players to use the comsys
                            properly.
                <note>
                    <paragraph>
                        IT IS HIGHLY RECOMMENDED to use this .conf as a base for this DB.
                        The ‘Port’ configuration parameter is XXXX’d out. Set it first before starting
                        your game.
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            All existing objects have been @set SAFE and INDESTRUCTABLE.
                    <list_item>
                        <paragraph>
                            All existing objects have a paranoid series of @locks set on themselves.
                    <list_item>
                        <paragraph>
                            The +supersafe command is provided on #1 as an example of what was used to
                            easily set this on objects.
                    <list_item>
                        <paragraph>
                            Players are @set NO_CODE and WANDERER by default. They get 40 credits on
                            creation, and a 1-credit-per-day paycheck.
                    <list_item>
                        <paragraph>
                            All *mit sideeffects, as well as set(), create() and list() are enabled. The
                            latter three are necessary for the Comsystem. The rest of sideeffects are
                            disabled completely.
                    <list_item>
                        <paragraph>
                            Flashing ansi is disabled.
                    <list_item>
                        <paragraph>
                            _Attributes are settable by Architects, and seeable by Guildmasters. Read:
                            Still invisible and unsettable by mortals.
                    <list_item>
                        <paragraph>
                            Architects can set up, unlock, and change alternate @quota on players.
                    <list_item>
                        <paragraph>
                            Architects can set/unset the NO_CODE flag.
                    <list_item>
                        <paragraph>
                            Guildmasters can see _Attributes
                    <list_item>
                        <paragraph>
                            Architects can set _Attributes
            <section ids="ambeosiadb-softcode" names="ambeosiadb\ softcode">
                <title>
                    AmbeosiaDB Softcode
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            Set-up compatibility SoftFunctions and @hook object.
                    <list_item>
                        <paragraph>
                            Set up Comsys 1.0.9b at Architect level. (+bbhelp command)
                    <list_item>
                        <paragraph>
                            Set up Myrddin +bboard at Architect level.
                    <list_item>
                        <paragraph>
                            Set up Myrddon Cron at Architect level.
                    <list_item>
                        <paragraph>
                            Anomaly Jobs (+jhelp)
                    <list_item>
                        <paragraph>
                            SGP Places & Mutter
                    <list_item>
                        <paragraph>
                            Set up Penn-style follow.
                    <list_item>
                        <paragraph>
                            Set up @scan (Up to architect-level items).
                    <list_item>
                        <paragraph>
                            Set up Penn- and Mux compatibility Mailwrappers. (phelp and mhelp commands)
                    <list_item>
                        <paragraph>
                            help .txt files and .indx files for the above.
                    <list_item>
                        <paragraph>
                            @dynhelp access lowered to architect to call above helpfiles.
            <section ids="ambrosiadb-functions" names="ambrosiadb\ functions">
                <title>
                    AmbrosiaDB Functions
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            isstaff() - Softcoded function that returns ‘1’ if its argument matches
                            a #dbref in the ‘isstaff’ attribute on the Misc Data object.
                    <list_item>
                        <paragraph>
                            bccheck() - Softcoded function that returns ‘1’ if its argument matches
                            a #dbref in the ‘bcs’ attribute on the Misc Data object.
                    <list_item>
                        <paragraph>
                            width() - Softcoded function that returns 78 for now. For cross-MU*
                            compatibility.
                    <list_item>
                        <paragraph>
                            pass() - Softcoded function that takes a number as its parameter, and return
                            a random string of that length. Perfect for setting random passwords.
                    <list_item>
                        <paragraph>
                            cmdmessage() - Softcoded function that takes two strings as its parameters.
                            Returns ‘<< STRING1 >> String2’. The <<>> part is highlighted red. Good for
                            all kinds of messages sent by game commands.
                    <list_item>
                        <paragraph>
                            header() - Highly versatile, and a buffer-saving alternative
                            to using printf() for centering with ansi borders. HIGHLY recommended to use
                            instead of printf() for such things.
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">
                    header(text,width,filler,fillercolor,outerpadding,paddingcolor,
                           leftinnerpadding,leftinnercolor,rightinnerpadding,rightinnercolor)
                      text - Text to center
                      width - Width of the header, defaults to width()
                      filler - Character(s) to draw the line with. Default: =
                      fillercolor - ansicode to color the line with
                      outerpadding - Characters to frame the outer ends of the line with.
                      paddingcolor - ansicode to color the outer characters with
                      leftinnerpadding - characters to put at the left side of <text>
                      leftinnercolor - ansicode to color the leftside characters with
                      rightinnerpadding - characters to put at the right side of <text>
                      rightinnercolor - ansicode to color the rightside characters with
                <note>
                    <paragraph>
                        ALL of header()’s parameters are optional. By default, header() simply draws
                        a 78-char wide line of =’s. Simply leave parameters empty if you want to set
                        one of the latter parameters.
        <section ids="ambrosiadb-bitlevels" names="ambrosiadb\ bitlevels">
            <title>
                AmbrosiaDB Bitlevels
            <paragraph>
                The whole DB is highly geared for a low-bitlevel setup.
                I am a strong believer in least-privileges-needed to do the job. Bittypes and
                powers are tools to do that job, not badges of friendship or trust that get
                tossed about.
            <note>
                <paragraph>
                    Here is my suggested list of powers and bittypes for staffers.
            <section ids="ambrosiadb-storytellers" names="ambrosiadb\ storytellers">
                <title>
                    AmbrosiaDB Storytellers
                <paragraph>
                    @powered TEL_ANYWHERE, JOIN_PLAYER and GRAB_PLAYER on Guildmaster level.
            <section ids="ambrosiadb-builder-bcs" names="ambrosiadb\ builder-bcs">
                <title>
                    AmbrosiaDB Builder-BCs
                <paragraph>
                    Mortal, with @quota and money for their job. There should be one
                    shared BC for each area of the game, like BC-Houston. Special
                    Rooms, items or exits that require privilegs to examine or @tel
                    a player should belong to a BC-Houston-Powered that is @powered
                    EXAMINE_ALL, LONG_FINGERS And TEL_ANYTHING on Guildmaster level.
                    If the object actually needs to modify a player directly, have
                    it use a restricted staff Global, or if you absolutely must,
                    make a BC-Houston-Admin and @set it Architect. Do not give
                    normal builders access to it, only @chown things to it and @set
                    them inherit after review.
                <paragraph>
                    Both the -powered and -admin BCs can have random passwords and
                    be @set NO_CONNECT.
            <section ids="ambrosiadb-building-head" names="ambrosiadb\ building\ head">
                <title>
                    AmbrosiaDB Building Head
                <paragraph>
                    @set Guildmaster, powered TEL_ANYWHERE, TEL_ANYTHING and
                    optionally CHOWN_OTHER on Guildmaster level. Mind that the
                    latter technically allows them to @chown anything guildmaster-
                    and lower-owned in the master and auxiliary rooms. However,
                    it allows the Building Head to @chown items between BCs- and
                    to the BC-<location>-powered.
            <section ids="ambrosiadb-enforcers" names="ambrosiadb\ enforcers">
                <title>
                    AmbrosiaDB Enforcers
                <paragraph>
                    As Storyteller above, plus being @powered Security at
                    Guildmaster level, in order to handle problem players.
                <paragraph>
                    Optionally always given to Storytellers.
            <section ids="ambrosiadb-coders" names="ambrosiadb\ coders">
                <title>
                    AmbrosiaDB Coders
                <paragraph>
                    @set Architect
            <section ids="ambrosiadb-head-coder" names="ambrosiadb\ head\ coder">
                <title>
                    AmbrosiaDB Head Coder
                <paragraph>
                    Always trust your head coder.
                    @set Architect for the everyday bit. Give access to a
                    maintenance Councilor bit for special code projects. Finished
                    code along those lines should get @chowned to the
                    bc-admin-councilor.
                <paragraph>
                    If you as the MU* Head(s) don’t know Softcode well, or want to
                    leave anything Code to your Head Coder, also give them optional
                    access to a maintenance Royalty bit in order to properly code
                    banning/blacklisting +commands and other rare code that requires
                    Royalty powers. Again, chown finished code to bc-admin-royalty.
            <section ids="ambrosiadb-mu-head-s" names="ambrosiadb\ mu*\ head(s)">
                <title>
                    AmbrosiaDB MU* Head(s)
                <paragraph>
                    You’re the boss(es). But please use an Architect bit for your
                    everyday things. Keep Immortal to yourself. Keep #1 to yourself.
                    And seriously avoid using either of them except for creating
                    a Royalty bit or doing intricate DB maintenance.
            <section ids="ambrosiadb-site-admins" names="ambrosiadb\ site\ admins">
                <title>
                    AmbrosiaDB Site Admins
                <paragraph>
                    They already have more powers than any in-game bit can ever
                    have ;)
                <paragraph>
                    Depending on actual involvement with your game, their abilities
                    in-game can range from merely being @powered free_wall for
                    notifying players of downtimes and/or being @powered shutdown in
                    order to shut down the game for maintenance, up to being the
                    only person with actual access to #1.
            <section ids="ambrosiadb-globals" names="ambrosiadb\ globals">
                <title>
                    AmbrosiaDB Globals
                <paragraph>
                    Handle necessary functionality for adminning through the admin-only globals and
                    softcode.
                <paragraph>
                    The setup I personally suggest is to have ALL staffers be AT MAX Architect-level
                    for everyday work and communication, with special coders that -really- require
                    it having Councilor-characters available to log into for maintenance or special
                    code setup. Technically if everything is done right, the Coder(s) of the game do
                    not require higher privileges than Architect for the vast majority of things.
                    Royalty-level code should be a rare exception, if at all necessary. The MU*
                    Head(s) or site-admin should be the only one having access to #1, Immortals or
                    perhaps even Royalty. The BC’s, Global Function objects and Function objects at
                    level Royalty and higher have simply been provided as a if-necessary convenience.
                <paragraph>
                    Current objects are only @chowned to certain bitlevels if it is really required
                    for them to function. Whenever possible, they have been @chowned to the mortal
                    BC-Admin-Mortal. All custom global functions listed above are on the semi-
                    -mortal Global Functions object. The Master Room and Auxiliary Room have been
                    @chowned to BC-Admin-Architect.
                <paragraph>
                    The Comsystem and +bboard are owned by BC-Admin-Architect, which means that
                    higher bitlevels might not be able to use those systems if they hide and set
                    themselves DARK. This is intentional. The Architect bitlevel is enough to freely
                    set attributes on players, so these systems did not need anything higher, and
                    it prioritizes Councilor+ as mere mainenance-duty bitlevels. Even the MU* Head
                    should log on as an Architect for everyday things.
                <paragraph>
                    The Comsystem and BBOARD have been modified to be configurable by Architect and
                    higher. Both systems have a CANUSE attribute with the according code on them.
                    Note that if you want both systems to be only configurable by Councilor+, that
                    instead of @chowning them to a Councilor after changing those attribute for
                    Councilor or higher, I suggest to simply @set the bboard and comsystem core
                    objects NO_MODIFY instead, keeping them at Architect-power but making them
                    unmodifyable by Architects.
        <section ids="ambrosiadb-quota" names="ambrosiadb\ quota">
            <title>
                AmbrosiaDB Quota
            <paragraph>
                I highly recommend the use of the alternative @quota system. BC-Admin-Mortal
                and BC-Admin-Guildmaster both have this @quota system set up on themselves. Both
                of them have a high amount of money for everyday operations. You should not give
                them free quota or money.
        <section ids="ambrosiadb-adding-functions" names="ambrosiadb\ adding\ functions">
            <title>
                AmbrosiaDB Adding Functions
            <paragraph>
                I also recommend to setup most global functions with /Privileged even if they
                are mortal-powered, to make them work even when players are set NO_CODE and
                WANDERER by default.
            <paragraph>
                Enjoy!
        <section ids="ambrosiadb-compiling" names="ambrosiadb\ compiling">
            <title>
                AmbrosiaDB Compiling
            <paragraph>
                P.S. the ‘bin/asksource.save0’ file has been supplied for loading in the
                ‘make config’ or ‘make confsource’ step of Rhost installation. It provides the
                settings I have used when creating this database. Some settings, like the ANSI
                substitution, are used in the DB.
            <paragraph>
                <reference refuri="mailto:--Ambrosia@RhostMUSH">
                    –Ambrosia@RhostMUSH
