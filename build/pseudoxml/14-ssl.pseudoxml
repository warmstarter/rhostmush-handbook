<document source="/home/pi/rhostmush-handbook/source/14-ssl.rst">
    <section ids="setting-up-an-ssl-tunnel-for-secure-connection-options" names="setting\ up\ an\ ssl\ tunnel\ for\ secure\ connection\ options">
        <title>
            Setting up an SSL tunnel for secure connection options
        <section ids="quickstart-for-ssl-setup-with-stunnel" names="quickstart\ for\ ssl\ setup\ with\ stunnel">
            <title>
                Quickstart for SSL setup with stunnel
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>
                        Modify your netrhost.conf file and add/change the following parameters:
                        A. stunnel_reip 1
                        B. stunnel_cmd SECRET-MAGIC-COOKIE
                    <block_quote>
                        <enumerated_list enumtype="arabic" prefix="" suffix=".">
                            <list_item>
                                <paragraph>
                                    SECRET-MAGIC-COOKIE is a case sensitive single word phrase.  Any
                                    printable character other than the ‘#’ character is allowable.
                                    You may use up to 30 characters.
                            <list_item>
                                <paragraph>
                                    Make sure the secret is a hard to guess phrase.  This is used
                                    by stunnel to forward on the originating IP address.
                    <enumerated_list enumtype="upperalpha" prefix="" start="3" suffix=".">
                        <list_item>
                            <paragraph>
                                stunnel_host localhost 127.0.0.1 othersite.goes.here
                                1.  This is optional.
                                2.  If you do not specify it it defaults to ‘localhost 127.0.0.1’.
                            <block_quote>
                                <paragraph>
                                    If your domain has a unique name like ‘localhost.localdomain’
                                    like some ubuntu distributions, then you should customize your
                                    stunnel_host.
                <list_item>
                    <paragraph>
                        go into the stunnel directory
                <list_item>
                    <paragraph>
                        ./stunnel_setup.sh
                        A. Choose the defaults or alter them based on preferences
                        B. Make sure to choose the warpbubble conf file
                <list_item>
                    <paragraph>
                        ./stunnel_start.sh
                <list_item>
                    <paragraph>
                        Use ./stunnel_stop.sh to stop the SSL tunnel at any time
            <paragraph>
                You do not need to shutdown the ssl handler if you shutdown the mush.  They
                are entirely separate processes.
        <section ids="detailed-ssl-setup-with-stunnel" names="detailed\ ssl\ setup\ with\ stunnel">
            <title>
                Detailed SSL setup with stunnel
            <paragraph>
                To setup SSL connectivity, we use the STUNNEL application to tunnel SSL to
                the mush.  This acts a bit like a man in the middle but remains controlled
                by the game owner which would have access to the end point anyway.
            <paragraph>
                Note: it is assumed you will have already initially set up your netrhost.conf.
            <section ids="stunnel-directory" names="stunnel\ directory">
                <title>
                    stunnel directory
                <paragraph>
                    You would set up the stunnel from the ‘stunnel’ directory.  There the following
                    files are of relevance:
                <paragraph>
                    README                     – a readme explaining the points of stunnel
                    stunnel.conf.example       – The example stunnel.conf file.  If you wish to
                <block_quote>
                    <paragraph>
                        create this manually you’re welcome to.  Just
                        make sure the end file is stunnel.conf
                <definition_list>
                    <definition_list_item>
                        <term>
                            stunnel_setup.sh           – the script to build a stunnel.conf file for you
                        <definition>
                            <paragraph>
                                which will be dropped at your specified location.
                <paragraph>
                    stunnel_kill.sh            – Stop/terminate the stunnel process.
                    stunnel_start.sh           – Start the stunnel process.
                    warpbubble.pl              – the perl script that handles stunnel to mush
                <block_quote>
                    <paragraph>
                        connectivity.
                <definition_list>
                    <definition_list_item>
                        <term>
                            stunnel_src                – If you do not have stunnel, this directory will
                        <definition>
                            <paragraph>
                                allow you to download, compile and locally install.
            <section ids="modifying-netrhost-conf" names="modifying\ netrhost.conf">
                <title>
                    Modifying netrhost.conf
                <paragraph>
                    To be able to utilize SSL, you first must set your netrhost.conf file with
                    the relevant information to enable SSL connectiions.  These three config
                    options must be set to be able to use SSL, however, sconnect_host if
                    not set will default to ‘localhost 127.0.0.1’.
                <definition_list>
                    <definition_list_item>
                        <term>
                            sconnect_reip 1         – This enables the SSL tunnel layer handler within
                        <definition>
                            <paragraph>
                                rhost.
                    <definition_list_item>
                        <term>
                            sconnect_cmd XYZZY      – this will set the secret SSL command handshake
                        <definition>
                            <paragraph>
                                command to XYZZY.  This is case sensitive and can
                                be up to 31 characters.  Please make sure to only
                                use printable non-whitespace characters.
                                Ergo: one word
                    <definition_list_item>
                        <term>
                            sconnect_host wildcards – This allows wildcarded sites (one or more) to allow
                        <definition>
                            <paragraph>
                                to access the sconnect/stunnel handler.  This
                                defaults to ‘localhost’ and ‘127.0.0.1’ so if you
                                have ‘localhost.localdomain’ instead then you must
                                set this to whatever is seen as ‘localhost’ to you.
                                You can verify this by checking your /etc/hosts
                                file.
                    <definition_list_item>
                        <term>
                            Note: the sconnect_host is optional.  If you do not specify it, it will
                        <definition>
                            <paragraph>
                                default to two values:  ‘localhost’ and ‘127.0.0.1’.
            <section ids="running-the-stunnel-setup-program" names="running\ the\ stunnel\ setup\ program">
                <title>
                    Running the stunnel setup program
                <paragraph>
                    At this point you’re ready to run the stunnel setup program.  So at this point
                    type the following:
                <block_quote>
                    <paragraph>
                        ./stunnel_setup.sh
                <paragraph>
                    This will prompt you through settings.  Most you can select the defaults to.
                    The SSL port you may need to change based on your administrative requirements.
                    It will prompt you with whatever you set for your mush name.  If you have not
                    selected a mush name at this point, you can select the defaults.
                <paragraph>
                    You will want to use the config file for warpbubble as this hides the secret.
                <paragraph>
                    Be aware that if you have DNS host lookups disabled on your mush, you
                    MUST have 127.0.0.1 as an entry for your sconnect_host file.
            <section ids="starting-the-stunnel-proxy" names="starting\ the\ stunnel\ proxy">
                <title>
                    Starting the stunnel proxy
                <paragraph>
                    When you have your stunnel.conf file to the way you want, you then
                    issue the following command to run your SSL layer.
                <block_quote>
                    <paragraph>
                        ./stunnel_start.sh
            <section ids="shutting-down-the-stunnel-proxy" names="shutting\ down\ the\ stunnel\ proxy">
                <title>
                    Shutting down the stunnel proxy
                <paragraph>
                    If ever you need to bring down the SSL layer, you may kill it with the command:
                <block_quote>
                    <paragraph>
                        ./stunnel_stop.sh
            <section ids="configuring-firewall-on-the-host" names="configuring\ firewall\ on\ the\ host">
                <title>
                    Configuring firewall on the host
                <paragraph>
                    Please be aware that the port that the SSL layer is on must be opened
                    in any firewall rule you specified to allow the connectivity.  This also must
                    not be the port the mush is running on and requires a separate port.
