<document source="/home/pi/rhostmush/rhostmush-handbook/source/features.rst">
    <section ids="what-rhostmush-is-about-and-what-s-so-great-about-rhostmush" names="what\ rhostmush\ is\ about\ and\ what's\ so\ great\ about\ rhostmush">
        <title>
            What RhostMUSH is about and what’s so great about RhostMUSH
        <paragraph>
            RhostMUSH was founded in 1989, originally by Natasha Davis (Nyctasia) and as
            a branch from the original release of TinyMUD code.  It was her desire to make
            a game that was flexible, with multiple levels of progression and highly
            customizeable.  She lost time and interest and passed the game to
            Steve Shivers (Seawolf), Mike McDermott (Thorin), and Jace Hoppel (Ashen-Shugar)
        <paragraph>
            Through their work, the stability improved, we fixed it to be multi-platform
            and as bug free as we could possibly make it.  We introduced several methods both
            in game and in source that allowed consistent memory bounds checking and
            various alerts for any mischievous naughtyness in-game or possibilities of any
            hacks, patches, or alterations in the code causing leaks or issues.
        <paragraph>
            While not perfect, it has allowed us to have an absolutely outstanding
            turn around for any bugs sent our way, which anyone who uses RhostMUSH will
            attest to.
        <paragraph>
            Over the years, others have joined the RhostMUSH team, including Ambrosia
            (who is the current dev lead), Lensman, Kage (who kindly provided the
            UTF8/unicode port), Jeff/Loki, Rook, Noltar, and Odin.
        <paragraph>
            We also have had hundreds of people who have offered (and provided) help,
            patches, suggestions, bug fixes, and alternations all on their own and
            every single one will have had their name mentioned in the RHOST.CHANGES
            file in the readme directory.  It’s far too large to have in the online
            help files.
        <paragraph>
            RhostMUSH today provides an amazing tool that allows nearly entire
            customization in-game of every single feature available in Rhost without
            having the requirement to modify the hardcode.  This includes but is
            not limited to:
        <section ids="recycle-bin" names="recycle\ bin">
            <title>
                Recycle bin
            <block_quote>
                <paragraph>
                    Yup, you guessed it.  RhostMUSH has a windows like recycle bin.
                    This means the objects you @nuke and @destroy become ‘destroyed’
                    but not recycled until they are @purged.  If you use the Myrddin
                    CRON in the Mushcode directory, it by default sets up a job
                    to purge anything over 30 days old, which should be more than
                    sufficient for any needs.  The goodness of this?  You can recover
                    nuked things from any period of time, as long as they were not
                    @purged first.
                    Commands: @purge, @nuke, @destroy, @recover, @reclist
        <section ids="snapshot" names="@snapshot">
            <title>
                @snapshot
            <block_quote>
                <paragraph>
                    Live image snapshots to unload or load to and from
                    disk.  As many snapshots as you want, as often as you want.
                    It essentially does a flatfile dump of a dbref#.  Great for
                    backups or cross-Rhost portability.
                    Command: @snapshot
        <section ids="wizard-and-immortals-by-default" names="wizard\ and\ immortals\ by\ default">
            <title>
                Wizard and Immortals by default
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>
                            are spoofable.  Meaning all their @pemits by default will not
                            trigger NOSPOOF.  If you do not wish this, set the SPOOF flag
                            this applies to anyone below their level.
                    <list_item>
                        <paragraph>
                            override all locks.  There’s two flags to disable this.
                            NO_OVERRIDE to stop overriding all locks (including attribs)
                            and NO_USELOCK to just stop overriding uselocks.
                            This applies to anything their level and lower.
                    <list_item>
                        <paragraph>
                            optionally cloak from all non-immortals/God player.
                            This can be highly abused if not careful and there
                            is a @depower to disable cloaking and/or dark that will
                            disable this.
                    <list_item>
                        <paragraph>
                            immortals can optionally supercloak from even wizards.
                            this can not be disabled, and you must consider that immortals
                            should be treated as the God player (#1) since they are
                            effectively #1 in nearly every way.
        <section ids="titles-and-captions-to-a-player-s-name" names="titles\ and\ captions\ to\ a\ player's\ name">
            <title>
                Titles and Captions to a player’s name
            <block_quote>
                <paragraph>
                    @caption and @titlecaption
        <section ids="have-an-alternate-name-with-locks-for-npc-obfuscation" names="have\ an\ alternate\ name\ with\ locks\ for\ npc\ obfuscation">
            <title>
                Have an alternate name with locks for NPC obfuscation
            <block_quote>
                <paragraph>
                    @altname
                    @lock/altname
        <section ids="have-multiple-player-aliases" names="have\ multiple\ player\ aliases">
            <title>
                Have multiple player aliases
            <block_quote>
                <paragraph>
                    As well as a method
                    to reserve player names per player w/o revealing who has what
                    name.
                    @protect
        <section ids="actively-control-how-dark-works-both-game-wide-and-individually" names="actively\ control\ how\ dark\ works\ both\ game-wide\ and\ individually">
            <title>
                Actively control how dark works both game-wide and individually
            <block_quote>
                <paragraph>
                    @depower dark
                    @admin allow_whodark, sweep_dark, command_dark, lcon_checks_dark,
                <block_quote>
                    <paragraph>
                        secure_dark, see_owned_dark, idle_wiz_dark, player_dark
                <paragraph>
                    @toggle snuffdark
                    @flagdef to redefine who and what can set the DARK flag
        <section ids="make-config-file-changes-in-game-without-having-to-reboot-or-have-shell-access" names="make\ config\ file\ changes\ in-game\ without\ having\ to\ reboot\ or\ have\ shell\ access">
            <title>
                Make config file changes in-game without having to reboot or have shell access
            <block_quote>
                <paragraph>
                    @admin admin_object
        <section ids="execute-any-binary-or-script-as-a-localized-function" names="execute\ any\ binary\ or\ script\ as\ a\ localized\ function">
            <title>
                Execute any binary or script as a localized function
            <block_quote>
                <paragraph>
                    EXECSCRIPT (power), SIDEFX (flag)
        <section ids="customized-percent-substitutions-like-n-etc" names="customized\ percent\ substitutions\ (like\ %n,\ %#,\ etc)">
            <title>
                Customized percent substitutions (like %n, %#, etc)
            <block_quote>
                <paragraph>
                    @admin sub_include, @hook
        <section ids="redefine-percent-substitutions-like-n-etc" names="redefine\ percent\ substitutions\ (like\ %n,\ %#,\ etc)">
            <title>
                Redefine percent substitutions (like %n, %#, etc)
            <block_quote>
                <paragraph>
                    @admin sub_override, @hook
        <section ids="localize-command-and-function-overrides-in-a-sandbox" names="localize\ command\ and\ function\ overrides\ in\ a\ sandbox">
            <title>
                Localize command and function overrides in a sandbox
            <block_quote>
                <paragraph>
                    @icmd, @lfunction, subeval(), sandbox()
        <section ids="multiple-zones" names="multiple\ zones">
            <title>
                Multiple Zones
            <block_quote>
                <paragraph>
                    Have multiple zones which can optionally belong to
                    multiple targets (multiple zones per target allowable!)
                    @zone, zones, lzone(), zonecmd()
        <section ids="optionally-control-enable-or-disable-sideeffects" names="optionally\ control,\ enable,\ or\ disable\ sideeffects">
            <title>
                Optionally control, enable, or disable sideeffects
            <block_quote>
                <paragraph>
                    @admin sideeffects, SIDEFX (flag)
        <section ids="have-31-cross-interactive-realities-for-locations" names="have\ 31\ cross-interactive\ realities\ for\ locations">
            <title>
                Have 31 cross-interactive realities for locations
            <block_quote>
                <paragraph>
                    This works as a truly independant and self-contained environment.
                    A room can have 31 ‘layers’, each ‘layer’ is a reality in
                    the same physical space.  These layers can work independently
                    or allow interaction with other layers for vast customization.
                    This affects all methods within the game including all matching,
                    looking, $commands, listens, movement, interaction, pretty
                    much every single aspect of mushing.
                    REALITY LEVELS
        <section ids="override-any-command-with-softcode" names="override\ any\ command\ with\ softcode">
            <title>
                Override any command with softcode
            <block_quote>
                <paragraph>
                    @admin access (check ignore)
                    Master room $commands to then override the hardcode
        <section ids="the-abilility-to-raise-or-lower-permissions-on-the-various" names="the\ abilility\ to\ raise\ or\ lower\ permissions\ on\ the\ various">
            <title>
                The abilility to raise or lower permissions on the various
            <block_quote>
                <paragraph>
                    staff bitlevels for each player.
                    @power, @depower, TOGGLES, FLAGS
        <section ids="customize-new-commands-on-the-connect-screen" names="customize\ new\ commands\ on\ the\ connect\ screen">
            <title>
                Customize new commands on the connect screen
            <block_quote>
                <paragraph>
                    @admin file_object2
        <section ids="softcode-any-txt-file-like-connect-txt" names="softcode\ any\ txt\ file\ (like\ connect.txt)">
            <title>
                Softcode any txt file (like connect.txt)
            <block_quote>
                <paragraph>
                    and have it evaluate in-game.  It evaluates as the object
                    it is on.
                    @admin file_object
        <section ids="advanced-tracing-methods-for-debugging-your-code-including-labels" names="advanced\ tracing\ methods\ for\ debugging\ your\ code\ including\ labels!">
            <title>
                Advanced tracing methods for debugging your code including labels!
            <block_quote>
                <paragraph>
                    Commands: @label
                    Functions: parenmatch(), trace()
                    Toggles: CPUTIME
                    Flags: TRACE
                    Attributes: TRACE_GREP, TRACE, TRACE_COLOR, TRACE_COLOR_<attr>
                    Substitutions: %_
        <section ids="built-in-pretty-printing-of-attributes-with-the-parenmatch-function" names="built\ in\ pretty-printing\ of\ attributes\ with\ the\ parenmatch()\ function">
            <title>
                Built in pretty-printing of attributes with the parenmatch() function
            <block_quote>
                <paragraph>
                    Example Code Output :
                    @emit [add(1,sub(2,div(3,4)),5)];@emit [extract(get(me/foo),3,1)
                <paragraph>
                    Example Pretty Print:
                    @emit [
                <block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>
                                add(
                            <definition>
                                <definition_list>
                                    <definition_list_item>
                                        <term>
                                            1,sub(
                                        <definition>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        2,div(
                                                    <definition>
                                                        <paragraph>
                                                            3,4
                                            <paragraph>
                                                )
                                <paragraph>
                                    ),5
                    <paragraph>
                        )
                <definition_list>
                    <definition_list_item>
                        <term>
                            ];@emit [
                        <definition>
                            <definition_list>
                                <definition_list_item>
                                    <term>
                                        extract(
                                    <definition>
                                        <definition_list>
                                            <definition_list_item>
                                                <term>
                                                    get(
                                                <definition>
                                                    <paragraph>
                                                        me/foo
                                        <paragraph>
                                            ),3,1
                            <paragraph>
                                )
                <paragraph>
                    ]
        <section ids="plenty-more-not-mentioned" names="plenty\ more\ not\ mentioned!">
            <title>
                Plenty more not mentioned!
            <paragraph>
                The flexibility to customize RhostMUSH is what is most daunting.
                Don’t fret, you don’t need to do it to run RhostMUSH successfully.
                In fact, the default configuration is mostly compatible with
                MUSH and will work correctly out of the box for most needs.  For those
                wishing to play, of course the sky is the limit of what you want to
                do.
        <section ids="advanced-features-of-rhostmush" names="advanced\ features\ of\ rhostmush">
            <title>
                Advanced features of RhostMUSH
            <section ids="debugging-tracing" names="debugging/tracing">
                <title>
                    Debugging/Tracing
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Debugging in Rhost allows for advanced features like expressing where and
                                when to do debugging via a trace() function, with toggled labels, and the
                                ability to grep content from trace output.  There also exists features to
                                color-match parenthesis, braces, and brackets in-game as well as pretty print
                                the output of commands and functions.
                                - help trace
                                - help %_
                                - help trace()
                                - help parenmatch()
                                - help parenstr()
            <section ids="zoning" names="zoning">
                <title>
                    Zoning
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Zoning in Rhost allows the same functionality of Penn and MUX, though the
                                syntax is different.  It also allows the ability to belong to multiple
                                zones at the same time and take advantage of mulitple zones at once.
                                This allows for increased levels of complexity.
                                - help zones
                                - help @zone
                                - help zonecmd()
                                - help lzone()
                                - help @Lock type twink
                                - help @lock type zone
            <section ids="reality-levels" names="reality\ levels">
                <title>
                    Reality Levels
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Reality levels allows for the ability to have a sandboxed ‘existance’
                                in each physical location across the entirity of the mush.  Each
                                reality is its own sandbox and can either stand alone or work
                                dependently with other realities.  A person can belong to multiple
                                realities at the same time, and realities is geared to a method for
                                send and receive.  Each ‘method’ requires to be in the given reality
                                to affect it.
                                - help reality levels
                                - wizhelp chkreality
                                - wizhelp reaity level
                                - help @Lock type user
            <section ids="function-and-command-overriding" names="function\ and\ command\ overriding">
                <title>
                    Function and Command Overriding
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Functions and commands can both be overridden with softcode.  To
                                override a hardcoded command you first set the command ignore.
                                There are various levels of ignoring so that you could have it
                                ignored from mortals but have it executed fine for non-mortals.
                                This allows you to use the actual physical command within a
                                softcode override.  You may also use @Hook for altering how
                                a command works.   Functions are overridden by setting the
                                function in question ignored, then writing a softcode alternative
                                that is then executed and fetched appropriately.
                            <block_quote>
                                <definition_list>
                                    <definition_list_item>
                                        <term>
                                            Commands:
                                        <definition>
                                            <bullet_list bullet="-">
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp @admin
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp access
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp permissions
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp @Hook
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp hook setup
                                    <definition_list_item>
                                        <term>
                                            Functions:
                                        <definition>
                                            <bullet_list bullet="-">
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp @admin
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp function_access
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp @function
                                                <list_item>
                                                    <paragraph>
                                                        help @lfunction
                                                <list_item>
                                                    <paragraph>
                                                        wizhelp bypass()
            <section ids="the-recycle-bin" names="the\ recycle\ bin">
                <title>
                    The Recycle Bin
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Rhost has a recycle bin that works a bit like a windows recycle bin.
                                Whenever you destroy something within the mush, it is stacked onto
                                the recycle bin and marked unavailable within the mush.  This marks
                                the dbref# as garbage in any sense of the word.  However, the object
                                is not able to be reused until purged.  Once purged, it is put onto
                                a free list that can then be reassigned to a new object.
                                - wizhelp @nuke
                                - wizhelp @destroy
                                - wizhelp @toad
                                - wizhelp @turtle
                                - wizhelp @purge
                                - wizhelp @recover
                                - wizhelp @reclist
            <section ids="percent-substitution-adding-overriding" names="percent\ substitution\ adding/overriding">
                <title>
                    Percent Substitution Adding/Overriding
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Rhost allows the ability to both override percent substitutions as
                                well as creating new ones.  This is done with @Hook and admin
                                params and issues softcode overriding.  Due to how it is evaluated
                                there is no risk of recursion.
                                - wizhelp @hook
                                - wizhelp hook_cmd
                                - wizhelp sub_include
                                - wizhelp sub_override
            <section ids="hooking" names="hooking">
                <title>
                    Hooking
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Hooking allows you to have advanced methods to manipulate commands
                                including adding customized switches to them via softcode.
                                - wizhelp @hook
                                - wizhelp hook_cmd
                                - wizhelp hook_obj
                                - wizhelp hook setup
            <section ids="command-based-uselocks" names="command\ based\ uselocks">
                <title>
                    Command based uselocks
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                This allows you to have unique uselocks per $command.  This is done
                                through the use of the USELOCK attribute flag, then you set up
                                a matching attribute name with a prefix of a ~ to specify how
                                the lock is to be evaluated.  This works in the same manner
                                as an evaluation lock.  To be able to use the USELOCK attribute flag
                                you must be empowered to do so with the ‘ATRUSE’ @toggle.  You may
                                also use the secure_atruselock config parameter to globally enable
                                this and not require the toggle to be set.
                                - wizhelp atruse toggle
                                - help attribute uselocks
            <section ids="differentating-between-command-and-listen-locks" names="differentating\ between\ command\ and\ listen\ locks">
                <title>
                    Differentating between command and listen locks
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                We distinguish between commands and listens with uselocks by passing
                                an optional argument to all locks that are uselocks.  This optional
                                argument is 0 for a default lock, 1 for a command lock and 2 for
                                a listen lock.
                                - help @lock type uselock
            <section ids="wizard-auto-overiding-and-how-to-disable-it" names="wizard\ auto-overiding\ and\ how\ to\ disable\ it">
                <title>
                    Wizard auto-overiding and how to disable it
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                By default wizards override all locks, including attribute locks,
                                can see all dark exits, and bypass pagelocks.  This can be
                                troublesome, and even abusive, so there’s ways to disable this.
                                - wizhelp @depower (for those abusing it)
                                - wizhelp no_override (disable overiding locks)
                                - wizhelp no_uselock (disable just uselock overriding)
                                - wizhelp pagelock toggle (disable pagelock overriding)
            <section ids="advanced-flag-and-toggle-control" names="advanced\ flag\ and\ toggle\ control">
                <title>
                    Advanced FLAG and TOGGLE control
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Flags and toggles can be controlled to have multiple permissions
                                and enable/disable targets of how the flags are allowed to be
                                set.  This is done through commands in-game or you can use
                                conf file options to do so.
                                - wizhelp @flagdef
                                - wizhelp @toggledef
                                ——- @admin @flagdef alternatives
                                - wizhelp flag_access_set
                                - wizhelp flag_access_unset
                                - wizhelp flag_access_see
                                - wizhelp flag_access_type
                                ——- @admin @toggledef alternatives
                                - wizhelp toggle_access_set
                                - wizhelp toggle_access_unset
                                - wizhelp toggle_access_see
                                - wizhelp toggle_access_type
            <section ids="advanced-site-control" names="advanced\ site\ control">
                <title>
                    Advanced site control
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                We allow advanced site control by not only blocking various sites
                                but we can specify how many times a player can be connected at the
                                same time as well as how many times sites are able to connect at
                                the same time.  This is done through normal site manipulation.
                                - wizhelp forbid_host
                                - wizhelp register_host
                                - wizhelp noguest_host
                                - wizhelp @list (site option)
            <section ids="auto-registration" names="auto-registration">
                <title>
                    Auto-Registration
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Autoregistration is the method that a player can auto-register
                                by providing their email on the connect screen.  It will email
                                them a password and an optional document that the administrator
                                provides.  This is well described in the wizhelp.
                                - wizhelp autoregistration
            <section ids="which-bit-level-is-best" names="which\ bit\ level\ is\ best?">
                <title>
                    Which bit level is best?
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                This is something that should be discussed by you and the staff
                                of your game.  As a good rule of thumb, only provide the bitlevel
                                that is required to do the job.  Too much power is always risky.
                                In essence, each tier of bit can do everything the previous bitlevel
                                can do, and then additional stuff on top of it.  The highest bitlevel
                                is #1 itself, being bitlevel 7.  Then immortal, which should be
                                considered the #1 character in most cases and is bitlevel 6.  Then
                                the royalty character, which is equal to wizard on penn, mux, or
                                other codebases.  For most things, this is the bitlevel you want
                                to assign players.  The exception will likely be game owners or
                                people who control the master room code.
                            <paragraph>
                                There’s a bunch of readme files and online wizhelp that goes into
                                detail of the various bitlevels and what each can do.
                                - XV.   Multi-tiered bitlevel systems
                                - wizhelp control
            <section ids="what-are-the-limits-for-size-growth-for-rhostmush" names="what\ are\ the\ limits\ for\ size/growth\ for\ rhostmush?">
                <title>
                    What are the limits for size/growth for RhostMUSH?
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                While using QDBM, there’s really no set limits for most things.
                                The limits that we have are as followed:
                                LBUF - 64K.  It is recommended to only use 32K as there is some
                            <block_quote>
                                <block_quote>
                                    <paragraph>
                                        issues with networking with 64K lbufs.
                                <bullet_list bullet="-">
                                    <list_item>
                                        <paragraph>
                                            Compile time option with the menu configurator
                            <definition_list>
                                <definition_list_item>
                                    <term>
                                        SBUF - 64 characters (if configured – it’s suggested you do).
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>
                                                    Compile time option with the menu configurator
                            <paragraph>
                                MBUF - 200 characters.  Not able to be changed.
                            <definition_list>
                                <definition_list_item>
                                    <term>
                                        MAX CONNECTIONS - Limited by the total number of open sockets
                                    <definition>
                                        <block_quote>
                                            <paragraph>
                                                and descriptors on the account and server running on.
                                                There are various tools to limit connection DoS attemps
                                                and other such nastiness.  This is well documented in
                                                the netrhost.conf file.
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>
                                                    wizhelp max_players
                                            <list_item>
                                                <paragraph>
                                                    ~/game/netrhost.conf
                                <definition_list_item>
                                    <term>
                                        MEMORY - no limit.  Generally runs between 8-50M depending
                                    <definition>
                                        <paragraph>
                                            on the size of the mush and the LBUF size specified.
                                <definition_list_item>
                                    <term>
                                        CPU  - no limit, but has built in cpu abort in code.  The
                                    <definition>
                                        <block_quote>
                                            <paragraph>
                                                netrhost.conf file documents this well for customizing.
                                                the default values are usually good enough.
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>
                                                    wizhelp max_cpu_cycles
                                            <list_item>
                                                <paragraph>
                                                    wizhelp cpuintervalchk
                                            <list_item>
                                                <paragraph>
                                                    wizhelp cputimechk
                                            <list_item>
                                                <paragraph>
                                                    wizhelp cpu_secure_lvl
                                            <list_item>
                                                <paragraph>
                                                    wizhelp heavy_cpu_max
                                            <list_item>
                                                <paragraph>
                                                    ~/game/netrhost.conf
                                <definition_list_item>
                                    <term>
                                        DISK - no limit.  Generally will be 75-200M depending on size,
                                    <definition>
                                        <paragraph>
                                            number of backups and if you leave your compiled object
                                            files in.
                                <definition_list_item>
                                    <term>
                                        DB Size - (20000 default) There is no limit on the number of
                                    <definition>
                                        <block_quote>
                                            <paragraph>
                                                objects the db can have.  By default it’s soft limited
                                                to 20K objects, which can be changed by a netrhost.conf
                                                file change.  We have had this up past 1.5 million
                                                objects, and other than a second or two of lag for
                                                complex searches we had no real problem.
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>
                                                    wizhelp maximum_size
                                            <list_item>
                                                <paragraph>
                                                    help @quota
                                            <list_item>
                                                <paragraph>
                                                    wizhelp @quota
                                            <list_item>
                                                <paragraph>
                                                    wizhelp @limit
                                <definition_list_item>
                                    <term>
                                        Attribute Size - 10K as a hard limit.  750 as a soft limit.
                                    <definition>
                                        <block_quote>
                                            <paragraph>
                                                You can increase this but it can’t exceed 10000
                                                attributes.  This is to avoid DoS style attacks.
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>
                                                    wizhelp vlimit
                                            <list_item>
                                                <paragraph>
                                                    wizhelp @limit
            <section ids="sqlite-and-mysql-maria-setup-and-why-use-it" names="sqlite\ and\ mysql/maria\ setup\ and\ why\ use\ it?">
                <title>
                    Sqlite and MySQL/Maria setup and why use it?
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Both of these can be configured separately or conjointly to
                                run in parallel.  This can be done through the RhostMUSH
                                configuration utility.  You generally want to use SQL for
                                external data storage or accessing a central repository
                                of data to share between multiple projects.  Like, for
                                example between a wiki, a forum, and the mush.
            <section ids="executing-outside-scripts-and-binaries-within-rhostmush" names="executing\ outside\ scripts\ and\ binaries\ within\ rhostmush">
                <title>
                    Executing outside scripts and binaries within RhostMUSH
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Rhost has execscript() which allows executing outside binaries
                                or scripts as a native function.  All effort has been done to
                                avoid any type of DoS based issue or hang by doing this, however
                                the guidelines presented should be followed before doing so.
                                - wizhelp execscript
                                - wizhelp power execscript
                                - help sidefx
                                - wizhelp writing scripts
            <section ids="pulling-external-data-into-rhostmush" names="pulling\ external\ data\ into\ rhostmush">
                <title>
                    Pulling external data into RhostMUSH
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                You are capable of pulling external data in to RhostMUSH using
                                several methods.  These are by using:
                            <block_quote>
                                <bullet_list bullet="-">
                                    <list_item>
                                        <paragraph>
                                            SQL (mysql or sqlite)
                                    <list_item>
                                        <paragraph>
                                            execscript
                                    <list_item>
                                        <paragraph>
                                            cron (wizhelp signal)
            <section ids="integrating-a-unix-cron-right-into-rhostmush" names="integrating\ a\ unix\ cron\ right\ into\ rhostmush">
                <title>
                    Integrating a unix cron right into RhostMUSH
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                The unix cron can be used to integrate with Rhost fairly
                                easilly by use of signals.  By using SIGUSR1 you can specify
                                Rhost to execute code in-game, which part of that could be
                                to pick up a pre-designed list of commands that the unix cron
                                has set up.
                                - wizhelp signal
                                - wizhelp signal_cron
            <section ids="signal-handling-how-it-works-and-when-and-why-use-it" names="signal\ handling,\ how\ it\ works,\ and\ when\ and\ why\ use\ it">
                <title>
                    Signal handling, how it works, and when and why use it
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Signals are used to do different things for the mush.  By default,
                                the following signals are recognized by the mush and will do
                                the following as defaults.
                                - SIGUSR1 - will do a reboot of the mush.  This is also customizable
                            <block_quote>
                                <paragraph>
                                    so that you can have it execute code in-mush if you want.
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        SIGUSR2 - will do a clean shutdown of the mush.
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>
                                                SIGTERM - will immediately scram the mush as cleanly and fast
                                            <definition>
                                                <paragraph>
                                                    as possible.  It will avoid dumping anything to
                                                    the database to speed up scramming, but write
                                                    a TERM flat file to be loaded in if corruption.
            <section ids="setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups" names="setting\ up\ global\ parents,\ global\ @parents,\ global\ attribute\ formatting,\ and\ other\ global\ setups">
                <title>
                    Setting up global parents, global @parents, global attribute formatting, and other global setups
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Global parents are useful when you want to have a global ‘parent’
                                without actually having a defined 
                                <reference refuri="mailto:'@parent">
                                    ‘@parent
                                ’.  It always will be the
                                highest tier in a lookup.  The way lookups will go will be:
                            <block_quote>
                                <paragraph>
                                    self->@parent(s)->@zone(s)->GlobalParent
                            <paragraph>
                                The type of the parent does not have to match the target.
                            <paragraph>
                                These global parents can be defined either by using a global
                                generic parent or by using the type.  If a type is specified it
                                overrides the generic.  The following parameters are used:
                                - global_parent_obj     - The generic global parent (if defined)
                                - global_parent_room    - The room global parent
                                - global_parent_exit    - The exit global parent
                                - global_parent_thing   - The thing global parent
                                - global_parent_player  - The player global parent
                        <list_item>
                            <paragraph>
                                Global @parents are different than global parents in that any new
                                item of similar type that is created is automatically assigned this
                                physical @parent.  It’s obviously more limiting since it sets
                                the literal physical parent defined.
                            <paragraph>
                                The type of the parent does not have to match the target.
                            <paragraph>
                                The following parameters are used:
                                - room_parent           - The target that new rooms are @parented
                                - exit_parent           - The target that new exits are @parented
                                - thing_parent          - The target that new things are @parented
                                - player_parent         - The target that new players are @parented
                        <list_item>
                            <paragraph>
                                Global attribute formatting is a method define a wrapper, of sorts,
                                where attributes like @desc, @odesc, @succ, and anything similar
                                can be processed through this.  All attributes will be either
                                &FORMAT<attribute> or &<attribute>FORMAT based on the current
                                configuration.  Example: &FORMATDESC or &DESCFORMAT localy, or
                                use the following global objects for global formatting.  Local
                                formatting has priority.
                            <paragraph>
                                The type of the parent does not have to match the target.
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        room_attr_default     - Target for room formatting
                                <list_item>
                                    <paragraph>
                                        exit_attr_default     - Target for exit formatting
                                <list_item>
                                    <paragraph>
                                        thing_attr_default    - Target for thing formatting
                                <list_item>
                                    <paragraph>
                                        player_attr_default   - Target for player formatting
            <section ids="rhostmush-limitations-and-how-to-get-around-them" names="rhostmush\ limitations\ and\ how\ to\ get\ around\ them">
                <title>
                    RhostMUSH limitations and how to get around them
                <block_quote>
                    <paragraph>
                        While Rhost is insanely configurable and quite powerful, there are
                        limitations that exist within it.
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Function invocations.  Sometimes you will hit a ceiling on evaluation.
                                You may want to tweak values to allow more functions or commands
                                to execute.  The following controls that:
                                - function_invocation_limit [25000 default] - specifies the total
                            <block_quote>
                                <paragraph>
                                    functions you can execute per command.
                            <bullet_list bullet="-">
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>
                                                function_recursion_limit [50] - specifies the total times a
                                            <definition>
                                                <paragraph>
                                                    function can call itself over and over.  Rarely should this
                                                    be increased and doing so can effect your stack depth.
                        <list_item>
                            <paragraph>
                                Command queue limits.  Sometimes you want more to be queued up for
                                players or wizards.
                                - player_queue_limit  - Max number of entries a player can queue
                                - wizard_queue_limit  - Max number of entries a wizard can queue
                        <list_item>
                            <paragraph>
                                @limit is a wonderful way to lock down limitations per player or
                                global.  Lots of power is available here.
                                - @limit
                                - vattr_limit_checkwiz - Enable @limit checks for wizards
                                - wizmax_vattr_limit   - Set wizard global VATTR limits
                                - wizmax_dest_limit    - Set wizard global @destroy limits
                                - max_vattr_limit      - Set player global VATTR limits
                                - max_dest_limit       - Set player global @destroy limits
                        <list_item>
                            <paragraph>
                                Lots of trace output can be cut off.  You can modify this with:
                                - trace_output_limit   - Set lines of trace output shown
                        <list_item>
                            <paragraph>
                                To define how many commands a minute a player set SPAMMONITOR can use
                                - spam_limit – default 120
                        <list_item>
                            <paragraph>
                                If you examine things and see ‘Output cut off’ messages, you may want
                                to increase your output limit, funny enough, the name of this is
                                similar
                                - output_limit - You should set this no less than 4 times the current
                            <block_quote>
                                <paragraph>
                                    size of your LBUF.
                        <list_item>
                            <paragraph>
                                Attributes names can not exceed 64 characters.  Sorry, it’s a hard limit
                        <list_item>
                            <paragraph>
                                Sometime you may find a single may not work for an escape.  You can
                                in most cases use a % instead or double escape the to make it work.
                                Also look at lit() as a solution.
            <section ids="things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it" names="things\ other\ mushes\ can\ do\ that\ rhost\ can\ not\ and\ how\ to\ emulate\ it">
                <title>
                    Things other mushes can do that Rhost can not and how to emulate it
                <section ids="pennmush" names="pennmush">
                    <title>
                        PennMUSH
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>
                                    Attribute trees.  These are emulated as a base set and can be
                                    duplicated enough to at least port code.
                            <list_item>
                                <paragraph>
                                    lsearch() will have to be recoded to search()
                            <list_item>
                                <paragraph>
                                    align() will have to be recoded to printf()
                            <list_item>
                                <paragraph>
                                    Penn allows empty attributes.  Rhost does not.  Work will have to
                                    be done to take this into consideration.
                            <list_item>
                                <paragraph>
                                    All 
                                    <problematic ids="id2" refid="id1">
                                        *
                                    val() functions in Penn that are used will have to be
                                    remapped to a non-
                                    <problematic ids="id4" refid="id3">
                                        *
                                    val() function.  It should be as simple as
                                    function_alias to the non-
                                    <problematic ids="id6" refid="id5">
                                        *
                                    val.  Example:
                                <block_quote>
                                    <paragraph>
                                        @admin function_alias=hasattrval hasattr
                            <list_item>
                                <paragraph>
                                    Penn’s hardcoded comsystem is emulated with the softcode comsys
                            <list_item>
                                <paragraph>
                                    Penn’s @mail system is workable with mail wrappers
                            <list_item>
                                <paragraph>
                                    Pueblo is not supported.
                            <list_item>
                                <paragraph>
                                    json is not supported.
                            <list_item>
                                <paragraph>
                                    ssl is not natively supported (yet), see section XIV
                            <list_item>
                                <paragraph>
                                    This uses @shutdown/restart, Rhost uses @reboot
                <section ids="mux" names="mux">
                    <title>
                        MUX
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>
                                    Mux has an async mysql database engine.  This is not possible
                                    with Rhost.  You’ll have to use the sync method instead.
                            <list_item>
                                <paragraph>
                                    UTF8 is supported but internally passed differently.
                            <list_item>
                                <paragraph>
                                    Mux’s hardcoded comsystem is emulated with the softcode comsys
                            <list_item>
                                <paragraph>
                                    MUX’s @mail system is workable with mail wrappers
                            <list_item>
                                <paragraph>
                                    Pueblo is not supported.
                            <list_item>
                                <paragraph>
                                    This uses @restart, Rhost uses @reboot
            <section ids="advanced-guest-setup" names="advanced\ guest\ setup">
                <title>
                    Advanced guest setup
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                After you set up your guests, you can set unique names to each guest
                                if you so want after defining the dbref#’s your guests use.  This is
                                done by defining them in the guest_namelist parameter.  You can also
                                increase guests (or decrease them) between 0-31 guests.
                                - wizhelp guest_namelist
                                - wizhelp num_guests
            <section ids="attribute-permission-masking-and-the-joys-of-the-power-behind-it" names="attribute\ permission\ masking\ and\ the\ joys\ of\ the\ power\ behind\ it">
                <title>
                    Attribute permission masking and the joys of the power behind it
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Attribute contentlocks can be set up so you can lock the actual
                                content that you can set (or even unset!) into an attribute.
                                The beauty of this is that you can specify case sensitive
                                information, lock different ways contents in attributes are set
                                based on who is setting it, or even on where it’s being set.
                                The sky’s the limit.
                                - global_attrdefault    - Target for defining content locks
            <section ids="the-amazing-cluster-and-what-it-can-do-for-you" names="the\ amazing\ @cluster\ and\ what\ it\ can\ do\ for\ you">
                <title>
                    The amazing @cluster and what it can do for you
                <block_quote>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>
                                Clusters is the way to virtually assign multiple objects into
                                a single physical object.  It essentially chains together two
                                or more objects to share attributes between them, so that any
                                attribute set on any object in that cluster can be set or fetched
                                as if it was a singular entity.  This allows some amazing ability
                                to distribute attribute content or even have a farm of a massive
                                amount of attributes without paying a hefty penalty on object bloat.
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>
                                    help cluster  – Gives a fantastic overview of how clusters work.
            <section ids="what-we-plan-for-the-future" names="what\ we\ plan\ for\ the\ future">
                <title>
                    What we plan for the future
                <block_quote>
                    <block_quote>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>
                                    Things to look forward to the future with RhostMUSH.
                                    - Full Unicode/UTF8 in Rhost 4.0
                                    - A fully featured tag system in Rhost 4.0
                                    - Built in Python API handler in Rhost 4.0
                                    - Hopefully a built in Ruby and Perl API in Rhost 4.0/4.1
                                    - Cross-Mush execution between mushes in Rhost 4.1
                                    - More as we think about it :)
                    <paragraph>
                        EXT: Additional features not covered otherwise
                        Additional features
                        - +/- 5.4 million years can be utilized with the built in time functions
                    <block_quote>
                        <paragraph>
                            which includes timefmt(), secs(), convtime(), convsecs(), and moon().  Party on!
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>
                                Changing permission levels in the middle of execution for evaluation.
                                * see help on the streval and ueval function
                        <list_item>
                            <paragraph>
                                Full features in-game customization of near every aspect of the game.
        <section ids="random-notes-and-things-to-know-about-rhostmush" names="random\ notes\ and\ things\ to\ know\ about\ rhostmush">
            <title>
                Random notes and things to know about RhostMUSH
            <paragraph>
                Here are some things to know about RhostMUSH and what you may or may not
                want to do.  Things here are not covered in other documents:
            <paragraph>
                Admin toggles to configure the WHO, various things you’re used to, etc is in the
                ‘netrhost.conf’ file.  descriptions Notes in the autoconf.h file is in the
                README.AUTOCONF file.
            <section ids="note-on-bits-their-levels-and-things-they-do" names="note\ on\ bits,\ their\ levels,\ and\ things\ they\ do">
                <title>
                    Note on bits, their levels, and things they do
                <block_quote>
                    <paragraph>
                        IMMORTAL - They can do anything.  Treat this as #1 and only give to
                        people you trust.  Period.   You don’t have to use this bit
                        if you do not want to and just assume #1.
                    <paragraph>
                        ROYALTY - Unlike PENN/MUX, this is 
                        <emphasis>
                            not
                         a sub-wizard, this is a
                        FULL wizard.  Plus, they can do a bit more.
                    <paragraph>
                        COUNCILOR - Like royalty on PENN/MUX but they can modify.
                    <paragraph>
                        ARCHITECT - Can’t do as much as councilor, but lot more than BUILDER.
                    <paragraph>
                        GUILDMASTER - Very limited.  Sees dbrief#’s, can ex things their
                        level and lower and @quota players.
            <section ids="you-need-to-pcreate-your-guest-characters-and-set-them-guest" names="you\ need\ to\ @pcreate\ your\ guest\ characters\ and\ set\ them\ guest">
                <title>
                    You need to @pcreate your guest characters and set them GUEST
                <block_quote>
                    <paragraph>
                        It doesn’t create them on the fly but we considered this better.
                        You have 31 total you can have.  It defaults to 10 in the
                        netrhost.conf file.  You can rename the guests anything you want,
                        but before you do so, you must add the dbref#’s to the param
                        guest_namelist
            <section ids="powers-are-inherited" names="@powers\ are\ inherited">
                <title>
                    @powers are INHERITED
                <block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>
                                Therefore, you need power_objects enabled (@admin)
                            <definition>
                                <paragraph>
                                    to make this work properly for non-plauyers.
                                    A power is taken before a bit level ONLY if higher than that bit.
                                    Yes, powers are multi-level.
            <section ids="depowers-are-automatically-checked-first-before-anything-else" names="@depowers\ are\ automatically\ checked\ first\ before\ anything\ else">
                <title>
                    @depowers are automatically checked first before anything else
                <block_quote>
                    <paragraph>
                        This is also meaningless on objects.
            <section ids="zones-are-unique" names="zones\ are\ unique">
                <title>
                    Zones are unique
                <block_quote>
                    <paragraph>
                        You can have things in multiple zones.
            <section ids="the-db-auto-repares-itself-when-it-can" names="the\ db\ auto-repares\ itself\ when\ it\ can">
                <title>
                    The db auto-repares itself when it can
                <block_quote>
                    <paragraph>
                        It does this by purging anything
                        it can’t identify.  Dataloss is better than unrecoverable data.
                        Yes, any such ‘repairing’ is logged so you know if something is up.
            <section ids="you-can-get-your-connect-txt-to-parse-ansi" names="you\ can\ get\ your\ connect.txt\ to\ parse\ ansi">
                <title>
                    You can get your connect.txt to parse ansi
                <block_quote>
                    <paragraph>
                        See ansi_txtfiles in wizhelp.
                        You can also override it with softcode if you so wanted.
                        See file_object in wizhelp for more information on this.
            <section ids="re-compiled-binaries-do-not-require-an-shutdown" names="re-compiled\ binaries\ do\ not\ require\ an\ @shutdown">
                <title>
                    Re-compiled binaries do not require an @shutdown
                <block_quote>
                    <paragraph>
                        When re-compiling the binaries, all you have to remember is when done, issue
                        @reboot on the game and @readcache.
                    <paragraph>
                        You do not need to @shutdown.
            <section ids="softcode-emulations-of-functions-from-other-servers-are-included" names="softcode\ emulations\ of\ functions\ from\ other\ servers\ are\ included">
                <title>
                    Softcode emulations of functions from other servers are included
                <block_quote>
                    <paragraph>
                        Load the file softfunctions into the mush once it’s set up.  This are
                        @functions that will alias the functions that PENN, MUX, and TinyMUSH have
                        that is either named differently or we don’t have for one reason or another.
