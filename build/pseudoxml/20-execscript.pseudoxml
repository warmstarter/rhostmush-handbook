<document source="/home/pi/rhostmush-handbook/source/20-execscript.rst">
    <section ids="execscript-and-external-programs-and-scripts" names="execscript\ and\ external\ programs\ and\ scripts">
        <title>
            Execscript and external programs and scripts
        <section ids="mush-variables" names="mush\ variables">
            <title>
                Mush variables
            <section ids="built-in-variables" names="built\ in\ variables">
                <title>
                    Built in variables
                <paragraph>
                    Variable                   Description
                    MUSH_PLAYER                player dbref#
                    MUSH_CAUSE                 cause dbref#
                    MUSH_CALLER                caller dbref#
                    MUSH_OWNER                 owner of player dbref#
                    MUSH_FLAGS                 space delimited list of flags on player
                    MUSH_TOGGLES               space delimited list of toggles on player
                    MUSH_OFLAGS                space delimited list of flags of player owner
                    MUSH_OTOGGLES              space delimited list of toggles of player owner
                    MUSHL_VARS                 space delimited list of MUSH attributes from player
                <block_quote>
                    <paragraph>
                        This is passed from the mush’s EXECSCRIPT_VARS attr
            <section dupnames="dynamic\ variables" ids="dynamic-variables">
                <title>
                    Dynamic variables
                <definition_list>
                    <definition_list_item>
                        <term>
                            MUSHV_<arg>                <arg> variable passed from MUSHL_VARS
                        <definition>
                            <paragraph>
                                These are the attributes from EXECSCRIPT_VARS
            <section dupnames="register\ variables" ids="register-variables">
                <title>
                    Register variables
                <paragraph>
                    MUSHQ_<arg>                setq registers 0-9 and a-z
                    MUSHQN_<arg>               labels that are assigned the setq vars
                    MUSHN_<arg>                The labels that were defined by any register
                <block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>
                                Note: they must be ASCII-7 clean and contain no
                            <definition>
                                <paragraph>
                                    white spaces
        <section ids="set-object" names="set\ object">
            <title>
                set object
            <paragraph>
                The script executed with execscript() will read in a file with the same name
                as the script ending in ‘.set’.  This is a loader object that will set attributes
                and registers back into the mush that you wish to pass from the script. The
                fields are SPACE SEPARATED.  The values are NOT evaluated.
            <section ids="the-format-of-the-fields-are" names="the\ format\ of\ the\ fields\ are">
                <title>
                    The format of the fields are
                <section dupnames="dynamic\ variables" ids="id1">
                    <title>
                        Dynamic variables
                    <paragraph>
                        VARNAME        OWNER        CONTENTS (or leave null to clear)
                    <section ids="examples" names="examples">
                        <title>
                            Examples
                        <paragraph>
                            SEX #123 Male
                            DESC #123 %r%tThis is a willow tree of unique description%r%rIt sways in the wind.
                            RED #123 This is the color %ch%crred%cn.
                            WIPETHISATTR #123
                            MULTILINE #123 This is a line
                            that continues on
                            because of the line feed (a control-M) on each line
                            on the lines above
                <section dupnames="register\ variables" ids="id2">
                    <title>
                        Register variables
                    <paragraph>
                        REGISTER       Q            CONTENTS (or leave null to clear)
                    <section ids="examples-the-last-example-clears-register-0" names="examples\ (the\ last\ example\ clears\ register\ 0)">
                        <title>
                            Examples (The last example clears register 0)
                        <paragraph>
                            W Q This is stored in register W
                            1 Q This is stored in register 1
                            0 Q
                            foo QN this sets register with label ‘foo’
        <section ids="example-bash-script" names="example\ bash\ script">
            <title>
                Example bash script
            <paragraph>
                #!/bin/bash
                echo “This was called by player ${MUSH_PLAYER} that is owned by ${MUSH_OWNER}”
                echo “Displaying Registers:”
                regs=”0 1 2 3 4 5 6 7 8 9 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z”
                for list in ${regs}
                do
            <block_quote>
                <paragraph>
                    eval echo “Register ${list}: ${MUSHQ_${list}}”
            <paragraph>
                done
                echo “Displaying variables:”
                for vars in ${MUSHL_VARS}
                do
            <block_quote>
                <paragraph>
                    eval echo “Variable ${vars}: ${MUSHV_${vars}}”
            <paragraph>
                done
        <section ids="notes-and-warnings" names="notes\ and\ warnings">
            <title>
                Notes and warnings
            <paragraph>
                While MUSHL_VARS are sanitized on what is allowable as a mush variable, this
                is not necessarilly sanitized on what the calling script can fetch as a valid
                variable.  Of note, you can not set environment variables that contain an
                equals sign.  Be aware of this limitation.
            <paragraph>
                Remember, MUSHL_VARS is the environment variable seen by the script.
                This is EXECSCRIPT_VARS on the mush itself, that is the attribute set
                on the target that contains the execscript() that is being executed.
