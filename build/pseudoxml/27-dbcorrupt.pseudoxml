<document source="/home/pi/rhostmush-handbook/source/27-dbcorrupt.rst">
    <section ids="dealing-with-db-corruption" names="dealing\ with\ db\ corruption">
        <title>
            Dealing with DB Corruption
        <paragraph>
            Ok.  Your database won’t come up.
        <paragraph>
            If you are reading this, then likely the scenerio is one of the following:
        <enumerated_list enumtype="arabic" prefix="" suffix=".">
            <list_item>
                <paragraph>
                    The mush says it can’t find your database files.
            <list_item>
                <paragraph>
                    The mush says it can’t read or load your database files.
            <list_item>
                <paragraph>
                    The mush seems to load fine but I can’t log in anyone and when I do
                    all the names and attributes of things seem to be gone!
            <list_item>
                <paragraph>
                    Bringing up your mail database
        <paragraph>
            First thing is first.  Don’t have a panic attack.
        <section ids="if-the-mush-says-it-can-t-find-your-database-files" names="if\ the\ mush\ says\ it\ can't\ find\ your\ database\ files">
            <title>
                If the mush says it can’t find your database files
            <section ids="check-the-names-of-the-database-files-in-your-data-directory" names="check\ the\ names\ of\ the\ database\ files\ in\ your\ 'data'\ directory">
                <title>
                    Check the names of the database files in your ‘data’ directory
                <paragraph>
                    They should be named something like:
                    netrhost.db
                    netrhost.db.old
                    netrhost.db.old.prev
                    netrhost.gdbm.dir
                    netrhost.gdbm.pag
                <paragraph>
                    And you may see a netrhost.db.flat
            <section ids="check-your-netrhost-conf-file" names="check\ your\ netrhost.conf\ file">
                <title>
                    Check your netrhost.conf file
                <paragraph>
                    If you never touched the 
                    <problematic ids="id2" refid="id1">
                        *
                    database or muddb_name params, you should be good.
                <paragraph>
                    Verify your 
                    <problematic ids="id4" refid="id3">
                        *
                    database params (and muddb_name) are still set to ‘netrhost’ as
                    part of the name.  Ergo, the default values and you didn’t change them.
                    These should match up with the filenames in your data directory.
                <paragraph>
                    If these names do not match up, it can’t find the database files to load.
                    So you shouldn’t have to change these names, ever. :)
            <section ids="check-your-mush-config-file" names="check\ your\ mush.config\ file">
                <title>
                    Check your mush.config file
                <paragraph>
                    If you never modified this file, you should be good.
                <paragraph>
                    The gamename should be ‘netrhost’ for this file.  This does NOT control
                    the name of your game.  This controls the name of all the files
                    as associated to the mush.  So changing this means the netrhost.conf
                    file, all your database files, and so forth.  Please don’t change this :)
        <section ids="if-the-mush-says-it-can-t-read-or-load-your-database-files" names="if\ the\ mush\ says\ it\ can't\ read\ or\ load\ your\ database\ files">
            <title>
                If the mush says it can’t read or load your database files
            <paragraph>
                Double check everything for the previous issue. Make sure everything is named properly.
            <section ids="verify-you-have-enough-disk-space-quota" names="verify\ you\ have\ enough\ disk\ space.\ (quota)">
                <title>
                    Verify you have enough disk space. (quota)
                <paragraph>
                    Some account have a limited quota to run in.  If you reached or exceed
                    your disk quota, you can have a corrupted database.  So always keep
                    your eye on the size.  quota -s to see a human readable format to see
                    how much quota you have left.  You want to make sure current in use is
                    below the ‘grace’ and soft/hard limits shown.  If not, you’re out of
                    space.
                <paragraph>
                    You will need to remove some files before you repair and bring up your
                    mush again.  Try to keep your quota at least 200 megs free to allow
                    plenty of wonderful growth space for the mush.
            <section ids="verify-you-have-enough-disk-space-system" names="verify\ you\ have\ enough\ disk\ space.\ (system)">
                <title>
                    Verify you have enough disk space.  (system)
                <paragraph>
                    The second way you can run out of disk space is by the filesystem itself.
                    do a df -h . in your ‘game’ directory’.  That is df -h <period>.
                    This will return how much disk space is being used and how much remains.
                    If it shows 100% used, you’re out of disk space and the db is corrupt.
                <paragraph>
                    At this point, you’re pretty screwed.  You can see if anything exists
                    in your system to free up some space, but if the filesystem itself
                    is filled, reach out to the owner of the server and let them know.
                    It’s a much bigger deal than just your mush if that’s the case.
                <paragraph>
                    Until this issue is resolved, you can not repair and bring up your mush.
                    No disk to run the game.
        <section ids="if-the-mush-seems-to-load-fine-but-i-can-t-log-in-anyone-and-when-i-do-all-the-names-and-attributes-of-things-seem-to-be-gone" names="if\ the\ mush\ seems\ to\ load\ fine\ but\ i\ can't\ log\ in\ anyone\ and\ when\ i\ do\ all\ the\ names\ and\ attributes\ of\ things\ seem\ to\ be\ gone!">
            <title>
                If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!
            <paragraph>
                Ok, at this point you likely had your mush up when the physical server
                went down hard.  Weither through an emergency shutdown or a physical
                power outage, your db likely was brought down hard during a write,
                so it left it in a corrupt state.  These things happen.  This is
                why we always strongly request you make daily flatfile dumps.
            <paragraph>
                So, to recover your database.
            <section ids="the-bad-news" names="the\ bad\ news">
                <title>
                    The bad news
                <paragraph>
                    If you have no flatfile backup or never bothered with backups?
                    I’m sorry, at this point you’re SOA.  There’s no easy way to
                    recover a corrupted binary database.  If you absolutely need
                    data out of it we may be able to help you to piece meal things
                    out of it, but otherwise it’s a lost cause.  You’ll have to start
                    over from scratch.  I’m sorry.
            <section ids="the-good-news" names="the\ good\ news">
                <title>
                    The good news
                <paragraph>
                    If you made backups, or if the server had a normal shutdown, you
                    likely have a flatfile backup.  You will see a netrhost.db.flat
                    in either the ‘data’ directory or ‘prevflat’ directory.  That
                    is your manual flatfile backup.
                <paragraph>
                    If the server had a normal shutdown, you will see a file called
                    netrhost.db.TERMFLAT.  This is a scram-emergency db flatfile.
                    It attempts to write this at the time of server shutdown to
                    hopefully keep a clean backup in the case of issues since
                    it identifies the server is coming down hard.  Make sure
                    if you plan to use the TERMFLAT as your recovery flatfile
                    that the very last line shows something like ** END OF DUMP 
                    <problematic ids="id6" refid="id5">
                        **
                    .
                    That shows you had a successful backup.
            <section ids="now-to-restore-your-database" names="now,\ to\ restore\ your\ database?">
                <title>
                    Now, to restore your database?
                <paragraph>
                    Please refer to the file ‘README.DBLOADING’.
        <section ids="bringing-up-your-mail-database" names="bringing\ up\ your\ mail\ database">
            <title>
                Bringing up your mail database
            <paragraph>
                Your mail db may or may not come up at this point.
            <section ids="if-after-restoring-main-database-your-mail-database-works" names="if\ after\ restoring\ main\ database\ your\ mail\ database\ works">
                <title>
                    If after restoring main database your mail database works
                <definition_list>
                    <definition_list_item>
                        <term>
                            If your mail database came up and does not show
                        <definition>
                            <paragraph>
                                ‘Mail: mail is currently off’ then you should be good to go.
                <paragraph>
                    Please issue:
                    wmail/fix
                    wmail/lfix
                <paragraph>
                    This will put your mail system in sync with your current database and
                    fix up any errors that may exist.  wmail/fix fixes the mail, wmail/lfix
                    loads in the fixes.
            <section ids="if-after-restoring-main-database-your-mail-database-does-not-work" names="if\ after\ restoring\ main\ database\ your\ mail\ database\ does\ not\ work">
                <title>
                    If after restoring main database your mail database does not work
                <block_quote>
                    <definition_list>
                        <definition_list_item>
                            <term>
                                If your mail database is not up and shows
                            <definition>
                                <paragraph>
                                    ‘Mail: mail is currently off’ then your mail db is currupt.
                <paragraph>
                    To fix your mail db please refer to file ‘README.MAILCANNOTLOAD’
