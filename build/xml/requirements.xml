<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/pi/rhostmush-handbook/source/requirements.rst">
    <target refid="requirements"></target>
    <section dupnames="requirements" ids="requirements id1" names="requirements">
        <title>Requirements</title>
        <section ids="system-requirements" names="system\ requirements">
            <title>System Requirements</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Minimum 1 GB (memory and swap combined) to compile (functions.c is huge)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Any Unix flavor should be fine.  Linux, BSD, Mac OSX, Solaris, Tru64, AIX, etc.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>(BETA ONLY) cygwin under Windows.  It requires the entire base development set and Requirements below.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Disk:  100 MB or more (depending on size of db and how many backups you wish to maintain)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Memory: 12-100 MB (depending on size of mush and what size buffers you select and packages you include)</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section dupnames="requirements" ids="id2">
            <title>Requirements</title>
            <paragraph>RhostMUSH is a Linux or Unix based server software that runs as a daemon on the host.  In order to build this software, you will need the bare minimum of the ability to run ‘make’ commands.  Package requirements are as follows:
                * glibc and gcc/clang (compiling the code)
                * git (to clone the source and maintain patches)
                * bash/ksh/dash (or compatible shell - for use with build menu)
                * libcrypt (for password encryption - this is usually standard on unix based systems)</paragraph>
        </section>
        <section ids="optional-packages" names="optional\ packages">
            <title>Optional Packages</title>
            <paragraph>RhostMUSH also offers optional linking and library attachments.  For some of these libraries it will attempt to do auto-detection, but in a worse case scenario, there exists override hashes in the menu to disable options it thinks exist that do not.  Optional packages are as follows:
                * openssl dev libraries/headers (for MUX password compatibility, and digest() and advanced cryptology functionality.
                * mysql client &amp; mysql_config (required for mysql capabilities)
                * sqlite3 libraries (required for sqlite capabilities)
                * ruby/perl/python/etc (for custom interactive dynamic custom functions with the execscript() feature)
                * libpcre (if you wish to use system pcre libraries instead of the built-in ones)</paragraph>
        </section>
        <section ids="hosting-requirements" names="hosting\ requirements">
            <title>Hosting Requirements</title>
            <paragraph>You will need a stable host and access to open a single port number of your choice on the firewall.  Most games choose a number between 1025 and 9999, by convention.  Please make sure your debug_id matches the port number + 5.  So if your port is 1234, your debug_id will be 12345.  The debug_id is for use in the API daemon that runs Rhost as a container to keep track of heap, stack, and execution location.</paragraph>
        </section>
    </section>
</document>
