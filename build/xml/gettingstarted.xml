<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.16 -->
<document source="/home/pi/rhostmush/rhostmush-handbook/source/gettingstarted.rst">
    <section ids="gettin-started" names="gettin\ started">
        <title>Gettin Started</title>
        <section ids="what-to-ype-to-get-the-basics-running-if-you-did-not-choose-a-pre-existing-flatfile" names="what\ to\ ype\ to\ get\ the\ basics\ running\ if\ you\ did\ not\ choose\ a\ pre-existing\ flatfile">
            <title>What to ype to get the basics running if you did not choose a pre-existing flatfile</title>
            <paragraph>If you decided to get a bare-bone configuration, you will find your mush has just two things.  The #1 (God) player and the starting room #0.  That’s it.</paragraph>
            <section ids="login-to-1-from-the-connect-screen" names="login\ to\ #1\ from\ the\ connect\ screen">
                <title>Login to #1 from the connect screen</title>
                <paragraph>Nyctasia is the default password:</paragraph>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">co #1 Nyctasia</literal_block>
            </section>
            <section ids="change-1-s-password-to-something-you-ll-remember-but-is-hard-to-guess" names="change\ #1's\ password\ to\ something\ you'll\ remember\ but\ is\ hard\ to\ guess">
                <title>Change #1’s password to something you’ll remember but is hard to guess</title>
                <paragraph>Note: yourpasswordgoeshere can be any password you choose.  Choose well:</paragraph>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@password Nyctasia=YOURPASSWORDGOESHERE</literal_block>
            </section>
            <section ids="master-room" names="master\ room">
                <title>Master Room</title>
                <paragraph>At this point you should create your master room:</paragraph>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@dig Master Room</literal_block>
                <note>
                    <paragraph>Reason: You need a master room to contain global $commands for players
                        ^listens are not global for intentional reasons.  It’s far too much overhead for far too minimal gains that few people need or use.</paragraph>
                </note>
            </section>
            <section ids="flag-and-protect-master-room" names="flag\ and\ protect\ master\ room">
                <title>Flag and protect Master Room</title>
                <paragraph>It will return a dbref#, it should be #2 if you’ve not created anything else:</paragraph>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@set #2=safe ind halt float</literal_block>
            </section>
            <section ids="player-holder-characters" names="player\ holder\ characters">
                <title>Player Holder Characters</title>
                <paragraph>Feel free to change the password to what you want</paragraph>
                <note>
                    <paragraph>Reason: You will want to chown global room or global areas to a given bitlevel and a method to keep organized.
                        Note: wizhelp control will give you a complete breakdown of what each bit can do.</paragraph>
                </note>
                <section ids="immortal-holder" names="immortal\ holder">
                    <title>Immortal Holder</title>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate ImmHolder=abc123
@set *Immholder=no_connect !wanderer immortal
@badsite *immholder=*</literal_block>
                </section>
                <section ids="royalty-wizard-holder" names="royalty/wizard\ holder">
                    <title>Royalty/Wizard Holder</title>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate WizHolder=abc123
@set *wizholder=no_connect !wanderer royalty
@badsite *wizholder=*</literal_block>
                </section>
                <section ids="councilor-admin-holder" names="councilor/admin\ holder">
                    <title>Councilor/Admin Holder</title>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate AdminHolder=abc123
@set *adminholder=no_connect !wanderer councilor
@badsite *adminholder=*</literal_block>
                </section>
                <section ids="architect-staff-holder" names="architect/staff\ holder">
                    <title>Architect/Staff Holder</title>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate StaffHolder=abc123
@set *staffholder=no_connect !wanderer architect
@badsite *staffholder=*</literal_block>
                </section>
                <section ids="guildmaster-lead-holder" names="guildmaster/lead\ holder">
                    <title>Guildmaster/Lead Holder</title>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate GuildHolder=abc123
@set *guildholder=no_connect !wanderer guildmaster
@badsite *guildholder=*</literal_block>
                </section>
            </section>
            <section ids="chown-0-the-starting-room-and-2-the-master-room-to-immholder" names="chown\ #0\ (the\ starting\ room)\ and\ #2\ (the\ master\ room)\ to\ immholder">
                <title>Chown #0 (The starting room) and #2 (The Master room) to immholder</title>
                <note>
                    <paragraph>#0 you can chown to a different bitlevel if you want, but the master room should always be owned by an immortal</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@chown/preserve #0=*immholder
@chown/preserve #2=*immholder</literal_block>
            </section>
            <section ids="create-yourself-your-own-immortal-player-then-log-off-1-and-into-this-immortal-player" names="create\ yourself\ your\ own\ immortal\ player\ then\ log\ off\ #1\ and\ into\ this\ immortal\ player">
                <title>Create yourself your own immortal player then log off #1 and into this immortal player</title>
                <note>
                    <paragraph>Pick what you want for playername and playerpassword</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@pcreate PLAYERNAME=PLAYERPASSWORD
@set *playername=!wanderer immortal</literal_block>
            </section>
            <section ids="log-out-of-1-and-log-into-your-immortal-player" names="log\ out\ of\ #1\ and\ log\ into\ your\ immortal\ player">
                <title>Log out of #1 and log into your immortal player</title>
                <note>
                    <paragraph>Use the playername and password you created in the step before</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">LOGOUT
co PLAYERNAME PLAYERPASSWORD</literal_block>
            </section>
            <section ids="create-your-guest-characters" names="create\ your\ guest\ characters">
                <title>Create your guest characters</title>
                <note>
                    <paragraph>Feel free to change the description if you want</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@dolist lnum(1,10)={@pcreate Guest##=guest;@set *Guest##=guest;@adisconnect *Guest##=home;@lock *Guest##=*Guest##;@desc *Guest##=A Stranger in a strange land.}</literal_block>
            </section>
            <section ids="dig-a-closet-to-store-important-objects-but-non-master-room" names="dig\ a\ closet\ to\ store\ important\ objects\ but\ non-master\ room">
                <title>Dig a closet to store important objects but non-master room</title>
                <note>
                    <paragraph>name it anything you want, just remember it.</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@dig Closet</literal_block>
            </section>
            <section ids="set-the-flags-on-the-closet-and-ownership-of-it" names="set\ the\ flags\ on\ the\ closet\ and\ ownership\ of\ it">
                <title>Set the flags on the closet and ownership of it</title>
                <note>
                    <paragraph>Use the dbref# that it returned when digging the closet and not #123</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@set #123=inh safe ind float
@chown/pres #123=*immholder</literal_block>
            </section>
            <section ids="create-an-admin-object-for-future-ease-of-customization" names="create\ an\ admin\ object\ for\ future\ ease\ of\ customization">
                <title>Create an Admin object for future ease of customization</title>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@create AdminObject</literal_block>
            </section>
            <section ids="set-the-flags-on-the-admin-object-and-ownership-and-location" names="set\ the\ flags\ on\ the\ admin\ object\ and\ ownership\ and\ location">
                <title>Set the flags on the admin object and ownership and location</title>
                <note>
                    <paragraph>this object must be immortal owned.  Use the dbref# returned previously instead of #123</paragraph>
                </note>
                <note>
                    <paragraph>Use the closet dbref# instead of #234</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@set AdminObject=halt safe ind
@chown/pres #123=*immholder
@tel adminobject=#234</literal_block>
            </section>
            <section ids="add-admin-object-to-configuration" names="add\ admin\ object\ to\ configuration">
                <title>Add admin object to configuration</title>
                <paragraph>Modify the netrhost.conf file with the following line at the bottom after the line ‘# define local alises here’ where you replace 123 with the dbref# of the admin object that you made:</paragraph>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">admin_object 123</literal_block>
            </section>
            <section ids="reboot-your-mush-to-load-up-the-change-for-the-admin-object" names="reboot\ your\ mush\ to\ load\ up\ the\ change\ for\ the\ admin\ object">
                <title>Reboot your mush to load up the change for the admin object</title>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@reboot</literal_block>
            </section>
            <section ids="do-admin-list-to-see-if-it-shows-the-admin-object" names="do\ @admin/list\ to\ see\ if\ it\ shows\ the\ admin\ object">
                <title>Do @admin/list to see if it shows the admin object</title>
                <note>
                    <paragraph>do wizhelp @admin for more information on how to use this</paragraph>
                </note>
                <literal_block force="False" language="default" linenos="False" xml:space="preserve">@admin/list</literal_block>
            </section>
            <section ids="load-in-all-the-various-softcode-that-you-want" names="load\ in\ all\ the\ various\ softcode\ that\ you\ want">
                <title>Load in all the various softcode that you want</title>
                <paragraph>This is client dependant based on whatever method it uses to load softcode.</paragraph>
                <section ids="myrddin-mushcron" names="myrddin\ mushcron">
                    <title>Myrddin MushCron</title>
                    <paragraph>Load in the Myrddin Mush Cron.
                        It’s a very handy piece of software and strongly suggested to do so.  You can find this in the ‘Mushcode’ directory off the main Rhost directory.
                        Filename:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">~/Rhost/Mushcode/MyrddinCRON</literal_block>
                    <note>
                        <paragraph>The globalroom() function returns the dbref# of the master room.  Handy!</paragraph>
                    </note>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@chown/preserve the myrddin mush cron to immholder, then move to maste room.
@chown/pres Myrddin=*Immholder
@tel Myrddin=#234 (where #234 is the dbref# of your code closet)</literal_block>
                </section>
                <section ids="ashcom" names="ashcom">
                    <title>AshCom</title>
                    <paragraph>Load in default softcoded comsystem.  This is PennMUSH and MUX/TM3 compatible.
                        Filename:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">~/Rhost/Mushcode/comsys</literal_block>
                    <paragraph>Chown the Comsystem and everything inside it to immholder:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@chown/pres ChanSys=*Immholder
@dolist lcon(chansys)=@chown/pres ##=*immholder
@tel Chansys=globalroom()</literal_block>
                </section>
                <section ids="mail-wrappers" names="mail\ wrappers">
                    <title>Mail Wrappers</title>
                    <paragraph>Load in mail wrappers if you want MUX/TM3 and/or Penn mail wrapping.
                        Filename (MUX/TM3):</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">~/Rhost/Mushcode/mailwrappers/muxmail.wrap</literal_block>
                    <paragraph>Filename (Penn):</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">~/Rhost/Mushcode/mailwrappers/pennmail.wrap</literal_block>
                    <paragraph>Chown to immholder:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@chown/pres MUX=*Immholder
@chown/pres Penn=*Immholder
@tel/list mux penn=globalroom()</literal_block>
                </section>
                <section ids="myrddin-bbs" names="myrddin\ bbs">
                    <title>Myrddin BBS</title>
                    <paragraph>Load in Myrddin’s BBS
                        Filename:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">~/Rhost/Mushcode/MyrddinBBS</literal_block>
                    <paragraph>Chown to immholder and the contents of it as well:</paragraph>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">@chown/pres Myrddin=*Immholder
@dolist lcon(myrddin)=@chown/pres ##=*immholder
@tel myrddin=globalroom()</literal_block>
                </section>
                <section ids="other-mushcode" names="other\ mushcode">
                    <title>Other Mushcode</title>
                    <paragraph>There’s other code in the Mushcode directory that you are welcome to install.  You would follow similar procedures
                        for loading it in, chowning it, and moving to the master room as you did above.</paragraph>
                    <paragraph>Likewise, any softcode you find on the internet or on other mushes should be portable to RhostMUSH with little to
                        no changes depending on the complexity of the code in question.</paragraph>
                </section>
            </section>
        </section>
        <section ids="minimal-db-instructions" names="minimal\ db\ instructions">
            <title>Minimal DB instructions</title>
            <paragraph>The ‘retired’ directory has older image files if you’re interested</paragraph>
            <paragraph>Please use the netrhost.conf file with the database as they’re linked.</paragraph>
            <paragraph>The flatfile must be loaded in as a new db</paragraph>
            <paragraph>This is a minimal db with basic ‘features’ built in.</paragraph>
            <paragraph>Copy the txt files into the Rhost’s txt directory off game:</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">cp txt/* ~/Rhost/Server/game/txt</literal_block>
            <paragraph>mkindx the files (substitute FILENAME with the filename):</paragraph>
            <literal_block force="False" language="default" linenos="False" xml:space="preserve">cd ~/Rhost/Server/game/txt
../mkindx FILENAME.txt FILENAME.indx</literal_block>
            <section ids="startup-steps" names="startup\ steps">
                <title>Startup Steps</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Using the Startmush utility for the first time, select the load db method</paragraph>
                    </list_item>
                </enumerated_list>
                <paragraph>— or —</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>copy the netrhost.conf file into the games directory</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>make any relevant changes you wish</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>db_load the flatfile</paragraph>
                        <enumerated_list enumtype="arabic" prefix="" suffix=".">
                            <list_item>
                                <paragraph>go into the game directory</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>type:</paragraph>
                                <literal_block force="False" language="default" linenos="False" xml:space="preserve">./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new</literal_block>
                            </list_item>
                        </enumerated_list>
                    </list_item>
                    <list_item>
                        <paragraph>Startmush as expected</paragraph>
                    </list_item>
                </enumerated_list>
            </section>
        </section>
        <section ids="ambrosia-s-minimal-rhost-db" names="ambrosia's\ minimal\ rhost\ db">
            <title>Ambrosia’s Minimal Rhost DB</title>
            <section ids="version-1-0-5-2020-01-31" names="version:\ 1.0.5\ 2020-01-31">
                <title>Version: 1.0.5          2020-01-31</title>
                <definition_list>
                    <definition_list_item>
                        <term>Version history:</term>
                        <definition>
                            <definition_list>
                                <definition_list_item>
                                    <term>1.0.0</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Initial database setup.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.1</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Small fixes of objid(), isstaff() and bccheck() permissions and handling.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>bittype() access lowered to Architect level</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>NO_CODE flag made visual to Architect</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.2</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Several convenience changes and fixes: _ Attributes moved to @aflags
                                                    system, allowing Architects to set, Guildmasters to see them.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>@flagdef lowered to Royalty level. @quota/max, @quota/unlock and @convert
                                                    moved to Architect level.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>NO_CODE flag made settable/unsettable by Architects.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Fixed typo in conf file: ifselse -&gt; ifelse</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Switched _Attributes to use the @aflags system
                                                    See: Guildmaster
                                                    Set: Architect</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.3</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Removed @flagdefs from in-game softcode, converted to flag_access_*
                                                    config options</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Lowered mailstatus() access to architect.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.4</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Changed softcoded objid() to tag(), due to Rhost’s new hardcoded
                                                    objid() which does perform a different functionality.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Added more staff recommendations to this file.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Added Reality TXLevel ‘Admin’ to all objects in the db except #1</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.5</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>Replaced softcoded tag() system with Rhost’s new hardcoded @tag/tag()
                                                    system. All previous tags are set on the database. The Tag Object
                                                    was removed.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>@function startup on BC-Admin-Royalty fixed - @wait 1 workaround for
                                                    Tags in place.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Places System @startup integrated into BC-Admin-Royalty’s @startup</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph>Made @dump and @dump/flat available to Councilors in netrhost.conf</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                                <definition_list_item>
                                    <term>1.0.6</term>
                                    <definition>
                                        <bullet_list bullet="-">
                                            <list_item>
                                                <paragraph>A small typo fix in netrhost.conf. float_preciiosn -&gt; precision and
                                                    functions_max -&gt; function_max. Thanks to <reference refuri="mailto:Bobbi@COH">Bobbi@COH</reference></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="introduction" names="introduction">
                <title>Introduction</title>
                <note>
                    <paragraph>READ THIS DOCUMENT CAREFULLY!</paragraph>
                </note>
                <paragraph>Greetings,</paragraph>
                <paragraph>This minimal Rhost DB was made with a secure setup, and as a good base to start
                    a new game off in mind.</paragraph>
            </section>
            <section ids="features" names="features">
                <title>Features</title>
                <section ids="configuration" names="configuration">
                    <title>Configuration</title>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Limbo, Master Room and Auxiliary room.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>BC-Admin-&lt;bitlevel&gt; characters set up for each bitlevel to own global and
                                data objects, and inherit to.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>BC-Admin-Mortal is @powered EXAMINE_ALL(Guildmaster), NOFORCE(Architect) and
                                LONG_FINGERS.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>@startup on BC-Admin-Immortal lowers DARK flag access to Councilor level, and
                                NO_CODE visual access to Architect level.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Global Command objects inheriting from each bitlevel, with a separate staff-only object for each level.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Global Function objects inheriting from each bitlevel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>local Function objects inheriting from each bitlevel.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>@function and @hook access lowered to Royalty level to remove immediate need
                                for Immortals or actual Immortal code.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>@rxlevel, @txlevel, bittype() access lowered to Architect level to remove
                                immediate need for Royalty in many cases.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>@startup on BC-Admin-Royalty to automatically load @hooks and @functions from
                                the Global Function objects, based on attribute naming.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Misc Data object to hold general data, like Staff lists etc.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Reality levels ‘Real’ and ‘Admin’.</paragraph>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>All created items and players by default are in Recieve-Level ‘Real’ and
                            Transmit-Levels ‘Real’ and ‘Admin’.</paragraph>
                    </note>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>All globals, Master Room, BCs-*, and other staff/code-related objects
                                currently have only ‘Admin’ as their Transmit-Level. This does not prevent
                                them fromi working properly. The only exception is #1, who has empty reality
                                levels.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The supplied netrhost.conf offers a secure setup of options, allows Royalty
                                to use @hook and @function, and also sets the function_access of several
                                functions to !no_code, which allows NO_CODE players to use the comsys
                                properly.</paragraph>
                        </list_item>
                    </bullet_list>
                    <note>
                        <paragraph>IT IS HIGHLY RECOMMENDED to use this .conf as a base for this DB.
                            The ‘Port’ configuration parameter is XXXX’d out. Set it first before starting
                            your game.</paragraph>
                    </note>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>All existing objects have been @set SAFE and INDESTRUCTABLE.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>All existing objects have a paranoid series of @locks set on themselves.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The +supersafe command is provided on #1 as an example of what was used to
                                easily set this on objects.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Players are @set NO_CODE and WANDERER by default. They get 40 credits on
                                creation, and a 1-credit-per-day paycheck.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>All *mit sideeffects, as well as set(), create() and list() are enabled. The
                                latter three are necessary for the Comsystem. The rest of sideeffects are
                                disabled completely.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Flashing ansi is disabled.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>_Attributes are settable by Architects, and seeable by Guildmasters. Read:
                                Still invisible and unsettable by mortals.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Architects can set up, unlock, and change alternate @quota on players.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Architects can set/unset the NO_CODE flag.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Guildmasters can see _Attributes</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Architects can set _Attributes</paragraph>
                        </list_item>
                    </bullet_list>
                </section>
                <section ids="softcode" names="softcode">
                    <title>Softcode</title>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Set-up compatibility SoftFunctions and @hook object.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up Comsys 1.0.9b at Architect level. (+bbhelp command)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up Myrddin +bboard at Architect level.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up Myrddon Cron at Architect level.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Anomaly Jobs (+jhelp)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>SGP Places &amp; Mutter</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up Penn-style follow.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up @scan (Up to architect-level items).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Set up Penn- and Mux compatibility Mailwrappers. (phelp and mhelp commands)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>help .txt files and .indx files for the above.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>@dynhelp access lowered to architect to call above helpfiles.</paragraph>
                        </list_item>
                    </bullet_list>
                </section>
                <section dupnames="functions" ids="functions">
                    <title>Functions</title>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>isstaff() - Softcoded function that returns ‘1’ if its argument matches
                                a #dbref in the ‘isstaff’ attribute on the Misc Data object.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>bccheck() - Softcoded function that returns ‘1’ if its argument matches
                                a #dbref in the ‘bcs’ attribute on the Misc Data object.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>width() - Softcoded function that returns 78 for now. For cross-MU*
                                compatibility.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>pass() - Softcoded function that takes a number as its parameter, and return
                                a random string of that length. Perfect for setting random passwords.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>cmdmessage() - Softcoded function that takes two strings as its parameters.
                                Returns ‘&lt;&lt; STRING1 &gt;&gt; String2’. The &lt;&lt;&gt;&gt; part is highlighted red. Good for
                                all kinds of messages sent by game commands.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>header() - Highly versatile, and a buffer-saving alternative
                                to using printf() for centering with ansi borders. HIGHLY recommended to use
                                instead of printf() for such things.</paragraph>
                        </list_item>
                    </bullet_list>
                    <literal_block force="False" language="default" linenos="False" xml:space="preserve">header(text,width,filler,fillercolor,outerpadding,paddingcolor,
       leftinnerpadding,leftinnercolor,rightinnerpadding,rightinnercolor)
  text - Text to center
  width - Width of the header, defaults to width()
  filler - Character(s) to draw the line with. Default: =
  fillercolor - ansicode to color the line with
  outerpadding - Characters to frame the outer ends of the line with.
  paddingcolor - ansicode to color the outer characters with
  leftinnerpadding - characters to put at the left side of &lt;text&gt;
  leftinnercolor - ansicode to color the leftside characters with
  rightinnerpadding - characters to put at the right side of &lt;text&gt;
  rightinnercolor - ansicode to color the rightside characters with</literal_block>
                    <note>
                        <paragraph>ALL of header()’s parameters are optional. By default, header() simply draws
                            a 78-char wide line of =’s. Simply leave parameters empty if you want to set
                            one of the latter parameters.</paragraph>
                    </note>
                </section>
            </section>
            <section ids="bitlevels" names="bitlevels">
                <title>Bitlevels</title>
                <paragraph>The whole DB is highly geared for a low-bitlevel setup.
                    I am a strong believer in least-privileges-needed to do the job. Bittypes and
                    powers are tools to do that job, not badges of friendship or trust that get
                    tossed about.</paragraph>
                <note>
                    <paragraph>Here is my suggested list of powers and bittypes for staffers.</paragraph>
                </note>
                <section ids="storytellers" names="storytellers">
                    <title>Storytellers</title>
                    <paragraph>@powered TEL_ANYWHERE, JOIN_PLAYER and GRAB_PLAYER on Guildmaster level.</paragraph>
                </section>
                <section ids="builder-bcs" names="builder-bcs">
                    <title>Builder-BCs</title>
                    <paragraph>Mortal, with @quota and money for their job. There should be one
                        shared BC for each area of the game, like BC-Houston. Special
                        Rooms, items or exits that require privilegs to examine or @tel
                        a player should belong to a BC-Houston-Powered that is @powered
                        EXAMINE_ALL, LONG_FINGERS And TEL_ANYTHING on Guildmaster level.
                        If the object actually needs to modify a player directly, have
                        it use a restricted staff Global, or if you absolutely must,
                        make a BC-Houston-Admin and @set it Architect. Do not give
                        normal builders access to it, only @chown things to it and @set
                        them inherit after review.</paragraph>
                    <paragraph>Both the -powered and -admin BCs can have random passwords and
                        be @set NO_CONNECT.</paragraph>
                </section>
                <section ids="building-head" names="building\ head">
                    <title>Building Head</title>
                    <paragraph>@set Guildmaster, powered TEL_ANYWHERE, TEL_ANYTHING and
                        optionally CHOWN_OTHER on Guildmaster level. Mind that the
                        latter technically allows them to @chown anything guildmaster-
                        and lower-owned in the master and auxiliary rooms. However,
                        it allows the Building Head to @chown items between BCs- and
                        to the BC-&lt;location&gt;-powered.</paragraph>
                </section>
                <section ids="enforcers" names="enforcers">
                    <title>Enforcers</title>
                    <paragraph>As Storyteller above, plus being @powered Security at
                        Guildmaster level, in order to handle problem players.</paragraph>
                    <paragraph>Optionally always given to Storytellers.</paragraph>
                </section>
                <section ids="coders" names="coders">
                    <title>Coders</title>
                    <paragraph>@set Architect</paragraph>
                </section>
                <section ids="head-coder" names="head\ coder">
                    <title>Head Coder</title>
                    <paragraph>Always trust your head coder.
                        @set Architect for the everyday bit. Give access to a
                        maintenance Councilor bit for special code projects. Finished
                        code along those lines should get @chowned to the
                        bc-admin-councilor.</paragraph>
                    <paragraph>If you as the MU* Head(s) don’t know Softcode well, or want to
                        leave anything Code to your Head Coder, also give them optional
                        access to a maintenance Royalty bit in order to properly code
                        banning/blacklisting +commands and other rare code that requires
                        Royalty powers. Again, chown finished code to bc-admin-royalty.</paragraph>
                </section>
                <section ids="mu-head-s" names="mu*\ head(s)">
                    <title>MU* Head(s)</title>
                    <paragraph>You’re the boss(es). But please use an Architect bit for your
                        everyday things. Keep Immortal to yourself. Keep #1 to yourself.
                        And seriously avoid using either of them except for creating
                        a Royalty bit or doing intricate DB maintenance.</paragraph>
                </section>
                <section ids="site-admins" names="site\ admins">
                    <title>Site Admins</title>
                    <paragraph>They already have more powers than any in-game bit can ever
                        have ;)</paragraph>
                    <paragraph>Depending on actual involvement with your game, their abilities
                        in-game can range from merely being @powered free_wall for
                        notifying players of downtimes and/or being @powered shutdown in
                        order to shut down the game for maintenance, up to being the
                        only person with actual access to #1.</paragraph>
                </section>
                <section ids="globals" names="globals">
                    <title>Globals</title>
                    <paragraph>Handle necessary functionality for adminning through the admin-only globals and
                        softcode.</paragraph>
                    <paragraph>The setup I personally suggest is to have ALL staffers be AT MAX Architect-level
                        for everyday work and communication, with special coders that -really- require
                        it having Councilor-characters available to log into for maintenance or special
                        code setup. Technically if everything is done right, the Coder(s) of the game do
                        not require higher privileges than Architect for the vast majority of things.
                        Royalty-level code should be a rare exception, if at all necessary. The MU*
                        Head(s) or site-admin should be the only one having access to #1, Immortals or
                        perhaps even Royalty. The BC’s, Global Function objects and Function objects at
                        level Royalty and higher have simply been provided as a if-necessary convenience.</paragraph>
                    <paragraph>Current objects are only @chowned to certain bitlevels if it is really required
                        for them to function. Whenever possible, they have been @chowned to the mortal
                        BC-Admin-Mortal. All custom global functions listed above are on the semi-
                        -mortal Global Functions object. The Master Room and Auxiliary Room have been
                        @chowned to BC-Admin-Architect.</paragraph>
                    <paragraph>The Comsystem and +bboard are owned by BC-Admin-Architect, which means that
                        higher bitlevels might not be able to use those systems if they hide and set
                        themselves DARK. This is intentional. The Architect bitlevel is enough to freely
                        set attributes on players, so these systems did not need anything higher, and
                        it prioritizes Councilor+ as mere mainenance-duty bitlevels. Even the MU* Head
                        should log on as an Architect for everyday things.</paragraph>
                    <paragraph>The Comsystem and BBOARD have been modified to be configurable by Architect and
                        higher. Both systems have a CANUSE attribute with the according code on them.
                        Note that if you want both systems to be only configurable by Councilor+, that
                        instead of @chowning them to a Councilor after changing those attribute for
                        Councilor or higher, I suggest to simply @set the bboard and comsystem core
                        objects NO_MODIFY instead, keeping them at Architect-power but making them
                        unmodifyable by Architects.</paragraph>
                </section>
            </section>
            <section ids="quota" names="quota">
                <title>Quota</title>
                <paragraph>I highly recommend the use of the alternative @quota system. BC-Admin-Mortal
                    and BC-Admin-Guildmaster both have this @quota system set up on themselves. Both
                    of them have a high amount of money for everyday operations. You should not give
                    them free quota or money.</paragraph>
            </section>
            <section dupnames="functions" ids="id1">
                <title>Functions</title>
                <paragraph>I also recommend to setup most global functions with /Privileged even if they
                    are mortal-powered, to make them work even when players are set NO_CODE and
                    WANDERER by default.</paragraph>
                <paragraph>Enjoy!</paragraph>
            </section>
            <section ids="compiling" names="compiling">
                <title>Compiling</title>
                <paragraph>P.S. the ‘bin/asksource.save0’ file has been supplied for loading in the
                    ‘make config’ or ‘make confsource’ step of Rhost installation. It provides the
                    settings I have used when creating this database. Some settings, like the ANSI
                    substitution, are used in the DB.</paragraph>
                <paragraph><reference refuri="mailto:--Ambrosia@RhostMUSH">–Ambrosia@RhostMUSH</reference></paragraph>
            </section>
        </section>
    </section>
</document>
