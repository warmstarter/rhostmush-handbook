{"parents": [], "prev": {"link": "../25-godpasswd/", "title": "How to reset the password for #1"}, "next": {"link": "../27-dbcorrupt/", "title": "Dealing with DB Corruption"}, "title": "Troubleshooting difficulties compiling RhostMUSH", "meta": null, "body": "<div class=\"section\" id=\"troubleshooting-difficulties-compiling-rhostmush\">\n<h1>Troubleshooting difficulties compiling RhostMUSH<a class=\"headerlink\" href=\"#troubleshooting-difficulties-compiling-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"changes-to-conf-for-high-bit-cpus\">\n<h2>Changes to conf for high-bit CPUs<a class=\"headerlink\" href=\"#changes-to-conf-for-high-bit-cpus\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>RhostMUSH automatically detects 64-bit platforms, and should compile\ncleanly on these.</p>\n<p>In case you are trying to compile Rhost on some other crazy-wide CPUs\nsuch as the PS2, PS3 or other 128 or 256 bit CPUs, you can easily do\nso by changing a few lines of code in conf.c.</p>\n<p>change:\ntypedef unsigned int    pmath1;\ntypedef int             pmath2;\n#define ALLIGN1 4</p>\n<p>to:\ntypedef unsigned long   pmath1;\ntypedef long            pmath2;\n#define ALLIGN1 8</p>\n<p>, replacing 8 with the size of your CPU\u2019s long integer. (4 for 32-bit,\n8 for 64-bit, 16 for 128-bit, etc etc)</p>\n<p>RhostMUSH has only been tested to work on the AMD64, but there is no\nreason to believe the same will not hold true for IA64.</p>\n</div>\n<div class=\"section\" id=\"changes-to-autconf-for-certain-systems\">\n<h2>Changes to autconf for certain systems<a class=\"headerlink\" href=\"#changes-to-autconf-for-certain-systems\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>You should not have to worry about this, but incase something really\nweird occurs, you may need to look into these changes\u2026</p>\n<p>The autoconfig.h file needs to have modifications to it by hand.</p>\n<p>There are three manual entries:</p>\n<p>This one sets how it defines the int to character pointer.  It\u2019s safe\nto keep it as \u2018unsigned int\u2019 for 32 bit platforms.  For non 32-bit,\ndefine it to  how an int is defined on that system.</p>\n<blockquote>\n<div><p>typedef unsigned int    pmath1;</p>\n</div></blockquote>\n<p>This one sets how it defines the signed int to character pointer.  Same\nrestrictions apply as above for unsigned int.</p>\n<blockquote>\n<div><p>typedef int     pmath2;</p>\n</div></blockquote>\n<p>This sets the allignment for the given platform.  4 represents a 32 bit\nplatform.  8 would represent a 64 bit platform, etc.  Change accordingly.</p>\n<blockquote>\n<div><p>#define ALLIGN1 4</p>\n</div></blockquote>\n<p>Make sure these three entries are defined in your autoconf.h file else\nthe mush will not compile.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["27-dbcorrupt", "Dealing with DB Corruption", "N", "next"], ["25-godpasswd", "How to reset the password for #1", "P", "previous"]], "sourcename": "26-compileerror.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Troubleshooting difficulties compiling RhostMUSH</a><ul>\n<li><a class=\"reference internal\" href=\"#changes-to-conf-for-high-bit-cpus\">Changes to conf for high-bit CPUs</a></li>\n<li><a class=\"reference internal\" href=\"#changes-to-autconf-for-certain-systems\">Changes to autconf for certain systems</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "26-compileerror", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12", "insegel_version": "1.1.0"}