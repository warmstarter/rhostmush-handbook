{"parents": [], "prev": {"link": "../security/", "title": "Security"}, "next": {"link": "../troubleshooting/", "title": "Troubleshooting"}, "title": "Maintenance", "meta": {}, "body": "<div class=\"section\" id=\"maintenance\">\n<h1>Maintenance<a class=\"headerlink\" href=\"#maintenance\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"signals-and-why-you-need-them-for-control\">\n<h2>Signals and why you need them for control<a class=\"headerlink\" href=\"#signals-and-why-you-need-them-for-control\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Rhost by default allows signals at the shell to handle various processes in-game.</p>\n<p>The following signals are useful.</p>\n<div class=\"section\" id=\"term-kill-term-or-kill-15\">\n<h3>TERM (kill -TERM or kill -15)<a class=\"headerlink\" href=\"#term-kill-term-or-kill-15\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>This will immediately terminate the mush, dumping a special flatfile called\nnetrhost.db.TERM and scramming the db in question by force-closing it\nwithout any writes.  A TERM is the effort for the mush to shut down the\nmush as fast as possible to avoid any db corruption if possible since\na TERM signal is common during a server shutdown, so time is paramount.</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"usr1-kill-usr1\">\n<h3>USR1 (kill -USR1)<a class=\"headerlink\" href=\"#usr1-kill-usr1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>This by default issues a reboot on the server.  This is a special parameter\nbecause this can actually be changed in-game to do any number of other\nthings.  Please refer to the RhostMUSH running in question if this is\nthe default behavior or if the method for USR1 is doing something else.</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"usr2-kill-usr2\">\n<h3>USR2 (kill -USR2)<a class=\"headerlink\" href=\"#usr2-kill-usr2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>This will shutdown (cleanly) the mush.  This behaves as if you issued\na &#64;shutdown from within the game, and follows all proper procedure\nin bringing the game down cleanly and safely.  This shoudl be used\nwhen doing maintenance on the game or if you need to bring it down\nfrom the shell.</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"kill-kill-kill-or-kill-9\">\n<h3>KILL (kill -KILL or kill -9)<a class=\"headerlink\" href=\"#kill-kill-kill-or-kill-9\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>This signal can not be caught and will immediately terminate the game\nwithout any safty to the database at all.  Short of something horribly\nwrong going on, this should never be used to bring down your mush.\nDoing so will almost certainly corrupt your databases (ALL OF THEM)\nthat are open, including but not limited to your main database, your\nmail database, your autoregistration database, and so forth.  So if\nyou do this, plan to do some database recovery from your flat files.\nAlso, when you bring down a mush in this manner, you need to issue\nStartmush -f to bring it back up.</p></li>\n</ul>\n</div></blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"shutting-down-gracefully\">\n<h2>Shutting down gracefully<a class=\"headerlink\" href=\"#shutting-down-gracefully\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"rhostmush-has-many-ways-to-shut-down-the-game-cleanly\">\n<h3>Rhostmush has many ways to shut down the game cleanly<a class=\"headerlink\" href=\"#rhostmush-has-many-ways-to-shut-down-the-game-cleanly\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ol class=\"arabic simple\">\n<li><p>Log into the mush and issue &#64;shutdown</p></li>\n<li><p>Issue a kill -USR2 to the mush which issues an emergency &#64;shutdown</p></li>\n<li><p>Issue a kill -TERM to the mush which issues an emergency abort and clean shutdown.</p></li>\n</ol>\n</div>\n<div class=\"section\" id=\"warning-never-kill-9-rhost\">\n<h3>WARNING: Never kill -9 Rhost<a class=\"headerlink\" href=\"#warning-never-kill-9-rhost\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Under NO CIRCUMSTANCES should you kill -9 your mush unless you don\u2019t care for the\ndatabase.  The reason is if the mush happens to be saving, in any method, to the\ndatabase, especially a QDBM database, you will likely have just corrupted your\ndatabase, so pull out a flatfile to recover.</p>\n<p>Sadly, this also may occur if the server hosting you takes a nose-dive in the middle\nof a db write.  Rhost can recover corruption in-game while up, but if it bombs\nin the middle of a write, all bets are off. :)</p>\n</div>\n</div>\n<div class=\"section\" id=\"autoshutdown-script\">\n<h2>Autoshutdown script<a class=\"headerlink\" href=\"#autoshutdown-script\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The makefile will \u2018make\u2019 the program that will STOP the mush.\nPlease tweek \u2018autolog.h\u2019 with the proper parameters.</p>\n<p>The \u2018startup.sh\u2019 will START the mush.</p>\n<p>Both of these are intended to be used for automations (automated processes)\nlike your rc.local file and/or startup scripts when you bring your server up.</p>\n</div>\n<div class=\"section\" id=\"network-port-redirector\">\n<h2>Network Port redirector<a class=\"headerlink\" href=\"#network-port-redirector\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This is a port redirector incase you decide to move your mush\nto a new site/port.  To use, first, compile the code.  To do\nthis you would type the following:</p>\n<blockquote>\n<div><p>cc portmsg.c -o portmsg</p>\n</div></blockquote>\n<p>if \u2018cc\u2019 is not defined, try the following:</p>\n<blockquote>\n<div><p>gcc portmsg.c -o portmsg</p>\n</div></blockquote>\n<p>Once compiled, you would then modify the file \u2018file\u2019 to describe\nthe mush, what was done, where it\u2019s moved to, then specify the\nIP address and the PORT where specified.</p>\n<p>To launch the application, you would then type:</p>\n<blockquote>\n<div><p>./portmsg file &lt;port&gt;</p>\n</div></blockquote>\n<p>Where &lt;port&gt; is the port where the mush used to run at.</p>\n</div>\n<div class=\"section\" id=\"using-the-built-in-cron-system-for-periodically-running-commands\">\n<h2>Using the built-in cron system for periodically running commands<a class=\"headerlink\" href=\"#using-the-built-in-cron-system-for-periodically-running-commands\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"syntax-for-rhost-cron\">\n<h3>Syntax for rhost.cron<a class=\"headerlink\" href=\"#syntax-for-rhost-cron\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The rhost.cron file will be in the syntax as follows:</p>\n<p>username (or dbref#)\ncommand1;command2;command3;\u2026;commandN\ncommand\ncommand\ncommand1;command2;command3;\u2026;commandN</p>\n<p>You can have commands strung together with a semicolon\non the same line.  This counts as a single line of input.\nYou can have at most 20 lines of commands after the target\nyou wish to execute the commands as.  The target may\nbe a player name OR a dbref# of any valid dbref# within\nthe game.  Invalid targets will abort the cron process.\nNon-printable characters in the cron file will abort\nthe process.  Any aborts or warnings will be logged\nin the netrhost.gamelog.</p>\n<p>Here is a working example of the code cron file.\nThis example will perform dumps of the mush.</p>\n</div>\n<div class=\"section\" id=\"example-syntaxt-for-rhost-cron\">\n<h3>Example syntaxt for rhost.cron<a class=\"headerlink\" href=\"#example-syntaxt-for-rhost-cron\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>#1\n&#64;dump/flat; &#64;&#64; dump the main game database to flatfile\nwmail/unload; &#64;&#64; dump the mail database to flatfile\n&#64;areg/unload; &#64;&#64; dump the registration database to flatfile\nnewsdb/unload; &#64;&#64; dump the news bbs database to flatfile</p>\n</div>\n</div>\n<div class=\"section\" id=\"the-following-scripts-are-used-in-the-game-directory\">\n<h2>The following scripts are used in the game directory<a class=\"headerlink\" href=\"#the-following-scripts-are-used-in-the-game-directory\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Startmush               \u2013 used to Start up the mush\nbackup_flat.sh          \u2013 Used to run backups with &#64;dump/flat within the game</p>\n<blockquote>\n<div><p>(Started with Startmush automatically)</p>\n</div></blockquote>\n<p>backup_restart.sh       \u2013 Restart the backup_flat.sh if changes are done\ncompress_logs.sh        \u2013 Compress logs in \u2018oldlogs\u2019.  Ran with Startmush\nfindit.sh               \u2013 Internal script used to check for flatfile validity\nmailhide.sh             \u2013 Wrapper to hide from address using the \u2018mail\u2019 progam\nminimal.sh              \u2013 Auto-load the minimal db into the mush\nproxysnarf.sha          \u2013 Internal script for the tor_pull.sh tor proxy blacklist\ntor_pullit.sh           \u2013 Internal script for the tor_pull.sh for proxy blacklist\nrecovery.sh             \u2013 If your db is corrupt, run this to auto-revert to an</p>\n<blockquote>\n<div><p>earlier flatfile</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>tor_pull.sh             \u2013 Create a blacklist.txt file that can be loaded via the</dt><dd><p>internal &#64;blacklist command for proxy handling</p>\n</dd>\n</dl>\n</div>\n<div class=\"section\" id=\"textfiles-for-rhostmush\">\n<h2>Textfiles for RhostMUSH<a class=\"headerlink\" href=\"#textfiles-for-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"simple\">\n<dt>areghost.txt           - file player gets when autoregistration on registered</dt><dd><p>host.</p>\n</dd>\n<dt>autoreg.txt            - file player gets when autoregistration on</dt><dd><p>non-registered host.</p>\n</dd>\n<dt>autoreg_include.txt    - file player receives in email when they autoregister</dt><dd><p>attached to login/passwd</p>\n</dd>\n</dl>\n<p>badsite.txt            - file player gets when site is not allowed.\nconnect.txt            - file player gets when connect\ncreate_reg.txt         - file player gets when their site is register and they</p>\n<blockquote>\n<div><p>can\u2019t create.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>doorconf.txt           - file that is searched for information regarding &#64;door.</dt><dd><p><em>NOTE</em>  Need to mkindx doorconf.txt doorconf.indx for this file</p>\n</dd>\n<dt>down.txt               - file player gets when the mush has logins disabled</dt><dd><p>(&#64;disable login)</p>\n</dd>\n<dt>error.txt              - the \u2018Huh? (type help for help)\u2019 messages.</dt><dd><p><em>NOTE</em>  Need to mkindx error.txt error.indx for this file</p>\n</dd>\n<dt>full.txt               - file player gets when the mush can\u2019t have any more</dt><dd><p>players.</p>\n</dd>\n</dl>\n<p>guest.txt              - file player gets when they connect as a guest.\nhelp.txt               - your help file</p>\n<blockquote>\n<div><p><em>NOTE</em>  Need to mkindx help.txt help.indx for this file</p>\n</div></blockquote>\n<p>motd.txt               - your motd file\nnews.txt               - your news file</p>\n<blockquote>\n<div><p><em>NOTE</em>  Need to mkindx news.txt news.indx for this file</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>newuser.txt            - file newly created players get when they connect for</dt><dd><p>the first time.</p>\n</dd>\n<dt>noguest.txt            - file player gets when they are not allowed to connect</dt><dd><p>to a guest.</p>\n</dd>\n<dt>plushelp.txt           - optional +help file. (needs compile time option)</dt><dd><p><em>NOTE</em>  Need to mkindx plushelp.txt plushelp.indx for this file</p>\n</dd>\n</dl>\n<p>quit.txt               - file player gets when they disconnect.\nregister.txt           - file player gets when the site is locked down for</p>\n<blockquote>\n<div><p>registration.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>wizhelp.txt            - your wizhelp file</dt><dd><p><em>NOTE</em>  Need to mkindx wizhelp.txt wizhelp.indx for this file</p>\n</dd>\n</dl>\n<p>wizmotd.txt            - your wiz motd file</p>\n<div class=\"section\" id=\"textfile-frequently-asked-questions\">\n<h3>Textfile Frequently Asked Questions<a class=\"headerlink\" href=\"#textfile-frequently-asked-questions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Q:  How do I put color in these files?\nA1: Look at ansi.h and you need to put the literal ASCII codes.</p>\n<blockquote>\n<div><p>They will look like: ^[[0m (for ANSI_NORMAL).  That\u2019s &lt;ESC&gt;[</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>A2: You can enable ansi_txtfiles then use %c (or %x/%m) encoding</dt><dd><p>for ansi, however you compiled your Rhost.</p>\n</dd>\n</dl>\n<p>Q:  I want to design my own txt files to read in the mush.\nA:  Easy.  Design them like help.txt would be set up, mkindx the file,</p>\n<blockquote>\n<div><p>then you can access it via &#64;dynhelp online.</p>\n</div></blockquote>\n<p>Q:  Do I have to mkindx these files whenever I make changes?\nA:  Only the ones that have \u2018&amp; \u2018 index. (help.txt, wizhelp.txt, news.txt, etc)</p>\n<p>Q:  Do I have to &#64;readcache in the game whenever I make a change?\nA:  Only when you modify any of the files listed in README.TXTFILES.  Not the ones</p>\n<blockquote>\n<div><p>you use with &#64;dynhelp.</p>\n</div></blockquote>\n<p>Q:  Can\u2019t I just make code in the mush that then is used for these silly txt files?\nA:  Absolutely.  Check \u2018wizhelp file_object\u2019.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["troubleshooting", "Troubleshooting", "N", "next"], ["security", "Security", "P", "previous"]], "sourcename": "maintenance.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Maintenance</a><ul>\n<li><a class=\"reference internal\" href=\"#signals-and-why-you-need-them-for-control\">Signals and why you need them for control</a><ul>\n<li><a class=\"reference internal\" href=\"#term-kill-term-or-kill-15\">TERM (kill -TERM or kill -15)</a></li>\n<li><a class=\"reference internal\" href=\"#usr1-kill-usr1\">USR1 (kill -USR1)</a></li>\n<li><a class=\"reference internal\" href=\"#usr2-kill-usr2\">USR2 (kill -USR2)</a></li>\n<li><a class=\"reference internal\" href=\"#kill-kill-kill-or-kill-9\">KILL (kill -KILL or kill -9)</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#shutting-down-gracefully\">Shutting down gracefully</a><ul>\n<li><a class=\"reference internal\" href=\"#rhostmush-has-many-ways-to-shut-down-the-game-cleanly\">Rhostmush has many ways to shut down the game cleanly</a></li>\n<li><a class=\"reference internal\" href=\"#warning-never-kill-9-rhost\">WARNING: Never kill -9 Rhost</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#autoshutdown-script\">Autoshutdown script</a></li>\n<li><a class=\"reference internal\" href=\"#network-port-redirector\">Network Port redirector</a></li>\n<li><a class=\"reference internal\" href=\"#using-the-built-in-cron-system-for-periodically-running-commands\">Using the built-in cron system for periodically running commands</a><ul>\n<li><a class=\"reference internal\" href=\"#syntax-for-rhost-cron\">Syntax for rhost.cron</a></li>\n<li><a class=\"reference internal\" href=\"#example-syntaxt-for-rhost-cron\">Example syntaxt for rhost.cron</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#the-following-scripts-are-used-in-the-game-directory\">The following scripts are used in the game directory</a></li>\n<li><a class=\"reference internal\" href=\"#textfiles-for-rhostmush\">Textfiles for RhostMUSH</a><ul>\n<li><a class=\"reference internal\" href=\"#textfile-frequently-asked-questions\">Textfile Frequently Asked Questions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "maintenance", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12", "karma_sphinx_theme_version": "0.0.8"}