{"parents": [], "prev": {"link": "../11-differences/", "title": "The differences to expect to the end user between PennMUSH, MUX, and RhostMUSH as of 08/06/2016"}, "next": {"link": "../13-signals/", "title": "Signals and why you need them for control"}, "title": "Advanced features of RhostMUSH", "meta": null, "body": "<div class=\"section\" id=\"advanced-features-of-rhostmush\">\n<h1>Advanced features of RhostMUSH<a class=\"headerlink\" href=\"#advanced-features-of-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"debugging-tracing\">\n<h2>Debugging/Tracing<a class=\"headerlink\" href=\"#debugging-tracing\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Debugging in Rhost allows for advanced features like expressing where and\nwhen to do debugging via a trace() function, with toggled labels, and the\nability to grep content from trace output.  There also exists features to\ncolor-match parenthesis, braces, and brackets in-game as well as pretty print\nthe output of commands and functions.\n- help trace\n- help %_\n- help trace()\n- help parenmatch()\n- help parenstr()</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"zoning\">\n<h2>Zoning<a class=\"headerlink\" href=\"#zoning\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Zoning in Rhost allows the same functionality of Penn and MUX, though the\nsyntax is different.  It also allows the ability to belong to multiple\nzones at the same time and take advantage of mulitple zones at once.\nThis allows for increased levels of complexity.\n- help zones\n- help &#64;zone\n- help zonecmd()\n- help lzone()\n- help &#64;Lock type twink\n- help &#64;lock type zone</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"reality-levels\">\n<h2>Reality Levels<a class=\"headerlink\" href=\"#reality-levels\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Reality levels allows for the ability to have a sandboxed \u2018existance\u2019\nin each physical location across the entirity of the mush.  Each\nreality is its own sandbox and can either stand alone or work\ndependently with other realities.  A person can belong to multiple\nrealities at the same time, and realities is geared to a method for\nsend and receive.  Each \u2018method\u2019 requires to be in the given reality\nto affect it.\n- help reality levels\n- wizhelp chkreality\n- wizhelp reaity level\n- help &#64;Lock type user</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"function-and-command-overriding\">\n<h2>Function and Command Overriding<a class=\"headerlink\" href=\"#function-and-command-overriding\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>Functions and commands can both be overridden with softcode.  To\noverride a hardcoded command you first set the command ignore.\nThere are various levels of ignoring so that you could have it\nignored from mortals but have it executed fine for non-mortals.\nThis allows you to use the actual physical command within a\nsoftcode override.  You may also use &#64;Hook for altering how\na command works.   Functions are overridden by setting the\nfunction in question ignored, then writing a softcode alternative\nthat is then executed and fetched appropriately.</p>\n<blockquote>\n<div><dl class=\"simple\">\n<dt>Commands:</dt><dd><ul class=\"simple\">\n<li><p>wizhelp &#64;admin</p></li>\n<li><p>wizhelp access</p></li>\n<li><p>wizhelp permissions</p></li>\n<li><p>wizhelp &#64;Hook</p></li>\n<li><p>wizhelp hook setup</p></li>\n</ul>\n</dd>\n<dt>Functions:</dt><dd><ul class=\"simple\">\n<li><p>wizhelp &#64;admin</p></li>\n<li><p>wizhelp function_access</p></li>\n<li><p>wizhelp &#64;function</p></li>\n<li><p>help &#64;lfunction</p></li>\n<li><p>wizhelp bypass()</p></li>\n</ul>\n</dd>\n</dl>\n</div></blockquote>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"the-recycle-bin\">\n<h2>The Recycle Bin<a class=\"headerlink\" href=\"#the-recycle-bin\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Rhost has a recycle bin that works a bit like a windows recycle bin.\nWhenever you destroy something within the mush, it is stacked onto\nthe recycle bin and marked unavailable within the mush.  This marks\nthe dbref# as garbage in any sense of the word.  However, the object\nis not able to be reused until purged.  Once purged, it is put onto\na free list that can then be reassigned to a new object.\n- wizhelp &#64;nuke\n- wizhelp &#64;destroy\n- wizhelp &#64;toad\n- wizhelp &#64;turtle\n- wizhelp &#64;purge\n- wizhelp &#64;recover\n- wizhelp &#64;reclist</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"percent-substitution-adding-overriding\">\n<h2>Percent Substitution Adding/Overriding<a class=\"headerlink\" href=\"#percent-substitution-adding-overriding\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Rhost allows the ability to both override percent substitutions as\nwell as creating new ones.  This is done with &#64;Hook and admin\nparams and issues softcode overriding.  Due to how it is evaluated\nthere is no risk of recursion.\n- wizhelp &#64;hook\n- wizhelp hook_cmd\n- wizhelp sub_include\n- wizhelp sub_override</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"hooking\">\n<h2>Hooking<a class=\"headerlink\" href=\"#hooking\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Hooking allows you to have advanced methods to manipulate commands\nincluding adding customized switches to them via softcode.\n- wizhelp &#64;hook\n- wizhelp hook_cmd\n- wizhelp hook_obj\n- wizhelp hook setup</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"command-based-uselocks\">\n<h2>Command based uselocks<a class=\"headerlink\" href=\"#command-based-uselocks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>This allows you to have unique uselocks per $command.  This is done\nthrough the use of the USELOCK attribute flag, then you set up\na matching attribute name with a prefix of a ~ to specify how\nthe lock is to be evaluated.  This works in the same manner\nas an evaluation lock.  To be able to use the USELOCK attribute flag\nyou must be empowered to do so with the \u2018ATRUSE\u2019 &#64;toggle.  You may\nalso use the secure_atruselock config parameter to globally enable\nthis and not require the toggle to be set.\n- wizhelp atruse toggle\n- help attribute uselocks</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"differentating-between-command-and-listen-locks\">\n<h2>Differentating between command and listen locks<a class=\"headerlink\" href=\"#differentating-between-command-and-listen-locks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>We distinguish between commands and listens with uselocks by passing\nan optional argument to all locks that are uselocks.  This optional\nargument is 0 for a default lock, 1 for a command lock and 2 for\na listen lock.\n- help &#64;lock type uselock</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"wizard-auto-overiding-and-how-to-disable-it\">\n<h2>Wizard auto-overiding and how to disable it<a class=\"headerlink\" href=\"#wizard-auto-overiding-and-how-to-disable-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>By default wizards override all locks, including attribute locks,\ncan see all dark exits, and bypass pagelocks.  This can be\ntroublesome, and even abusive, so there\u2019s ways to disable this.\n- wizhelp &#64;depower (for those abusing it)\n- wizhelp no_override (disable overiding locks)\n- wizhelp no_uselock (disable just uselock overriding)\n- wizhelp pagelock toggle (disable pagelock overriding)</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"advanced-flag-and-toggle-control\">\n<h2>Advanced FLAG and TOGGLE control<a class=\"headerlink\" href=\"#advanced-flag-and-toggle-control\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Flags and toggles can be controlled to have multiple permissions\nand enable/disable targets of how the flags are allowed to be\nset.  This is done through commands in-game or you can use\nconf file options to do so.\n- wizhelp &#64;flagdef\n- wizhelp &#64;toggledef\n\u2014\u2014- &#64;admin &#64;flagdef alternatives\n- wizhelp flag_access_set\n- wizhelp flag_access_unset\n- wizhelp flag_access_see\n- wizhelp flag_access_type\n\u2014\u2014- &#64;admin &#64;toggledef alternatives\n- wizhelp toggle_access_set\n- wizhelp toggle_access_unset\n- wizhelp toggle_access_see\n- wizhelp toggle_access_type</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"advanced-site-control\">\n<h2>Advanced site control<a class=\"headerlink\" href=\"#advanced-site-control\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>We allow advanced site control by not only blocking various sites\nbut we can specify how many times a player can be connected at the\nsame time as well as how many times sites are able to connect at\nthe same time.  This is done through normal site manipulation.\n- wizhelp forbid_host\n- wizhelp register_host\n- wizhelp noguest_host\n- wizhelp &#64;list (site option)</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"auto-registration\">\n<h2>Auto-Registration<a class=\"headerlink\" href=\"#auto-registration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Autoregistration is the method that a player can auto-register\nby providing their email on the connect screen.  It will email\nthem a password and an optional document that the administrator\nprovides.  This is well described in the wizhelp.\n- wizhelp autoregistration</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"which-bit-level-is-best\">\n<h2>Which bit level is best?<a class=\"headerlink\" href=\"#which-bit-level-is-best\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>This is something that should be discussed by you and the staff\nof your game.  As a good rule of thumb, only provide the bitlevel\nthat is required to do the job.  Too much power is always risky.\nIn essence, each tier of bit can do everything the previous bitlevel\ncan do, and then additional stuff on top of it.  The highest bitlevel\nis #1 itself, being bitlevel 7.  Then immortal, which should be\nconsidered the #1 character in most cases and is bitlevel 6.  Then\nthe royalty character, which is equal to wizard on penn, mux, or\nother codebases.  For most things, this is the bitlevel you want\nto assign players.  The exception will likely be game owners or\npeople who control the master room code.</p>\n<p>There\u2019s a bunch of readme files and online wizhelp that goes into\ndetail of the various bitlevels and what each can do.\n- XV.   Multi-tiered bitlevel systems\n- wizhelp control</p>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"what-are-the-limits-for-size-growth-for-rhostmush\">\n<h2>What are the limits for size/growth for RhostMUSH?<a class=\"headerlink\" href=\"#what-are-the-limits-for-size-growth-for-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>While using QDBM, there\u2019s really no set limits for most things.\nThe limits that we have are as followed:\nLBUF - 64K.  It is recommended to only use 32K as there is some</p>\n<blockquote>\n<div><blockquote>\n<div><p>issues with networking with 64K lbufs.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>Compile time option with the menu configurator</p></li>\n</ul>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>SBUF - 64 characters (if configured \u2013 it\u2019s suggested you do).</dt><dd><ul class=\"simple\">\n<li><p>Compile time option with the menu configurator</p></li>\n</ul>\n</dd>\n</dl>\n<p>MBUF - 200 characters.  Not able to be changed.</p>\n<dl>\n<dt>MAX CONNECTIONS - Limited by the total number of open sockets</dt><dd><blockquote>\n<div><p>and descriptors on the account and server running on.\nThere are various tools to limit connection DoS attemps\nand other such nastiness.  This is well documented in\nthe netrhost.conf file.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>wizhelp max_players</p></li>\n<li><p>~/game/netrhost.conf</p></li>\n</ul>\n</dd>\n<dt>MEMORY - no limit.  Generally runs between 8-50M depending</dt><dd><p>on the size of the mush and the LBUF size specified.</p>\n</dd>\n<dt>CPU  - no limit, but has built in cpu abort in code.  The</dt><dd><blockquote>\n<div><p>netrhost.conf file documents this well for customizing.\nthe default values are usually good enough.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>wizhelp max_cpu_cycles</p></li>\n<li><p>wizhelp cpuintervalchk</p></li>\n<li><p>wizhelp cputimechk</p></li>\n<li><p>wizhelp cpu_secure_lvl</p></li>\n<li><p>wizhelp heavy_cpu_max</p></li>\n<li><p>~/game/netrhost.conf</p></li>\n</ul>\n</dd>\n<dt>DISK - no limit.  Generally will be 75-200M depending on size,</dt><dd><p>number of backups and if you leave your compiled object\nfiles in.</p>\n</dd>\n<dt>DB Size - (20000 default) There is no limit on the number of</dt><dd><blockquote>\n<div><p>objects the db can have.  By default it\u2019s soft limited\nto 20K objects, which can be changed by a netrhost.conf\nfile change.  We have had this up past 1.5 million\nobjects, and other than a second or two of lag for\ncomplex searches we had no real problem.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>wizhelp maximum_size</p></li>\n<li><p>help &#64;quota</p></li>\n<li><p>wizhelp &#64;quota</p></li>\n<li><p>wizhelp &#64;limit</p></li>\n</ul>\n</dd>\n<dt>Attribute Size - 10K as a hard limit.  750 as a soft limit.</dt><dd><blockquote>\n<div><p>You can increase this but it can\u2019t exceed 10000\nattributes.  This is to avoid DoS style attacks.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>wizhelp vlimit</p></li>\n<li><p>wizhelp &#64;limit</p></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"sqlite-and-mysql-maria-setup-and-why-use-it\">\n<h2>Sqlite and MySQL/Maria setup and why use it?<a class=\"headerlink\" href=\"#sqlite-and-mysql-maria-setup-and-why-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Both of these can be configured separately or conjointly to\nrun in parallel.  This can be done through the RhostMUSH\nconfiguration utility.  You generally want to use SQL for\nexternal data storage or accessing a central repository\nof data to share between multiple projects.  Like, for\nexample between a wiki, a forum, and the mush.</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"executing-outside-scripts-and-binaries-within-rhostmush\">\n<h2>Executing outside scripts and binaries within RhostMUSH<a class=\"headerlink\" href=\"#executing-outside-scripts-and-binaries-within-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Rhost has execscript() which allows executing outside binaries\nor scripts as a native function.  All effort has been done to\navoid any type of DoS based issue or hang by doing this, however\nthe guidelines presented should be followed before doing so.\n- wizhelp execscript\n- wizhelp power execscript\n- help sidefx\n- wizhelp writing scripts</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"pulling-external-data-into-rhostmush\">\n<h2>Pulling external data into RhostMUSH<a class=\"headerlink\" href=\"#pulling-external-data-into-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>You are capable of pulling external data in to RhostMUSH using\nseveral methods.  These are by using:</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>SQL (mysql or sqlite)</p></li>\n<li><p>execscript</p></li>\n<li><p>cron (wizhelp signal)</p></li>\n</ul>\n</div></blockquote>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"integrating-a-unix-cron-right-into-rhostmush\">\n<h2>Integrating a unix cron right into RhostMUSH<a class=\"headerlink\" href=\"#integrating-a-unix-cron-right-into-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>The unix cron can be used to integrate with Rhost fairly\neasilly by use of signals.  By using SIGUSR1 you can specify\nRhost to execute code in-game, which part of that could be\nto pick up a pre-designed list of commands that the unix cron\nhas set up.\n- wizhelp signal\n- wizhelp signal_cron</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"signal-handling-how-it-works-and-when-and-why-use-it\">\n<h2>Signal handling, how it works, and when and why use it<a class=\"headerlink\" href=\"#signal-handling-how-it-works-and-when-and-why-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>Signals are used to do different things for the mush.  By default,\nthe following signals are recognized by the mush and will do\nthe following as defaults.\n- SIGUSR1 - will do a reboot of the mush.  This is also customizable</p>\n<blockquote>\n<div><p>so that you can have it execute code in-mush if you want.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>SIGUSR2 - will do a clean shutdown of the mush.</p></li>\n<li><dl class=\"simple\">\n<dt>SIGTERM - will immediately scram the mush as cleanly and fast</dt><dd><p>as possible.  It will avoid dumping anything to\nthe database to speed up scramming, but write\na TERM flat file to be loaded in if corruption.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups\">\n<h2>Setting up global parents, global &#64;parents, global attribute formatting, and other global setups<a class=\"headerlink\" href=\"#setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul>\n<li><p>Global parents are useful when you want to have a global \u2018parent\u2019\nwithout actually having a defined <a class=\"reference external\" href=\"mailto:'&#37;&#52;&#48;parent\">\u2018<span>&#64;</span>parent</a>\u2019.  It always will be the\nhighest tier in a lookup.  The way lookups will go will be:</p>\n<blockquote>\n<div><p>self-&gt;&#64;parent(s)-&gt;&#64;zone(s)-&gt;GlobalParent</p>\n</div></blockquote>\n<p>The type of the parent does not have to match the target.</p>\n<p>These global parents can be defined either by using a global\ngeneric parent or by using the type.  If a type is specified it\noverrides the generic.  The following parameters are used:\n- global_parent_obj     - The generic global parent (if defined)\n- global_parent_room    - The room global parent\n- global_parent_exit    - The exit global parent\n- global_parent_thing   - The thing global parent\n- global_parent_player  - The player global parent</p>\n</li>\n<li><p>Global &#64;parents are different than global parents in that any new\nitem of similar type that is created is automatically assigned this\nphysical &#64;parent.  It\u2019s obviously more limiting since it sets\nthe literal physical parent defined.</p>\n<p>The type of the parent does not have to match the target.</p>\n<p>The following parameters are used:\n- room_parent           - The target that new rooms are &#64;parented\n- exit_parent           - The target that new exits are &#64;parented\n- thing_parent          - The target that new things are &#64;parented\n- player_parent         - The target that new players are &#64;parented</p>\n</li>\n<li><p>Global attribute formatting is a method define a wrapper, of sorts,\nwhere attributes like &#64;desc, &#64;odesc, &#64;succ, and anything similar\ncan be processed through this.  All attributes will be either\n&amp;FORMAT&lt;attribute&gt; or &amp;&lt;attribute&gt;FORMAT based on the current\nconfiguration.  Example: &amp;FORMATDESC or &amp;DESCFORMAT localy, or\nuse the following global objects for global formatting.  Local\nformatting has priority.</p>\n<p>The type of the parent does not have to match the target.</p>\n<ul class=\"simple\">\n<li><p>room_attr_default     - Target for room formatting</p></li>\n<li><p>exit_attr_default     - Target for exit formatting</p></li>\n<li><p>thing_attr_default    - Target for thing formatting</p></li>\n<li><p>player_attr_default   - Target for player formatting</p></li>\n</ul>\n</li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"rhostmush-limitations-and-how-to-get-around-them\">\n<h2>RhostMUSH limitations and how to get around them<a class=\"headerlink\" href=\"#rhostmush-limitations-and-how-to-get-around-them\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><p>While Rhost is insanely configurable and quite powerful, there are\nlimitations that exist within it.</p>\n<ul>\n<li><p>Function invocations.  Sometimes you will hit a ceiling on evaluation.\nYou may want to tweak values to allow more functions or commands\nto execute.  The following controls that:\n- function_invocation_limit [25000 default] - specifies the total</p>\n<blockquote>\n<div><p>functions you can execute per command.</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><dl class=\"simple\">\n<dt>function_recursion_limit [50] - specifies the total times a</dt><dd><p>function can call itself over and over.  Rarely should this\nbe increased and doing so can effect your stack depth.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</li>\n<li><p>Command queue limits.  Sometimes you want more to be queued up for\nplayers or wizards.\n- player_queue_limit  - Max number of entries a player can queue\n- wizard_queue_limit  - Max number of entries a wizard can queue</p></li>\n<li><p>&#64;limit is a wonderful way to lock down limitations per player or\nglobal.  Lots of power is available here.\n- &#64;limit\n- vattr_limit_checkwiz - Enable &#64;limit checks for wizards\n- wizmax_vattr_limit   - Set wizard global VATTR limits\n- wizmax_dest_limit    - Set wizard global &#64;destroy limits\n- max_vattr_limit      - Set player global VATTR limits\n- max_dest_limit       - Set player global &#64;destroy limits</p></li>\n<li><p>Lots of trace output can be cut off.  You can modify this with:\n- trace_output_limit   - Set lines of trace output shown</p></li>\n<li><p>To define how many commands a minute a player set SPAMMONITOR can use\n- spam_limit \u2013 default 120</p></li>\n<li><p>If you examine things and see \u2018Output cut off\u2019 messages, you may want\nto increase your output limit, funny enough, the name of this is\nsimilar\n- output_limit - You should set this no less than 4 times the current</p>\n<blockquote>\n<div><p>size of your LBUF.</p>\n</div></blockquote>\n</li>\n<li><p>Attributes names can not exceed 64 characters.  Sorry, it\u2019s a hard limit</p></li>\n<li><p>Sometime you may find a single may not work for an escape.  You can\nin most cases use a % instead or double escape the to make it work.\nAlso look at lit() as a solution.</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it\">\n<h2>Things other mushes can do that Rhost can not and how to emulate it<a class=\"headerlink\" href=\"#things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"pennmush\">\n<h3>PennMUSH<a class=\"headerlink\" href=\"#pennmush\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul>\n<li><p>Attribute trees.  These are emulated as a base set and can be\nduplicated enough to at least port code.</p></li>\n<li><p>lsearch() will have to be recoded to search()</p></li>\n<li><p>align() will have to be recoded to printf()</p></li>\n<li><p>Penn allows empty attributes.  Rhost does not.  Work will have to\nbe done to take this into consideration.</p></li>\n<li><p>All <a href=\"#id1\"><span class=\"problematic\" id=\"id2\">*</span></a>val() functions in Penn that are used will have to be\nremapped to a non-<a href=\"#id3\"><span class=\"problematic\" id=\"id4\">*</span></a>val() function.  It should be as simple as\nfunction_alias to the non-<a href=\"#id5\"><span class=\"problematic\" id=\"id6\">*</span></a>val.  Example:</p>\n<blockquote>\n<div><p>&#64;admin function_alias=hasattrval hasattr</p>\n</div></blockquote>\n</li>\n<li><p>Penn\u2019s hardcoded comsystem is emulated with the softcode comsys</p></li>\n<li><p>Penn\u2019s &#64;mail system is workable with mail wrappers</p></li>\n<li><p>Pueblo is not supported.</p></li>\n<li><p>json is not supported.</p></li>\n<li><p>ssl is not natively supported (yet), see section XIV</p></li>\n<li><p>This uses &#64;shutdown/restart, Rhost uses &#64;reboot</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"mux\">\n<h3>MUX<a class=\"headerlink\" href=\"#mux\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Mux has an async mysql database engine.  This is not possible\nwith Rhost.  You\u2019ll have to use the sync method instead.</p></li>\n<li><p>UTF8 is supported but internally passed differently.</p></li>\n<li><p>Mux\u2019s hardcoded comsystem is emulated with the softcode comsys</p></li>\n<li><p>MUX\u2019s &#64;mail system is workable with mail wrappers</p></li>\n<li><p>Pueblo is not supported.</p></li>\n<li><p>This uses &#64;restart, Rhost uses &#64;reboot</p></li>\n</ul>\n</div></blockquote>\n</div>\n</div>\n<div class=\"section\" id=\"advanced-guest-setup\">\n<h2>Advanced guest setup<a class=\"headerlink\" href=\"#advanced-guest-setup\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>After you set up your guests, you can set unique names to each guest\nif you so want after defining the dbref#\u2019s your guests use.  This is\ndone by defining them in the guest_namelist parameter.  You can also\nincrease guests (or decrease them) between 0-31 guests.\n- wizhelp guest_namelist\n- wizhelp num_guests</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"attribute-permission-masking-and-the-joys-of-the-power-behind-it\">\n<h2>Attribute permission masking and the joys of the power behind it<a class=\"headerlink\" href=\"#attribute-permission-masking-and-the-joys-of-the-power-behind-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Attribute contentlocks can be set up so you can lock the actual\ncontent that you can set (or even unset!) into an attribute.\nThe beauty of this is that you can specify case sensitive\ninformation, lock different ways contents in attributes are set\nbased on who is setting it, or even on where it\u2019s being set.\nThe sky\u2019s the limit.\n- global_attrdefault    - Target for defining content locks</p></li>\n</ul>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"the-amazing-cluster-and-what-it-can-do-for-you\">\n<h2>The amazing &#64;cluster and what it can do for you<a class=\"headerlink\" href=\"#the-amazing-cluster-and-what-it-can-do-for-you\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>Clusters is the way to virtually assign multiple objects into\na single physical object.  It essentially chains together two\nor more objects to share attributes between them, so that any\nattribute set on any object in that cluster can be set or fetched\nas if it was a singular entity.  This allows some amazing ability\nto distribute attribute content or even have a farm of a massive\namount of attributes without paying a hefty penalty on object bloat.</p></li>\n</ul>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>help cluster  \u2013 Gives a fantastic overview of how clusters work.</p></li>\n</ul>\n</div></blockquote>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"what-we-plan-for-the-future\">\n<h2>What we plan for the future<a class=\"headerlink\" href=\"#what-we-plan-for-the-future\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<blockquote>\n<div><blockquote>\n<div><ul class=\"simple\">\n<li><p>Things to look forward to the future with RhostMUSH.\n- Full Unicode/UTF8 in Rhost 4.0\n- A fully featured tag system in Rhost 4.0\n- Built in Python API handler in Rhost 4.0\n- Hopefully a built in Ruby and Perl API in Rhost 4.0/4.1\n- Cross-Mush execution between mushes in Rhost 4.1\n- More as we think about it :)</p></li>\n</ul>\n</div></blockquote>\n<p>EXT: Additional features not covered otherwise\nAdditional features\n- +/- 5.4 million years can be utilized with the built in time functions</p>\n<blockquote>\n<div><p>which includes timefmt(), secs(), convtime(), convsecs(), and moon().  Party on!</p>\n</div></blockquote>\n<ul class=\"simple\">\n<li><p>Changing permission levels in the middle of execution for evaluation.\n* see help on the streval and ueval function</p></li>\n<li><p>Full features in-game customization of near every aspect of the game.</p></li>\n</ul>\n</div></blockquote>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["13-signals", "Signals and why you need them for control", "N", "next"], ["11-differences", "The differences to expect to the end user between PennMUSH, MUX, and RhostMUSH as of 08/06/2016", "P", "previous"]], "sourcename": "12-advanced.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Advanced features of RhostMUSH</a><ul>\n<li><a class=\"reference internal\" href=\"#debugging-tracing\">Debugging/Tracing</a></li>\n<li><a class=\"reference internal\" href=\"#zoning\">Zoning</a></li>\n<li><a class=\"reference internal\" href=\"#reality-levels\">Reality Levels</a></li>\n<li><a class=\"reference internal\" href=\"#function-and-command-overriding\">Function and Command Overriding</a></li>\n<li><a class=\"reference internal\" href=\"#the-recycle-bin\">The Recycle Bin</a></li>\n<li><a class=\"reference internal\" href=\"#percent-substitution-adding-overriding\">Percent Substitution Adding/Overriding</a></li>\n<li><a class=\"reference internal\" href=\"#hooking\">Hooking</a></li>\n<li><a class=\"reference internal\" href=\"#command-based-uselocks\">Command based uselocks</a></li>\n<li><a class=\"reference internal\" href=\"#differentating-between-command-and-listen-locks\">Differentating between command and listen locks</a></li>\n<li><a class=\"reference internal\" href=\"#wizard-auto-overiding-and-how-to-disable-it\">Wizard auto-overiding and how to disable it</a></li>\n<li><a class=\"reference internal\" href=\"#advanced-flag-and-toggle-control\">Advanced FLAG and TOGGLE control</a></li>\n<li><a class=\"reference internal\" href=\"#advanced-site-control\">Advanced site control</a></li>\n<li><a class=\"reference internal\" href=\"#auto-registration\">Auto-Registration</a></li>\n<li><a class=\"reference internal\" href=\"#which-bit-level-is-best\">Which bit level is best?</a></li>\n<li><a class=\"reference internal\" href=\"#what-are-the-limits-for-size-growth-for-rhostmush\">What are the limits for size/growth for RhostMUSH?</a></li>\n<li><a class=\"reference internal\" href=\"#sqlite-and-mysql-maria-setup-and-why-use-it\">Sqlite and MySQL/Maria setup and why use it?</a></li>\n<li><a class=\"reference internal\" href=\"#executing-outside-scripts-and-binaries-within-rhostmush\">Executing outside scripts and binaries within RhostMUSH</a></li>\n<li><a class=\"reference internal\" href=\"#pulling-external-data-into-rhostmush\">Pulling external data into RhostMUSH</a></li>\n<li><a class=\"reference internal\" href=\"#integrating-a-unix-cron-right-into-rhostmush\">Integrating a unix cron right into RhostMUSH</a></li>\n<li><a class=\"reference internal\" href=\"#signal-handling-how-it-works-and-when-and-why-use-it\">Signal handling, how it works, and when and why use it</a></li>\n<li><a class=\"reference internal\" href=\"#setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups\">Setting up global parents, global &#64;parents, global attribute formatting, and other global setups</a></li>\n<li><a class=\"reference internal\" href=\"#rhostmush-limitations-and-how-to-get-around-them\">RhostMUSH limitations and how to get around them</a></li>\n<li><a class=\"reference internal\" href=\"#things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it\">Things other mushes can do that Rhost can not and how to emulate it</a><ul>\n<li><a class=\"reference internal\" href=\"#pennmush\">PennMUSH</a></li>\n<li><a class=\"reference internal\" href=\"#mux\">MUX</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#advanced-guest-setup\">Advanced guest setup</a></li>\n<li><a class=\"reference internal\" href=\"#attribute-permission-masking-and-the-joys-of-the-power-behind-it\">Attribute permission masking and the joys of the power behind it</a></li>\n<li><a class=\"reference internal\" href=\"#the-amazing-cluster-and-what-it-can-do-for-you\">The amazing &#64;cluster and what it can do for you</a></li>\n<li><a class=\"reference internal\" href=\"#what-we-plan-for-the-future\">What we plan for the future</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "12-advanced", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12", "insegel_version": "1.1.0"}