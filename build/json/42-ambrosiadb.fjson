{"parents": [], "prev": {"link": "../41-minimaldb/", "title": "Minimal DB instructions"}, "next": {"link": "../helpfile/", "title": "RhostMUSH Internal Help Files"}, "title": "Ambrosia\u2019s Minimal Rhost DB", "meta": null, "body": "<div class=\"section\" id=\"ambrosia-s-minimal-rhost-db\">\n<h1>Ambrosia\u2019s Minimal Rhost DB<a class=\"headerlink\" href=\"#ambrosia-s-minimal-rhost-db\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"version-1-0-5-2020-01-31\">\n<h2>Version: 1.0.5          2020-01-31<a class=\"headerlink\" href=\"#version-1-0-5-2020-01-31\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"simple\">\n<dt>Version history:</dt><dd><dl class=\"simple\">\n<dt>1.0.0</dt><dd><ul class=\"simple\">\n<li><p>Initial database setup.</p></li>\n</ul>\n</dd>\n<dt>1.0.1</dt><dd><ul class=\"simple\">\n<li><p>Small fixes of objid(), isstaff() and bccheck() permissions and handling.</p></li>\n<li><p>bittype() access lowered to Architect level</p></li>\n<li><p>NO_CODE flag made visual to Architect</p></li>\n</ul>\n</dd>\n<dt>1.0.2</dt><dd><ul class=\"simple\">\n<li><p>Several convenience changes and fixes: _ Attributes moved to &#64;aflags\nsystem, allowing Architects to set, Guildmasters to see them.</p></li>\n<li><p>&#64;flagdef lowered to Royalty level. &#64;quota/max, &#64;quota/unlock and &#64;convert\nmoved to Architect level.</p></li>\n<li><p>NO_CODE flag made settable/unsettable by Architects.</p></li>\n<li><p>Fixed typo in conf file: ifselse -&gt; ifelse</p></li>\n<li><p>Switched _Attributes to use the &#64;aflags system\nSee: Guildmaster\nSet: Architect</p></li>\n</ul>\n</dd>\n<dt>1.0.3</dt><dd><ul class=\"simple\">\n<li><p>Removed &#64;flagdefs from in-game softcode, converted to flag_access_*\nconfig options</p></li>\n<li><p>Lowered mailstatus() access to architect.</p></li>\n</ul>\n</dd>\n<dt>1.0.4</dt><dd><ul class=\"simple\">\n<li><p>Changed softcoded objid() to tag(), due to Rhost\u2019s new hardcoded\nobjid() which does perform a different functionality.</p></li>\n<li><p>Added more staff recommendations to this file.</p></li>\n<li><p>Added Reality TXLevel \u2018Admin\u2019 to all objects in the db except #1</p></li>\n</ul>\n</dd>\n<dt>1.0.5</dt><dd><ul class=\"simple\">\n<li><p>Replaced softcoded tag() system with Rhost\u2019s new hardcoded &#64;tag/tag()\nsystem. All previous tags are set on the database. The Tag Object\nwas removed.</p></li>\n<li><p>&#64;function startup on BC-Admin-Royalty fixed - &#64;wait 1 workaround for\nTags in place.</p></li>\n<li><p>Places System &#64;startup integrated into BC-Admin-Royalty\u2019s &#64;startup</p></li>\n<li><p>Made &#64;dump and &#64;dump/flat available to Councilors in netrhost.conf</p></li>\n</ul>\n</dd>\n<dt>1.0.6</dt><dd><ul class=\"simple\">\n<li><p>A small typo fix in netrhost.conf. float_preciiosn -&gt; precision and\nfunctions_max -&gt; function_max. Thanks to <a class=\"reference external\" href=\"mailto:Bobbi&#37;&#52;&#48;COH\">Bobbi<span>&#64;</span>COH</a></p></li>\n</ul>\n</dd>\n</dl>\n</dd>\n</dl>\n<p>Greetings,\nThis minimal Rhost DB was made with a secure setup, and as a good base to start\na new game off in mind.</p>\n<p>It offers the following features:\n* Limbo, Master Room and Auxiliary room.\n* BC-Admin-&lt;bitlevel&gt; characters set up for each bitlevel to own global and</p>\n<blockquote>\n<div><p>data objects, and inherit to.</p>\n</div></blockquote>\n<ul>\n<li><p>BC-Admin-Mortal is &#64;powered EXAMINE_ALL(Guildmaster), NOFORCE(Architect) and\nLONG_FINGERS.</p></li>\n<li><p>&#64;startup on BC-Admin-Immortal lowers DARK flag access to Councilor level, and\nNO_CODE visual access to Architect level.</p></li>\n<li><p>Global Command objects inheriting from each bitlevel, with a separate staff-\n-only object for each level.</p></li>\n<li><p>Global Function objects inheriting from each bitlevel.</p></li>\n<li><p>local Function objects inheriting from each bitlevel.</p></li>\n<li><p>&#64;function and &#64;hook access lowered to Royalty level to remove immediate need\nfor Immortals or actual Immortal code.</p></li>\n<li><p>&#64;rxlevel, &#64;txlevel, bittype() access lowered to Architect level to remove\nimmediate need for Royalty in many cases.</p></li>\n<li><p>&#64;startup on BC-Admin-Royalty to automatically load &#64;hooks and &#64;functions from\nthe Global Function objects, based on attribute naming.</p></li>\n<li><p>Misc Data object to hold general data, like Staff lists etc.</p></li>\n<li><p>Reality levels \u2018Real\u2019 and \u2018Admin\u2019.\nAll created items and players by default are in Recieve-Level \u2018Real\u2019 and\nTransmit-Levels \u2018Real\u2019 and \u2018Admin\u2019.</p></li>\n<li><p>All globals, Master Room, BCs-<a href=\"#id1\"><span class=\"problematic\" id=\"id2\">*</span></a>, and other staff/code-related objects\ncurrently have only \u2018Admin\u2019 as their Transmit-Level. This does not prevent\nthem fromi working properly. The only exception is #1, who has empty reality\nlevels.</p></li>\n<li><p>The supplied netrhost.conf offers a secure setup of options, allows Royalty\nto use &#64;hook and &#64;function, and also sets the function_access of several\nfunctions to !no_code, which allows NO_CODE players to use the comsys\nproperly.\nIT IS HIGHLY RECOMMENDED to use this .conf as a base for this DB.\nThe \u2018Port\u2019 configuration parameter is XXXX\u2019d out. Set it first before starting\nyour game.</p></li>\n<li><p>All existing objects have been &#64;set SAFE and INDESTRUCTABLE.</p></li>\n<li><p>All existing objects have a paranoid series of &#64;locks set on themselves.</p></li>\n<li><p>The +supersafe command is provided on #1 as an example of what was used to\neasily set this on objects.</p></li>\n<li><p>Players are &#64;set NO_CODE and WANDERER by default. They get 40 credits on\ncreation, and a 1-credit-per-day paycheck.</p></li>\n<li><p>All <a href=\"#id3\"><span class=\"problematic\" id=\"id4\">*</span></a>mit sideeffects, as well as set(), create() and list() are enabled. The\nlatter three are necessary for the Comsystem. The rest of sideeffects are\ndisabled completely.</p></li>\n<li><p>Flashing ansi is disabled.</p></li>\n<li><p>_Attributes are settable by Architects, and seeable by Guildmasters. Read:\nStill invisible and unsettable by mortals.</p></li>\n<li><p>Architects can set up, unlock, and change alternate &#64;quota on players.</p></li>\n<li><p>Architects can set/unset the NO_CODE flag.</p></li>\n<li><p>Guildmasters can see _Attributes</p></li>\n<li><p>Architects can set _Attributes</p></li>\n<li><p>Set-up compatibility SoftFunctions and &#64;hook object.</p></li>\n<li><p>Set up Comsys 1.0.9b at Architect level. (+bbhelp command)</p></li>\n<li><p>Set up Myrddin +bboard at Architect level.</p></li>\n<li><p>Set up Myrddon Cron at Architect level.</p></li>\n<li><p>Anomaly Jobs (+jhelp)</p></li>\n<li><p>SGP Places &amp; Mutter</p></li>\n<li><p>Set up Penn-style follow.</p></li>\n<li><p>Set up &#64;scan (Up to architect-level items).</p></li>\n<li><p>Set up Penn- and Mux compatibility Mailwrappers. (phelp and mhelp commands)</p></li>\n<li><p>help .txt files and .indx files for the above.</p></li>\n<li><p>&#64;dynhelp access lowered to architect to call above helpfiles.</p></li>\n<li><p>isstaff() - Softcoded function that returns \u20181\u2019 if its argument matches\na #dbref in the \u2018isstaff\u2019 attribute on the Misc Data object.</p></li>\n<li><p>bccheck() - Softcoded function that returns \u20181\u2019 if its argument matches\na #dbref in the \u2018bcs\u2019 attribute on the Misc Data object.</p></li>\n<li><p>width() - Softcoded function that returns 78 for now. For cross-MU*\ncompatibility.</p></li>\n<li><p>pass() - Softcoded function that takes a number as its parameter, and return\na random string of that length. Perfect for setting random passwords.</p></li>\n<li><p>cmdmessage() - Softcoded function that takes two strings as its parameters.\nReturns \u2018&lt;&lt; STRING1 &gt;&gt; String2\u2019. The &lt;&lt;&gt;&gt; part is highlighted red. Good for\nall kinds of messages sent by game commands.</p></li>\n<li><p>header() - Highly versatile, and a buffer-saving alternative\nto using printf() for centering with ansi borders. HIGHLY recommended to use\ninstead of printf() for such things.\nheader(text,width,filler,fillercolor,outerpadding,paddingcolor,</p>\n<blockquote>\n<div><blockquote>\n<div><p>leftinnerpadding,leftinnercolor,rightinnerpadding,rightinnercolor)</p>\n</div></blockquote>\n<p>text - Text to center\nwidth - Width of the header, defaults to width()\nfiller - Character(s) to draw the line with. Default: =\nfillercolor - ansicode to color the line with\nouterpadding - Characters to frame the outer ends of the line with.\npaddingcolor - ansicode to color the outer characters with\nleftinnerpadding - characters to put at the left side of &lt;text&gt;\nleftinnercolor - ansicode to color the leftside characters with\nrightinnerpadding - characters to put at the right side of &lt;text&gt;\nrightinnercolor - ansicode to color the rightside characters with</p>\n</div></blockquote>\n<p>ALL of header()\u2019s parameters are optional. By default, header() simply draws\na 78-char wide line of =\u2019s. Simply leave parameters empty if you want to set\none of the latter parameters.</p>\n</li>\n</ul>\n<p>The whole DB is highly geared for a low-bitlevel setup.\nI am a strong believer in least-privileges-needed to do the job. Bittypes and\npowers are tools to do that job, not badges of friendship or trust that get\ntossed about.</p>\n<p>Here is my suggested list of powers and bittypes for staffers:</p>\n<dl class=\"simple\">\n<dt>Storytellers  - &#64;powered TEL_ANYWHERE, JOIN_PLAYER and GRAB_PLAYER on</dt><dd><p>Guildmaster level.</p>\n</dd>\n<dt>Builder-BCs   - Mortal, with &#64;quota and money for their job. There should be one</dt><dd><p>shared BC for each area of the game, like BC-Houston. Special\nRooms, items or exits that require privilegs to examine or &#64;tel\na player should belong to a BC-Houston-Powered that is &#64;powered\nEXAMINE_ALL, LONG_FINGERS And TEL_ANYTHING on Guildmaster level.\nIf the object actually needs to modify a player directly, have\nit use a restricted staff Global, or if you absolutely must,\nmake a BC-Houston-Admin and &#64;set it Architect. Do not give\nnormal builders access to it, only &#64;chown things to it and &#64;set\nthem inherit after review.\nBoth the -powered and -admin BCs can have random passwords and\nbe &#64;set NO_CONNECT.</p>\n</dd>\n<dt>Building Head - &#64;set Guildmaster, powered TEL_ANYWHERE, TEL_ANYTHING and</dt><dd><p>optionally CHOWN_OTHER on Guildmaster level. Mind that the\nlatter technically allows them to &#64;chown anything guildmaster-\nand lower-owned in the master and auxiliary rooms. However,\nit allows the Building Head to &#64;chown items between BCs- and\nto the BC-&lt;location&gt;-powered.</p>\n</dd>\n<dt>Enforcers     - As Storyteller above, plus being &#64;powered Security at</dt><dd><p>Guildmaster level, in order to handle problem players.\nOptionally always given to Storytellers.</p>\n</dd>\n</dl>\n<p>Coders        - &#64;set Architect.\nHead Coder    - Always trust your head coder.</p>\n<blockquote>\n<div><p>&#64;set Architect for the everyday bit. Give access to a\nmaintenance Councilor bit for special code projects. Finished\ncode along those lines should get &#64;chowned to the\nbc-admin-councilor.\nIf you as the MU* Head(s) don\u2019t know Softcode well, or want to\nleave anything Code to your Head Coder, also give them optional\naccess to a maintenance Royalty bit in order to properly code\nbanning/blacklisting +commands and other rare code that requires\nRoyalty powers. Again, chown finished code to bc-admin-royalty.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>MU* Head(s)   - You\u2019re the boss(es). But please use an Architect bit for your</dt><dd><p>everyday things. Keep Immortal to yourself. Keep #1 to yourself.\nAnd seriously avoid using either of them except for creating\na Royalty bit or doing intricate DB maintenance.</p>\n</dd>\n<dt>Site Admins   - They already have more powers than any in-game bit can ever</dt><dd><p>have ;)\nDepending on actual involvement with your game, their abilities\nin-game can range from merely being &#64;powered free_wall for\nnotifying players of downtimes and/or being &#64;powered shutdown in\norder to shut down the game for maintenance, up to being the\nonly person with actual access to #1.</p>\n</dd>\n</dl>\n<p>Handle necessary functionality for adminning through the admin-only globals and\nsoftcode.</p>\n<p>The setup I personally suggest is to have ALL staffers be AT MAX Architect-level\nfor everyday work and communication, with special coders that -really- require\nit having Councilor-characters available to log into for maintenance or special\ncode setup. Technically if everything is done right, the Coder(s) of the game do\nnot require higher privileges than Architect for the vast majority of things.\nRoyalty-level code should be a rare exception, if at all necessary. The MU*\nHead(s) or site-admin should be the only one having access to #1, Immortals or\nperhaps even Royalty. The BC\u2019s, Global Function objects and Function objects at\nlevel Royalty and higher have simply been provided as a if-necessary convenience.</p>\n<p>Current objects are only &#64;chowned to certain bitlevels if it is really required\nfor them to function. Whenever possible, they have been &#64;chowned to the mortal\nBC-Admin-Mortal. All custom global functions listed above are on the semi-\n-mortal Global Functions object. The Master Room and Auxiliary Room have been\n&#64;chowned to BC-Admin-Architect.</p>\n<p>The Comsystem and +bboard are owned by BC-Admin-Architect, which means that\nhigher bitlevels might not be able to use those systems if they hide and set\nthemselves DARK. This is intentional. The Architect bitlevel is enough to freely\nset attributes on players, so these systems did not need anything higher, and\nit prioritizes Councilor+ as mere mainenance-duty bitlevels. Even the MU* Head\nshould log on as an Architect for everyday things.</p>\n<p>The Comsystem and BBOARD have been modified to be configurable by Architect and\nhigher. Both systems have a CANUSE attribute with the according code on them.\nNote that if you want both systems to be only configurable by Councilor+, that\ninstead of &#64;chowning them to a Councilor after changing those attribute for\nCouncilor or higher, I suggest to simply &#64;set the bboard and comsystem core\nobjects NO_MODIFY instead, keeping them at Architect-power but making them\nunmodifyable by Architects.</p>\n<p>I highly recommend the use of the alternative &#64;quota system. BC-Admin-Mortal\nand BC-Admin-Guildmaster both have this &#64;quota system set up on themselves. Both\nof them have a high amount of money for everyday operations. You should not give\nthem free quota or money.</p>\n<p>I also recommend to setup most global functions with /Privileged even if they\nare mortal-powered, to make them work even when players are set NO_CODE and\nWANDERER by default.</p>\n<p>Enjoy!</p>\n<p>P.S. the \u2018bin/asksource.save0\u2019 file has been supplied for loading in the\n\u2018make config\u2019 or \u2018make confsource\u2019 step of Rhost installation. It provides the\nsettings I have used when creating this database. Some settings, like the ANSI\nsubstitution, are used in the DB.</p>\n<p><a class=\"reference external\" href=\"mailto:--Ambrosia&#37;&#52;&#48;RhostMUSH\">\u2013Ambrosia<span>&#64;</span>RhostMUSH</a></p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["helpfile", "RhostMUSH Internal Help Files", "N", "next"], ["41-minimaldb", "Minimal DB instructions", "P", "previous"]], "sourcename": "42-ambrosiadb.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Ambrosia\u2019s Minimal Rhost DB</a><ul>\n<li><a class=\"reference internal\" href=\"#version-1-0-5-2020-01-31\">Version: 1.0.5          2020-01-31</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "42-ambrosiadb", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12", "insegel_version": "1.1.0"}