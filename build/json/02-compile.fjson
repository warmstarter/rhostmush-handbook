{"parents": [], "prev": {"link": "../01-intro/", "title": "What RhostMUSH is about and what\u2019s so great about RhostMUSH."}, "next": {"link": "../03-dbconversion/", "title": "How to convert a database from another mush to RhostMUSH"}, "title": "What to type to Compile and Install RhostMUSH", "meta": null, "body": "<div class=\"section\" id=\"what-to-type-to-compile-and-install-rhostmush\">\n<h1>What to type to Compile and Install RhostMUSH<a class=\"headerlink\" href=\"#what-to-type-to-compile-and-install-rhostmush\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"note-about-compiling\">\n<h2>Note about Compiling<a class=\"headerlink\" href=\"#note-about-compiling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>To install, type:  make confsource</p>\n<p>If your binaries do not work or you get an error type:  ./bin/script_setup.sh\nThen type: make confsource</p>\n<p>If you are importing a MUX2 flatfile, make ABSOLUTELY SURE that you select\nmux passwords as a compatibility option, or you will NOT BE ABLE to log in\nto players as the password will not be recognizeable.</p>\n<p>Make sure to keep QDBM selected as it\u2019s a much more stable database engine\nthat does not have attribute limit restrictions like GDBM does.</p>\n<p>If you are converting from a Penn, TinyMUSH, or MUX database, make sure you\ndrill down into the LBUF section and select, at minimum, 8K lbufs.  You likely\nwant that anyway as it gives you far more room for attribute content storage.</p>\n<p>You can go up to 32K safely.  While 64k is safe and does work, there are issues\nwith networking and older routers that use a 32K TCP buffer size that can\nat times cut off the data as overflow resulting in output to the end-point\nplayers not receiving their data.  So it is strongly recommended not to go\nabove 32K in lbuffer size.</p>\n<p>Go ahead and select 64 char attributes.  It allows you to have 64 characters\nfor attribute names.  It\u2019s handy to have.</p>\n<p>If you wish at this point to set up mysql and/or sqlite, you  may do so.\nYes, you can use them in parallel without any issue.</p>\n</div>\n<div class=\"section\" id=\"note-about-recompiling\">\n<h2>Note about Recompiling<a class=\"headerlink\" href=\"#note-about-recompiling\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If you plan to use \u2018make confsource\u2019 to recompile your source, you should first\nissue a \u2018make clean\u2019 before re-issuing a \u2018make confsource\u2019.  \u2018make confsource\u2019\nremembers the last options you used.</p>\n<p>A failure to issue \u2018make clean\u2019 prior to re-compiling with \u2018make confsource\u2019 or\nre-compiling with \u2018make source\u2019 can potentially leave stale object files which\nmay cause unforseen issues when running code, including but not limited to\nrandom crashes.  Generally whenever recompiling it\u2019s good to always make clean\nfirst.</p>\n</div>\n<div class=\"section\" id=\"note-about-patching\">\n<h2>Note about Patching<a class=\"headerlink\" href=\"#note-about-patching\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>There\u2019s two ways you can look to patch the source.  If you plan to run the\nRhostMUSH source from a git repository, then please use the git repo to\nconstantly update your code.  If you knew enough to want to set up a git repo\nthen we expect knowledge on how to keep source trees updated in the git repo\nto be used the same as any other source distribution.</p>\n<p>If, however, you have no idea what a git repo even is, or have no inclination\nof using git to manage your RhostMUSH source, or just don\u2019t care one way\nor another, then you can use the included patch.sh routine (from under the\nServer directory) to patch your source at any time.</p>\n<p>From the server directory just type: ./patch.sh</p>\n<p>That will auto-compile your source, auto make all your header files and\nessentially keep everything up to date to the latest source.\nOnce that\u2019s done, all you do from within the game is two commands:</p>\n<ol class=\"arabic simple\">\n<li><p>&#64;reboot (or &#64;reboot/silent)  \u2013 This will load in the new binary</p></li>\n<li><p>&#64;readcache  \u2013 This will read in all the .txt file changes</p></li>\n</ol>\n<p>Happy Rhosting.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["03-dbconversion", "How to convert a database from another mush to RhostMUSH", "N", "next"], ["01-intro", "What RhostMUSH is about and what\u2019s so great about RhostMUSH.", "P", "previous"]], "sourcename": "02-compile.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">What to type to Compile and Install RhostMUSH</a><ul>\n<li><a class=\"reference internal\" href=\"#note-about-compiling\">Note about Compiling</a></li>\n<li><a class=\"reference internal\" href=\"#note-about-recompiling\">Note about Recompiling</a></li>\n<li><a class=\"reference internal\" href=\"#note-about-patching\">Note about Patching</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "02-compile", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12", "insegel_version": "1.1.0"}