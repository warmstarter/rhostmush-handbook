# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, wstarter
# This file is distributed under the same license as the RhostMUSH Handbook package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RhostMUSH Handbook 0.01a\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-13 10:13-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/installation.rst:3
msgid "Installation"
msgstr ""

#: ../../source/installation.rst:6
msgid "Compiling the code"
msgstr ""

#: ../../source/installation.rst:8
msgid "make confsource"
msgstr ""

#: ../../source/installation.rst:10
msgid "Yes, that's all you have to do."
msgstr ""

#: ../../source/installation.rst:12
msgid "You may also issue 'make source' if the Makefile is already defined how you want it to be.  Please remember to 'make clean' before 'make source' whenever you alter the code or import new source code."
msgstr ""

#: ../../source/installation.rst:17
msgid "Note about Compiling"
msgstr ""

#: ../../source/installation.rst:19
msgid "To install, type:  make confsource"
msgstr ""

#: ../../source/installation.rst:21
msgid "If your binaries do not work or you get an error type:  ./bin/script_setup.sh Then type: make confsource"
msgstr ""

#: ../../source/installation.rst:24
msgid "If you are importing a MUX2 flatfile, make ABSOLUTELY SURE that you select mux passwords as a compatibility option, or you will NOT BE ABLE to log in to players as the password will not be recognizeable."
msgstr ""

#: ../../source/installation.rst:28
msgid "Make sure to keep QDBM selected as it's a much more stable database engine that does not have attribute limit restrictions like GDBM does."
msgstr ""

#: ../../source/installation.rst:31
msgid "If you are converting from a Penn, TinyMUSH, or MUX database, make sure you drill down into the LBUF section and select, at minimum, 8K lbufs.  You likely want that anyway as it gives you far more room for attribute content storage."
msgstr ""

#: ../../source/installation.rst:35
msgid "You can go up to 32K safely.  While 64k is safe and does work, there are issues with networking and older routers that use a 32K TCP buffer size that can at times cut off the data as overflow resulting in output to the end-point players not receiving their data.  So it is strongly recommended not to go above 32K in lbuffer size."
msgstr ""

#: ../../source/installation.rst:41
msgid "Go ahead and select 64 char attributes.  It allows you to have 64 characters for attribute names.  It's handy to have."
msgstr ""

#: ../../source/installation.rst:44
msgid "If you wish at this point to set up mysql and/or sqlite, you  may do so. Yes, you can use them in parallel without any issue."
msgstr ""

#: ../../source/installation.rst:48
msgid "Note about Recompiling"
msgstr ""

#: ../../source/installation.rst:50
msgid "If you plan to use 'make confsource' to recompile your source, you should first issue a 'make clean' before re-issuing a 'make confsource'.  'make confsource' remembers the last options you used."
msgstr ""

#: ../../source/installation.rst:54
msgid "A failure to issue 'make clean' prior to re-compiling with 'make confsource' or re-compiling with 'make source' can potentially leave stale object files which may cause unforseen issues when running code, including but not limited to random crashes.  Generally whenever recompiling it's good to always make clean first."
msgstr ""

#: ../../source/installation.rst:61
msgid "Note about Patching"
msgstr ""

#: ../../source/installation.rst:63
msgid "There's two ways you can look to patch the source.  If you plan to run the RhostMUSH source from a git repository, then please use the git repo to constantly update your code.  If you knew enough to want to set up a git repo then we expect knowledge on how to keep source trees updated in the git repo to be used the same as any other source distribution."
msgstr ""

#: ../../source/installation.rst:69
msgid "If, however, you have no idea what a git repo even is, or have no inclination of using git to manage your RhostMUSH source, or just don't care one way or another, then you can use the included patch.sh routine (from under the Server directory) to patch your source at any time."
msgstr ""

#: ../../source/installation.rst:74
msgid "From the server directory just type: ./patch.sh"
msgstr ""

#: ../../source/installation.rst:76
msgid "That will auto-compile your source, auto make all your header files and essentially keep everything up to date to the latest source. Once that's done, all you do from within the game is two commands:"
msgstr ""

#: ../../source/installation.rst:80
msgid "@reboot (or @reboot/silent)  -- This will load in the new binary"
msgstr ""

#: ../../source/installation.rst:81
msgid "@readcache  -- This will read in all the .txt file changes"
msgstr ""

#: ../../source/installation.rst:84
msgid "Configuring the game"
msgstr ""

#: ../../source/installation.rst:86
msgid "When setting up a mush for the first time, make sure you have all the files configured correctly.  This is with using the following file for configuration::"
msgstr ""

#: ../../source/installation.rst:93
msgid "Starting the game"
msgstr ""

#: ../../source/installation.rst:95
msgid "Once done, you start up the system with the following command::"
msgstr ""

#: ../../source/installation.rst:107
msgid "First login to the game"
msgstr ""

#: ../../source/installation.rst:109
msgid "Once started, log in the #1 character (Wizard) with it's appropiate password (no, not 'potrzebie', but 'Nyctasia').  There were private reasons for the password change."
msgstr ""

#: ../../source/installation.rst:113
msgid "Once in, do a @shutdown to save the database.  Then you can run Startup normally.   You may make a backup of your database at anytime on-line by utilizing the @dump/flat option.  A script comes with this distribution that allows the ability of auto-archiving your database for a configurable number of backups."
msgstr ""

#: ../../source/installation.rst:120
msgid "Reporting bugs or getting help"
msgstr ""

#: ../../source/installation.rst:122
msgid "If you find any bugs or problems, notify one of the developers of RhostMUSH and a patch or workaround will be made available as soon as possible.  Current developers are:  Seawolf, Thorin, Ashen-Shugar, Lensman, Kale, Mac, Zenty, Ambrosia, Amos, and Morgan.  They can be found around the net."
msgstr ""

#: ../../source/installation.rst:128
msgid "Installing using an ansible playbook"
msgstr ""

#: ../../source/installation.rst:130
msgid "To begin, you will run the following command in a directory that will house your game::"
msgstr ""

#: ../../source/installation.rst:134
msgid "You may also just run the yml file and ansible (ansible-playbook) to install your RhostMUSH engine::"
msgstr ""

#: ../../source/installation.rst:139
msgid "This downloads the latest stable version of the code, bringing with it all patches and scripts, documentation and support tools that you will need."
msgstr ""

#: ../../source/installation.rst:142
msgid "Quickinstall guide to RhostMUSH"
msgstr ""

#: ../../source/installation.rst:145
msgid "Compiling RhostMUSH"
msgstr ""

#: ../../source/installation.rst:147
msgid "Once ready to compile type::"
msgstr ""

#: ../../source/installation.rst:151
msgid "This will bring up a menu where you can selection options."
msgstr ""

#: ../../source/installation.rst:154
msgid "Important before you actually start building"
msgstr ""

#: ../../source/installation.rst:156
msgid "The main parts of making your RhostMUSH, easy pleasy: #.  The stunnel directory contains TLS/SSL connectivity.  This has to be linked to another port and will tunnel to the mush port.  The README file explains how to set up and configure your TLS/SSL connection. #.  ./patch.sh -- This makes sure you have the latest code.  If you got this by git clone https://github.com/RhostMUSH/trunk then you can ignore patching.  You can use ./patch.sh at any time to update your code.  It ignores local.c incase you make your own modules. #.  make confsource.  Yup, it's menu driven, nifty eh?"
msgstr ""

#: ../../source/installation.rst:161
msgid "Options you may want to select (other than the defaults):"
msgstr ""

#: ../../source/installation.rst:162
msgid "5  (%c is selected by default, but choose %x as well for MUX/TM3 compat)"
msgstr ""

#: ../../source/installation.rst:163
msgid "9  (if you want $commands to require the COMMAND flag)"
msgstr ""

#: ../../source/installation.rst:164
msgid "16 (if you want a wider WHO listing like older versions of MUX)"
msgstr ""

#: ../../source/installation.rst:165
msgid "22 (if you're converting a TinyMUSH3 or TinyMUX/MUX2 flatfile)"
msgstr ""

#: ../../source/installation.rst:166
msgid "24 (if you have issues with -lssl not being found)"
msgstr ""

#: ../../source/installation.rst:167
msgid "B3 (for 64 character attribute names)"
msgstr ""

#: ../../source/installation.rst:168
msgid "B6 (select 8K for Penn/MUX2/TM3 default, up to 32K.  64K is network intensive)"
msgstr ""

#: ../../source/installation.rst:169
msgid "B5 (will be autoselected if you choose 8K or more.  Pick this anyway)"
msgstr ""

#: ../../source/installation.rst:170
msgid "B4 (if you have sqlite libraries and wish to use this)"
msgstr ""

#: ../../source/installation.rst:172
msgid "'r' to compile with the settings you selected."
msgstr ""

#: ../../source/installation.rst:173
msgid "Modify your netrhost.conf file as specified.  Make sure to align your port and debug_id as shown in the netrhost.conf file."
msgstr ""

#: ../../source/installation.rst:174
msgid "If you wish to port in an old flatfile, please refer to the readme directory on how to port your flatfile in (README.DBLOADING)."
msgstr ""

#: ../../source/installation.rst:177
msgid "Using the prebuilt flatfile"
msgstr ""

#: ../../source/installation.rst:179
msgid "There are pre-loaded flatfile databases you can use at this point.  The netrhost.db.flat and corrisponding netrhost.conf file will be located in the minimal-DBs/minimal_db directory."
msgstr ""

#: ../../source/installation.rst:182
msgid "You may auto-load the minimal db and corresponding netrhost.conf file with the command::"
msgstr ""

#: ../../source/installation.rst:186
msgid "This is ran from within the 'game' directory.  Once this is ran, you will need to customize the netrhost.conf file for your purposes.  The port and debug_id must be changed at the very least.  Keep the debug_id coordinated to the port as described."
msgstr ""

#: ../../source/installation.rst:191
msgid "To load a prebuilt flatfile"
msgstr ""

#: ../../source/installation.rst:193
msgid "To use these follow these steps: 1.  Make a backup of your existing netrhost.conf file::"
msgstr ""

#: ../../source/installation.rst:198
msgid "Copy the netrhost.conf file into your game directory::"
msgstr ""

#: ../../source/installation.rst:202
msgid "At this point you can modify your netrhost.conf file settings in your game directory. Using an editor modify the 'port' and 'debug_id' respectively in your netrhost.conf as state. The 'port' will be the port the mush listens on, the debug_id is for the debug-stack and is your port with a '5' at the end.  So if your port is 4444, the debug_id is 44445"
msgstr ""

#: ../../source/installation.rst:206
msgid "Load in the flatfile into the mush (You could do this in the Startmush as well) Manually::"
msgstr ""

#: ../../source/installation.rst:211
msgid "./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new dwF"
msgstr ""

#: ../../source/installation.rst:213
#: ../../source/installation.rst:234
msgid "Start your mush::"
msgstr ""

#: ../../source/installation.rst:217
msgid "This will load the db that you loaded."
msgstr ""

#: ../../source/installation.rst:219
msgid "---------------OR-------"
msgstr ""

#: ../../source/installation.rst:221
msgid "From Startmush::"
msgstr ""

#: ../../source/installation.rst:225
msgid "when prompted, hit <RETURN> for searching then select the number of the netrhost.db.flat that is listed as ~/minimal-DBs/minimal_db/netrhost.db.flat"
msgstr ""

#: ../../source/installation.rst:228
msgid "Starting from scratch with a brand new database"
msgstr ""

#: ../../source/installation.rst:230
msgid "You can modify your netrhost.conf file settings in your game directory. Using an editor modify the 'port' and 'debug_id' respectively in your netrhost.conf as stated. The 'port' will be the port the mush listens on, the debug_id is for the debug-stack and is your port with a '5' at the end.  So if your port is 4444, the debug_id is 44445"
msgstr ""

#: ../../source/installation.rst:238
msgid "You can use the 'vi' editor or 'nano' if you like a more menu driven DOS like experience. You can of course use any other editor you're familar with."
msgstr ""

#: ../../source/installation.rst:241
msgid "For a more thorough understanding of how to set things up, keep reading!"
msgstr ""

#: ../../source/installation.rst:243
msgid "If you have syntax issues running 'make config', 'make confsource' or 'make bugreport' please run the script: ./bin/script_setup.sh"
msgstr ""

#: ../../source/installation.rst:246
msgid "Now... things you may need to do on errors."
msgstr ""

#: ../../source/installation.rst:250
msgid "Instructions for starting a new RhostMUSH"
msgstr ""

#: ../../source/installation.rst:253
msgid "Setup directory permissions"
msgstr ""

#: ../../source/installation.rst:255
msgid "run ./dirsetup.sh"
msgstr ""

#: ../../source/installation.rst:257
msgid "This is a simple script that will change file permissions and directory permissions to properly protect RhostMUSH. These settings generally work fine out of the box so you likely won't even have to set this up if you don't want to."
msgstr ""

#: ../../source/installation.rst:264
msgid "Compile the source code"
msgstr ""

#: ../../source/installation.rst:266
msgid "Make and run the RhostMUSH source::"
msgstr ""

#: ../../source/installation.rst:270
msgid "If you get an error running the script itself::"
msgstr ""

#: ../../source/installation.rst:280
msgid "Manual configuration of source code"
msgstr ""

#: ../../source/installation.rst:282
msgid "To do manual configuration (skip if the previous step worked for you) And yes, this is a bit of a pain in the bottom, hopefully you will not need this."
msgstr ""

#: ../../source/installation.rst:284
msgid "You need the following definitions defined to make this work:"
msgstr ""

#: ../../source/installation.rst:286
msgid "TINY_U, USE_SIDEEFFECTS, MUX_INCDEC, ATTR_HACK"
msgstr ""

#: ../../source/installation.rst:287
msgid "(u()/u2() switched)"
msgstr ""

#: ../../source/installation.rst:288
msgid "(sideeffects)"
msgstr ""

#: ../../source/installation.rst:289
msgid "(inc()/xinc() switched)"
msgstr ""

#: ../../source/installation.rst:290
msgid "(support for _/~ attribs)"
msgstr ""

#: ../../source/installation.rst:292
msgid "You only need to do this if you received the RhostMUSH src.  If you received a binary, continue on to the next part."
msgstr ""

#: ../../source/installation.rst:294
msgid "To compile the code, just type 'make confsource'.  It will prompt you with settings on what you need to do.  If you just want to quickly hand edit the Makefile, it is in the directory src (full path src/Makefile).  Then you may just run 'make source', if you so choose to hand-edit the Makefile."
msgstr ""

#: ../../source/installation.rst:296
msgid "After the compile process is done, type 'make links'!"
msgstr ""

#: ../../source/installation.rst:300
msgid "Loading a database for your MUSH"
msgstr ""

#: ../../source/installation.rst:302
msgid "You now have a choice of optionally starting at a provided database or starting from scratch."
msgstr ""

#: ../../source/installation.rst:305
msgid "Option: Only perform these steps if using a provided database"
msgstr ""

#: ../../source/installation.rst:313
msgid "Copy an existing flatfile and corresponding netrhost.conf file"
msgstr ""

#: ../../source/installation.rst:308
msgid "Default provied example::"
msgstr ""

#: ../../source/installation.rst:316
msgid "Configure the netrhost.conf file for your MUSH"
msgstr ""

#: ../../source/installation.rst:318
msgid "Go into the game directory and modify the netrhost.conf file The next step is configuring the mush to your config standards. There is a file in the game subdirectory called 'netrhost.conf'. You hand-edit this file and just follow what it says each one does.  It's very well documented and should give you great details on what to edit.  For most things, you can feel comfortable to stick with the defaults unless you wish to change them.  The port and debug_id need to be changed."
msgstr ""

#: ../../source/installation.rst:328
msgid "Start the MUSH and login"
msgstr ""

#: ../../source/installation.rst:330
msgid "From the game diretory issue::"
msgstr ""

#: ../../source/installation.rst:334
msgid "To login::"
msgstr ""

#: ../../source/installation.rst:340
msgid "Option: Things to do once you have connected if you did NOT use a provided database"
msgstr ""

#: ../../source/installation.rst:342
msgid "@dig your master room and in your netrhost.conf file define master_room to this dbref (without the #.  So like master_room 2)"
msgstr ""

#: ../../source/installation.rst:343
msgid "Create an immortal holder charater (@pcreate then @set immortal) Feel free to set up holder characters for all the bittypes which are: GUILDMASTER, ARCHITECT, COUNCILOR, WIZARD, IMMORTAL"
msgstr ""

#: ../../source/installation.rst:344
msgid "@chown/preserve the master room and #0 to the immortal holder character."
msgstr ""

#: ../../source/installation.rst:345
msgid "Log into the immortal character"
msgstr ""

#: ../../source/installation.rst:346
msgid "@pcreate all your guest characters and set them up properly.  My suggestion::"
msgstr ""

#: ../../source/installation.rst:352
msgid "Any master room code you load in from your immholder character (or @chown/preserve to it) The readme directory has softfunctions.minmax that has MUX/Penn compatability functions and comsys.  All other softcode (like mail wrappers) can be found on https://github.com/RhostMUSH/trunk in Mushcode."
msgstr ""

#: ../../source/installation.rst:355
msgid "Setup new character, staff, and take tasks that can only be accomplished by #1"
msgstr ""

#: ../../source/installation.rst:357
msgid "Set up any other characters you want.  Anyone immortal can issue @function, @admin, or anything #1 can do."
msgstr ""

#: ../../source/installation.rst:360
msgid "Setup daily backups for your game"
msgstr ""

#: ../../source/installation.rst:362
msgid "Make SURE YOU RUN DAILY Backups.  Rhost is very stable, but things outside the mush can damage the game. paranoia is fine, especially when they really are out to get you.  TO make the backups, do the following::"
msgstr ""

#: ../../source/installation.rst:369
msgid "The backup_flat.sh script (that launches automatically with Startmush) will archive all the above files if they exist.  It moves these flatfiles into the 'prevflat' directory, then tarballs those and dumps consecutive backups in the 'oldflat' directory.  By default it keeps 7 consecutive backups.  You may alter this in the backup_flat.sh script itself."
msgstr ""

#: ../../source/installation.rst:372
msgid "Customtize the textfiles for your game"
msgstr ""

#: ../../source/installation.rst:374
msgid "All connect.txt and customized files can be found in the ~/Server/game/txt directory.  There is a README file there that explains their purposes in more detail.  You can see more information on all files and how they inter-relate with 'wizhelp file'."
msgstr ""

#: ../../source/installation.rst:379
msgid "Make sure to read up further"
msgstr ""

#: ../../source/installation.rst:381
msgid "The wiz bits can be confusing, so 'wizhelp control' is very helpful to give a high overview of what each bit does and their inter-relationship is."
msgstr ""

#: ../../source/installation.rst:385
msgid "What to type to configure and get your RhostMUSH up and running"
msgstr ""

#: ../../source/installation.rst:387
msgid "You may configure Rhost three ways."
msgstr ""

#: ../../source/installation.rst:390
msgid "Creating a new game with a blank database"
msgstr ""

#: ../../source/installation.rst:392
msgid "Modify your ./game/netrhost.conf file or what settings you want. Don't feel overwhelmed, it's all very well documented."
msgstr ""

#: ../../source/installation.rst:396
msgid "Creating a new game with Ambrosia's default database"
msgstr ""

#: ../../source/installation.rst:398
msgid "Follow minimal-DBs/Amb-MinimalRhost/IMPORTANT_README"
msgstr ""

#: ../../source/installation.rst:400
msgid "The netrhost.conf file you will copy is in minimal-DBs/Amb-MinimalRhost/game Copy this netrhost.conf file into your 'game' directory."
msgstr ""

#: ../../source/installation.rst:403
msgid "You will want the custom txt files under Amb-MinimalRhost/txt in your game/txt directory and to mkindx all the txt files.  You can run ./Startmush -i to index."
msgstr ""

#: ../../source/installation.rst:405
msgid "When ./Startmush prompts you to load a flatfile, say 'yes' and hit <RETURN> to have it search for flatfiles, then select netrhost.db.flat from under the minimal-DBs/Amb-MinimalRhost directory."
msgstr ""

#: ../../source/installation.rst:407
msgid "The main steps to make sure you do for ~/Server/minimal-DBs/Amb-MinimalRhost/netrhost.db.flat -- Ambrosia's secure and featured minimal db"
msgstr ""

#: ../../source/installation.rst:409
msgid "Use the matching netrhost.conf file under the Amb-MinimalRhost/game directory"
msgstr ""

#: ../../source/installation.rst:410
msgid "Load in the settings specified in the Amb-MinimalRhost/bin directory."
msgstr ""

#: ../../source/installation.rst:412
msgid "Copy this file into your ~/Server/bin directory"
msgstr ""

#: ../../source/installation.rst:413
msgid "From 'Server' directory type: make clean"
msgstr ""

#: ../../source/installation.rst:414
msgid "From 'Server' directory type: make confsource and 'l'oad option 0"
msgstr ""

#: ../../source/installation.rst:415
msgid "Specify any -additional- options you want at this point."
msgstr ""

#: ../../source/installation.rst:416
msgid "Recompile your code"
msgstr ""

#: ../../source/installation.rst:417
msgid "Copy the files in Amb-MinimalRhost/game/txt into your ~/Server/game/txt directory"
msgstr ""

#: ../../source/installation.rst:418
msgid "from your ~/Server/game txt file run on each of the txt files::"
msgstr ""

#: ../../source/installation.rst:423
msgid "If running, @reboot your game."
msgstr ""

#: ../../source/installation.rst:426
msgid "Creating a new game with the generic default database"
msgstr ""

#: ../../source/installation.rst:428
msgid "Copy the netrhost.conf from minimal-DBs/minimal_db to your game directory."
msgstr ""

#: ../../source/installation.rst:430
msgid "When ./Startmush prompts you to load a flatfile, say 'yes' and hit <RETURN> to have it search for flatfiles, then select netrhost.db.flat from under the minimal-DBs/minimal_db directory."
msgstr ""

#: ../../source/installation.rst:435
msgid "Starting your MUSH"
msgstr ""

#: ../../source/installation.rst:437
msgid "Once you have used one of these three methods to obtaina database, you can start your mush up. At this point type from the game directory::"
msgstr ""

#: ../../source/installation.rst:443
msgid "Backups for RhostMUSH"
msgstr ""

#: ../../source/installation.rst:445
msgid "Backups are already handled and integrated with a script 'backup_flat.sh'. If you wish to customize this, feel free.  Again, it is well documented and just require changing settings at the top of this script."
msgstr ""

#: ../../source/installation.rst:449
msgid "By default, it does 7 contiguous backups.  You may increase or decrease this value to any value you want."
msgstr ""

#: ../../source/installation.rst:452
msgid "It will, by default, backup all your txt/*.txt files, your netrhost.conf file, your netrhost.db.flat (mush db) file, your RhostMUSH.dump.* (mail db) files, your RhostMUSH.news.* (internal news/bbs db -- if used), your RhostMUSH.areg.* (the autoregistration db -- if used), and any sqlite database you currently may be using which are OPTIONALLY backed up if you remove the '#' from before it."
msgstr ""

#: ../../source/installation.rst:459
msgid "The backup script also will optionally rcp/scp, ftp, or mail any backups you want to a remote destination.  Be forewarned, the backup files can potentially get rather large for larger games, even compressed.  The average size for these files will be 1-5MB.  It could potentially get over 10-20MB in size for excessively large games, so plan accordingly."
msgstr ""

#: ../../source/installation.rst:465
msgid "Be aware that the backup system will NOT make successful backups if you run out of disk space.  This includes actually running out of disk space or running out of disk quota.  There is a mechanism inside the backup script to specify an email address that you wish to get alerts from in these instances.  I recommend using it."
msgstr ""

#: ../../source/installation.rst:471
msgid "If you make changes to your backup_flat.sh script with an already active and running mush and wish to just restart the backup procedure just issue: ./backup_restart.sh"
msgstr ""

#: ../../source/installation.rst:476
msgid "Troubleshooting issues with starting up"
msgstr ""

#: ../../source/installation.rst:479
msgid "Problem: If it says the shared ID is already in use"
msgstr ""

#: ../../source/installation.rst:481
msgid "A1: please verify that it is the right shared debug_id in your netrhost.conf file"
msgstr ""

#: ../../source/installation.rst:483
msgid "A2: Force a start by ./Startmush -f"
msgstr ""

#: ../../source/installation.rst:486
msgid "Problem: Your log file is massive and your mush is running"
msgstr ""

#: ../../source/installation.rst:488
msgid "A1: To rotate this use the @logrotate command. See wizhelp on @logrotate"
msgstr ""

#: ../../source/installation.rst:491
msgid "Problem: The database flatfile you're loading can't load because a db is already defined"
msgstr ""

#: ../../source/installation.rst:493
msgid "A1: remove netrhost.db* and netrhost.gdbm* from your data directory"
msgstr ""

#: ../../source/installation.rst:496
msgid "Problem: The mail database won't load and mail shows 'offline'"
msgstr ""

#: ../../source/installation.rst:498
msgid "A1: wmail/load"
msgstr ""

#: ../../source/installation.rst:501
msgid "Windows"
msgstr ""

#: ../../source/installation.rst:504
msgid "Installing on Windows 10 with BASH"
msgstr ""

#: ../../source/installation.rst:506
msgid "Rhost can be compiled and run under the new Bash on Ubuntu on Windows. This has been tested with the Preview build 14342."
msgstr ""

#: ../../source/installation.rst:509
msgid "1. After installing Bash you will need to install the following packages: git make gcc openssl (optional) libpcre3 (optional) libpcre3-dev (optional)"
msgstr ""

#: ../../source/installation.rst:517
msgid "2. When configuring rhost (using confsource) select the Disable Debugmon option."
msgstr ""

#: ../../source/installation.rst:520
msgid "When you issue Startmush, you must pass the -cyg option."
msgstr ""

#: ../../source/installation.rst:523
msgid "Installing on Windows with Cygwin"
msgstr ""

#: ../../source/installation.rst:525
msgid "Rhost does work under windows using the cygwin package."
msgstr ""

#: ../../source/installation.rst:527
msgid "1.  When you do install cygwin, the following packages must be added: make git gcc crypt openssl (optional) gdbm bash"
msgstr ""

#: ../../source/installation.rst:536
msgid "The src/Makefile has to manually have the CYGWIN line uncommented."
msgstr ""

#: ../../source/installation.rst:538
msgid "When you issue Startmush, you must pass it the -cyg option."
msgstr ""
