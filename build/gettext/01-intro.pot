# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, wstarter
# This file is distributed under the same license as the RhostMUSH Handbook package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RhostMUSH Handbook \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-04 10:55-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/01-intro.rst:3
msgid "What RhostMUSH is about and what's so great about RhostMUSH."
msgstr ""

#: ../../source/01-intro.rst:5
msgid "RhostMUSH was founded in 1989, originally by Natasha Davis (Nyctasia) and as a branch from the original release of TinyMUD code.  It was her desire to make a game that was flexible, with multiple levels of progression and highly customizeable.  She lost time and interest and passed the game to Steve Shivers (Seawolf), Mike McDermott (Thorin), and Jace Hoppel (Ashen-Shugar)"
msgstr ""

#: ../../source/01-intro.rst:11
msgid "Through their work, the stability improved, we fixed it to be multi-platform and as bug free as we could possibly make it.  We introduced several methods both in game and in source that allowed consistent memory bounds checking and various alerts for any mischievous naughtyness in-game or possibilities of any hacks, patches, or alterations in the code causing leaks or issues."
msgstr ""

#: ../../source/01-intro.rst:17
msgid "While not perfect, it has allowed us to have an absolutely outstanding turn around for any bugs sent our way, which anyone who uses RhostMUSH will attest to."
msgstr ""

#: ../../source/01-intro.rst:21
msgid "Over the years, others have joined the RhostMUSH team, including Ambrosia (who is the current dev lead), Lensman, Kage (who kindly provided the UTF8/unicode port), Jeff/Loki, Rook, Noltar, and Odin."
msgstr ""

#: ../../source/01-intro.rst:25
msgid "We also have had hundreds of people who have offered (and provided) help, patches, suggestions, bug fixes, and alternations all on their own and every single one will have had their name mentioned in the RHOST.CHANGES file in the readme directory.  It's far too large to have in the online help files."
msgstr ""

#: ../../source/01-intro.rst:31
msgid "RhostMUSH today provides an amazing tool that allows nearly entire customization in-game of every single feature available in Rhost without having the requirement to modify the hardcode.  This includes but is not limited to:"
msgstr ""

#: ../../source/01-intro.rst:37
msgid "Recycle bin"
msgstr ""

#: ../../source/01-intro.rst:39
msgid "Yup, you guessed it.  RhostMUSH has a windows like recycle bin. This means the objects you @nuke and @destroy become 'destroyed' but not recycled until they are @purged.  If you use the Myrddin CRON in the Mushcode directory, it by default sets up a job to purge anything over 30 days old, which should be more than sufficient for any needs.  The goodness of this?  You can recover nuked things from any period of time, as long as they were not @purged first. Commands: @purge, @nuke, @destroy, @recover, @reclist"
msgstr ""

#: ../../source/01-intro.rst:50
msgid "@snapshot"
msgstr ""

#: ../../source/01-intro.rst:52
msgid "Live image snapshots to unload or load to and from disk.  As many snapshots as you want, as often as you want. It essentially does a flatfile dump of a dbref#.  Great for backups or cross-Rhost portability. Command: @snapshot"
msgstr ""

#: ../../source/01-intro.rst:59
msgid "Wizard and Immortals by default"
msgstr ""

#: ../../source/01-intro.rst:61
msgid "are spoofable.  Meaning all their @pemits by default will not trigger NOSPOOF.  If you do not wish this, set the SPOOF flag this applies to anyone below their level."
msgstr ""

#: ../../source/01-intro.rst:64
msgid "override all locks.  There's two flags to disable this. NO_OVERRIDE to stop overriding all locks (including attribs) and NO_USELOCK to just stop overriding uselocks. This applies to anything their level and lower."
msgstr ""

#: ../../source/01-intro.rst:68
msgid "optionally cloak from all non-immortals/God player. This can be highly abused if not careful and there is a @depower to disable cloaking and/or dark that will disable this."
msgstr ""

#: ../../source/01-intro.rst:72
msgid "immortals can optionally supercloak from even wizards. this can not be disabled, and you must consider that immortals should be treated as the God player (#1) since they are effectively #1 in nearly every way."
msgstr ""

#: ../../source/01-intro.rst:78
msgid "Titles and Captions to a player's name"
msgstr ""

#: ../../source/01-intro.rst:80
msgid "@caption and @titlecaption"
msgstr ""

#: ../../source/01-intro.rst:83
msgid "Have an alternate name with locks for NPC obfuscation"
msgstr ""

#: ../../source/01-intro.rst:85
msgid "@altname @lock/altname"
msgstr ""

#: ../../source/01-intro.rst:89
msgid "Have multiple player aliases"
msgstr ""

#: ../../source/01-intro.rst:91
msgid "As well as a method to reserve player names per player w/o revealing who has what name. @protect"
msgstr ""

#: ../../source/01-intro.rst:97
msgid "Actively control how dark works both game-wide and individually"
msgstr ""

#: ../../source/01-intro.rst:99
msgid "@depower dark @admin allow_whodark, sweep_dark, command_dark, lcon_checks_dark,"
msgstr ""

#: ../../source/01-intro.rst:101
msgid "secure_dark, see_owned_dark, idle_wiz_dark, player_dark"
msgstr ""

#: ../../source/01-intro.rst:102
msgid "@toggle snuffdark @flagdef to redefine who and what can set the DARK flag"
msgstr ""

#: ../../source/01-intro.rst:106
msgid "Make config file changes in-game without having to reboot or have shell access"
msgstr ""

#: ../../source/01-intro.rst:108
msgid "@admin admin_object"
msgstr ""

#: ../../source/01-intro.rst:111
msgid "Execute any binary or script as a localized function"
msgstr ""

#: ../../source/01-intro.rst:113
msgid "EXECSCRIPT (power), SIDEFX (flag)"
msgstr ""

#: ../../source/01-intro.rst:116
msgid "Customized percent substitutions (like %n, %#, etc)"
msgstr ""

#: ../../source/01-intro.rst:118
msgid "@admin sub_include, @hook"
msgstr ""

#: ../../source/01-intro.rst:121
msgid "Redefine percent substitutions (like %n, %#, etc)"
msgstr ""

#: ../../source/01-intro.rst:123
msgid "@admin sub_override, @hook"
msgstr ""

#: ../../source/01-intro.rst:126
msgid "Localize command and function overrides in a sandbox"
msgstr ""

#: ../../source/01-intro.rst:127
msgid "@icmd, @lfunction, subeval(), sandbox()"
msgstr ""

#: ../../source/01-intro.rst:130
msgid "Multiple Zones"
msgstr ""

#: ../../source/01-intro.rst:132
msgid "Have multiple zones which can optionally belong to multiple targets (multiple zones per target allowable!) @zone, zones, lzone(), zonecmd()"
msgstr ""

#: ../../source/01-intro.rst:137
msgid "Optionally control, enable, or disable sideeffects"
msgstr ""

#: ../../source/01-intro.rst:139
msgid "@admin sideeffects, SIDEFX (flag)"
msgstr ""

#: ../../source/01-intro.rst:142
msgid "Have 31 cross-interactive realities for locations"
msgstr ""

#: ../../source/01-intro.rst:144
msgid "This works as a truly independant and self-contained environment. A room can have 31 'layers', each 'layer' is a reality in the same physical space.  These layers can work independently or allow interaction with other layers for vast customization. This affects all methods within the game including all matching, looking, $commands, listens, movement, interaction, pretty much every single aspect of mushing. REALITY LEVELS"
msgstr ""

#: ../../source/01-intro.rst:154
msgid "Override any command with softcode"
msgstr ""

#: ../../source/01-intro.rst:156
msgid "@admin access (check ignore) Master room $commands to then override the hardcode"
msgstr ""

#: ../../source/01-intro.rst:160
msgid "The abilility to raise or lower permissions on the various"
msgstr ""

#: ../../source/01-intro.rst:162
msgid "staff bitlevels for each player. @power, @depower, TOGGLES, FLAGS"
msgstr ""

#: ../../source/01-intro.rst:166
msgid "Customize new commands on the connect screen"
msgstr ""

#: ../../source/01-intro.rst:168
msgid "@admin file_object2"
msgstr ""

#: ../../source/01-intro.rst:171
msgid "Softcode any txt file (like connect.txt)"
msgstr ""

#: ../../source/01-intro.rst:173
msgid "and have it evaluate in-game.  It evaluates as the object it is on. @admin file_object"
msgstr ""

#: ../../source/01-intro.rst:178
msgid "Advanced tracing methods for debugging your code including labels!"
msgstr ""

#: ../../source/01-intro.rst:180
msgid "Commands: @label Functions: parenmatch(), trace() Toggles: CPUTIME Flags: TRACE Attributes: TRACE_GREP, TRACE, TRACE_COLOR, TRACE_COLOR_<attr> Substitutions: %_"
msgstr ""

#: ../../source/01-intro.rst:188
msgid "Built in pretty-printing of attributes with the parenmatch() function"
msgstr ""

#: ../../source/01-intro.rst:190
msgid "Example Code Output : @emit [add(1,sub(2,div(3,4)),5)];@emit [extract(get(me/foo),3,1)"
msgstr ""

#: ../../source/01-intro.rst:193
msgid "Example Pretty Print: @emit ["
msgstr ""

#: ../../source/01-intro.rst:199
msgid "add("
msgstr ""

#: ../../source/01-intro.rst:198
msgid "1,sub("
msgstr ""

#: ../../source/01-intro.rst:197
msgid "2,div("
msgstr ""

#: ../../source/01-intro.rst:198
msgid "3,4"
msgstr ""

#: ../../source/01-intro.rst:199
#: ../../source/01-intro.rst:201
#: ../../source/01-intro.rst:207
msgid ")"
msgstr ""

#: ../../source/01-intro.rst:200
msgid "),5"
msgstr ""

#: ../../source/01-intro.rst:206
msgid "];@emit ["
msgstr ""

#: ../../source/01-intro.rst:205
msgid "extract("
msgstr ""

#: ../../source/01-intro.rst:204
msgid "get("
msgstr ""

#: ../../source/01-intro.rst:205
msgid "me/foo"
msgstr ""

#: ../../source/01-intro.rst:206
msgid "),3,1"
msgstr ""

#: ../../source/01-intro.rst:208
msgid "]"
msgstr ""

#: ../../source/01-intro.rst:212
msgid "Plenty more not mentioned!"
msgstr ""

#: ../../source/01-intro.rst:214
msgid "The flexibility to customize RhostMUSH is what is most daunting. Don't fret, you don't need to do it to run RhostMUSH successfully. In fact, the default configuration is mostly compatible with MUSH and will work correctly out of the box for most needs.  For those wishing to play, of course the sky is the limit of what you want to do."
msgstr ""
