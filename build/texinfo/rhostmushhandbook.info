This is rhostmushhandbook.info, produced by makeinfo version 6.5 from
rhostmushhandbook.texi.

     RhostMUSH Handbook , Mar 13, 2021

     wstarter

     Copyright © 2021, wstarter

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* rhostmushhandbook: (rhostmushhandbook.info). One line description of project
END-INFO-DIR-ENTRY


   Generated by Sphinx 3.5.1.


File: rhostmushhandbook.info,  Node: Top,  Next: Installing RhostMUSH,  Up: (dir)

RhostMUSH Handbook
******************

     RhostMUSH Handbook , Mar 13, 2021

     wstarter

     Copyright © 2021, wstarter

The RhostMUSH source tree offers many abilities and options not normally
found in any other flavor of mush.  This doesn’t make it better than
other servers (though we think so `j/k') but it does give you a wider
selection of configurability, which, as you know, is the best part of
setting up a mush.  (yea, right)

   * A high-performance duel-quota system.

   * A complete rewrite of key areas and referbishments of all the other
     areas.

   * An on-line recover tool for accidental db destruction.

   * Multi-wizard architecture for better control of staff.

   * Multi-power system to tweek abilities of players.

   * Multi-zone system where people can belong to multiple zones.

   * Built in error correction for db corruption or other misuse.

   * Built in accounting for those annoying twinks who try to hack.

   * Many new functions and commands not seen anywhere else.

   * A lot more that could drag this document out for pages.

* Menu:

* Installing RhostMUSH::
* What RhostMUSH is about and what’s so great about RhostMUSH::
* Comparison of modern MUSH servers::
* Database::
* Gettin Started::
* What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH.
* Security::
* Maintenance::
* Troubleshooting::
* Advanced Features::
* Format for image files::
* Upgrading a Legacy RhostMUSH Installation::
* Comparison of Flags::
* Comparison of powers::
* RhostMUSH Internal Help Files::
* RhostMUSH Internal Wizhelp Files::
* Changelog::
* Historical Non-Disclosure Agreement::
* Copyright::
* Indices and tables::

 — The Detailed Node Listing —

Installing RhostMUSH

* RhostMUSH Requirements::
* Obtaining RhostMUSH::
* Compiling RhostMush::
* Installing using an ansible playbook::
* Starting a Newly Compiled MUSH::
* Creating RHostMUSH with a Provided DB::
* Almost Backwards Instructions for Compiling and Starting a MUSH::
* Basic Instructions for starting a new RhostMUSH::
* Start a MUSH and logging on for the first time::
* Customtize the textfiles for your game::
* Three Options for Starting a MUSH::
* Starting your MUSH::

RhostMUSH Requirements

* System Requirements::
* Software Requirements::
* Hosting Requirements::
* Requirements if Using Windows::

System Requirements

* Supported Platforms::
* Unsupported Platforms::
* Untested Platforms::
* Known Platform Issues::

Software Requirements

* Optional Packages::

Requirements if Using Windows

* Installing on Windows 10 with BASH::
* Installing on Windows with Cygwin::
* Startig RhostMUSH on Windows::

Compiling RhostMush

* Setup directory permissions::
* Compile the source code::
* Note about Compiling::
* Note about Recompiling::

Compile the source code

* The confsource Menu::

Starting a Newly Compiled MUSH

* Configuring the game::
* Starting the game::
* First login to the game::

Creating RHostMUSH with a Provided DB

* Important before you actually start building::
* Using the prebuilt flatfile::

Using the prebuilt flatfile

* To load a prebuilt flatfile::

Basic Instructions for starting a new RhostMUSH

* Manual configuration of source code::
* Loading a database for your MUSH::

Loading a database for your MUSH

* Option; Only perform these steps if using a provided database: Option Only perform these steps if using a provided database.

Option: Only perform these steps if using a provided database

* Configure the netrhost.conf file for your MUSH: Configure the netrhost conf file for your MUSH.

Start a  MUSH and logging on for the first time

* Option; Things to do once you have connected if you did NOT use a provided database: Option Things to do once you have connected if you did NOT use a provided database.

Three Options for Starting a MUSH

* Option 1; Creating a new game with a blank database: Option 1 Creating a new game with a blank database.
* Options 2; Creating a new game with Ambrosia’s default database: Options 2 Creating a new game with Ambrosia’s default database.
* Option 3; Creating a new game with the generic default database: Option 3 Creating a new game with the generic default database.

What RhostMUSH is about and what’s so great about RhostMUSH

* Recycle bin::
* @snapshot::
* Wizard and Immortals by default::
* Titles and Captions to a player’s name::
* Have an alternate name with locks for NPC obfuscation::
* Have multiple player aliases::
* Actively control how dark works both game-wide and individually::
* Make config file changes in-game without having to reboot or have shell access::
* Execute any binary or script as a localized function::
* Customized percent substitutions (like %n, %#, etc): Customized percent substitutions like %n %# etc.
* Redefine percent substitutions (like %n, %#, etc): Redefine percent substitutions like %n %# etc.
* Localize command and function overrides in a sandbox::
* Multiple Zones::
* Optionally control, enable, or disable sideeffects: Optionally control enable or disable sideeffects.
* Have 31 cross-interactive realities for locations::
* Override any command with softcode::
* The abilility to raise or lower permissions on the various::
* Customize new commands on the connect screen::
* Softcode any txt file (like connect.txt): Softcode any txt file like connect txt.
* Advanced tracing methods for debugging your code including labels!::
* Built in pretty-printing of attributes with the parenmatch() function: Built in pretty-printing of attributes with the parenmatch function.
* Plenty more not mentioned!::
* Advanced features of RhostMUSH::
* Random notes and things to know about RhostMUSH::

Advanced features of RhostMUSH

* Debugging/Tracing::
* Zoning::
* Reality Levels::
* Function and Command Overriding::
* The Recycle Bin::
* Percent Substitution Adding/Overriding::
* Hooking::
* Command based uselocks::
* Differentating between command and listen locks::
* Wizard auto-overiding and how to disable it::
* Advanced FLAG and TOGGLE control::
* Advanced site control::
* Auto-Registration::
* Which bit level is best?::
* What are the limits for size/growth for RhostMUSH?::
* Sqlite and MySQL/Maria setup and why use it?::
* Executing outside scripts and binaries within RhostMUSH::
* Pulling external data into RhostMUSH::
* Integrating a unix cron right into RhostMUSH::
* Signal handling, how it works, and when and why use it: Signal handling how it works and when and why use it.
* Setting up global parents, global @parents, global attribute formatting, and other global setups: Setting up global parents global @parents global attribute formatting and other global setups.
* RhostMUSH limitations and how to get around them::
* Things other mushes can do that Rhost can not and how to emulate it::
* Advanced guest setup::
* Attribute permission masking and the joys of the power behind it::
* The amazing @cluster and what it can do for you::
* What we plan for the future::
* Additional features not covered otherwise::

Things other mushes can do that Rhost can not and how to emulate it

* PennMUSH::
* MUX::

Random notes and things to know about RhostMUSH

* Note on bits, their levels, and things they do: Note on bits their levels and things they do.
* You need to @pcreate your guest characters and set them GUEST::
* @powers are INHERITED::
* @depowers are automatically checked first before anything else::
* Zones are unique::
* The db auto-repares itself when it can::
* You can get your connect.txt to parse ansi: You can get your connect txt to parse ansi.
* Re-compiled binaries do not require an @shutdown::
* Softcode emulations of functions from other servers are included::

Comparison of modern MUSH servers

* Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH: Differences to expect to the end user between PennMUSH MUX and RhostMUSH.
* Comparison of features between RhostMUSH, PennMUSH, and MUX2: Comparison of features between RhostMUSH PennMUSH and MUX2.
* Organization of help and wizhelp::
* Mail, comsystem, guests, master rooms, etc..: Mail comsystem guests master rooms etc.
* Comparisons of features::
* @commands with equivalents::
* @commands unique to RhostMUSH::
* @lock equivalents::
* @locks that only exist in RhostMUSH::
* Flag and toggle equivalents::
* Flags and toggles that only exist in RhostMUSH::
* @power equivalents::
* Functions equivalents::
* What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost.
* Things other mushes can do that Rhost can not and how to emulate it: Things other mushes can do that Rhost can not and how to emulate it<2>.

Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH

* PennMUSH: PennMUSH<2>.
* MUX: MUX<2>.
* RhostMUSH::

Flags and toggles that only exist in RhostMUSH

* Flags::
* Toggles::

@power equivalents

* @power unique to RhostMUSH::

Functions equivalents

* Functions that only exist in RhostMUSH::

What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost

* Problematic functions between codebases::
* Problematic features between codebases::
* Problematic commands::
* SIDEFX flag::
* Variable exits::
* Zones::
* @powers::
* Attribute length::
* Attribute contents::
* 256 color::
* Unicode/UTF8::
* Attributes per object::
* Destroying::
* object id’s::
* lsearch() and search(): lsearch and search.
* @locks can be different::
* Customer user-locks::
* Attribute trees::
* Prefix permission locking::
* align() and printf(): align and printf.
* MySQL::
* Mail System::
* Comsystem::
* Various Functions::
* Empty Attributes::
* Player Stats::
* Percent Substitutions::
* Switches::
* Flags: Flags<2>.
* Aliases::

Things other mushes can do that Rhost can not and how to emulate it

* PennMUSH: PennMUSH<3>.
* MUX: MUX<3>.

Database

* Loading an existing Database::
* Converting a flatfile database for use in RhostMUSH::

Gettin Started

* What to ype to get the basics running if you did not choose a pre-existing flatfile::
* Minimal DB instructions::
* Ambrosia’s Minimal Rhost DB::

What to ype to get the basics running if you did not choose a pre-existing flatfile

* Login to #1 from the connect screen::
* Change #1’s password to something you’ll remember but is hard to guess::
* Master Room::
* Flag and protect Master Room::
* Player Holder Characters::
* Chown #0 (The starting room) and #2 (The Master room) to immholder: Chown #0 The starting room and #2 The Master room to immholder.
* Create yourself your own immortal player then log off #1 and into this immortal player::
* Log out of #1 and log into your immortal player::
* Create your guest characters::
* Dig a closet to store important objects but non-master room::
* Set the flags on the closet and ownership of it::
* Create an Admin object for future ease of customization::
* Set the flags on the admin object and ownership and location::
* Add admin object to configuration::
* Reboot your mush to load up the change for the admin object::
* Do @admin/list to see if it shows the admin object::
* Load in all the various softcode that you want::

Player Holder Characters

* Immortal Holder::
* Royalty/Wizard Holder::
* Councilor/Admin Holder::
* Architect/Staff Holder::
* Guildmaster/Lead Holder::

Load in all the various softcode that you want

* Myrddin MushCron::
* AshCom::
* Mail Wrappers::
* Myrddin BBS::
* Other Mushcode::

Minimal DB instructions

* Startup Steps::

Ambrosia’s Minimal Rhost DB

* Version; 1.0.5 2020-01-31: Version 1 0 5 2020-01-31.
* Introduction::
* Features::
* Bitlevels::
* Quota::
* Functions: Functions<2>.
* Compiling::

Features

* Configuration::
* Softcode::
* Functions::

Bitlevels

* Storytellers::
* Builder-BCs::
* Building Head::
* Enforcers::
* Coders::
* Head Coder::
* MU* Head(s): MU* Head s.
* Site Admins::
* Globals::

What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH

* Flags: Flags<3>.
* Toggles: Toggles<2>.
* @power::
* @depower::
* Multi-tiered bitlevel systems::
* Altering bitlevels::

Multi-tiered bitlevel systems

* ghod (#1) <bitlevel 7>: ghod #1 <bitlevel 7>.
* Immortal(i) <Level 6> - Basically #1: Immortal i <Level 6> - Basically #1.
* Royalty(W) <Level 5> - FULL wizbit level: Royalty W <Level 5> - FULL wizbit level.
* Councilor(a) <Level 4> - High wizbit level: Councilor a <Level 4> - High wizbit level.
* Architect(B) <Level 3> - Middle wizbit level: Architect B <Level 3> - Middle wizbit level.
* Guildmaster(g) <Level 2> - Lowest wizbit level: Guildmaster g <Level 2> - Lowest wizbit level.
* Wanderer <bitlevel 0>::
* Guest <bitlevel 0 as well>::

Security

* Considerations to locking down restrictions in RhostMUSH::
* Extended lockdown of the mush and considerations::
* Methods to block anonymous connections and the pros and cons of doing so::
* Setting up an SSL tunnel for secure connection options::

Considerations to locking down restrictions in RhostMUSH

* Online; Blocking object abilities: Online Blocking object abilities.
* Offline; Blocking twinks from being abusive on your game: Offline Blocking twinks from being abusive on your game.

Online: Blocking object abilities

* FLAGS (access with @set): FLAGS access with @set.
* TOGGLES (@toggle): TOGGLES @toggle.
* @powers, @depowers, and @locks: @powers @depowers and @locks.

Extended lockdown of the mush and considerations

* Attribute Restriction::
* Command Restriction::
* Flag/Toggle Restriction::
* Config restrictions::
* Function Restrictions::
* Flags: Flags<4>.
* Toggles: Toggles<3>.
* @powers: @powers<2>.
* @depowers::
* Site Restrictions::

Site Restrictions

* IP based restrictions::
* DNS based restrictions::

Methods to block anonymous connections and the pros and cons of doing so

* Blacklisting through external tor_pull.sh script: Blacklisting through external tor_pull sh script.
* Blacklisting through internal @blacklist command::
* Blacklisting through internal @tor command::
* Blacklisting through internal @admin command::

Setting up an SSL tunnel for secure connection options

* Quickstart for SSL setup with stunnel::
* Detailed SSL setup with stunnel::

Detailed SSL setup with stunnel

* stunnel directory::
* Modifying netrhost.conf: Modifying netrhost conf.
* Running the stunnel setup program::
* Starting the stunnel proxy::
* Shutting down the stunnel proxy::
* Configuring firewall on the host::

Maintenance

* Note about Patching::
* Daily Backups for RhostMUSH::
* Signals and why you need them for control::
* Shutting down gracefully::
* Autoshutdown script::
* Network Port redirector::
* Using the built-in cron system for periodically running commands::
* The following scripts are used in the game directory::
* Textfiles for RhostMUSH::

Signals and why you need them for control

* TERM (kill -TERM or kill -15): TERM kill -TERM or kill -15.
* USR1 (kill -USR1): USR1 kill -USR1.
* USR2 (kill -USR2): USR2 kill -USR2.
* KILL (kill -KILL or kill -9): KILL kill -KILL or kill -9.

Shutting down gracefully

* Rhostmush has many ways to shut down the game cleanly::
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost.

Using the built-in cron system for periodically running commands

* Syntax for rhost.cron: Syntax for rhost cron.

Syntax for rhost.cron

* Example syntaxt for rhost.cron: Example syntaxt for rhost cron.

Textfiles for RhostMUSH

* Textfile Frequently Asked Questions::

Troubleshooting

* Reporting bugs or getting help::
* Stack limit and debugging::
* How to reset the password for #1::
* Troubleshooting difficulties compiling RhostMUSH::
* Dealing with DB Corruption::
* Dealing with a corrupt mail database::

Reporting bugs or getting help

* Troubleshooting issues with starting up::

Troubleshooting issues with starting up

* Problem; If it says the shared ID is already in use: Problem If it says the shared ID is already in use.
* Problem; Your log file is massive and your mush is running: Problem Your log file is massive and your mush is running.
* Problem; The database flatfile you’re loading can’t load because a db is already defined: Problem The database flatfile you’re loading can’t load because a db is already defined.
* Problem; The mail database won’t load and mail shows ‘offline’: Problem The mail database won’t load and mail shows ‘offline’.

How to reset the password for #1

* Method 1; Reset to Default Password: Method 1 Reset to Default Password.
* Method 2; Increase Permissions of Immortals: Method 2 Increase Permissions of Immortals.

Troubleshooting difficulties compiling RhostMUSH

* Changes to conf for high-bit CPUs::
* Changes to autconf for certain systems::

Dealing with DB Corruption

* If the mush says it can’t find your database files::
* If the mush says it can’t read or load your database files::
* If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!::
* Bringing up your mail database::

If the mush says it can’t find your database files

* Check the names of the database files in your ‘data’ directory::
* Check your netrhost.conf file: Check your netrhost conf file.
* Check your mush.config file: Check your mush config file.

If the mush says it can’t read or load your database files

* Verify you have enough disk space. (quota): Verify you have enough disk space quota.
* Verify you have enough disk space. (system): Verify you have enough disk space system.

If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

* The bad news::
* The good news::
* Now, to restore your database?: Now to restore your database?.

Bringing up your mail database

* If after restoring main database your mail database works::
* If after restoring main database your mail database does not work::

Dealing with a corrupt mail database

* Backing up your mail database::
* Automatically recovering your mail database::
* Manually recovering your mail database::

Advanced Features

* Adding hardcoded modules::
* Shutting down gracefully: Shutting down gracefully<2>.
* Reality levels::
* Execscript and external programs and scripts::
* Using printf() for advanced text output: Using printf for advanced text output.

Adding hardcoded modules

* Modifying sourcode to add a module::
* Adding an @startup to make use of modules::
* Contributing your module back to Rhost::

Shutting down gracefully

* Rhostmush has many ways to shut down the game cleanly: Rhostmush has many ways to shut down the game cleanly<2>.
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost<2>.

Reality levels

* Visibility::
* Descriptions::
* Configuration parameters::
* Example mush.conf: Example mush conf.
* Commands::
* Functions: Functions<3>.
* Example 1; A simplified Witchcraft setup: Example 1 A simplified Witchcraft setup.
* Example 2; A WoD setup: Example 2 A WoD setup.
* Example 3; Softcode: Example 3 Softcode.

Execscript and external programs and scripts

* Mush variables::
* set object::
* Example bash script::
* Notes and warnings::
* Scripts to be used with execscript::

Mush variables

* Built in variables::
* Dynamic variables::
* Register variables::

set object

* The format of the fields are::

The format of the fields are

* Dynamic variables: Dynamic variables<2>.
* Register variables: Register variables<2>.

Dynamic variables

* Examples::

Register variables

* Examples (The last example clears register 0): Examples The last example clears register 0.

Using printf() for advanced text output

* Example one::
* Example two::
* Example three::

Format for image files

* HELP key indexes for the values;: HELP key indexes for the values.

Upgrading a Legacy RhostMUSH Installation

* Converting database betwen GDBM and QDBM::
* Updating RhostMUSH prior to 3.9.5p2: Updating RhostMUSH prior to 3 9 5p2.
* Adding MySQL to RhostMUSH older than 3.9.5p2: Adding MySQL to RhostMUSH older than 3 9 5p2.

Converting database betwen GDBM and QDBM

* Downgrading QDBM to GDBM::
* Upgradging GDBM to QDBM::

Upgradging GDBM to QDBM

* While logged in to your mush, issue the following commands: While logged in to your mush issue the following commands.
* Verify the files exist::
* Shutdown the MUSH::
* From the Server directory::
* From the Server/game directory::
* While logged into the mush issue the following commands::
* Verify that you have QDBM running and your valid values::

Changelog

* RhostMUSH 4.0: RhostMUSH 4 0.
* RhostMUSH 3.9.5: RhostMUSH 3 9 5.
* RhostMUSH 3.9.4: RhostMUSH 3 9 4.
* RhostMUSH 3.9.3: RhostMUSH 3 9 3.
* RhostMUSH 3.9.2: RhostMUSH 3 9 2.
* RhostMUSH 3.9.1: RhostMUSH 3 9 1.
* RhostMUSH 3.9.0 p00: RhostMUSH 3 9 0 p00.
* RhostMUSH 3.2.4 p18: RhostMUSH 3 2 4 p18.
* RhostMUSH 3.2.4 p17: RhostMUSH 3 2 4 p17.
* RhostMUSH 3.2.4 p16: RhostMUSH 3 2 4 p16.
* RhostMUSH 3.2.4 p15: RhostMUSH 3 2 4 p15.
* RhostMUSH 3.2.4 p14: RhostMUSH 3 2 4 p14.
* RhostMUSH 3.2.4 p13: RhostMUSH 3 2 4 p13.
* RhostMUSH 3.2.4 p12: RhostMUSH 3 2 4 p12.
* RhostMUSH 3.2.4 p11: RhostMUSH 3 2 4 p11.
* RhostMUSH 3.2.4 p10: RhostMUSH 3 2 4 p10.
* RhostMUSH 3.2.4 p9: RhostMUSH 3 2 4 p9.
* RhostMUSH 3.2.4 p8: RhostMUSH 3 2 4 p8.
* RhostMUSH 3.2.4 p7: RhostMUSH 3 2 4 p7.
* RhostMUSH 3.2.4 p6: RhostMUSH 3 2 4 p6.
* RhostMUSH 3.2.4 p5: RhostMUSH 3 2 4 p5.
* RhostMUSH 3.2.4 p4: RhostMUSH 3 2 4 p4.
* RhostMUSH 3.2.4 p3: RhostMUSH 3 2 4 p3.

RhostMUSH 3.9.0 p00

* Changes::
* Additions::
* Admin Params::
* Bug Fixes::

Additions

* Functions: Functions<4>.
* Commands: Commands<2>.
* Flags: Flags<5>.
* Toggles: Toggles<4>.

RhostMUSH 3.2.4 p18

* Changes: Changes<2>.
* Bug Fixes: Bug Fixes<2>.

RhostMUSH 3.2.4 p17

* Changes: Changes<3>.
* Bug Fixes: Bug Fixes<3>.

RhostMUSH 3.2.4 p16

* Changes: Changes<4>.
* Additions: Additions<2>.
* Admin Params: Admin Params<2>.
* Bug Fixes: Bug Fixes<4>.

Additions

* Functions: Functions<5>.

RhostMUSH 3.2.4 p15

* Changes: Changes<5>.
* Additions: Additions<3>.
* Admin Params: Admin Params<3>.
* Bug Fixes: Bug Fixes<5>.

Additions

* Functions: Functions<6>.
* Flags: Flags<6>.
* Toggles: Toggles<5>.

RhostMUSH 3.2.4 p14

* Changes: Changes<6>.
* Additions: Additions<4>.
* Admin Params: Admin Params<4>.
* Bug Fixes: Bug Fixes<6>.

Additions

* Functions: Functions<7>.
* Commands: Commands<3>.
* Flags: Flags<7>.
* Toggles: Toggles<6>.

RhostMUSH 3.2.4 p13

* Changes: Changes<7>.
* Additions: Additions<5>.
* Admin Params: Admin Params<5>.
* Bug Fixes: Bug Fixes<7>.

Additions

* Functions: Functions<8>.
* Commands: Commands<4>.
* De-Powers::
* Toggles: Toggles<7>.

RhostMUSH 3.2.4 p12

* Changes: Changes<8>.
* Additions: Additions<6>.
* Admin Params: Admin Params<6>.
* Bug Fixes: Bug Fixes<8>.

Additions

* Functions: Functions<9>.
* Commands: Commands<5>.
* Flags: Flags<8>.

RhostMUSH 3.2.4 p11

* Changes: Changes<9>.
* Additions: Additions<7>.
* Admin Params: Admin Params<7>.
* Bug Fixes: Bug Fixes<9>.

Additions

* Functions: Functions<10>.
* Commands: Commands<6>.
* Toggles: Toggles<8>.

RhostMUSH 3.2.4 p10

* Changes: Changes<10>.
* Additions: Additions<8>.
* Admin Params: Admin Params<8>.
* Bug Fixes: Bug Fixes<10>.

Additions

* Functions: Functions<11>.

RhostMUSH 3.2.4 p9

* Changes: Changes<11>.
* Additions: Additions<9>.
* Admin Params: Admin Params<9>.
* Bug Fixes: Bug Fixes<11>.

Additions

* Functions: Functions<12>.
* Flags: Flags<9>.
* Toggles: Toggles<9>.

RhostMUSH 3.2.4 p8

* Changes: Changes<12>.
* Additions: Additions<10>.
* Admin Params: Admin Params<10>.
* Bug Fixes: Bug Fixes<12>.

Additions

* Functions: Functions<13>.
* Commands: Commands<7>.
* Flags: Flags<10>.
* Toggles: Toggles<10>.

RhostMUSH 3.2.4 p7

* Changes: Changes<13>.
* Admin Params: Admin Params<11>.
* Bug Fixes: Bug Fixes<13>.

RhostMUSH 3.2.4 p6

* Changes: Changes<14>.
* Admins Params::
* Bug Fixes: Bug Fixes<14>.

RhostMUSH 3.2.4 p5

* Changes: Changes<15>.
* Admin Params: Admin Params<12>.
* Bug Fixes: Bug Fixes<15>.

RhostMUSH 3.2.4 p4

* Changes: Changes<16>.
* Additions: Additions<11>.
* Alias Additions::
* Admin Params: Admin Params<13>.
* Bug Fixes: Bug Fixes<16>.

Additions

* Functions: Functions<14>.
* Commands: Commands<8>.
* Toggles: Toggles<11>.

Alias Additions

* Commands: Commands<9>.

RhostMUSH 3.2.4 p3

* Changes: Changes<17>.
* Additions: Additions<12>.
* Alias Additions: Alias Additions<2>.
* Admin Params: Admin Params<14>.
* Bug Fixes: Bug Fixes<17>.

Additions

* Functions: Functions<15>.
* Commands: Commands<10>.
* Flags: Flags<11>.
* Powers::
* Toggles: Toggles<12>.

Alias Additions

* Functions: Functions<16>.
* Commands: Commands<11>.
* Flags: Flags<12>.



File: rhostmushhandbook.info,  Node: Installing RhostMUSH,  Next: What RhostMUSH is about and what’s so great about RhostMUSH,  Prev: Top,  Up: Top

1 Installing RhostMUSH
**********************

* Menu:

* RhostMUSH Requirements::
* Obtaining RhostMUSH::
* Compiling RhostMush::
* Installing using an ansible playbook::
* Starting a Newly Compiled MUSH::
* Creating RHostMUSH with a Provided DB::
* Almost Backwards Instructions for Compiling and Starting a MUSH::
* Basic Instructions for starting a new RhostMUSH::
* Start a MUSH and logging on for the first time::
* Customtize the textfiles for your game::
* Three Options for Starting a MUSH::
* Starting your MUSH::


File: rhostmushhandbook.info,  Node: RhostMUSH Requirements,  Next: Obtaining RhostMUSH,  Up: Installing RhostMUSH

1.1 RhostMUSH Requirements
==========================

* Menu:

* System Requirements::
* Software Requirements::
* Hosting Requirements::
* Requirements if Using Windows::


File: rhostmushhandbook.info,  Node: System Requirements,  Next: Software Requirements,  Up: RhostMUSH Requirements

1.1.1 System Requirements
-------------------------

   * Minimum 1 GB (memory and swap combined) to compile (functions.c is
     huge)

   * Any Unix flavor should be fine.  Linux, BSD, Mac OSX, Solaris,
     Tru64, AIX, etc.

   * (BETA ONLY) cygwin under Windows.  It requires the entire base
     development set and Requirements below.

   * Disk: 100 MB or more (depending on size of db and how many backups
     you wish to maintain)

   * Memory: 12-100 MB (depending on size of mush and what size buffers
     you select and packages you include)

* Menu:

* Supported Platforms::
* Unsupported Platforms::
* Untested Platforms::
* Known Platform Issues::


File: rhostmushhandbook.info,  Node: Supported Platforms,  Next: Unsupported Platforms,  Up: System Requirements

1.1.1.1 Supported Platforms
...........................

   * SunOS (all platforms)

   * Solaris (all platforms)

   * Linux (all platforms except redhat 5.x mentioned below)

   * AIX (all platforms)

   * Ultrix (all platforms)

   * iBSD (all platforms)

   * FreeBSD (all platforms)

   * OpenBSD (all platforms)

   * NetBSD (all platforms)

   * IRIX (all platforms)

   * HPUX (32 bit systems only)

If it’s not listed here, it probably still will compile clean.


File: rhostmushhandbook.info,  Node: Unsupported Platforms,  Next: Untested Platforms,  Prev: Supported Platforms,  Up: System Requirements

1.1.1.2 Unsupported Platforms
.............................

   * Win32/Win16

   * Alpha systems.


File: rhostmushhandbook.info,  Node: Untested Platforms,  Next: Known Platform Issues,  Prev: Unsupported Platforms,  Up: System Requirements

1.1.1.3 Untested Platforms
..........................

   * HP-UX (64 bit systems)

   * VMS (all platforms)


File: rhostmushhandbook.info,  Node: Known Platform Issues,  Prev: Untested Platforms,  Up: System Requirements

1.1.1.4 Known Platform Issues
.............................

On Alpha boxes running Redhat 5.0, structure pointers are slaughtered
with the built-in gcc package (up to and including 2.8.x).  Because of
this some config options may not work fully or cause the server to
crash.  This is only a known issue with config options and only on this
platform.


File: rhostmushhandbook.info,  Node: Software Requirements,  Next: Hosting Requirements,  Prev: System Requirements,  Up: RhostMUSH Requirements

1.1.2 Software Requirements
---------------------------

RhostMUSH is a Linux or Unix based server software that runs as a daemon
on the host.  In order to build this software, you will need the bare
minimum of the ability to run ‘make’ commands.

Package requirements are as follows:

   * glibc and gcc/clang (compiling the code)

   * git (to clone the source and maintain patches)

   * bash/ksh/dash (or compatible shell - for use with build menu)

   * libcrypt (for password encryption - this is usually standard on
     unix based systems)

* Menu:

* Optional Packages::


File: rhostmushhandbook.info,  Node: Optional Packages,  Up: Software Requirements

1.1.2.1 Optional Packages
.........................

RhostMUSH also offers optional linking and library attachments.  For
some of these libraries it will attempt to do auto-detection, but in a
worse case scenario, there exists override hashes in the menu to disable
options it thinks exist that do not.

Optional packages are as follows:

   * openssl dev libraries/headers (for MUX password compatibility, and
     digest() and advanced cryptology functionality.

   * mysql client & mysql_config (required for mysql capabilities)

   * sqlite3 libraries (required for sqlite capabilities)

   * ruby/perl/python/etc (for custom interactive dynamic custom
     functions with the execscript() feature)

   * libpcre (if you wish to use system pcre libraries instead of the
     built-in ones)


File: rhostmushhandbook.info,  Node: Hosting Requirements,  Next: Requirements if Using Windows,  Prev: Software Requirements,  Up: RhostMUSH Requirements

1.1.3 Hosting Requirements
--------------------------

You will need a stable host and access to open a single port number of
your choice on the firewall.  Most games choose a number between 1025
and 9999, by convention.  Please make sure your debug_id matches the
port number + 5.  So if your port is 1234, your debug_id will be 12345.
The debug_id is for use in the API daemon that runs Rhost as a container
to keep track of heap, stack, and execution location.


File: rhostmushhandbook.info,  Node: Requirements if Using Windows,  Prev: Hosting Requirements,  Up: RhostMUSH Requirements

1.1.4 Requirements if Using Windows
-----------------------------------

* Menu:

* Installing on Windows 10 with BASH::
* Installing on Windows with Cygwin::
* Startig RhostMUSH on Windows::


File: rhostmushhandbook.info,  Node: Installing on Windows 10 with BASH,  Next: Installing on Windows with Cygwin,  Up: Requirements if Using Windows

1.1.4.1 Installing on Windows 10 with BASH
..........................................

Rhost can be compiled and run under the new Bash on Ubuntu on Windows.
This has been tested with the Preview build 14342.

  1. After installing Bash you will need to install the following
     packages:

        - gcc

        - git

        - make

        - libpcre3 (optional)

        - libpcre3-dev (optional)

        - openssl (optional)

2.  When configuring rhost (using confsource) select the Disable
Debugmon option.

  3. When you issue Startmush, you must pass the -cyg option.


File: rhostmushhandbook.info,  Node: Installing on Windows with Cygwin,  Next: Startig RhostMUSH on Windows,  Prev: Installing on Windows 10 with BASH,  Up: Requirements if Using Windows

1.1.4.2 Installing on Windows with Cygwin
.........................................

Rhost does work under windows using the cygwin package.

  1. When you do install cygwin, the following packages must be added:

        - bash

        - crypt

        - gcc

        - gdbm

        - git

        - make

        - openssl (optional)

  2. The src/Makefile has to manually have the CYGWIN line uncommented.


File: rhostmushhandbook.info,  Node: Startig RhostMUSH on Windows,  Prev: Installing on Windows with Cygwin,  Up: Requirements if Using Windows

1.1.4.3 Startig RhostMUSH on Windows
....................................

When you issue Startmush, you must pass it the -cyg option.


File: rhostmushhandbook.info,  Node: Obtaining RhostMUSH,  Next: Compiling RhostMush,  Prev: RhostMUSH Requirements,  Up: Installing RhostMUSH

1.2 Obtaining RhostMUSH
=======================

It is assumed that you have gotten to this point with the following
command:

     git clone https://github.com/RhostMUSH/trunk Rhost

If you did NOT get it this way, your file permissions may not be
properly set up.  Please type:

     chmod +rx bin/*.sh src/*.sh game/*.sh game/Startmush game/db_*

This makes sure all the build scripts are properly made executable.
This will result in ‘permission denied’ or similar results when running
a script.


File: rhostmushhandbook.info,  Node: Compiling RhostMush,  Next: Installing using an ansible playbook,  Prev: Obtaining RhostMUSH,  Up: Installing RhostMUSH

1.3 Compiling RhostMush
=======================

* Menu:

* Setup directory permissions::
* Compile the source code::
* Note about Compiling::
* Note about Recompiling::


File: rhostmushhandbook.info,  Node: Setup directory permissions,  Next: Compile the source code,  Up: Compiling RhostMush

1.3.1 Setup directory permissions
---------------------------------

Run the supplied directory permission script:

     ./dirsetup.sh

This is a simple script that will change file permissions and directory
permissions to properly protect RhostMUSH. These settings generally work
fine out of the box so you likely won’t even have to set this up if you
don’t want to.


File: rhostmushhandbook.info,  Node: Compile the source code,  Next: Note about Compiling,  Prev: Setup directory permissions,  Up: Compiling RhostMush

1.3.2 Compile the source code
-----------------------------

Make and run the RhostMUSH source:

     make confsource

If you get an error running the script itself:

     ./bin/script_setup.sh
     make confsource

* Menu:

* The confsource Menu::


File: rhostmushhandbook.info,  Node: The confsource Menu,  Up: Compile the source code

1.3.2.1 The confsource Menu
...........................

This will bring up a menu where you can selection options.

You may also issue ‘make source’ if the Makefile is already defined how
you want it to be.  Please remember to ‘make clean’ before ‘make source’
whenever you alter the code or import new source code.

After the compile process is done, you should be good to go.  If it
complains about missing binaries make sure they are linked:

     make links


File: rhostmushhandbook.info,  Node: Note about Compiling,  Next: Note about Recompiling,  Prev: Compile the source code,  Up: Compiling RhostMush

1.3.3 Note about Compiling
--------------------------

If your binaries do not work or you get an error type:

     ./bin/script_setup.sh

Then type:

     make confsource

If you are importing a MUX2 flatfile, make ABSOLUTELY SURE that you
select mux passwords as a compatibility option, or you will NOT BE ABLE
to log in to players as the password will not be recognizeable.

Make sure to keep QDBM selected as it’s a much more stable database
engine that does not have attribute limit restrictions like GDBM does.

If you are converting from a Penn, TinyMUSH, or MUX database, make sure
you drill down into the LBUF section and select, at minimum, 8K lbufs.
You likely want that anyway as it gives you far more room for attribute
content storage.

You can go up to 32K safely.  While 64k is safe and does work, there are
issues with networking and older routers that use a 32K TCP buffer size
that can at times cut off the data as overflow resulting in output to
the end-point players not receiving their data.  So it is strongly
recommended not to go above 32K in lbuffer size.

Go ahead and select 64 char attributes.  It allows you to have 64
characters for attribute names.  It’s handy to have.

If you wish at this point to set up mysql and/or sqlite, you may do so.
Yes, you can use them in parallel without any issue.


File: rhostmushhandbook.info,  Node: Note about Recompiling,  Prev: Note about Compiling,  Up: Compiling RhostMush

1.3.4 Note about Recompiling
----------------------------

If you plan to use ‘make confsource’ to recompile your source, you
should first issue a ‘make clean’ before re-issuing a ‘make confsource’.
‘make confsource’ remembers the last options you used.

A failure to issue ‘make clean’ prior to re-compiling with ‘make
confsource’ or re-compiling with ‘make source’ can potentially leave
stale object files which may cause unforseen issues when running code,
including but not limited to random crashes.  Generally whenever
recompiling it’s good to always make clean first.


File: rhostmushhandbook.info,  Node: Installing using an ansible playbook,  Next: Starting a Newly Compiled MUSH,  Prev: Compiling RhostMush,  Up: Installing RhostMUSH

1.4 Installing using an ansible playbook
========================================

To begin, you will run the following command in a directory that will
house your game:

     git clone https://github.com/RhostMUSH/trunk Rhost

You may also just run the yml file and ansible (ansible-playbook) to
install your RhostMUSH engine:

     wget https://raw.githubusercontent.com/RhostMUSH/trunk/master/rhostinstall.yml
     ansible-playbook rhostinstall.yml

This downloads the latest stable version of the code, bringing with it
all patches and scripts, documentation and support tools that you will
need.


File: rhostmushhandbook.info,  Node: Starting a Newly Compiled MUSH,  Next: Creating RHostMUSH with a Provided DB,  Prev: Installing using an ansible playbook,  Up: Installing RhostMUSH

1.5 Starting a Newly Compiled MUSH
==================================

* Menu:

* Configuring the game::
* Starting the game::
* First login to the game::


File: rhostmushhandbook.info,  Node: Configuring the game,  Next: Starting the game,  Up: Starting a Newly Compiled MUSH

1.5.1 Configuring the game
--------------------------

When setting up a mush for the first time, make sure you have all the
files configured correctly.  This is with using the following file for
configuration:

     - netrhost.conf


File: rhostmushhandbook.info,  Node: Starting the game,  Next: First login to the game,  Prev: Configuring the game,  Up: Starting a Newly Compiled MUSH

1.5.2 Starting the game
-----------------------

Once done, you start up the system with the following command:

      - [sh/csh] ./Startmush

     It will prompt you to start a new db if it doesn't find one.

     You may also do the commands individually::

        [csh] netrhost -s netrhost.conf >& netrhost.log &
        [sh]  netrhost -s netrhost.conf > netrhost.log 2>&1 &


File: rhostmushhandbook.info,  Node: First login to the game,  Prev: Starting the game,  Up: Starting a Newly Compiled MUSH

1.5.3 First login to the game
-----------------------------

Once started, log in the #1 character (Wizard) with it’s appropiate
password (no, not ‘potrzebie’, but ‘Nyctasia’).  There were private
reasons for the password change.

Once in, do a @shutdown to save the database.  Then you can run Startup
normally.  You may make a backup of your database at anytime on-line by
utilizing the @dump/flat option.  A script comes with this distribution
that allows the ability of auto-archiving your database for a
configurable number of backups.


File: rhostmushhandbook.info,  Node: Creating RHostMUSH with a Provided DB,  Next: Almost Backwards Instructions for Compiling and Starting a MUSH,  Prev: Starting a Newly Compiled MUSH,  Up: Installing RhostMUSH

1.6 Creating RHostMUSH with a Provided DB
=========================================

* Menu:

* Important before you actually start building::
* Using the prebuilt flatfile::


File: rhostmushhandbook.info,  Node: Important before you actually start building,  Next: Using the prebuilt flatfile,  Up: Creating RHostMUSH with a Provided DB

1.6.1 Important before you actually start building
--------------------------------------------------

The main parts of making your RhostMUSH, easy pleasy:

  1. The stunnel directory contains TLS/SSL connectivity.  This has to
     be linked to another port and will tunnel to the mush port.  The
     README file explains how to set up and configure your TLS/SSL
     connection.

  2. ./patch.sh – This makes sure you have the latest code.  If you got
     this by git clone ‘https://github.com/RhostMUSH/trunk’ then you can
     ignore patching.  You can use ./patch.sh at any time to update your
     code.  It ignores local.c incase you make your own modules.

  3. make confsource.  Yup, it’s menu driven, nifty eh?

       1. Options you may want to select (other than the defaults):

       2. 5 (%c is selected by default, but choose %x as well for
          MUX/TM3 compat)

       3. 9 (if you want $commands to require the COMMAND flag)

       4. 16 (if you want a wider WHO listing like older versions of
          MUX)

       5. 22 (if you’re converting a TinyMUSH3 or TinyMUX/MUX2 flatfile)

       6. 24 (if you have issues with -lssl not being found)

       7. B3 (for 64 character attribute names)

       8. B6 (select 8K for Penn/MUX2/TM3 default, up to 32K. 64K is
          network intensive)

       9. B5 (will be autoselected if you choose 8K or more.  Pick this
          anyway)

       10. B4 (if you have sqlite libraries and wish to use this)

  4. ‘r’ to compile with the settings you selected.

  5. Modify your netrhost.conf file as specified.  Make sure to align
     your port and debug_id as shown in the netrhost.conf file.

  6. If you wish to port in an old flatfile, please refer to the readme
     directory on how to port your flatfile in (README.DBLOADING).


File: rhostmushhandbook.info,  Node: Using the prebuilt flatfile,  Prev: Important before you actually start building,  Up: Creating RHostMUSH with a Provided DB

1.6.2 Using the prebuilt flatfile
---------------------------------

There are pre-loaded flatfile databases you can use at this point.  The
netrhost.db.flat and corrisponding netrhost.conf file will be located in
the minimal-DBs/minimal_db directory.

You may auto-load the minimal db and corresponding netrhost.conf file
with the command:

     ./minimal.sh

This is ran from within the ‘game’ directory.  Once this is ran, you
will need to customize the netrhost.conf file for your purposes.  The
port and debug_id must be changed at the very least.  Keep the debug_id
coordinated to the port as described.

* Menu:

* To load a prebuilt flatfile::


File: rhostmushhandbook.info,  Node: To load a prebuilt flatfile,  Up: Using the prebuilt flatfile

1.6.2.1 To load a prebuilt flatfile
...................................

  1. Make a backup of your existing netrhost.conf file:

          cp game/netrhost.conf game/netrhost.conf.backup

  2. Copy the netrhost.conf file into your game directory:

          cp -f ./minimal-DBs/minimal_db/netrhost.conf ./game/netrhost.conf

  3. At this point you can modify your netrhost.conf file settings in
     your game directory.  Using an editor modify the ‘port’ and
     ‘debug_id’ respectively in your netrhost.conf as state.  The ‘port’
     will be the port the mush listens on, the debug_id is for the
     debug-stack and is your port with a ‘5’ at the end.  So if your
     port is 4444, the debug_id is 44445

  4. Load in the flatfile into the mush (You could do this in the
     Startmush as well) Manually:

          cd game

     ./db_load data/netrhost.gdbm
     ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new dwF

     Start your mush:

          ./Startmush

     This will load the db that you loaded.

     —————OR——-

     From Startmush when prompted, hit <RETURN> for searching then
     select the number of the netrhost.db.flat that is listed as
     ~/minimal-DBs/minimal_db/netrhost.db.flat:

          ./Startmush


File: rhostmushhandbook.info,  Node: Almost Backwards Instructions for Compiling and Starting a MUSH,  Next: Basic Instructions for starting a new RhostMUSH,  Prev: Creating RHostMUSH with a Provided DB,  Up: Installing RhostMUSH

1.7 Almost Backwards Instructions for Compiling and Starting a MUSH
===================================================================

  1. You can modify your netrhost.conf file settings in your game
     directory.  Using an editor modify the ‘port’ and ‘debug_id’
     respectively in your netrhost.conf as stated.  The ‘port’ will be
     the port the mush listens on, the debug_id is for the debug-stack
     and is your port with a ‘5’ at the end.  So if your port is 4444,
     the debug_id is 44445

  2. Start your mush:

          --> ./Startmush

You can use the ‘vi’ editor or ‘nano’ if you like a more menu driven DOS
like experience.  You can of course use any other editor you’re familar
with.

For a more thorough understanding of how to set things up, keep reading!

If you have syntax issues running ‘make config’, ‘make confsource’ or
‘make bugreport’ please run the script: ./bin/script_setup.sh

Now… things you may need to do on errors.


File: rhostmushhandbook.info,  Node: Basic Instructions for starting a new RhostMUSH,  Next: Start a MUSH and logging on for the first time,  Prev: Almost Backwards Instructions for Compiling and Starting a MUSH,  Up: Installing RhostMUSH

1.8 Basic Instructions for starting a new RhostMUSH
===================================================

* Menu:

* Manual configuration of source code::
* Loading a database for your MUSH::


File: rhostmushhandbook.info,  Node: Manual configuration of source code,  Next: Loading a database for your MUSH,  Up: Basic Instructions for starting a new RhostMUSH

1.8.1 Manual configuration of source code
-----------------------------------------

To do manual configuration (skip if the previous step worked for you)
And yes, this is a bit of a pain in the bottom, hopefully you will not
need this.

You need the following definitions defined to make this work:

  1. TINY_U, USE_SIDEEFFECTS, MUX_INCDEC, ATTR_HACK

  2. (u()/u2() switched)

  3. (sideeffects)

  4. (inc()/xinc() switched)

  5. (support for _/~ attribs)

You only need to do this if you received the RhostMUSH src.  If you
received a binary, continue on to the next part.

To compile the code, just type ‘make confsource’.  It will prompt you
with settings on what you need to do.  If you just want to quickly hand
edit the Makefile, it is in the directory src (full path src/Makefile).
Then you may just run ‘make source’, if you so choose to hand-edit the
Makefile.

After the compile process is done, type ‘make links’!


File: rhostmushhandbook.info,  Node: Loading a database for your MUSH,  Prev: Manual configuration of source code,  Up: Basic Instructions for starting a new RhostMUSH

1.8.2 Loading a database for your MUSH
--------------------------------------

You now have a choice of optionally starting at a provided database or
starting from scratch.

* Menu:

* Option; Only perform these steps if using a provided database: Option Only perform these steps if using a provided database.


File: rhostmushhandbook.info,  Node: Option Only perform these steps if using a provided database,  Up: Loading a database for your MUSH

1.8.2.1 Option: Only perform these steps if using a provided database
.....................................................................

Copy an existing flatfile and corresponding netrhost.conf file Default
provied example:

     cp game/netrhost.conf game/netrhost.conf.backup
     cp -f minimal-DBs/minimal_db/netrhost.conf game/netrhost.conf
     cd game
     ./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new

* Menu:

* Configure the netrhost.conf file for your MUSH: Configure the netrhost conf file for your MUSH.


File: rhostmushhandbook.info,  Node: Configure the netrhost conf file for your MUSH,  Up: Option Only perform these steps if using a provided database

1.8.2.2 Configure the netrhost.conf file for your MUSH
......................................................

     Go into the game directory and modify the netrhost.conf file The
     next step is configuring the mush to your config standards.  There
     is a file in the game subdirectory called ‘netrhost.conf’.  You
     hand-edit this file and just follow what it says each one does.
     It’s very well documented and should give you great details on what
     to edit.  For most things, you can feel comfortable to stick with
     the defaults unless you wish to change them.  The port and debug_id
     need to be changed.


File: rhostmushhandbook.info,  Node: Start a MUSH and logging on for the first time,  Next: Customtize the textfiles for your game,  Prev: Basic Instructions for starting a new RhostMUSH,  Up: Installing RhostMUSH

1.9 Start a MUSH and logging on for the first time
==================================================

From the game diretory issue:

     ./Startmush

To login:

     co Wizard Nyctasia

* Menu:

* Option; Things to do once you have connected if you did NOT use a provided database: Option Things to do once you have connected if you did NOT use a provided database.


File: rhostmushhandbook.info,  Node: Option Things to do once you have connected if you did NOT use a provided database,  Up: Start a MUSH and logging on for the first time

1.9.1 Option: Things to do once you have connected if you did NOT use a provided database
-----------------------------------------------------------------------------------------

  1. @dig your master room and in your netrhost.conf file define
     master_room to this dbref (without the #.  So like master_room 2)

  2. Create an immortal holder charater (@pcreate then @set immortal)
     Feel free to set up holder characters for all the bittypes which
     are: GUILDMASTER, ARCHITECT, COUNCILOR, WIZARD, IMMORTAL

  3. @chown/preserve the master room and #0 to the immortal holder
     character.

  4. Log into the immortal character

  5. @pcreate all your guest characters and set them up properly.  My
     suggestion:

          @dolist lnum(1,10)={@pcreate Guest##=guest;@set *Guest##=guest;@desc *Guest##=A guest player.;@adisconnect *Guest##=home;@lock *Guest##=*Guest##}

          @list guest will show your guest characters and if they're set up properly.

  6. Any master room code you load in from your immholder character (or
     @chown/preserve to it) The readme directory has
     softfunctions.minmax that has MUX/Penn compatability functions and
     comsys.  All other softcode (like mail wrappers) can be found on
     ‘https://github.com/RhostMUSH/trunk’ in Mushcode.

  7. Setup new character, staff, and take tasks that can only be
     accomplished by #1

  8. Set up any other characters you want.  Anyone immortal can issue
     @function, @admin, or anything #1 can do.


File: rhostmushhandbook.info,  Node: Customtize the textfiles for your game,  Next: Three Options for Starting a MUSH,  Prev: Start a MUSH and logging on for the first time,  Up: Installing RhostMUSH

1.10 Customtize the textfiles for your game
===========================================

     All connect.txt and customized files can be found in the
     ~/Server/game/txt directory.  There is a README file there that
     explains their purposes in more detail.  You can see more
     information on all files and how they inter-relate with ‘wizhelp
     file’.


File: rhostmushhandbook.info,  Node: Three Options for Starting a MUSH,  Next: Starting your MUSH,  Prev: Customtize the textfiles for your game,  Up: Installing RhostMUSH

1.11 Three Options for Starting a MUSH
======================================

The RhostMUSH Git Repository comes with three options for starting your
Mush.

* Menu:

* Option 1; Creating a new game with a blank database: Option 1 Creating a new game with a blank database.
* Options 2; Creating a new game with Ambrosia’s default database: Options 2 Creating a new game with Ambrosia’s default database.
* Option 3; Creating a new game with the generic default database: Option 3 Creating a new game with the generic default database.


File: rhostmushhandbook.info,  Node: Option 1 Creating a new game with a blank database,  Next: Options 2 Creating a new game with Ambrosia’s default database,  Up: Three Options for Starting a MUSH

1.11.1 Option 1: Creating a new game with a blank database
----------------------------------------------------------

     Modify your ./game/netrhost.conf file or what settings you want.
     Don’t feel overwhelmed, it’s all very well documented.


File: rhostmushhandbook.info,  Node: Options 2 Creating a new game with Ambrosia’s default database,  Next: Option 3 Creating a new game with the generic default database,  Prev: Option 1 Creating a new game with a blank database,  Up: Three Options for Starting a MUSH

1.11.2 Options 2: Creating a new game with Ambrosia’s default database
----------------------------------------------------------------------

Follow minimal-DBs/Amb-MinimalRhost/IMPORTANT_README

The netrhost.conf file you will copy is in
minimal-DBs/Amb-MinimalRhost/game Copy this netrhost.conf file into your
‘game’ directory.

You will want the custom txt files under Amb-MinimalRhost/txt in your
game/txt directory and to mkindx all the txt files.  You can run
./Startmush -i to index.

When ./Startmush prompts you to load a flatfile, say ‘yes’ and hit
<RETURN> to have it search for flatfiles, then select netrhost.db.flat
from under the minimal-DBs/Amb-MinimalRhost directory.

The main steps to make sure you do for
~/Server/minimal-DBs/Amb-MinimalRhost/netrhost.db.flat – Ambrosia’s
secure and featured minimal db

  1. Use the matching netrhost.conf file under the Amb-MinimalRhost/game
     directory

  2. Load in the settings specified in the Amb-MinimalRhost/bin
     directory.

       1. Copy this file into your ~/Server/bin directory

       2. From ‘Server’ directory type: make clean

       3. From ‘Server’ directory type: make confsource and ‘l’oad
          option 0

       4. Specify any -additional- options you want at this point.

       5. Recompile your code

  3. Copy the files in Amb-MinimalRhost/game/txt into your
     ~/Server/game/txt directory

  4. from your ~/Server/game txt file run on each of the txt files:

          ../mkindx <txtfile>.txt <txtfile>.indx

     Note: Where <txtfile> is the name of the file (minus the .txt
     extension)

  1. If running, @reboot your game.


File: rhostmushhandbook.info,  Node: Option 3 Creating a new game with the generic default database,  Prev: Options 2 Creating a new game with Ambrosia’s default database,  Up: Three Options for Starting a MUSH

1.11.3 Option 3: Creating a new game with the generic default database
----------------------------------------------------------------------

     Copy the netrhost.conf from minimal-DBs/minimal_db to your game
     directory.

     When ./Startmush prompts you to load a flatfile, say ‘yes’ and hit
     <RETURN> to have it search for flatfiles, then select
     netrhost.db.flat from under the minimal-DBs/minimal_db directory.


File: rhostmushhandbook.info,  Node: Starting your MUSH,  Prev: Three Options for Starting a MUSH,  Up: Installing RhostMUSH

1.12 Starting your MUSH
=======================

Once you have used one of these three methods to obtaina database, you
can start your mush up.  At this point type from the game directory:

     ./Startmush


File: rhostmushhandbook.info,  Node: What RhostMUSH is about and what’s so great about RhostMUSH,  Next: Comparison of modern MUSH servers,  Prev: Installing RhostMUSH,  Up: Top

2 What RhostMUSH is about and what’s so great about RhostMUSH
*************************************************************

RhostMUSH was founded in 1989, originally by Natasha Davis (Nyctasia)
and as a branch from the original release of TinyMUD code.  It was her
desire to make a game that was flexible, with multiple levels of
progression and highly customizeable.  She lost time and interest and
passed the game to Steve Shivers (Seawolf), Mike McDermott (Thorin), and
Jace Hoppel (Ashen-Shugar)

Through their work, the stability improved, we fixed it to be
multi-platform and as bug free as we could possibly make it.  We
introduced several methods both in game and in source that allowed
consistent memory bounds checking and various alerts for any mischievous
naughtyness in-game or possibilities of any hacks, patches, or
alterations in the code causing leaks or issues.

While not perfect, it has allowed us to have an absolutely outstanding
turn around for any bugs sent our way, which anyone who uses RhostMUSH
will attest to.

Over the years, others have joined the RhostMUSH team, including
Ambrosia (who is the current dev lead), Lensman, Kage (who kindly
provided the UTF8/unicode port), Jeff/Loki, Rook, Noltar, and Odin.

We also have had hundreds of people who have offered (and provided)
help, patches, suggestions, bug fixes, and alternations all on their own
and every single one will have had their name mentioned in the
RHOST.CHANGES file in the readme directory.  It’s far too large to have
in the online help files.

RhostMUSH today provides an amazing tool that allows nearly entire
customization in-game of every single feature available in Rhost without
having the requirement to modify the hardcode.  This includes but is not
limited to:

* Menu:

* Recycle bin::
* @snapshot::
* Wizard and Immortals by default::
* Titles and Captions to a player’s name::
* Have an alternate name with locks for NPC obfuscation::
* Have multiple player aliases::
* Actively control how dark works both game-wide and individually::
* Make config file changes in-game without having to reboot or have shell access::
* Execute any binary or script as a localized function::
* Customized percent substitutions (like %n, %#, etc): Customized percent substitutions like %n %# etc.
* Redefine percent substitutions (like %n, %#, etc): Redefine percent substitutions like %n %# etc.
* Localize command and function overrides in a sandbox::
* Multiple Zones::
* Optionally control, enable, or disable sideeffects: Optionally control enable or disable sideeffects.
* Have 31 cross-interactive realities for locations::
* Override any command with softcode::
* The abilility to raise or lower permissions on the various::
* Customize new commands on the connect screen::
* Softcode any txt file (like connect.txt): Softcode any txt file like connect txt.
* Advanced tracing methods for debugging your code including labels!::
* Built in pretty-printing of attributes with the parenmatch() function: Built in pretty-printing of attributes with the parenmatch function.
* Plenty more not mentioned!::
* Advanced features of RhostMUSH::
* Random notes and things to know about RhostMUSH::


File: rhostmushhandbook.info,  Node: Recycle bin,  Next: @snapshot,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.1 Recycle bin
===============

     Yup, you guessed it.  RhostMUSH has a windows like recycle bin.
     This means the objects you @nuke and @destroy become ‘destroyed’
     but not recycled until they are @purged.  If you use the Myrddin
     CRON in the Mushcode directory, it by default sets up a job to
     purge anything over 30 days old, which should be more than
     sufficient for any needs.  The goodness of this?  You can recover
     nuked things from any period of time, as long as they were not
     @purged first.

     Commands: @purge, @nuke, @destroy, @recover, @reclist


File: rhostmushhandbook.info,  Node: @snapshot,  Next: Wizard and Immortals by default,  Prev: Recycle bin,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.2 @snapshot
=============

     Live image snapshots to unload or load to and from disk.  As many
     snapshots as you want, as often as you want.  It essentially does a
     flatfile dump of a dbref#.  Great for backups or cross-Rhost
     portability.

     Command: @snapshot


File: rhostmushhandbook.info,  Node: Wizard and Immortals by default,  Next: Titles and Captions to a player’s name,  Prev: @snapshot,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.3 Wizard and Immortals by default
===================================

        * are spoofable.  Meaning all their @pemits by default will not
          trigger NOSPOOF. If you do not wish this, set the SPOOF flag
          this applies to anyone below their level.

        * override all locks.  There’s two flags to disable this.
          NO_OVERRIDE to stop overriding all locks (including attribs)
          and NO_USELOCK to just stop overriding uselocks.  This applies
          to anything their level and lower.

        * optionally cloak from all non-immortals/God player.  This can
          be highly abused if not careful and there is a @depower to
          disable cloaking and/or dark that will disable this.

        * immortals can optionally supercloak from even wizards.  this
          can not be disabled, and you must consider that immortals
          should be treated as the God player (#1) since they are
          effectively #1 in nearly every way.


File: rhostmushhandbook.info,  Node: Titles and Captions to a player’s name,  Next: Have an alternate name with locks for NPC obfuscation,  Prev: Wizard and Immortals by default,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.4 Titles and Captions to a player’s name
==========================================

     @caption and @titlecaption


File: rhostmushhandbook.info,  Node: Have an alternate name with locks for NPC obfuscation,  Next: Have multiple player aliases,  Prev: Titles and Captions to a player’s name,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.5 Have an alternate name with locks for NPC obfuscation
=========================================================

     @altname @lock/altname


File: rhostmushhandbook.info,  Node: Have multiple player aliases,  Next: Actively control how dark works both game-wide and individually,  Prev: Have an alternate name with locks for NPC obfuscation,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.6 Have multiple player aliases
================================

     As well as a method to reserve player names per player w/o
     revealing who has what name.

     @protect


File: rhostmushhandbook.info,  Node: Actively control how dark works both game-wide and individually,  Next: Make config file changes in-game without having to reboot or have shell access,  Prev: Have multiple player aliases,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.7 Actively control how dark works both game-wide and individually
===================================================================

     @depower dark

     @admin allow_whodark, sweep_dark, command_dark, lcon_checks_dark,
     secure_dark, see_owned_dark, idle_wiz_dark, player_dark

     @toggle snuffdark

     @flagdef to redefine who and what can set the DARK flag


File: rhostmushhandbook.info,  Node: Make config file changes in-game without having to reboot or have shell access,  Next: Execute any binary or script as a localized function,  Prev: Actively control how dark works both game-wide and individually,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.8 Make config file changes in-game without having to reboot or have shell access
==================================================================================

     @admin admin_object


File: rhostmushhandbook.info,  Node: Execute any binary or script as a localized function,  Next: Customized percent substitutions like %n %# etc,  Prev: Make config file changes in-game without having to reboot or have shell access,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.9 Execute any binary or script as a localized function
========================================================

     EXECSCRIPT (power), SIDEFX (flag)


File: rhostmushhandbook.info,  Node: Customized percent substitutions like %n %# etc,  Next: Redefine percent substitutions like %n %# etc,  Prev: Execute any binary or script as a localized function,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.10 Customized percent substitutions (like %n, %#, etc)
========================================================

     @admin sub_include, @hook


File: rhostmushhandbook.info,  Node: Redefine percent substitutions like %n %# etc,  Next: Localize command and function overrides in a sandbox,  Prev: Customized percent substitutions like %n %# etc,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.11 Redefine percent substitutions (like %n, %#, etc)
======================================================

     @admin sub_override, @hook


File: rhostmushhandbook.info,  Node: Localize command and function overrides in a sandbox,  Next: Multiple Zones,  Prev: Redefine percent substitutions like %n %# etc,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.12 Localize command and function overrides in a sandbox
=========================================================

     @icmd, @lfunction, subeval(), sandbox()


File: rhostmushhandbook.info,  Node: Multiple Zones,  Next: Optionally control enable or disable sideeffects,  Prev: Localize command and function overrides in a sandbox,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.13 Multiple Zones
===================

     Have multiple zones which can optionally belong to multiple targets
     (multiple zones per target allowable!)

     @zone, zones, lzone(), zonecmd()


File: rhostmushhandbook.info,  Node: Optionally control enable or disable sideeffects,  Next: Have 31 cross-interactive realities for locations,  Prev: Multiple Zones,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.14 Optionally control, enable, or disable sideeffects
=======================================================

     @admin sideeffects, SIDEFX (flag)


File: rhostmushhandbook.info,  Node: Have 31 cross-interactive realities for locations,  Next: Override any command with softcode,  Prev: Optionally control enable or disable sideeffects,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.15 Have 31 cross-interactive realities for locations
======================================================

     This works as a truly independant and self-contained environment.
     A room can have 31 ‘layers’, each ‘layer’ is a reality in the same
     physical space.  These layers can work independently or allow
     interaction with other layers for vast customization.  This affects
     all methods within the game including all matching, looking,
     $commands, listens, movement, interaction, pretty much every single
     aspect of mushing.

     REALITY LEVELS


File: rhostmushhandbook.info,  Node: Override any command with softcode,  Next: The abilility to raise or lower permissions on the various,  Prev: Have 31 cross-interactive realities for locations,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.16 Override any command with softcode
=======================================

     @admin access (check ignore)

     Master room $commands to then override the hardcode


File: rhostmushhandbook.info,  Node: The abilility to raise or lower permissions on the various,  Next: Customize new commands on the connect screen,  Prev: Override any command with softcode,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.17 The abilility to raise or lower permissions on the various
===============================================================

     staff bitlevels for each player.

     @power, @depower, TOGGLES, FLAGS


File: rhostmushhandbook.info,  Node: Customize new commands on the connect screen,  Next: Softcode any txt file like connect txt,  Prev: The abilility to raise or lower permissions on the various,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.18 Customize new commands on the connect screen
=================================================

     @admin file_object2


File: rhostmushhandbook.info,  Node: Softcode any txt file like connect txt,  Next: Advanced tracing methods for debugging your code including labels!,  Prev: Customize new commands on the connect screen,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.19 Softcode any txt file (like connect.txt)
=============================================

     and have it evaluate in-game.  It evaluates as the object it is on.

     @admin file_object


File: rhostmushhandbook.info,  Node: Advanced tracing methods for debugging your code including labels!,  Next: Built in pretty-printing of attributes with the parenmatch function,  Prev: Softcode any txt file like connect txt,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.20 Advanced tracing methods for debugging your code including labels!
=======================================================================

     Commands: @label

     Functions: parenmatch(), trace()

     Toggles: CPUTIME

     Flags: TRACE

     Attributes: TRACE_GREP, TRACE, TRACE_COLOR, TRACE_COLOR_<attr>

     Substitutions: %_


File: rhostmushhandbook.info,  Node: Built in pretty-printing of attributes with the parenmatch function,  Next: Plenty more not mentioned!,  Prev: Advanced tracing methods for debugging your code including labels!,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.21 Built in pretty-printing of attributes with the parenmatch() function
==========================================================================

Example Code Output:

     @emit [add(1,sub(2,div(3,4)),5)];@emit [extract(get(me/foo),3,1)

     Example Pretty Print:
     @emit [
        add(
           1,sub(
              2,div(
                 3,4
              )
           ),5
        )
     ];@emit [
        extract(
           get(
              me/foo
           ),3,1
        )
     ]


File: rhostmushhandbook.info,  Node: Plenty more not mentioned!,  Next: Advanced features of RhostMUSH,  Prev: Built in pretty-printing of attributes with the parenmatch function,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.22 Plenty more not mentioned!
===============================

The flexibility to customize RhostMUSH is what is most daunting.  Don’t
fret, you don’t need to do it to run RhostMUSH successfully.  In fact,
the default configuration is mostly compatible with MUSH and will work
correctly out of the box for most needs.  For those wishing to play, of
course the sky is the limit of what you want to do.


File: rhostmushhandbook.info,  Node: Advanced features of RhostMUSH,  Next: Random notes and things to know about RhostMUSH,  Prev: Plenty more not mentioned!,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.23 Advanced features of RhostMUSH
===================================

* Menu:

* Debugging/Tracing::
* Zoning::
* Reality Levels::
* Function and Command Overriding::
* The Recycle Bin::
* Percent Substitution Adding/Overriding::
* Hooking::
* Command based uselocks::
* Differentating between command and listen locks::
* Wizard auto-overiding and how to disable it::
* Advanced FLAG and TOGGLE control::
* Advanced site control::
* Auto-Registration::
* Which bit level is best?::
* What are the limits for size/growth for RhostMUSH?::
* Sqlite and MySQL/Maria setup and why use it?::
* Executing outside scripts and binaries within RhostMUSH::
* Pulling external data into RhostMUSH::
* Integrating a unix cron right into RhostMUSH::
* Signal handling, how it works, and when and why use it: Signal handling how it works and when and why use it.
* Setting up global parents, global @parents, global attribute formatting, and other global setups: Setting up global parents global @parents global attribute formatting and other global setups.
* RhostMUSH limitations and how to get around them::
* Things other mushes can do that Rhost can not and how to emulate it::
* Advanced guest setup::
* Attribute permission masking and the joys of the power behind it::
* The amazing @cluster and what it can do for you::
* What we plan for the future::
* Additional features not covered otherwise::


File: rhostmushhandbook.info,  Node: Debugging/Tracing,  Next: Zoning,  Up: Advanced features of RhostMUSH

2.23.1 Debugging/Tracing
------------------------

        * Debugging in Rhost allows for advanced features like
          expressing where and when to do debugging via a trace()
          function, with toggled labels, and the ability to grep content
          from trace output.  There also exists features to color-match
          parenthesis, braces, and brackets in-game as well as pretty
          print the output of commands and functions.

             - help trace

             - help %_

             - help trace()

             - help parenmatch()

             - help parenstr()


File: rhostmushhandbook.info,  Node: Zoning,  Next: Reality Levels,  Prev: Debugging/Tracing,  Up: Advanced features of RhostMUSH

2.23.2 Zoning
-------------

        * Zoning in Rhost allows the same functionality of Penn and MUX,
          though the syntax is different.  It also allows the ability to
          belong to multiple zones at the same time and take advantage
          of mulitple zones at once.  This allows for increased levels
          of complexity.

             - help zones

             - help @zone

             - help zonecmd()

             - help lzone()

             - help @Lock type twink

             - help @lock type zone


File: rhostmushhandbook.info,  Node: Reality Levels,  Next: Function and Command Overriding,  Prev: Zoning,  Up: Advanced features of RhostMUSH

2.23.3 Reality Levels
---------------------

        * Reality levels allows for the ability to have a sandboxed
          ‘existance’ in each physical location across the entirity of
          the mush.  Each reality is its own sandbox and can either
          stand alone or work dependently with other realities.  A
          person can belong to multiple realities at the same time, and
          realities is geared to a method for send and receive.  Each
          ‘method’ requires to be in the given reality to affect it.

             - help reality levels

             - wizhelp chkreality

             - wizhelp reaity level

             - help @Lock type user


File: rhostmushhandbook.info,  Node: Function and Command Overriding,  Next: The Recycle Bin,  Prev: Reality Levels,  Up: Advanced features of RhostMUSH

2.23.4 Function and Command Overriding
--------------------------------------

        * Functions and commands can both be overridden with softcode.
          To override a hardcoded command you first set the command
          ignore.  There are various levels of ignoring so that you
          could have it ignored from mortals but have it executed fine
          for non-mortals.  This allows you to use the actual physical
          command within a softcode override.  You may also use @Hook
          for altering how a command works.  Functions are overridden by
          setting the function in question ignored, then writing a
          softcode alternative that is then executed and fetched
          appropriately.

          Commands:

                  - wizhelp @admin

                  - wizhelp access

                  - wizhelp permissions

                  - wizhelp @Hook

                  - wizhelp hook setup

          Functions:

                  - wizhelp @admin

                  - wizhelp function_access

                  - wizhelp @function

                  - help @lfunction

                  - wizhelp bypass()


File: rhostmushhandbook.info,  Node: The Recycle Bin,  Next: Percent Substitution Adding/Overriding,  Prev: Function and Command Overriding,  Up: Advanced features of RhostMUSH

2.23.5 The Recycle Bin
----------------------

        * Rhost has a recycle bin that works a bit like a windows
          recycle bin.  Whenever you destroy something within the mush,
          it is stacked onto the recycle bin and marked unavailable
          within the mush.  This marks the dbref# as garbage in any
          sense of the word.  However, the object is not able to be
          reused until purged.  Once purged, it is put onto a free list
          that can then be reassigned to a new object.

             - wizhelp @nuke

             - wizhelp @destroy

             - wizhelp @toad

             - wizhelp @turtle

             - wizhelp @purge

             - wizhelp @recover

             - wizhelp @reclist


File: rhostmushhandbook.info,  Node: Percent Substitution Adding/Overriding,  Next: Hooking,  Prev: The Recycle Bin,  Up: Advanced features of RhostMUSH

2.23.6 Percent Substitution Adding/Overriding
---------------------------------------------

        * Rhost allows the ability to both override percent
          substitutions as well as creating new ones.  This is done with
          @Hook and admin params and issues softcode overriding.  Due to
          how it is evaluated there is no risk of recursion.

             - wizhelp @hook

             - wizhelp hook_cmd

             - wizhelp sub_include

             - wizhelp sub_override


File: rhostmushhandbook.info,  Node: Hooking,  Next: Command based uselocks,  Prev: Percent Substitution Adding/Overriding,  Up: Advanced features of RhostMUSH

2.23.7 Hooking
--------------

        * Hooking allows you to have advanced methods to manipulate
          commands including adding customized switches to them via
          softcode.

             - wizhelp @hook

             - wizhelp hook_cmd

             - wizhelp hook_obj

             - wizhelp hook setup


File: rhostmushhandbook.info,  Node: Command based uselocks,  Next: Differentating between command and listen locks,  Prev: Hooking,  Up: Advanced features of RhostMUSH

2.23.8 Command based uselocks
-----------------------------

        * This allows you to have unique uselocks per $command.  This is
          done through the use of the USELOCK attribute flag, then you
          set up a matching attribute name with a prefix of a ~ to
          specify how the lock is to be evaluated.  This works in the
          same manner as an evaluation lock.  To be able to use the
          USELOCK attribute flag you must be empowered to do so with the
          ‘ATRUSE’ @toggle.  You may also use the secure_atruselock
          config parameter to globally enable this and not require the
          toggle to be set.

             - wizhelp atruse toggle

             - help attribute uselocks


File: rhostmushhandbook.info,  Node: Differentating between command and listen locks,  Next: Wizard auto-overiding and how to disable it,  Prev: Command based uselocks,  Up: Advanced features of RhostMUSH

2.23.9 Differentating between command and listen locks
------------------------------------------------------

        * We distinguish between commands and listens with uselocks by
          passing an optional argument to all locks that are uselocks.
          This optional argument is 0 for a default lock, 1 for a
          command lock and 2 for a listen lock.

             - help @lock type uselock


File: rhostmushhandbook.info,  Node: Wizard auto-overiding and how to disable it,  Next: Advanced FLAG and TOGGLE control,  Prev: Differentating between command and listen locks,  Up: Advanced features of RhostMUSH

2.23.10 Wizard auto-overiding and how to disable it
---------------------------------------------------

        * By default wizards override all locks, including attribute
          locks, can see all dark exits, and bypass pagelocks.  This can
          be troublesome, and even abusive, so there’s ways to disable
          this.

             - wizhelp @depower (for those abusing it)

             - wizhelp no_override (disable overiding locks)

             - wizhelp no_uselock (disable just uselock overriding)

             - wizhelp pagelock toggle (disable pagelock overriding)


File: rhostmushhandbook.info,  Node: Advanced FLAG and TOGGLE control,  Next: Advanced site control,  Prev: Wizard auto-overiding and how to disable it,  Up: Advanced features of RhostMUSH

2.23.11 Advanced FLAG and TOGGLE control
----------------------------------------

        * Flags and toggles can be controlled to have multiple
          permissions and enable/disable targets of how the flags are
          allowed to be set.  This is done through commands in-game or
          you can use conf file options to do so.

             - wizhelp @flagdef

             - wizhelp @toggledef

             - @admin @flagdef alternatives

                  - wizhelp flag_access_set

                  - wizhelp flag_access_unset

                  - wizhelp flag_access_see

                  - wizhelp flag_access_type

             - @admin @toggledef alternatives

                  - wizhelp toggle_access_set

                  - wizhelp toggle_access_unset

                  - wizhelp toggle_access_see

                  - wizhelp toggle_access_type


File: rhostmushhandbook.info,  Node: Advanced site control,  Next: Auto-Registration,  Prev: Advanced FLAG and TOGGLE control,  Up: Advanced features of RhostMUSH

2.23.12 Advanced site control
-----------------------------

        * We allow advanced site control by not only blocking various
          sites but we can specify how many times a player can be
          connected at the same time as well as how many times sites are
          able to connect at the same time.  This is done through normal
          site manipulation.

             - wizhelp forbid_host

             - wizhelp register_host

             - wizhelp noguest_host

             - wizhelp @list (site option)


File: rhostmushhandbook.info,  Node: Auto-Registration,  Next: Which bit level is best?,  Prev: Advanced site control,  Up: Advanced features of RhostMUSH

2.23.13 Auto-Registration
-------------------------

        * Autoregistration is the method that a player can auto-register
          by providing their email on the connect screen.  It will email
          them a password and an optional document that the
          administrator provides.  This is well described in the
          wizhelp.

             - wizhelp autoregistration


File: rhostmushhandbook.info,  Node: Which bit level is best?,  Next: What are the limits for size/growth for RhostMUSH?,  Prev: Auto-Registration,  Up: Advanced features of RhostMUSH

2.23.14 Which bit level is best?
--------------------------------

        * This is something that should be discussed by you and the
          staff of your game.  As a good rule of thumb, only provide the
          bitlevel that is required to do the job.  Too much power is
          always risky.  In essence, each tier of bit can do everything
          the previous bitlevel can do, and then additional stuff on top
          of it.  The highest bitlevel is #1 itself, being bitlevel 7.
          Then immortal, which should be considered the #1 character in
          most cases and is bitlevel 6.  Then the royalty character,
          which is equal to wizard on penn, mux, or other codebases.
          For most things, this is the bitlevel you want to assign
          players.  The exception will likely be game owners or people
          who control the master room code.

          There’s a bunch of readme files and online wizhelp that goes
          into detail of the various bitlevels and what each can do.

             - wizhelp control


File: rhostmushhandbook.info,  Node: What are the limits for size/growth for RhostMUSH?,  Next: Sqlite and MySQL/Maria setup and why use it?,  Prev: Which bit level is best?,  Up: Advanced features of RhostMUSH

2.23.15 What are the limits for size/growth for RhostMUSH?
----------------------------------------------------------

        * While using QDBM, there’s really no set limits for most
          things.  The limits that we have are as followed:

          LBUF - 64K. It is recommended to only use 32K as there is some
          issues with networking with 64K lbufs.

                       - Compile time option with the menu configurator

               SBUF - 64 characters (if configured – it’s suggested you
               do).

                       - Compile time option with the menu configurator

               MBUF - 200 characters.  Not able to be changed.

               MAX CONNECTIONS - Limited by the total number of open
               sockets and descriptors on the account and server running
               on.  There are various tools to limit connection DoS
               attemps and other such nastiness.  This is well
               documented in the netrhost.conf file.

                       - wizhelp max_players

                       - ~/game/netrhost.conf

               MEMORY - no limit.  Generally runs between 8-50M
               depending on the size of the mush and the LBUF size
               specified.

               CPU - no limit, but has built in cpu abort in code.  The
               netrhost.conf file documents this well for customizing.
               the default values are usually good enough.

                       - wizhelp max_cpu_cycles

                       - wizhelp cpuintervalchk

                       - wizhelp cputimechk

                       - wizhelp cpu_secure_lvl

                       - wizhelp heavy_cpu_max

                       - ~/game/netrhost.conf

               DISK - no limit.  Generally will be 75-200M depending on
               size, number of backups and if you leave your compiled
               object files in.

               DB Size - (20000 default) There is no limit on the number
               of objects the db can have.  By default it’s soft limited
               to 20K objects, which can be changed by a netrhost.conf
               file change.  We have had this up past 1.5 million
               objects, and other than a second or two of lag for
               complex searches we had no real problem.

                       - wizhelp maximum_size

                       - help @quota

                       - wizhelp @quota

                       - wizhelp @limit

               Attribute Size - 10K as a hard limit.  750 as a soft
               limit.  You can increase this but it can’t exceed 10000
               attributes.  This is to avoid DoS style attacks.

                       - wizhelp vlimit

                       - wizhelp @limit


File: rhostmushhandbook.info,  Node: Sqlite and MySQL/Maria setup and why use it?,  Next: Executing outside scripts and binaries within RhostMUSH,  Prev: What are the limits for size/growth for RhostMUSH?,  Up: Advanced features of RhostMUSH

2.23.16 Sqlite and MySQL/Maria setup and why use it?
----------------------------------------------------

        * Both of these can be configured separately or conjointly to
          run in parallel.  This can be done through the RhostMUSH
          configuration utility.  You generally want to use SQL for
          external data storage or accessing a central repository of
          data to share between multiple projects.  Like, for example
          between a wiki, a forum, and the mush.


File: rhostmushhandbook.info,  Node: Executing outside scripts and binaries within RhostMUSH,  Next: Pulling external data into RhostMUSH,  Prev: Sqlite and MySQL/Maria setup and why use it?,  Up: Advanced features of RhostMUSH

2.23.17 Executing outside scripts and binaries within RhostMUSH
---------------------------------------------------------------

        * Rhost has execscript() which allows executing outside binaries
          or scripts as a native function.  All effort has been done to
          avoid any type of DoS based issue or hang by doing this,
          however the guidelines presented should be followed before
          doing so.

             - wizhelp execscript

             - wizhelp power execscript

             - help sidefx

             - wizhelp writing scripts


File: rhostmushhandbook.info,  Node: Pulling external data into RhostMUSH,  Next: Integrating a unix cron right into RhostMUSH,  Prev: Executing outside scripts and binaries within RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.18 Pulling external data into RhostMUSH
--------------------------------------------

        * You are capable of pulling external data in to RhostMUSH using
          several methods.  These are by using:

                  - SQL (mysql or sqlite)

                  - execscript

                  - cron (wizhelp signal)


File: rhostmushhandbook.info,  Node: Integrating a unix cron right into RhostMUSH,  Next: Signal handling how it works and when and why use it,  Prev: Pulling external data into RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.19 Integrating a unix cron right into RhostMUSH
----------------------------------------------------

        * The unix cron can be used to integrate with Rhost fairly
          easilly by use of signals.  By using SIGUSR1 you can specify
          Rhost to execute code in-game, which part of that could be to
          pick up a pre-designed list of commands that the unix cron has
          set up.

             - wizhelp signal

             - wizhelp signal_cron


File: rhostmushhandbook.info,  Node: Signal handling how it works and when and why use it,  Next: Setting up global parents global @parents global attribute formatting and other global setups,  Prev: Integrating a unix cron right into RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.20 Signal handling, how it works, and when and why use it
--------------------------------------------------------------

        * Signals are used to do different things for the mush.  By
          default, the following signals are recognized by the mush and
          will do the following as defaults.

             - SIGUSR1 - will do a reboot of the mush.  This is also
               customizable so that you can have it execute code in-mush
               if you want.

             - SIGUSR2 - will do a clean shutdown of the mush.

             - SIGTERM - will immediately scram the mush as cleanly and
               fast as possible.  It will avoid dumping anything to the
               database to speed up scramming, but write a TERM flat
               file to be loaded in if corruption.


File: rhostmushhandbook.info,  Node: Setting up global parents global @parents global attribute formatting and other global setups,  Next: RhostMUSH limitations and how to get around them,  Prev: Signal handling how it works and when and why use it,  Up: Advanced features of RhostMUSH

2.23.21 Setting up global parents, global @parents, global attribute formatting, and other global setups
--------------------------------------------------------------------------------------------------------

        * Global parents are useful when you want to have a global
          ‘parent’ without actually having a defined ‘@parent
          <'@parent>’.  It always will be the highest tier in a lookup.
          The way lookups will go will be:

               self->@parent(s)->@zone(s)->GlobalParent

          The type of the parent does not have to match the target.

          These global parents can be defined either by using a global
          generic parent or by using the type.  If a type is specified
          it overrides the generic.  The following parameters are used:

                  - global_parent_obj - The generic global parent (if
                    defined)

                  - global_parent_room - The room global parent

                  - global_parent_exit - The exit global parent

                  - global_parent_thing - The thing global parent

                  - global_parent_player - The player global parent

        * Global @parents are different than global parents in that any
          new item of similar type that is created is automatically
          assigned this physical @parent.  It’s obviously more limiting
          since it sets the literal physical parent defined.

          The type of the parent does not have to match the target.

          The following parameters are used:

                  - room_parent - The target that new rooms are
                    @parented

                  - exit_parent - The target that new exits are
                    @parented

                  - thing_parent - The target that new things are
                    @parented

                  - player_parent - The target that new players are
                    @parented

        * Global attribute formatting is a method define a wrapper, of
          sorts, where attributes like @desc, @odesc, @succ, and
          anything similar can be processed through this.  All
          attributes will be either &FORMAT<attribute> or
          &<attribute>FORMAT based on the current configuration.
          Example: &FORMATDESC or &DESCFORMAT localy, or use the
          following global objects for global formatting.  Local
          formatting has priority.

          The type of the parent does not have to match the target.

                  - room_attr_default - Target for room formatting

                  - exit_attr_default - Target for exit formatting

                  - thing_attr_default - Target for thing formatting

                  - player_attr_default - Target for player formatting


File: rhostmushhandbook.info,  Node: RhostMUSH limitations and how to get around them,  Next: Things other mushes can do that Rhost can not and how to emulate it,  Prev: Setting up global parents global @parents global attribute formatting and other global setups,  Up: Advanced features of RhostMUSH

2.23.22 RhostMUSH limitations and how to get around them
--------------------------------------------------------

     While Rhost is insanely configurable and quite powerful, there are
     limitations that exist within it.

        * Function invocations.  Sometimes you will hit a ceiling on
          evaluation.  You may want to tweak values to allow more
          functions or commands to execute.  The following controls
          that:

                  - function_invocation_limit [25000 default] -
                    specifies the total functions you can execute per
                    command.

                  - function_recursion_limit [50] - specifies the total
                    times a function can call itself over and over.
                    Rarely should this be increased and doing so can
                    effect your stack depth.

        * Command queue limits.  Sometimes you want more to be queued up
          for players or wizards.

                  - player_queue_limit - Max number of entries a player
                    can queue

                  - wizard_queue_limit - Max number of entries a wizard
                    can queue

        * @limit is a wonderful way to lock down limitations per player
          or global.  Lots of power is available here.

                  - @limit

                  - vattr_limit_checkwiz - Enable @limit checks for
                    wizards

                  - wizmax_vattr_limit - Set wizard global VATTR limits

                  - wizmax_dest_limit - Set wizard global @destroy
                    limits

                  - max_vattr_limit - Set player global VATTR limits

                  - max_dest_limit - Set player global @destroy limits

        * Lots of trace output can be cut off.  You can modify this
          with:

                  - trace_output_limit - Set lines of trace output shown

        * To define how many commands a minute a player set SPAMMONITOR
          can use

             - spam_limit – default 120

        * If you examine things and see ‘Output cut off’ messages, you
          may want to increase your output limit, funny enough, the name
          of this is similar

                  - output_limit - You should set this no less than 4
                    times the current size of your LBUF.

        * Attributes names can not exceed 64 characters.  Sorry, it’s a
          hard limit

        * Sometime you may find a single may not work for an escape.
          You can in most cases use a % instead or double escape the to
          make it work.  Also look at lit() as a solution.


File: rhostmushhandbook.info,  Node: Things other mushes can do that Rhost can not and how to emulate it,  Next: Advanced guest setup,  Prev: RhostMUSH limitations and how to get around them,  Up: Advanced features of RhostMUSH

2.23.23 Things other mushes can do that Rhost can not and how to emulate it
---------------------------------------------------------------------------

* Menu:

* PennMUSH::
* MUX::


File: rhostmushhandbook.info,  Node: PennMUSH,  Next: MUX,  Up: Things other mushes can do that Rhost can not and how to emulate it

2.23.23.1 PennMUSH
..................

        - Attribute trees.  These are emulated as a base set and can be
          duplicated enough to at least port code.

        - lsearch() will have to be recoded to search()

        - align() will have to be recoded to printf()

        - Penn allows empty attributes.  Rhost does not.  Work will have
          to be done to take this into consideration.

        - All *val() functions in Penn that are used will have to be
          remapped to a non-*val() function.  It should be as simple as
          function_alias to the non-*val.  Example:

               @admin function_alias=hasattrval hasattr

        - Penn’s hardcoded comsystem is emulated with the softcode
          comsys

        - Penn’s @mail system is workable with mail wrappers

        - Pueblo is not supported.

        - json is not supported.

        - ssl is not natively supported (yet), see section XIV

        - This uses @shutdown/restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: MUX,  Prev: PennMUSH,  Up: Things other mushes can do that Rhost can not and how to emulate it

2.23.23.2 MUX
.............

        - Mux has an async mysql database engine.  This is not possible
          with Rhost.  You’ll have to use the sync method instead.

        - UTF8 is supported but internally passed differently.

        - Mux’s hardcoded comsystem is emulated with the softcode comsys

        - MUX’s @mail system is workable with mail wrappers

        - Pueblo is not supported.

        - This uses @restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: Advanced guest setup,  Next: Attribute permission masking and the joys of the power behind it,  Prev: Things other mushes can do that Rhost can not and how to emulate it,  Up: Advanced features of RhostMUSH

2.23.24 Advanced guest setup
----------------------------

        * After you set up your guests, you can set unique names to each
          guest if you so want after defining the dbref#’s your guests
          use.  This is done by defining them in the guest_namelist
          parameter.  You can also increase guests (or decrease them)
          between 0-31 guests.

                  - wizhelp guest_namelist

                  - wizhelp num_guests


File: rhostmushhandbook.info,  Node: Attribute permission masking and the joys of the power behind it,  Next: The amazing @cluster and what it can do for you,  Prev: Advanced guest setup,  Up: Advanced features of RhostMUSH

2.23.25 Attribute permission masking and the joys of the power behind it
------------------------------------------------------------------------

        * Attribute contentlocks can be set up so you can lock the
          actual content that you can set (or even unset!)  into an
          attribute.  The beauty of this is that you can specify case
          sensitive information, lock different ways contents in
          attributes are set based on who is setting it, or even on
          where it’s being set.  The sky’s the limit.

                  - global_attrdefault - Target for defining content
                    locks


File: rhostmushhandbook.info,  Node: The amazing @cluster and what it can do for you,  Next: What we plan for the future,  Prev: Attribute permission masking and the joys of the power behind it,  Up: Advanced features of RhostMUSH

2.23.26 The amazing @cluster and what it can do for you
-------------------------------------------------------

        * Clusters is the way to virtually assign multiple objects into
          a single physical object.  It essentially chains together two
          or more objects to share attributes between them, so that any
          attribute set on any object in that cluster can be set or
          fetched as if it was a singular entity.  This allows some
          amazing ability to distribute attribute content or even have a
          farm of a massive amount of attributes without paying a hefty
          penalty on object bloat.

                  - help cluster – Gives a fantastic overview of how
                    clusters work.


File: rhostmushhandbook.info,  Node: What we plan for the future,  Next: Additional features not covered otherwise,  Prev: The amazing @cluster and what it can do for you,  Up: Advanced features of RhostMUSH

2.23.27 What we plan for the future
-----------------------------------

        * Things to look forward to the future with RhostMUSH.

             - Full Unicode/UTF8 in Rhost 4.0

             - A fully featured tag system in Rhost 4.0

             - Built in Python API handler in Rhost 4.0

             - Hopefully a built in Ruby and Perl API in Rhost 4.0/4.1

             - Cross-Mush execution between mushes in Rhost 4.1

             - More as we think about it :)


File: rhostmushhandbook.info,  Node: Additional features not covered otherwise,  Prev: What we plan for the future,  Up: Advanced features of RhostMUSH

2.23.28 Additional features not covered otherwise
-------------------------------------------------

        * +/- 5.4 million years can be utilized with the built in time
          functions which includes timefmt(), secs(), convtime(),
          convsecs(), and moon().  Party on!

        * Changing permission levels in the middle of execution for
          evaluation.

                  - see help on the streval and ueval function’

        * Full features in-game customization of near every aspect of
          the game.


File: rhostmushhandbook.info,  Node: Random notes and things to know about RhostMUSH,  Prev: Advanced features of RhostMUSH,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.24 Random notes and things to know about RhostMUSH
====================================================

Here are some things to know about RhostMUSH and what you may or may not
want to do.  Things here are not covered in other documents:

Admin toggles to configure the WHO, various things you’re used to, etc
is in the ‘netrhost.conf’ file.  descriptions Notes in the autoconf.h
file is in the README.AUTOCONF file.

* Menu:

* Note on bits, their levels, and things they do: Note on bits their levels and things they do.
* You need to @pcreate your guest characters and set them GUEST::
* @powers are INHERITED::
* @depowers are automatically checked first before anything else::
* Zones are unique::
* The db auto-repares itself when it can::
* You can get your connect.txt to parse ansi: You can get your connect txt to parse ansi.
* Re-compiled binaries do not require an @shutdown::
* Softcode emulations of functions from other servers are included::


File: rhostmushhandbook.info,  Node: Note on bits their levels and things they do,  Next: You need to @pcreate your guest characters and set them GUEST,  Up: Random notes and things to know about RhostMUSH

2.24.1 Note on bits, their levels, and things they do
-----------------------------------------------------

     IMMORTAL - They can do anything.  Treat this as #1 and only give to
     people you trust.  Period.  You don’t have to use this bit if you
     do not want to and just assume #1.

     ROYALTY - Unlike PENN/MUX, this is `not' a sub-wizard, this is a
     FULL wizard.  Plus, they can do a bit more.

     COUNCILOR - Like royalty on PENN/MUX but they can modify.

     ARCHITECT - Can’t do as much as councilor, but lot more than
     BUILDER.

     GUILDMASTER - Very limited.  Sees dbrief#’s, can ex things their
     level and lower and @quota players.


File: rhostmushhandbook.info,  Node: You need to @pcreate your guest characters and set them GUEST,  Next: @powers are INHERITED,  Prev: Note on bits their levels and things they do,  Up: Random notes and things to know about RhostMUSH

2.24.2 You need to @pcreate your guest characters and set them GUEST
--------------------------------------------------------------------

     It doesn’t create them on the fly but we considered this better.
     You have 31 total you can have.  It defaults to 10 in the
     netrhost.conf file.  You can rename the guests anything you want,
     but before you do so, you must add the dbref#’s to the param
     guest_namelist


File: rhostmushhandbook.info,  Node: @powers are INHERITED,  Next: @depowers are automatically checked first before anything else,  Prev: You need to @pcreate your guest characters and set them GUEST,  Up: Random notes and things to know about RhostMUSH

2.24.3 @powers are INHERITED
----------------------------

     Therefore, you need power_objects enabled (@admin) to make this
     work properly for non-plauyers.  A power is taken before a bit
     level ONLY if higher than that bit.  Yes, powers are multi-level.


File: rhostmushhandbook.info,  Node: @depowers are automatically checked first before anything else,  Next: Zones are unique,  Prev: @powers are INHERITED,  Up: Random notes and things to know about RhostMUSH

2.24.4 @depowers are automatically checked first before anything else
---------------------------------------------------------------------

     This is also meaningless on objects.


File: rhostmushhandbook.info,  Node: Zones are unique,  Next: The db auto-repares itself when it can,  Prev: @depowers are automatically checked first before anything else,  Up: Random notes and things to know about RhostMUSH

2.24.5 Zones are unique
-----------------------

     You can have things in multiple zones.


File: rhostmushhandbook.info,  Node: The db auto-repares itself when it can,  Next: You can get your connect txt to parse ansi,  Prev: Zones are unique,  Up: Random notes and things to know about RhostMUSH

2.24.6 The db auto-repares itself when it can
---------------------------------------------

     It does this by purging anything it can’t identify.  Dataloss is
     better than unrecoverable data.  Yes, any such ‘repairing’ is
     logged so you know if something is up.


File: rhostmushhandbook.info,  Node: You can get your connect txt to parse ansi,  Next: Re-compiled binaries do not require an @shutdown,  Prev: The db auto-repares itself when it can,  Up: Random notes and things to know about RhostMUSH

2.24.7 You can get your connect.txt to parse ansi
-------------------------------------------------

     See ansi_txtfiles in wizhelp.

     You can also override it with softcode if you so wanted.

     See file_object in wizhelp for more information on this.


File: rhostmushhandbook.info,  Node: Re-compiled binaries do not require an @shutdown,  Next: Softcode emulations of functions from other servers are included,  Prev: You can get your connect txt to parse ansi,  Up: Random notes and things to know about RhostMUSH

2.24.8 Re-compiled binaries do not require an @shutdown
-------------------------------------------------------

     When re-compiling the binaries, all you have to remember is when
     done, issue

     @reboot on the game and @readcache.

     You do not need to @shutdown.


File: rhostmushhandbook.info,  Node: Softcode emulations of functions from other servers are included,  Prev: Re-compiled binaries do not require an @shutdown,  Up: Random notes and things to know about RhostMUSH

2.24.9 Softcode emulations of functions from other servers are included
-----------------------------------------------------------------------

     Load the file softfunctions into the mush once it’s set up.  This
     are @functions that will alias the functions that PENN, MUX, and
     TinyMUSH have that is either named differently or we don’t have for
     one reason or another.


File: rhostmushhandbook.info,  Node: Comparison of modern MUSH servers,  Next: Database,  Prev: What RhostMUSH is about and what’s so great about RhostMUSH,  Up: Top

3 Comparison of modern MUSH servers
***********************************

* Menu:

* Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH: Differences to expect to the end user between PennMUSH MUX and RhostMUSH.
* Comparison of features between RhostMUSH, PennMUSH, and MUX2: Comparison of features between RhostMUSH PennMUSH and MUX2.
* Organization of help and wizhelp::
* Mail, comsystem, guests, master rooms, etc..: Mail comsystem guests master rooms etc.
* Comparisons of features::
* @commands with equivalents::
* @commands unique to RhostMUSH::
* @lock equivalents::
* @locks that only exist in RhostMUSH::
* Flag and toggle equivalents::
* Flags and toggles that only exist in RhostMUSH::
* @power equivalents::
* Functions equivalents::
* What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost.
* Things other mushes can do that Rhost can not and how to emulate it: Things other mushes can do that Rhost can not and how to emulate it<2>.


File: rhostmushhandbook.info,  Node: Differences to expect to the end user between PennMUSH MUX and RhostMUSH,  Next: Comparison of features between RhostMUSH PennMUSH and MUX2,  Up: Comparison of modern MUSH servers

3.1 Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH
==============================================================================

The largest end user experience will mostly resolve around some look and
feel.  The general look and feel of how to set attributes, work with
commands and functions, and getting around a grid will be identical
between the mush flavors.  @nuke and @destroy will work somewhat
differently between the three codebases and some effort should be looked
at on how different it behaves.

* Menu:

* PennMUSH: PennMUSH<2>.
* MUX: MUX<2>.
* RhostMUSH::


File: rhostmushhandbook.info,  Node: PennMUSH<2>,  Next: MUX<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.1 PennMUSH
--------------

   - The way the comsystem (hardcode) works with the latest PennMUSH has
     some compatibility now with MUX’s comsystem.

   - The @mail system is different to MUX and Rhost.

   - Debugging code uses DEBUG and has an indented format.

   - The parser for code doesn’t require nested escaping like other
     codebases, but has issues with the pre-parser and nesting.

   - All standard movement, attribute setting, other should be similar

   - Penn allows empty attributes.

   - Penn supports attribute trees.

   - Penn has the standard set of bitlevel flags with on/off @powers


File: rhostmushhandbook.info,  Node: MUX<2>,  Next: RhostMUSH,  Prev: PennMUSH<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.2 MUX
---------

   - The comsystem (hardcode) is unique to MUX/TinyMUSH3 and is not
     compatible with Penn.

   - The @mail system is unique to MUX/TinyMUSH3 and is not compatible
     with Penn.

   - Debugging uses TRACE and is the old standard for debugging.

   - The parser requires extra escaping for nested escaping but handles
     pre-parsing and nesting fine.

   - MUX does not allow empty attributes.

   - MUX does not support attribute trees.

   - MUX has the standard set of bitlevel flags with on/off @powers


File: rhostmushhandbook.info,  Node: RhostMUSH,  Prev: MUX<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.3 RhostMUSH
---------------

   - The comsystem (softcode) is in the Mushcode directory and is
     compatible to both PennMUSH and MUX.

   - The mail system is unique to Rhost but there exists mail wrappers
     that allow MUX and Penn compatibility.

   - Debugging uses TRACE and is the old standard for debugging.  It
     allows advanced features like labeling and grepping for content.

   - The parser requires extra escaping for nested escaping but handles
     pre-parsing and nesting fine.

   - Rhost does not allow empty attributes.

   - Rhost marginally supports attribute trees.

   - Rhost has a multi-level set of bitlevel flags with multi-tier
     @powers, @depowers, and varying other tools for permissions.


File: rhostmushhandbook.info,  Node: Comparison of features between RhostMUSH PennMUSH and MUX2,  Next: Organization of help and wizhelp,  Prev: Differences to expect to the end user between PennMUSH MUX and RhostMUSH,  Up: Comparison of modern MUSH servers

3.2 Comparison of features between RhostMUSH, PennMUSH, and MUX2
================================================================

There are differences in the initial set up from Rhost to PennMUSH (and
MUX2).

A lot of people use PennMUSH and if you are one of them, this may help
you.  Some people use MUX2, hopefully this will help you as well.

NOTE: If you plan to use sideeffects, you must set the SIDEFX flag to allow

     the target to use it

NOTE: Rhost does support UNICODE/UTF8, but it’s currently not part of the main

     branch as of this writing.  Please talk to Kage on the dev site for
     more information on when it’ll be released.


File: rhostmushhandbook.info,  Node: Organization of help and wizhelp,  Next: Mail comsystem guests master rooms etc,  Prev: Comparison of features between RhostMUSH PennMUSH and MUX2,  Up: Comparison of modern MUSH servers

3.3 Organization of help and wizhelp
====================================

First, on PennMUSH, help is separated into ‘help’ and ‘wizhelp’.  This
can be confusing.  If you want to ‘combine’ them, you may use the
following snippit:

$ahelp*:@pemit
%#=[switch([!!words(%0)][match(/search,%0*)],0?,[setq(0,help)][setq(1,0)],11,[setq(0,rest(%0))][setq(1,2)],setq(0,trim(%0)))][setq(a,textfile(help,%q0,%q1))][setq(b,textfile(wizhelp,%q0,%q1))][setq(2,)][ifelse(!strmatch(%qa,No
entry*),%qa[setq(2,%r)])][ifelse(!strmatch(%qb,No
entry*),%q2%qb[setq(2,%r)])][ifelse(!$r(2),No topics found for ‘%q0’.)]

This will display help from help and wizhelp for any matching topic.  It
should make life easier for you.  This also honors the /search switch.


File: rhostmushhandbook.info,  Node: Mail comsystem guests master rooms etc,  Next: Comparisons of features,  Prev: Organization of help and wizhelp,  Up: Comparison of modern MUSH servers

3.4 Mail, comsystem, guests, master rooms, etc..
================================================

The comsystem is softcode and included in the readme directory.
(comsys).  Just load it in.  The mail wrappers can be gotten from:

     The Mushcode directory in the Rhost Distribution.

Please see the other readme files on setting other things up like
guests, master rooms, and so forth.


File: rhostmushhandbook.info,  Node: Comparisons of features,  Next: @commands with equivalents,  Prev: Mail comsystem guests master rooms etc,  Up: Comparison of modern MUSH servers

3.5 Comparisons of features
===========================

Comparisons were done based on the following: RhostMUSH 3.9.5p2 MUX
2.12.0.2 PennMUSH 1.8.6p0


File: rhostmushhandbook.info,  Node: @commands with equivalents,  Next: @commands unique to RhostMUSH,  Prev: Comparisons of features,  Up: Comparison of modern MUSH servers

3.6 @commands with equivalents
==============================

The following are used for compatibility to keep in mind:

@commands Pennmush—————-RhostMUSH———————-MUX2

     @@ @@ @@ @ALLHALT @halt/all @HALT/ALL @ALLQUOTA @quota/all
     @QUOTA/ALL @ALIAS @alias/@protect @ALIAS N/A @apply_marked
     @APPLY_MARKED @ASSERT @assert @ASSERT @ATRCHOWN @chown @CHOWN
     @ATRLOCK @lock @LOCK @ATTRIBUTE @attribute @ATTRIBUTE N/A (see
     backup_flat.sh) @BACKUP @BOOT @boot @BOOT @BREAK @break @BREAK N/A
     N/A @CCHARGE N/A N/A @CCHOWN @CEMIT (softcode) @CEMIT @CHANNEL N/A
     N/A @CHAT N/A N/A @CHOWNALL @chownall @CHOWNALL @CHZONE @zone
     @CHZONE @CHZONEALL @zone N/A @CLOCK N/A N/A @CLONE @clone @CLONE
     N/A N/A @CCREATE N/A N/A @CDESTROY N/A N/A @CWHO @COMMAND N/A N/A
     @CONFIG @admin @ADMIN N/A N/A @COFLAGS N/A N/A @CPFLAGS N/A N/A
     @CSET @CPATTR @cpattr @CPATTR @CREATE @create @CREATE N/A @cut @CUT
     @DBCK @dbck @DBCK @DECOMPILE @decompile @DECOMPILE @DESTROY
     @destroy @DESTROY @DIG @dig @DIG @DISABLE @disable @DISABLE @DOING
     @doing @DOING @DOLIST @dolist @DOLIST @DRAIN @drain @DRAIN @DUMP
     @dump @DUMP @EDIT @edit @EDIT @ELOCK @lock/enter @LOCK/ENTER @EMIT
     @emit @EMIT N/A N/A @EMAIL @ENABLE @enable @ENABLE @ENTRANCES
     @entrances @ENTRANCES @EUNLOCK @unlock/enter @UNLOCK/ENTER N/A
     @eval @EVAL N/A @femit @FEMIT N/A @fpose @FPOSE N/A @fsay @FSAY
     @FIND @find @FIND @FIRSTEXIT N/A N/A @FLAG @flag @FLAG @FORCE
     @force @FORCE N/A folder @FOLDER @FUNCTION @function/@lfunction
     @FUNCTION @GREP @grep N/A @HALT @halt @HALT @HIDE @hide N/A @HOOK
     @hook @HOOK @INCLUDE @include N/A N/A @skip/ifelse @IF @KICK @kick
     @KICK N/A @last @LAST @LEMIT @lemit @LEMIT @LINK @link @LINK @LIST
     @list @LIST N/A @list_file @LIST_FILE @LISTMOTD @listmotd @LISTMOTD
     @LOCK @lock @LOCK @LOG @log @LOG @LOGWIPE N/A N/A @LSET @set @SET
     N/A @mark @MARK N/A @mark_all @MARK_ALL @MAIL mail @MAIL @MALIAS
     wmail/alias @MALIAS @MAPSQL N/A N/A @MESSAGE @pemit/@remit +
     parsestr() N/A @MONIKER @extansi @MONIKER @MOTD @motd @MOTD @MVATTR
     @mvattr @MVATTR @NAME @name @NAME N/A @emit/noeval @NEMIT N/A
     @pemit/noeval @NPEMIT @NEWPASSWORD @newpassword @NEWPASSWORD
     @NOTIFY @notify @NOTIFY @NSCEMIT N/A N/A @NSEMIT @emit @emit
     @NSLEMIT @lemit @LEMIT @NSOEMIT @oemit @OEMIT @NSPEMIT @pemit
     @PEMIT @NSPROMPT N/A N/A @NSREMIT @remit @REMIT @NSZEMIT @zemit N/A
     @NUKE @destroy/@nuke @DESTROY/@NUKE @OEMIT @oemit @OEMIT @OPEN
     @open @OPEN @PARENT @parent @PARENT @PASSWORD @password @PASSWORD
     @PCREATE @pcreate @PCREATE @PEMIT @pemit @PEMIT @POLL @doing/header
     @POLL @POOR @poor @POOR @POWER @power @POWER @PROMPT N/A
     (@program?)  N/A (@program?)  N/A @program @PROGRAM @PS @ps @PS
     @PURGE @timewarp/dump 1 @TIMEWARP/DUMP 1 N/A @quitprogram
     @QUITPROGRAM @QUOTA @quota @QUOTA N/A N/A @QUERY @READCACHE
     @readcache @READCACHE @RECYCLE @purge N/A N/A N/A @REFERENCE N/A
     @robot @ROBOT @REJECTMOTD @rejectmotd @REJECTMOTD @REMIT @remit
     @REMIT @RESTART @reboot @RESTART @RETRY N/A N/A @RWALL @wall/wiz
     @WALL/WIZ @SCAN (see softcode) N/A @SEARCH @search @SEARCH @SELECT
     @switch/first @SWITCH/FIRST @SET @set @SET @SHUTDOWN @shutdown
     @SHUTDOWN @SITELOCK @admin forbid_host/forbid_site @admin
     forbid_site @SLAVE N/A @STARTSLAVE @SOCKSET N/A N/A @SQL (only if
     MySQL enabled) @QUERY @SQUOTA @quota N/A @STATS @stats @STATS
     @SWEEP @sweep @SWEEP @SWITCH @switch @SWITCH N/A @timewarp
     @TIMEWARP @TELEPORT @teleport @TELEPORT N/A @timecheck @TIMECHECK
     N/A @toad @TOAD @TRIGGER @trigger @TRIGGER @ULOCK @lock/use
     @LOCK/USE @UNDESTROY @recover N/A @UNLINK @unlink @UNLINK @UNLOCK
     @unlock @UNLOCK @UNRECYCLE @recover N/A @UPTIME @uptime @UPTIME
     @UUNLOCK @unlock/use @UNLOCK/USE @VERB @verb @VERB @VERSION
     @version VERSION @WAIT @wait @WAIT @WALL @wall @WALL @WARNINGS N/A
     N/A @WCHECK N/A N/A @WEBPASSWD N/A N/A @WHEREIS @whereis N/A @WIPE
     @wipe @WIPE @WIZMOTD @wizmotd @WIZMOTD @WIZWALL @wall/wiz @WALL/WIZ
     @ZEMIT @zemit N/A N/A (softcode) ALLCOM N/A (softcode) COMLIST N/A
     (softcode) DELCOM N/A (softcode) ADDCOM N/A (softcode) COMTITLE
     ANEWS @dynhelp N/A ATTRIB_SET (@hook on S) (@hook on S) BRIEF
     ex/brief EX/BRIEF BUY N/A N/A N/A N/A CLEARCOM DESERT (see follow
     softcode) N/A DISMISS (see follow softcode) N/A DOING doing DOING
     DROP drop DROP EMPTY @tel/list lcon(target)=me @tel/list
     lcon(target)=me ENTER enter ENTER EXAMINE examine EXAMINE FOLLOW
     (see follow softcode) N/A GET get GET GIVE give GIVE GOTO goto GOTO
     HELP help/wizhelp HELP/WIZHELP HOME home HOME HUH_COMMAND @admin
     global_error_obj @admin global_error_obj INFO INFO INFO INVENTORY
     inventory INVENTORY KILL kill KILL LEAVE leave LEAVE LOGOUT logout
     LOGOUT LOOK look LOOK NEWS news NEWS N/A outputprefix OUTPUTPREFIX
     N/A outputsuffix OUTPUTSUFFIX PAGE page/lpage/rpage/mrpage PAGE
     POSE pose POSE N/A N/A PUEBLOCLIENT QUIT quit QUIT N/A N/A REPORT
     SAY say SAY SCORE score SCORE SEMIPOSE pose/nospace POSE/NOSPACE
     SESSION session SESSION SLAY slay SLAY TEACH train TRAIN THINK
     think THINK UNFOLLOW (see follow softcode) N/A
     UNIMPLEMENTED_COMMAND @admin global_error_obj @admin
     global_error_obj USE use USE WARN_ON_MISSING N/A N/A WHISPER
     whisper WHISPER WHO who WHO WITH N/A N/A


File: rhostmushhandbook.info,  Node: @commands unique to RhostMUSH,  Next: @lock equivalents,  Prev: @commands with equivalents,  Up: Comparison of modern MUSH servers

3.7 @commands unique to RhostMUSH
=================================

Commands that exist in Rhost that have no PennMUSH equivelant: @aflags
@apply_marked @areg @blacklist @cluster @conncheck @convert @cut
@dbclean @depower @dynhelp @eval @femit @fixdb @fpose @freeze @fsay
@icmd @last @lfunction @limit @logrotate @mark @mark_all @money @pipe
@program @progreset @protect @quitprogram @reclist @recover @register
@remote @robot @rxlevel @skip @snapshot @snoop @thaw @timewarp @toad
@toggle @toggledef @tor @turtle @txlevel @whereall grab join listen
mrpage newsdb rpage smell taste touch wielded worn +players


File: rhostmushhandbook.info,  Node: @lock equivalents,  Next: @locks that only exist in RhostMUSH,  Prev: @commands unique to RhostMUSH,  Up: Comparison of modern MUSH servers

3.8 @lock equivalents
=====================

@locks PennMUSH—————RhostMUSH———————————–MUX2

     BASIC BASIC/DEFAULT DEFAULT ENTER ENTER ENTER TELEPORT TPORT TPORT
     USE USE USE PAGE PAGE PAGE ZONE ZONEWIZLOCK/ZONETOLOCK/TWINKLOCK
     N/A PARENT PARENT PARENT LINK LINK LINK OPEN OPEN OPEN MAIL
     mail/lock MAIL USER USER USER USER:<dynamicname>
     lockencode()/lockdecode()/lockcheck() N/A SPEECH SPEECH SPEECH
     LISTEN USE (see listen argument) N/A COMMAND USE (commands are
     default) N/A LEAVE LEAVE LEAVE DROP DROP DROP DROPIN DROPTO N/A
     GIVE GIVE GIVE FROM GIVETO N/A PAY N/A N/A RECEIVE RECEIVE RECEIVE
     FOLLOW (See softcoded follow code) N/A EXAMINE See
     NO_MODIFY/NO_EXAMINE/TWINKLOCK N/A CHZONE
     ZONETOLOCK/ZONEWIZLOCK/TWINKLOCK N/A FORWARD N/A N/A FILTER N/A N/A
     INFILTER N/A N/A CONTROL CONTROL N/A DROPTO DROPTO N/A DESTROY See:
     @recover/@purge/INDESTRUCTIBLE/SAFE N/A INTERACT N/A (See: Reality
     Levels) N/A (See: Reality Levels) TAKE GETFROM GETFROM MAILFORWARD
     mail/lock, mail/autofor N/A N/A TELOUT TELOUT N/A DARK VISIBLE


File: rhostmushhandbook.info,  Node: @locks that only exist in RhostMUSH,  Next: Flag and toggle equivalents,  Prev: @lock equivalents,  Up: Comparison of modern MUSH servers

3.9 @locks that only exist in RhostMUSH
=======================================

@locks that exist in Rhost that have no PennMUSH equivelant: TELOUTLOCK
TWINKLOCK DARKLOCK ALTNAME CHOWN


File: rhostmushhandbook.info,  Node: Flag and toggle equivalents,  Next: Flags and toggles that only exist in RhostMUSH,  Prev: @locks that only exist in RhostMUSH,  Up: Comparison of modern MUSH servers

3.10 Flag and toggle equivalents
================================

FLAGS Pennmush—————-RhostMUSH——————————MUX2

     ABODE ABODE ABODE N/A N/A ASCII ANSI ANSI ANSI AUDIBLE AUDIBLE
     AUDIBLE (Not Needed) (Not Needed) BLEED N/A AUDITORIUM AUDITORIUM
     N/A BLIND BLIND N/A COMMANDS COMMANDS CHAN_USEFIRSTMATCH N/A N/A
     CHOWN_OK CHOWN_OK CHOWN_OK CLOUDY N/A N/A COLOR ANSICOLOR N/A
     CONNECTED CONNECTED CONNECTED DARK DARK DARK DEBUG TRACE TRACE
     DESTROY_OK DESTROY_OK DESTROY_OK ENTER_OK ENTER_OK ENTER_OK FIXED
     NO_TEL FIXED FLOATING FLOATING FLOATING GAGGED FUBAR GAGGED GOING
     GOING GOING HALT HALT HALT HAVEN HAVEN HAVEN (see @flag)
     (marker0-marker9) HEAD HEAR_CONNECT MONITOR (@toggle) SITECON HEAVY
     <NO_TEL/@lock-teleport> N/A N/A N/A HTML N/A FREE IMMORTAL N/A
     INHERIT INHERIT JUMP_OK JUMP_OK JUMP_OK KEEPALIVE KEEPALIVE
     (@toggle) KEEPALIVE N/A KEY KEY LIGHT LIGHT LIGHT LINK_OK LINK_OK
     LINK_OK LISTEN_PARENT (@admin listen_parents) N/A LOUD
     NO_OVERRIDE/NO_USELOCK N/A (see @flag) MARKER0-MARKER9
     MARKER0-MARKER9 MISTRUST GUILDOBJ/NO_GOBJ/BACKSTAGE/NOBACKSTAGE N/A
     MONIKER EXTANSI (@toggle) N/A MONITOR MONITOR MONITOR MYOPIC MYOPIC
     MYOPIC NOACCENTS ACCENTS (@toggle) ACCENTS (Not Needed) (Not
     Needed) NO_BLEED NOSPOOF NOSPOOF NOSPOOF (See @ns-commands)
     Auto-Enabled for Wiz+ SPOOF NO_COMMAND NO_COMMAND NO_COMMAND
     NO_LEAVE @icmd <leave/@lock-leave> @icmd <leave/@lock-leave> NO_TEL
     NO_TEL N/A ON-VACATION MARKER0-MARKER9 VACATION OPAQUE OPAQUE
     OPAQUE OPEN_OK @lock-openfrom OPEN_OK ORPHAN NOGLOBPARENT (@toggle)
     N/A N/A PARENT_OK PARENT_OK PUPPET PUPPET PUPPET QUIET QUIET QUIET
     N/A ROBOT ROBOT ROYALTY GUILDMASTER/ARCHITECT/COUNCILOR ROYALTY
     (@see @flag) MARKER0-9 STAFF SAFE SAFE SAFE N/A SLAVE SLAVE N/A
     MONITOR (@toggle) SITEMON STICKY STICKY STICKY N/A SUSPECT SUSPECT
     TERSE TERSE TERSE TRANSPARENT TRANSPARENT TRANSPARENT UNFINDABLE
     UNFINDABLE UNFINDABLE N/A N/A UNICODE (See @flag) WANDERER
     UNINSPECTED VERBOSE VERBOSE VERBOSE VISUAL VISUAL VISUAL WIZARD
     WIZARD/IMMORTAL WIZARD XTERM256 XTERMCOLOR COLOR256


File: rhostmushhandbook.info,  Node: Flags and toggles that only exist in RhostMUSH,  Next: @power equivalents,  Prev: Flag and toggle equivalents,  Up: Comparison of modern MUSH servers

3.11 Flags and toggles that only exist in RhostMUSH
===================================================

* Menu:

* Flags::
* Toggles::


File: rhostmushhandbook.info,  Node: Flags,  Next: Toggles,  Up: Flags and toggles that only exist in RhostMUSH

3.11.1 Flags
------------

ALTQUOTA ANONYMOUS ARCHITECT AUDITORIUM BLIND BOUNCE CLOAK COUNCILOR
FUBAR GUILDMASTER GUILDOBJ IMMORTAL INDESTRUCTABLE NO_ANSINAME
NO_BACKSTAGE NO_CODE NO_CONNECT NO_EXAMINE NO_FLASH NO_GOBJ NO_MODIFY
NO_MOVE NO_NAME NO_OVERRIDE NO_PESTER NO_POSSESS NO_STOP NO_UNDERLINE
NO_USELOCK NO_WALLS NO_YELL PRIVATE ROBOT SCLOAK SEE_OEMIT SHOWFAILCMD
SIDEFX SPAMMONITOR SPOOF STOP WANDERER ZONECONTENTS ZONEPARENT


File: rhostmushhandbook.info,  Node: Toggles,  Prev: Flags,  Up: Flags and toggles that only exist in RhostMUSH

3.11.2 Toggles
--------------

ATRUSE CHKREALITY CPUTIME EXFULLWIZATTR FORCEHALTED HIDEIDLE IGNOREZONE
IMMPROG LOGROOM MAILVALIDATE MAIL_LOCKDOWN MAIL_NOPARSE MAIL_STRIPRETURN
MONITOR_AREG MONITOR_BAD MONITOR_CONN MONITOR_CPU MONITOR_DISREASON
MONITOR_FAIL MONITOR_SITE MONITOR_STATS MONITOR_TIME MONITOR_USERID
MONITOR_VLIMIT MORTALREALITY NODEFAULT NOSHPROG NOZONEPARENT NO_ANSI_EX
NO_ANSI_EXIT NO_ANSI_PLAYER NO_ANSI_ROOM NO_ANSI_THING NO_FORMAT
NO_TIMESTAMP PAGELOCK PROG PROG_ON_CONNECT SAFELOG SEE_SUSPECT
SILENTEFFECT SNUFFDARK ZONECMDCHK ZONE_AUTOADD ZONE_AUTOADDALL


File: rhostmushhandbook.info,  Node: @power equivalents,  Next: Functions equivalents,  Prev: Flags and toggles that only exist in RhostMUSH,  Up: Comparison of modern MUSH servers

3.12 @power equivalents
=======================

@powers Pennmush—————-RhostMUSH——————————————MUX2

     Announce FREE_WALL Announce Boot BOOT Boot Builder @quota !WANDERER
     (flag) Builder CAN_DARK @admin <player_dark/@depower> dark N/A
     Can_spoof N/A - Wizard+ auto-spoof N/A Cemit N/A N/A N/A
     CHOWN_OTHER chown_anything N/A @lock/twink control_all N/A WIZ_WHO
     expanded_who Chat_Privs N/A comm_all DEBIT STEAL Steal_money
     Functions (See @lfunctions) Wizard+ only Guest GUEST (flag) Guest
     HOOK Wizard+ only Wizard+ only Halt HALT_QUEUE/HALT_QUEUE_ALL Halt
     Hide NOWHO Hide Idle @timeout player to -1 Idle N/A NO_MODIFY
     (flag) Immutable Link_Anywhere N/A (security risk) N/A Login LOGIN
     (flag) LOGIN (flag) Long_Fingers LONG_FINGERS Long_fingers
     MANY_ATTRIBS (@admin vlimit) N/A N/A MONITOR (@toggle) Monitor
     No_Pay FREE (flag) Free_money No_Quota FREE_QUOTA Free_quota
     Open_Anywhere N/A (security risk) N/A N/A (Wiz+ Automatic)
     Pass_locks PICK_DBREFS Wizard+ only N/A PUEBLO_SEND N/A N/A
     Pemit_All LONG_FINGERS N/A Player_Create PCREATE N/A Poll N/A –
     Softcode @doing/header Poll N/A PROG (@toggle) Prog Queue
     SEE_QUEUE/SEE_QUEUE_ALL/HALT_QUEUE/HALT_QUEUE_ALL N/A Quotas
     CHANGE_QUOTAS N/A SQL_OK N/A N/A Search SEARCH_ANY Search See_All
     EXAMINE_FULL See_all N/A WHO_UNFIND See_hidden N/A SHUTDOWN
     Siteadmin See_Queue SEE_QUEUE/SEE_QUEUE_ALL N/A N/A STAT_ANY
     Stat_any Tport_Anything TEL_ANYTHING Tel_anything Tport_Anywhere
     TEL_ANYWHERE Tel_anywhere Unkillable NOKILL Unkillable

* Menu:

* @power unique to RhostMUSH::


File: rhostmushhandbook.info,  Node: @power unique to RhostMUSH,  Up: @power equivalents

3.12.1 @power unique to RhostMUSH
---------------------------------

Depowers are unique in Rhost and PennMUSH has no equivelant.

Powers that exist in RhostMUSH that have no match in PennMUSH: CHOWN_ME
WIZ_WHO NOFORCE FREE_QUOTA JOIN_PLAYER NO_BOOT STAT_ANY WHO_UNFIND
SHUTDOWN PURGE CHOWN_ANYWHERE CHOWN_OTHER GRAB_PLAYER SECURITY WRAITH
HIDEBIT


File: rhostmushhandbook.info,  Node: Functions equivalents,  Next: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Prev: @power equivalents,  Up: Comparison of modern MUSH servers

3.13 Functions equivalents
==========================

Functions Pennmush—————-RhostMUSH——————–MUX

     @@ @@ @@ ABS ABS ABS/IABS ACCENT ACCENT ACCENT ACCNAME CNAME
     MONIKER ACOS ACOS ACOS ADD ADD ADD AFTER AFTER AFTER ALIAS
     get(#db/alias)/LISTPROTECT get(#db/alias) ALIGN PRINTF N/A ALLOF
     OFPARSE N/A ALPHAMAX ALPHAMAX ALPHAMAX ALPHAMIN ALPHAMIN ALPHAMIN
     AND AND AND/ANDBOOL ANDFLAGS ANDFLAGS ANDFLAGS ANDLFLAGS ANDFLAG
     N/A ANDLPOWERS @function (softfunctions) N/A ANSI ANSI ANSI APOSS
     APOSS APOSS ART ART ART ASIN ASIN ASIN ATAN ATAN ATAN ATAN2 ATAN2
     ATAN2 N/A ATTRCNT ATTRCNT ATRLOCK HASFLAG(#obj/attr,LOCK)
     HASFLAG(#obj/attr,LOCK) ATTRIB_SET SET SET BAND MASK BAND BASECONV
     PACK/UNPACK BASECONV BEEP BEEP BEEP BEFORE BEFORE BEFORE N/A
     BITTYPE BITTYPE BENCHMARK CPUTIME (@toggle) N/A BNAND MASK BNAND
     BNOT MASK N/A BOR BOR BOR BOUND BOUND/FBOUND N/A BRACKETS BRACKETS
     N/A BXOR MASK BXOR CAND CAND CAND/CANDBOOL CAPSTR CAPSTR CAPSTR
     CASE CASE CASE CASEALL CASEALL N/A CAT CAT CAT CBUFFER N/A N/A
     CBUFFERADD N/A N/A CDESC N/A N/A CEIL CEIL CEIL CEMIT N/A CEMIT
     CENTER CENTER CENTER CFLAGS N/A N/A CHANNELS N/A CHANNELS CHECKPASS
     CHECKPASS N/A CHILDREN CHILDREN CHILDREN N/A N/A CHOOSE CHR CHR CHR
     CLFLAGS N/A N/A CLOCK N/A N/A CLONE CLONE N/A CMDS CMDS CMDS
     CMOGRIFIER N/A N/A CMSGS N/A N/A COLORS COLORS N/A N/A N/A
     COLORDEPTH N/A @function (softfunctions) COLUMNNS N/A N/A COMALIAS
     COMP COMP COMP N/A N/A COMTITLE CON CON CON COND @function
     (softfunctions) N/A CONDALL @function (softfunctions) N/A CONFIG
     CONFIG CONFIG CONN CONN CONN convsecs(get(#db/last))
     convsecs(get(#db/last)) CONNLAST N/A N/A CONNLEFT N/A N/A CONNMAX
     N/A N/A CONNNUM N/A N/A CONNRECORD N/A N/A CONNTOTAL CONTROLS
     CONTROLS CONTROLS CONVSECS CONVSECS CONVSECS CONVTIME CONVTIME
     CONVTIME CONVUTCSECS CONVSECS CONVSECS CONVUTCTIME CONVTIME
     CONVTIME COR COR COR/CORBOOL COS COS COS ALIGN PRINTF CPAD N/A
     CRC32 CRC32 COWNER N/A N/A CREATE CREATE CREATE CRECALL N/A N/A
     CSECS N/A N/A CSTATUS N/A N/A CTIME N/A CTIME CTITLE N/A N/A CTU
     CTU CTU CUSERS N/A N/A CWHO N/A CWHO DEC DEC/XDEC DEC DECODE64
     DECODE64 N/A DECOMPOSE TRANSLATE TRANSLATE DECRYPT DECRYPT DECRYPT
     DEFAULT DEFAULT DEFAULT N/A DESTROY DESTROY DIE DICE DIE DIG DIG
     CREATE(with ‘r’) DIGEST DIGEST DIGEST N/A TIMEFMT DIGITTIME DIST2D
     DIST2D DIST2D DIST3D DIST3D DIST3D @function @function DISTRIBUTE
     DIV DIV IDIV DOING DOING DOING N/A N/A DUMPING E E E EDEFAULT
     EDEFAULT EDEFAULT EDIT PEDIT/EDIT EDIT ELEMENT MATCH MATCH ELEMENTS
     ELEMENTSMUX/ELEMENTS ELEMENTS ELIST ELIST ITEMIZE ELOCK ELOCK ELOCK
     EMIT EMIT EMIT ENCODE64 ENCODE64 N/A ENCRYPT ENCRYPT ENCRYPT ENDTAG
     N/A N/A ENTRANCES ENTRANCES ENTRANCES EQ EQ EQ N/A ERROR ERROR
     ESCAPE ESCAPE ESCAPE ETIME @function (softfunctions) N/A ETIMEFMT
     TIMEFMT ETIMEFMT EVAL EVAL EVAL EXIT EXIT EXIT N/A EXP EXP EXTRACT
     EXTRACT EXTRACT %+ %+ FCOUNT %+ %+ FDEPTH FDIV FDIV FDIV FILTER
     FILTER FILTER FILTERBOOL FILTER FILTERBOOL FINDABLE FINDABLE
     FINDABLE FIRST FIRST FIRST FIRSTOF OFPARSE N/A FLAGS FLAGS FLAGS
     FLIP REVERSE REVERSE FLOOR FLOOR FLOOR FLOORDIV FLOORDIV FLOORDIV
     FMOD FMOD FMOD FN BYPASS N/A FOLD FOLD FOLD FOLDERSTATS FOLDERLIST
     N/A FOLLOWERS N/A (softcode available) N/A FOLLOWING N/A (softcode
     available) N/A FOREACH FOREACH FOREACH FRACTION N/A N/A FULLALIAS
     ALIAS + LISTPROTECT N/A FULLNAME FULLNAME FULLNAME FUNCTIONS
     LISTFUNCTIONS N/A GET GET GET GETPIDS PIDS N/A GET_EVAL GET_EVAL
     GET_EVAL GRAB GRAB GRAB GRABALL GRABALL GRABALL GREP GREP GREP
     GREPI GREP GREPI GT GT GT GTE GTE GTE HASATTR HASATTR HASATTR
     HASATTRP HASATTRP HASATTRP HASATTRPVAL HASATTRP HASATTRP HASATTRVAL
     HASATTR HASATTR HASFLAG HASFLAG HASFLAG HASPOWER HASPOWER HASPOWER
     N/A HASQUOTA HASQUOTA HASTYPE HASTYPE HASTYPE HEIGHT @function
     (softfunctions) HEIGHT HIDDEN HIDDEN N/A HOME HOME HOME HOST
     LOOKUP_SITE HOST HTML N/A N/A IBREAK IBREAK N/A IDLE IDLE IDLE IF
     IFELSE IF IFELSE IFELSE IFELSE ILEV ILEV ILEV INAME NAME NAME INC
     INC/XINC INC INDEX INDEX INDEX INUM INUM/INUM2 INUM N/A INZONE
     INZONE IPADDR LOOKUP_SITE N/A ISDAYLIGHT TIMEFMT N/A ISDBREF
     ISDBREF ISDBREF ISINT ISINT ISINT ISNUM ISNUM ISNUM N/A N/A ISRAT
     ISOBJID N/A N/A ISREGEXP N/A N/A ISWORD ISWORD ISWORD ITEMIZE ELIST
     ITEMIZE ITEMS WORDS WORDS ITER ITER ITER ITEXT ITEXT ITEXT LALIGN
     PRINTF N/A STRMATH LADD LADD N/A LAND LAND LAST LAST LAST N/A
     LASTCREATE LASTCREATE LATTR LATTR LATTR N/A LATTR LATTRCMDS LATTRP
     LATTRP LATTRP N/A LCMDS LCMDS LCON LCON LCON LCSTR LCSTR LCSTR
     LDELETE LDELETE LDELETE LEFT LEFT STRTRUNC LEMIT LEMIT N/A LETQ
     @function (softfunctions) N/A LEXITS LEXITS LEXITS LFLAGS LFLAGS
     LFLAGS LINK LINK LINK N/A LIST (like iter()) LIST (like iter())
     LINSERT INSERT INSERT LIST LISTPOWERS, FLAGS, etc N/A LISTQ N/A N/A
     LIT LIT LIT LJUST LJUST LJUST LLOCKFLAGS N/A N/A LLOCKS LOCKS LOCKS
     LMATH STRFUNC N/A LN LN LN LNUM LNUM/LNUM2 LNUM LOC LOC LOC
     LOCALIZE LOCALIZE LOCALIZE LOCATE LOCATE LOCATE LOCK LOCK LOCK N/A
     LOG2FILE LOG LOCKFILTER LOCKCHECK N/A LOCKFLAGS FLAGS FLAGS
     LOCKOWNER OWNER OWNER LOCKS LOCK LOCK LOG LOG LOG LPARENT PARENTS
     LPARENT LPIDS PIDS N/A LPLAYERS LCON LCON N/A LOR LOR LPORTS PORT
     PORTS ALIGN PRINTF LPAD LPOS LPOS LPOS DIE DICE LRAND N/A LROOMS
     LROOMS LREPLACE REPLACE REPLACE LSEARCH SEARCH/SEARCHNG SEARCH
     LSEARCHR revwords(search()) revwords(search()) LSET SET SET LSTATS
     STATS STATS LT LT LT LTE LTE LTE LTHINGS LCON LCON LVCON LCON +
     STREVAL at mortal N/A LVEXITS LCON + STREVAL at mortal N/A
     LVPLAYERS LCON + STREVAL at mortal N/A LVTHINGS LCON + STREVAL at
     mortal N/A LWHO LWHO LWHO LWHOID N/A N/A MAIL MAILREAD/MAILSEND
     MAIL MAILDSTATS MAILSIZE/MAILQUOTA MAILSIZE MAILFROM MAILREAD
     MAILFROM MAILFSTATS FOLDERLIST/FOLDERCURRENT N/A MAILLIST MAILREAD
     N/A MAILSEND MAILSEND N/A MAILSTATS MAILSIZE/MAILQUOTA MAILSIZE
     MAILSTATUS MAILSIZE/MAILQUOTA MAILSIZE MAILSUBJECT MAILREAD
     MAILSUBJ MAILTIME MAILREAD N/A MALIAS MAILREAD N/A MAP MAP MAP
     MAPSQL N/A N/A MATCH MATCH MATCH MATCHALL MATCHALL MATCHALL MAX MAX
     MAX MEAN AVG AVG MEDIAN AVG AVG MEMBER MEMBER MEMBER MERGE MERGE
     MERGE MESSAGE PARSESTR + PEMIT/REMIT N/A MID MID MID MIN MIN MIN
     MIX MIX MIX MODULO MOD MOD MONEY MONEY MONEY MONIKER CNAME MONIKER
     N/A N/A MOTD MSECS MODIFYTIME + CONVTIME MTIME + CONVTIME MTIME
     MODIFYTIME MTIME MUDNAME MUDNAME MUDNAME MUDURL N/A N/A MUL MUL MUL
     MUNGE MUNGE MUNGE MWHO LWHO + STREVAL at mortal N/A MWHOID N/A N/A
     NAME NAME NAME NAMEGRAB @function (softfunctions) N/A NAMEGRABALL
     @function (softfunctions) N/A NAMELIST @function (softfunctions)
     N/A NAND NAND N/A NATTR ATTRCNT ATTRCNT NATTRP ATTRCNT ATTRCNT
     NCAND !CAND NOT(CAND()) NCHILDREN CHILDREN CHILDREN NCON WORDS +
     LCON WORDS + LCON NCOND @function (softfunctions) N/A NCONDALL
     @function (softfunctions) N/A NCOR !COR NOT(COR()) NEARBY NEARBY
     NEARBY NEQ NEQ NEQ NEXITS WORDS + LEXITS WORDS + LEXITS NEXT NEXT
     NEXT NEXTDBREF N/A N/A NLSEARCH WORDS + SEARCH WORDS + SEARCH NMWHO
     WORDS+LWHO+STREVAL at mort N/A NOR NOR N/A NOT NOT or !  NOT
     NPLAYERS WORDS + LCON WORDS + LCON NSCEMIT N/A N/A NSEARCH WORDS +
     SEARCH WORDS + SEARCH NSEMIT EMIT EMIT NSLEMIT LEMIT N/A NSOEMIT
     OEMIT N/A NSPEMIT PEMIT N/A NSPROMPT N/A (@program?)  N/A
     (@program?)  NSREMIT REMIT N/A NSZEMIT ZEMIT N/A NTHINGS WORDS +
     LCON WORDS + LCON NULL NULL NULL NUM NUM NUM NUMVERSION N/A N/A
     NVCON WORDS+LCON+STREVAL at mort N/A NVEXITS WORDS+LEXITS+STREVAL
     at mo N/A NVPLAYERS WORDS+LCON+STREVAL at mort N/A NVTHINGS
     WORDS+LCON+STREVAL at mort N/A NWHO WORDS + LWHO WORDS + LWHO OBJ
     OBJ OBJ OBJEVAL OBJEVAL OBJEVAL OBJID N/A N/A OBJMEM SIZE OBJMEM
     OEMIT OEMIT OEMIT OPEN OPEN N/A OR OR OR/ORBOOL ORD ASC ORD ORDINAL
     N/A N/A ORFLAGS ORFLAGS ORFLAGS ORLFLAGS ORFLAG N/A ORLPOWERS N/A
     (easy to @function) N/A OWNER OWNER OWNER PARENT PARENT PARENT
     PCREATE CREATE CREATE PEMIT PEMIT PEMIT PFUN U + PARENT U + PARENT
     PI PI PI PIDINFO PID N/A PLAYER before(grab(lwho(1),*:%0),:) N/A
     PLAYERMEM SIZE PLAYMEM PMATCH PMATCH PMATCH POLL DOING POLL PORTS
     PORT PORTS POS POS POS POSS POSS POSS POWER POWER POWER POWERS
     LPOWERS POWERS PROMPT N/A (@program?)  N/A (@program?)  PUEBLO N/A
     N/A QUOTA QUOTA N/A R R R RAND RAND RAND RANDWORD PICKRAND PICKRAND
     RECV CHARIN N/A REGEDIT REGEDIT N/A REGEDITALL REGEDITALL N/A
     REGEDITALLI REGEDITALLI N/A REGEDITI REGEDITI N/A REGISTERS N/A N/A
     REGLATTR LATTR N/A REGLATTRP LATTRP N/A REGLMATCH REGLMATCH N/A
     REGLMATCHALL REGLMATCHALL N/A REGLMATCHALLI REGLMATCHALLI N/A
     REGLMATCHI REGLMATCHI N/A REGMATCH REGMATCH REGMATCH REGMATCHI
     REGMATCHI REGMATCHI REGNATTR WORDS + ATTR N/A REGNATTRP WORDS +
     ATTRP N/A REGRAB REGRAB REGRAB REGRABALL REGRABALL REGRABALL
     REGRABALLI REGRABALLI REGRABALLI REGRABI REGRABI REGRABI REGREP
     REGREP N/A REGREPI REGREPI N/A REGXATTR ATTR N/A REGXATTRP ATTRP
     N/A REMAINDER REMAINDER REMAINDER REMIT REMIT REMIT REMOVE REMOVE
     REMOVE RENDER N/A N/A REPEAT REPEAT REPEAT REST REST REST RESTARTS
     N/A RESTARTS RESTARTTIME REBOOTTIME RESTARTTIME
     CONVTIME(RESTARTTIME)) CONVTIME(REBOOTTIME()) RESTARTSECS RESWITCH
     RESWITCH N/A RESWITCHALL RESWITCHALL N/A RESWITCHALLI RESWITCHALLI
     N/A RESWITCHI RESWITCHI N/A REVWORDS REVWORDS REVWORDS RIGHT RIGHT
     RIGHT RJUST RJUST RJUST RLOC RLOC RLOC N/A ROMAN ROMAN RNUM RNUM
     N/A ROOM ROOM ROOM ROOT N/A N/A ROUND ROUND ROUND ALIGN PRINTF RPAD
     S S S SCAN N/A N/A SCRAMBLE SCRAMBLE SCRAMBLE SECS SECS SECS SECURE
     SECURE/SECUREX SECURE SENT CHAROUT N/A SET SET SET SETDIFF SETDIFF
     SETDIFF SETINTER SETINTER SETINTER SETQ SETQ SETQ SETR SETR SETR
     SETUNION SETUNION SETUNION SHA0 DIGEST DIGEST DIGEST DIGEST SHA1
     SHL SHL SHL SHR SHR SHR SHUFFLE SHUFFLE SHUFFLE SIGN NCOMP(%0,0)
     SIGN SIN SIN SIN SLEV N/A N/A @function @function SITEINFO SORT
     SORT SORT SORTBY SORTBY SORTBY SORTKEY @function (softfunctions)
     N/A SOUNDEX SOUNDEX N/A SOUNDSLIKE SOUNDXLIKE N/A SPACE SPACE SPACE
     SPEAK PARSESTR N/A SPEAKPENN PARSESTR N/A SPELLNUM SPELLNUM
     SPELLNUM SPLICE SPLICE SPLICE SQL (if MYSQL enabled) N/A (ASYNC db)
     SQLESCAPE (if MYSQL enabled) N/A (ASYNC db) SQRT SQRT SQRT SQUISH
     SQUISH SQUISH SSL N/A N/A STARTTIME STARTTIME STARTTIME
     CONVTIME(STARTTIME)) CONVTIME(STARTTIME()) STARTSECS N/A STATS
     STATS STDDEV AVG AVG STEP STEP STEP STEXT N/A N/A STRALLOF OFPARSE
     N/A STRCAT STRCAT STRCAT N/A STRIP STRIP STRDELETE CREPLACE/DELETE
     DELETE STRFIRSTOF OFPARSE N/A STRINGSECS @function (softfunctions)
     N/A STRINSERT CREPLACE N/A STRIPACCENTS STRIPACCENTS STRIPACCENTS
     STRIPANSI STRIPANSI STRIPANSI STRLEN STRLEN STRLEN STRMATCH
     STRMATCH STRMATCH N/A STRLENRAW STRMEM STRREPLACE CREPLACE/REPLACE
     REPLACE SUB SUB SUB N/A ESCAPEX SUBEVAL SUBJ SUBJ SUBJ N/A N/A
     SUCCESSES SWITCH SWITCH SWITCH SWITCHALL SWITCHALL N/A T T T TABLE
     @function (softfunctions) TABLE TAG N/A N/A TAGWRAP N/A N/A TAN TAN
     TAN TEL TEL TEL TERMINFO N/A TERMINFO TESTLOCK LOCKCHECK N/A
     TEXTENTRIES WORDS + TEXTFILE WORDS + TEXTFILE TEXTFILE TEXTFILE
     TEXTFILE TIME TIME TIME TIMEFMT PTIMEFMT TIMEFMT TIMESTRING
     SINGLETIME/TIMEFMT SINGLETIME TR TR TR TRIM TRIM TRIM TRIMPENN TRIM
     TRIM TRIMTINY TRIM TRIM N/A N/A TRIGGER TRUNC TRUNC TRUNC TYPE TYPE
     TYPE UCSTR UCSTR UCSTR UDEFAULT UDEFAULT UDEFAULT UFUN U U ULAMBDA
     U + #lambda N/A ULDEFAULT ULDEFAULT N/A ULOCAL ULOCAL ULOCAL UNIQUE
     LISTDIFF/LISTUNION/LISTINTER N/A UNSETQ N/A N/A UPTIME N/A N/A
     UTCTIME TIME TIME V V V VADD VADD VADD VALID VALID VALID VCROSS
     VCROSS VCROSS VDIM VDIM VDIM VDOT VDOT VDOT VERSION VERSION VERSION
     VISIBLE VISIBLE VISIBLE VMAG VMAG VMAG VMAX SORTLIST N/A VMIN
     SORTLIST N/A VMUL VMUL VMUL VSUB VSUB VSUB VUNIT VUNIT VUNIT WHERE
     WHERE WHERE WIDTH @function (softfunctions) WIDTH WILDGREP GREP N/A
     WILDGREPI GREPI N/A WIPE WIPE WIPE WORDPOS WORDPOS WORDPOS WORDS
     WORDS/MWORDS WORDS WRAP WRAP WRAP N/A MODIFYTIME WRITETIME XATTR
     ATTR N/A XATTRP ATTRP N/A XCON XCON N/A XEXITS LEXITS + EXTRACT N/A
     XGET XGET XGET XMWHO LWHO+EXTRACT+STREVAL at mor N/A XMWHOID N/A
     N/A XOR XOR XOR XPLAYERS XCON N/A XTHINGS XCON N/A XVCON XCON +
     STREVAL at mortal N/A XVEXITS LEXITS + STREVAL at mortal N/A
     XVPLAYERS XCON + STREVAL at mortal N/A XVTHINGS XCON + STREVAL at
     mortal N/A XWHO LWHO + EXTRACT LWHO + EXTRACT XWHOID N/A N/A ZEMIT
     ZEMIT N/A ZFUN ZFUN ZFUN ZMWHO ZWHO + STREVAL at mortal N/A ZONE
     LZONE ZONE ZWHO ZWHO ZWHO

* Menu:

* Functions that only exist in RhostMUSH::


File: rhostmushhandbook.info,  Node: Functions that only exist in RhostMUSH,  Up: Functions equivalents

3.13.1 Functions that only exist in RhostMUSH
---------------------------------------------

Functions that exist in Rhost that do not have a match in PennMUSH:
AIINDEX AINDEX ANDCHR ARRAY ATTRCNT BETWEEN BITTYPE CANSEE CAPLIST
CHKGARBAGE CHKREALITY CHKTRACE CHOMP CITER CLOAK CLUSTER_ADD
CLUSTER_ATTRCNT CLUSTER_DEFAULT CLUSTER_EDEFAULT CLUSTER_FLAGS
CLUSTER_GET CLUSTER_GET_EVAL CLUSTER_GREP CLUSTER_HASATTR
CLUSTER_HASFLAG CLUSTER_LATTR CLUSTER_REGREP CLUSTER_REGREPI CLUSTER_SET
CLUSTER_STATS CLUSTER_U CLUSTER_U2 CLUSTER_U2DEFAULT CLUSTER_U2LDEFAULT
CLUSTER_U2LOCAL CLUSTER_UDEFAULT CLUSTER_UEVAL CLUSTER_ULDEFAULT
CLUSTER_ULOCAL CLUSTER_VATTRCNT CLUSTER_WIPE CLUSTER_XGET COLUMNS COSH
COUNTSPECIAL CRC32 DELEXTRACT DESTROY EDITANSI EE ERROR EXP FBETWEEN
FBOUND GARBLE GLOBALROOM GUILD HASDEPOWER HASQUOTA HASRXLEVEL HASTOGGLE
HASTXLEVEL INPROGRAM INZONE ISALNUM ISALPHA ISCLUSTER ISDIGIT ISHIDDEN
ISLOWER ISPUNCT ISSPACE ISUPPER ISXDIGIT KEEPFLAGS KEEPTYPE LAND LAVG
LCMDS LDEPOWERS LISTMATCH LISTNEWSGROUPS LISTRLEVELS LISTTOGGLES LLOC
LMAX LMIN LMUL LNOR LOCALFUNC LOCKDECODE LOCKENCODE LOGSTATUS LOGTOFILE
LOR LRAND LROOMS LTOGGLES LXNOR LXOR MONEYNAME MOON MOVE NAMEQ NOSTR
NOTCHR NSLOOKUP ORCHR PARENMATCH PFIND PGREP POWER10 PRIVATIZE
PROGRAMMER PUSHREGS RACE RANDMATCH RANDPOS REGEDITALLILIT REGEDITALLLIT
REGEDITILIT REGEDITLIT REGNUMMATCH REGNUMMATCHI REMFLAGS REMTYPE ROMAN
ROTL ROTR RSET RXLEVEL SAFEBUFF SEES SETQMATCH SHIFT SINH SORTLISAT STR
STRDISTANCE STREQ STREVAL STRFUNC STRIP STRLENRAW STRLENVIS STRMATH
SUBNETMATCH TANH TOGGLE TOTCMDS TRACE TXLEVEL UEVAL WHILE WILDMATCH
WRAPCOLUMNS WRITABLE XNOR XORCHR XORFLAG ZFUNDEFAULT ZFUNEVAL
ZFUNLDEFAULT ZFUNLOCAL


File: rhostmushhandbook.info,  Node: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Next: Things other mushes can do that Rhost can not and how to emulate it<2>,  Prev: Functions equivalents,  Up: Comparison of modern MUSH servers

3.14 What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost
===============================================================================================================

RhostMUSH, for the most part, will work out of the box with most
softcode gotten from other codebases.  There are, however, exceptions.
Most of these exceptions will be minor code differences between how ANSI
is processed, the variences of arguments or switches to commands or
functions, or required flags.

Most changes will revolve around the ones listed in this document.

* Menu:

* Problematic functions between codebases::
* Problematic features between codebases::
* Problematic commands::
* SIDEFX flag::
* Variable exits::
* Zones::
* @powers::
* Attribute length::
* Attribute contents::
* 256 color::
* Unicode/UTF8::
* Attributes per object::
* Destroying::
* object id’s::
* lsearch() and search(): lsearch and search.
* @locks can be different::
* Customer user-locks::
* Attribute trees::
* Prefix permission locking::
* align() and printf(): align and printf.
* MySQL::
* Mail System::
* Comsystem::
* Various Functions::
* Empty Attributes::
* Player Stats::
* Percent Substitutions::
* Switches::
* Flags: Flags<2>.
* Aliases::


File: rhostmushhandbook.info,  Node: Problematic functions between codebases,  Next: Problematic features between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.1 Problematic functions between codebases
----------------------------------------------

lsearch()/search(), align()/printf(), *attrval()


File: rhostmushhandbook.info,  Node: Problematic features between codebases,  Next: Problematic commands,  Prev: Problematic functions between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.2 Problematic features between codebases
---------------------------------------------

named variables for regexp patterns in $commands are not supported.
@aliases on non-players are not supported.  Frankly I find them
redundant.


File: rhostmushhandbook.info,  Node: Problematic commands,  Next: SIDEFX flag,  Prev: Problematic features between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.3 Problematic commands
---------------------------

@mapsql, hardcoded required comssytem commands (some are redundant)


File: rhostmushhandbook.info,  Node: SIDEFX flag,  Next: Variable exits,  Prev: Problematic commands,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.4 SIDEFX flag
------------------

     Anything that uses sideeffects –DIRECTLY– requires this flag.
     Sideeffects are like set(), pemit(), and so forth.  list(), while a
     side-effect, does not require this flag as it is considered passive
     and safe.


File: rhostmushhandbook.info,  Node: Variable exits,  Next: Zones,  Prev: SIDEFX flag,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.5 Variable exits
---------------------

     Rhost handles them slightly different.  You do not link exits to
     #-4.  That’s an invalid destination.  I always found it, frankly,
     stupid to save any data in the database that was literally invalid.
     So, you link the exit as you normally would, then @toggle the exit
     variable.  At that point you use @exitto like you would any other
     codebase.


File: rhostmushhandbook.info,  Node: Zones,  Next: @powers,  Prev: Variable exits,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.6 Zones
------------

     Zones actually can work near exactly as you would expect them to
     work on TinyMUSH, MUX, or Penn.  Either at once or at different
     times.  We recognize multiple zones, zone masters, zone
     inheritance, zone parenting, zone command processing, and the
     ability to bypass zones entirely.  There’s a ton of flexbility with
     this.  However, the syntax for adding/removing zones is different
     so the commands will have to be ported to Rhost.


File: rhostmushhandbook.info,  Node: @powers,  Next: Attribute length,  Prev: Zones,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.7 @powers
--------------

     Powers work a bit differently in Rhost and they’re named
     differently, which should not be that big a surprise as they’re
     different between all the codebases anyway.  The big difference is
     our powers are tiered, meaning the can be limited or grown to a
     given bitlevel and are not just toggle powers like the other
     codebases.  We also have @depower that is the anti-thesis of @power


File: rhostmushhandbook.info,  Node: Attribute length,  Next: Attribute contents,  Prev: @powers,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.8 Attribute length
-----------------------

     While we have 64 character attribute capabilities like most other
     codebases, PennMUSH allows 1024 attribute length attributes.  Why
     you need one that long boggles the mind, but if you do use attribs
     that long you need to make sure they are cut down to the proper
     length.


File: rhostmushhandbook.info,  Node: Attribute contents,  Next: 256 color,  Prev: Attribute length,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.9 Attribute contents
-------------------------

     You’ll be happy to know that Rhost allows upwards to 64,000 bytes
     of data to be assigned an LBUF. We strongly recommand to cap at
     32,000 however as the various TCP socket protocols play nicer with
     that value.


File: rhostmushhandbook.info,  Node: 256 color,  Next: Unicode/UTF8,  Prev: Attribute contents,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.10 256 color
-----------------

Yup!  We got it.


File: rhostmushhandbook.info,  Node: Unicode/UTF8,  Next: Attributes per object,  Prev: 256 color,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.11 Unicode/UTF8
--------------------

     Yup!  We got this too.  Not quiet yet in the main branch, but
     download Kage’s branch, you won’t be dissapointed.  We will have
     UTF8 in Rhost 4.0 when released.


File: rhostmushhandbook.info,  Node: Attributes per object,  Next: Destroying,  Prev: Unicode/UTF8,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.12 Attributes per object
-----------------------------

     This is configurable with the VLIMIT @admin command, however, it is
     absolutely hard-limited at 10000 maximum.  This is to avoid any DoS
     type situation and because frankly there should never be a reason
     to exceed that.  If you need more, use @clusters.


File: rhostmushhandbook.info,  Node: Destroying,  Next: object id’s,  Prev: Attributes per object,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.13 Destroying
------------------

     @nuke only works on players.  @destroy works on non-players.  Never
     the two will meet.  We also have a built in recycle bin meaning
     anything destroyed will not be automatically recycled.  If you want
     it recycled, you have to @purge it.  Yes, if you use Myrddin’s
     CRON, it has a built in entry to auto-purge anything older than 30
     days.  This also means you can on-line recover anything destroyed
     before that 30 days.  Groovy, eh?


File: rhostmushhandbook.info,  Node: object id’s,  Next: lsearch and search,  Prev: Destroying,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.14 object id’s
-------------------

Yup, we got them.  Even in searches, and, well, everything.


File: rhostmushhandbook.info,  Node: lsearch and search,  Next: @locks can be different,  Prev: object id’s,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.15 lsearch() and search()
------------------------------

     lsearch() in Penn is not syntacically similar to non-Penn search().
     This will have to be altered.  In addition, search() in non-penn
     games have to have special consideration for escaping out the
     evaled args.


File: rhostmushhandbook.info,  Node: @locks can be different,  Next: Customer user-locks,  Prev: lsearch and search,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.16 @locks can be different
-------------------------------

     We have many more lock capabilities and options so this should be a
     non-issue.


File: rhostmushhandbook.info,  Node: Customer user-locks,  Next: Attribute trees,  Prev: @locks can be different,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.17 Customer user-locks
---------------------------

     We do not have custom user-locks like Penn.  We do, however, have
     the way to set encapsulated lock data into an attribute to fetch
     and compare against which I find more useful and far more flexible.
     See: lockencode(), lockdecode(), and lockcheck()


File: rhostmushhandbook.info,  Node: Attribute trees,  Next: Prefix permission locking,  Prev: Customer user-locks,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.18 Attribute trees
-----------------------

     Unlike Penn, we don’t really have attribute trees.  We do support
     the basic capabilities of it for compatibility if you load in
     softcode that uses it, but it doesn’t have the advanced features of
     attribute trees.  Please see ‘help attribute tree’ for more
     information.


File: rhostmushhandbook.info,  Node: Prefix permission locking,  Next: align and printf,  Prev: Attribute trees,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.19 Prefix permission locking
---------------------------------

     We do allow prefix permission locking, and some very advanced
     abilities of it.  Please see wizhelp on @aflags for more
     information.  - wizhelp @aflags - wizhelp atrperms_max - wizhelp
     atrlock - wizhelp atrperms


File: rhostmushhandbook.info,  Node: align and printf,  Next: MySQL,  Prev: Prefix permission locking,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.20 align() and printf()
----------------------------

     We do not have align().  Most of the code that uses align() will
     have to be converted to our printf() (which is compatible but has
     different syntax)


File: rhostmushhandbook.info,  Node: MySQL,  Next: Mail System,  Prev: align and printf,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.21 MySQL
-------------

     While we support MySQL, we do not have an async method like MUX2.
     This is just not possible, sorry.


File: rhostmushhandbook.info,  Node: Mail System,  Next: Comsystem,  Prev: MySQL,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.22 Mail System
-------------------

     There are mail wrappers to mimic MUX/TM3 and Penn mail systems.


File: rhostmushhandbook.info,  Node: Comsystem,  Next: Various Functions,  Prev: Mail System,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.23 Comsystem
-----------------

     The softcoded comsystem mimics MUX/TM3 and Penn’s comsystem.


File: rhostmushhandbook.info,  Node: Various Functions,  Next: Empty Attributes,  Prev: Comsystem,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.24 Various Functions
-------------------------

     There is a ‘softcode.minmax’ in the Mushcode directory that loads
     up a slew of @function wrappers that will emulate various functions
     that MUX, Penn, or TM3 has.  We have the functionality for nearly
     all of them, but either our functions have different syntax, or we
     have different named functions that duplicate the functionality.
     It would be far better to recode it to use the native functions,
     but the @function wrappers are there for lazyness :)


File: rhostmushhandbook.info,  Node: Empty Attributes,  Next: Player Stats,  Prev: Various Functions,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.25 Empty Attributes
------------------------

     Penn allows you to have empty attributes.  Non-penn codebases do
     not.  Thus, hasattrval and the like are not needed and should
     likely just point to hasattr instead.


File: rhostmushhandbook.info,  Node: Player Stats,  Next: Percent Substitutions,  Prev: Empty Attributes,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.26 Player Stats
--------------------

     MUX has some built in ways for player stats.  We do as well but
     they’re either done via functions or attribute contents.  Code that
     requires this will have to be recoded.


File: rhostmushhandbook.info,  Node: Percent Substitutions,  Next: Switches,  Prev: Player Stats,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.27 Percent Substitutions
-----------------------------

     Some percent substitutions may differ between codebases.  Luckily,
     Rhost allows the ability to remap or creaete new ones if this is a
     problem.


File: rhostmushhandbook.info,  Node: Switches,  Next: Flags<2>,  Prev: Percent Substitutions,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.28 Switches
----------------

     Some switches may not exist in Rhost that do in other codebases, in
     such a case, Rhost does allow the ability to @hook a command to
     define your own softcoded switch to a hardcoded command and work
     around the limitation.


File: rhostmushhandbook.info,  Node: Flags<2>,  Next: Aliases,  Prev: Switches,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.29 Flags
-------------

     Some flags may be missing.  If it’s a dummy flag, feel free to use
     the marker flags MARKER0 to MARKER9 to set them.  If it’s an
     existing flag that does similar features, feel free to flag_alias
     it or just flag_name it to the other name if you want.


File: rhostmushhandbook.info,  Node: Aliases,  Prev: Flags<2>,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.30 Aliases
---------------

     Multiple aliases are supported via @protect.


File: rhostmushhandbook.info,  Node: Things other mushes can do that Rhost can not and how to emulate it<2>,  Prev: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Up: Comparison of modern MUSH servers

3.15 Things other mushes can do that Rhost can not and how to emulate it
========================================================================

* Menu:

* PennMUSH: PennMUSH<3>.
* MUX: MUX<3>.


File: rhostmushhandbook.info,  Node: PennMUSH<3>,  Next: MUX<3>,  Up: Things other mushes can do that Rhost can not and how to emulate it<2>

3.15.1 PennMUSH
---------------

   - Attribute trees.  These are emulated as a base set and can be
     duplicated enough to at least port code.

   - lsearch() will have to be recoded to search()

   - align() will have to be recoded to printf()

   - Penn allows empty attributes.  Rhost does not.  Work will have to
     be done to take this into consideration.

   - All *val() functions in Penn that are used will have to be remapped
     to a non-*val() function.  It should be as simple as function_alias
     to the non-*val.  Example:

          @admin function_alias=hasattrval hasattr

   - Penn’s hardcoded comsystem is emulated with the softcode comsys

   - Penn’s @mail system is workable with mail wrappers

   - Pueblo is not supported.

   - json is not supported.

   - ssl is not natively supported (yet).

   - This uses @shutdown/restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: MUX<3>,  Prev: PennMUSH<3>,  Up: Things other mushes can do that Rhost can not and how to emulate it<2>

3.15.2 MUX
----------

   - Mux has an async mysql database engine.  This is not possible with
     Rhost.  You’ll have to use the sync method instead.

   - UTF8 is supported but internally passed differently.

   - Mux’s hardcoded comsystem is emulated with the softcode comsys

   - MUX’s @mail system is workable with mail wrappers

   - Pueblo is not supported.

   - This uses @restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: Database,  Next: Gettin Started,  Prev: Comparison of modern MUSH servers,  Up: Top

4 Database
**********

* Menu:

* Loading an existing Database::
* Converting a flatfile database for use in RhostMUSH::


File: rhostmushhandbook.info,  Node: Loading an existing Database,  Next: Converting a flatfile database for use in RhostMUSH,  Up: Database

4.1 Loading an existing Database
================================

To load in a previous database, you run the db_load script.

From the game directory you would type:

     ./db_load data/netrhost.gdbm yourflatfilehere data/netrhost.db.new

     Note: You may also do: ./Startmush Then you just follow the prompts
     to load in your flatfile there.

If you wish to have #1’s password reset to ‘Nyctasia’ please add this to
the bottom of your netrhost.conf file:

     newpass_god 777

The caveat is that you must not have any netrhost.db* or netrhost.gdbm*
files in your data directory prior to loading it in.  It’ll error out if
previous files exist.  So you will need to move all files that start
with netrhost.db* and all files that start with netrhost.gdbm* to
another directory.

Your flatfile tends to be named ‘netrhost.db.flat’ which is in your data
directory.  You can, however, name your flatfile anything you want and
have it in any directory you want.

To make a flatfile in game, you just issue @dump/flat.  You can specify
a filename after it, otherwise it assumes the name ‘netrhost.db.flat’.


File: rhostmushhandbook.info,  Node: Converting a flatfile database for use in RhostMUSH,  Prev: Loading an existing Database,  Up: Database

4.2 Converting a flatfile database for use in RhostMUSH
=======================================================

In the ~/Server/convert directory there is a script called
‘doconvert.sh’

This script will convert most flatfiles from existing mush engines to
RhostMUSH. The exception is PennMUSH 1.8.0 and later.  For this there is
a BETA converter penn18x_converter.tgz.  This is proven to work, most of
the time, with codebases between 1.8.0 and 1.8.2.  It has not been fully
vetted with the latest PennMUSH databases.  Our apologies.

To convert a non-pennmush game (or a pennmush 1.7.4 or earlier), you
first need a valid flatfile of the game you’re wanting to convert.
Please refer to the documentatation of the mush engine in question (MUX,
Penn 1.7, TM2/3) on how to do this.  Once you have it type::

     ./doconvert.sh FLATFILETOCONVERT FLATFILEOUTPUT

In this instance, FLATFILETOCONVERT will be the filename (with full
path) to the flatfile you are wishing to convert.

The FLATFILEOUTPUT is anyfilename you wish to name the RhostMUSH
converted flatfile.  I suggest netrhost_converted.db.flat so you know by
the name what it is.

Follow what it asks for and just let it do its thing.


File: rhostmushhandbook.info,  Node: Gettin Started,  Next: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Prev: Database,  Up: Top

5 Gettin Started
****************

* Menu:

* What to ype to get the basics running if you did not choose a pre-existing flatfile::
* Minimal DB instructions::
* Ambrosia’s Minimal Rhost DB::


File: rhostmushhandbook.info,  Node: What to ype to get the basics running if you did not choose a pre-existing flatfile,  Next: Minimal DB instructions,  Up: Gettin Started

5.1 What to ype to get the basics running if you did not choose a pre-existing flatfile
=======================================================================================

If you decided to get a bare-bone configuration, you will find your mush
has just two things.  The #1 (God) player and the starting room #0.
That’s it.

* Menu:

* Login to #1 from the connect screen::
* Change #1’s password to something you’ll remember but is hard to guess::
* Master Room::
* Flag and protect Master Room::
* Player Holder Characters::
* Chown #0 (The starting room) and #2 (The Master room) to immholder: Chown #0 The starting room and #2 The Master room to immholder.
* Create yourself your own immortal player then log off #1 and into this immortal player::
* Log out of #1 and log into your immortal player::
* Create your guest characters::
* Dig a closet to store important objects but non-master room::
* Set the flags on the closet and ownership of it::
* Create an Admin object for future ease of customization::
* Set the flags on the admin object and ownership and location::
* Add admin object to configuration::
* Reboot your mush to load up the change for the admin object::
* Do @admin/list to see if it shows the admin object::
* Load in all the various softcode that you want::


File: rhostmushhandbook.info,  Node: Login to #1 from the connect screen,  Next: Change #1’s password to something you’ll remember but is hard to guess,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.1 Login to #1 from the connect screen
-----------------------------------------

Nyctasia is the default password:

     co #1 Nyctasia


File: rhostmushhandbook.info,  Node: Change #1’s password to something you’ll remember but is hard to guess,  Next: Master Room,  Prev: Login to #1 from the connect screen,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.2 Change #1’s password to something you’ll remember but is hard to guess
----------------------------------------------------------------------------

Note: yourpasswordgoeshere can be any password you choose.  Choose well:

     @password Nyctasia=YOURPASSWORDGOESHERE


File: rhostmushhandbook.info,  Node: Master Room,  Next: Flag and protect Master Room,  Prev: Change #1’s password to something you’ll remember but is hard to guess,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.3 Master Room
-----------------

At this point you should create your master room:

     @dig Master Room

     Note: Reason: You need a master room to contain global $commands
     for players ^listens are not global for intentional reasons.  It’s
     far too much overhead for far too minimal gains that few people
     need or use.


File: rhostmushhandbook.info,  Node: Flag and protect Master Room,  Next: Player Holder Characters,  Prev: Master Room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.4 Flag and protect Master Room
----------------------------------

It will return a dbref#, it should be #2 if you’ve not created anything
else:

     @set #2=safe ind halt float


File: rhostmushhandbook.info,  Node: Player Holder Characters,  Next: Chown #0 The starting room and #2 The Master room to immholder,  Prev: Flag and protect Master Room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.5 Player Holder Characters
------------------------------

Feel free to change the password to what you want

     Note: Reason: You will want to chown global room or global areas to
     a given bitlevel and a method to keep organized.  Note: wizhelp
     control will give you a complete breakdown of what each bit can do.

* Menu:

* Immortal Holder::
* Royalty/Wizard Holder::
* Councilor/Admin Holder::
* Architect/Staff Holder::
* Guildmaster/Lead Holder::


File: rhostmushhandbook.info,  Node: Immortal Holder,  Next: Royalty/Wizard Holder,  Up: Player Holder Characters

5.1.5.1 Immortal Holder
.......................

     @pcreate ImmHolder=abc123
     @set *Immholder=no_connect !wanderer immortal
     @badsite *immholder=*


File: rhostmushhandbook.info,  Node: Royalty/Wizard Holder,  Next: Councilor/Admin Holder,  Prev: Immortal Holder,  Up: Player Holder Characters

5.1.5.2 Royalty/Wizard Holder
.............................

     @pcreate WizHolder=abc123
     @set *wizholder=no_connect !wanderer royalty
     @badsite *wizholder=*


File: rhostmushhandbook.info,  Node: Councilor/Admin Holder,  Next: Architect/Staff Holder,  Prev: Royalty/Wizard Holder,  Up: Player Holder Characters

5.1.5.3 Councilor/Admin Holder
..............................

     @pcreate AdminHolder=abc123
     @set *adminholder=no_connect !wanderer councilor
     @badsite *adminholder=*


File: rhostmushhandbook.info,  Node: Architect/Staff Holder,  Next: Guildmaster/Lead Holder,  Prev: Councilor/Admin Holder,  Up: Player Holder Characters

5.1.5.4 Architect/Staff Holder
..............................

     @pcreate StaffHolder=abc123
     @set *staffholder=no_connect !wanderer architect
     @badsite *staffholder=*


File: rhostmushhandbook.info,  Node: Guildmaster/Lead Holder,  Prev: Architect/Staff Holder,  Up: Player Holder Characters

5.1.5.5 Guildmaster/Lead Holder
...............................

     @pcreate GuildHolder=abc123
     @set *guildholder=no_connect !wanderer guildmaster
     @badsite *guildholder=*


File: rhostmushhandbook.info,  Node: Chown #0 The starting room and #2 The Master room to immholder,  Next: Create yourself your own immortal player then log off #1 and into this immortal player,  Prev: Player Holder Characters,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.6 Chown #0 (The starting room) and #2 (The Master room) to immholder
------------------------------------------------------------------------

     Note: #0 you can chown to a different bitlevel if you want, but the
     master room should always be owned by an immortal

     @chown/preserve #0=*immholder
     @chown/preserve #2=*immholder


File: rhostmushhandbook.info,  Node: Create yourself your own immortal player then log off #1 and into this immortal player,  Next: Log out of #1 and log into your immortal player,  Prev: Chown #0 The starting room and #2 The Master room to immholder,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.7 Create yourself your own immortal player then log off #1 and into this immortal player
--------------------------------------------------------------------------------------------

     Note: Pick what you want for playername and playerpassword

     @pcreate PLAYERNAME=PLAYERPASSWORD
     @set *playername=!wanderer immortal


File: rhostmushhandbook.info,  Node: Log out of #1 and log into your immortal player,  Next: Create your guest characters,  Prev: Create yourself your own immortal player then log off #1 and into this immortal player,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.8 Log out of #1 and log into your immortal player
-----------------------------------------------------

     Note: Use the playername and password you created in the step
     before

     LOGOUT
     co PLAYERNAME PLAYERPASSWORD


File: rhostmushhandbook.info,  Node: Create your guest characters,  Next: Dig a closet to store important objects but non-master room,  Prev: Log out of #1 and log into your immortal player,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.9 Create your guest characters
----------------------------------

     Note: Feel free to change the description if you want

     @dolist lnum(1,10)={@pcreate Guest##=guest;@set *Guest##=guest;@adisconnect *Guest##=home;@lock *Guest##=*Guest##;@desc *Guest##=A Stranger in a strange land.}


File: rhostmushhandbook.info,  Node: Dig a closet to store important objects but non-master room,  Next: Set the flags on the closet and ownership of it,  Prev: Create your guest characters,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.10 Dig a closet to store important objects but non-master room
------------------------------------------------------------------

     Note: name it anything you want, just remember it.

     @dig Closet


File: rhostmushhandbook.info,  Node: Set the flags on the closet and ownership of it,  Next: Create an Admin object for future ease of customization,  Prev: Dig a closet to store important objects but non-master room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.11 Set the flags on the closet and ownership of it
------------------------------------------------------

     Note: Use the dbref# that it returned when digging the closet and
     not #123

     @set #123=inh safe ind float
     @chown/pres #123=*immholder


File: rhostmushhandbook.info,  Node: Create an Admin object for future ease of customization,  Next: Set the flags on the admin object and ownership and location,  Prev: Set the flags on the closet and ownership of it,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.12 Create an Admin object for future ease of customization
--------------------------------------------------------------

     @create AdminObject


File: rhostmushhandbook.info,  Node: Set the flags on the admin object and ownership and location,  Next: Add admin object to configuration,  Prev: Create an Admin object for future ease of customization,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.13 Set the flags on the admin object and ownership and location
-------------------------------------------------------------------

     Note: this object must be immortal owned.  Use the dbref# returned
     previously instead of #123

     Note: Use the closet dbref# instead of #234

     @set AdminObject=halt safe ind
     @chown/pres #123=*immholder
     @tel adminobject=#234


File: rhostmushhandbook.info,  Node: Add admin object to configuration,  Next: Reboot your mush to load up the change for the admin object,  Prev: Set the flags on the admin object and ownership and location,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.14 Add admin object to configuration
----------------------------------------

Modify the netrhost.conf file with the following line at the bottom
after the line ‘# define local alises here’ where you replace 123 with
the dbref# of the admin object that you made:

     admin_object 123


File: rhostmushhandbook.info,  Node: Reboot your mush to load up the change for the admin object,  Next: Do @admin/list to see if it shows the admin object,  Prev: Add admin object to configuration,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.15 Reboot your mush to load up the change for the admin object
------------------------------------------------------------------

     @reboot


File: rhostmushhandbook.info,  Node: Do @admin/list to see if it shows the admin object,  Next: Load in all the various softcode that you want,  Prev: Reboot your mush to load up the change for the admin object,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.16 Do @admin/list to see if it shows the admin object
---------------------------------------------------------

     Note: do wizhelp @admin for more information on how to use this

     @admin/list


File: rhostmushhandbook.info,  Node: Load in all the various softcode that you want,  Prev: Do @admin/list to see if it shows the admin object,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.17 Load in all the various softcode that you want
-----------------------------------------------------

This is client dependant based on whatever method it uses to load
softcode.

* Menu:

* Myrddin MushCron::
* AshCom::
* Mail Wrappers::
* Myrddin BBS::
* Other Mushcode::


File: rhostmushhandbook.info,  Node: Myrddin MushCron,  Next: AshCom,  Up: Load in all the various softcode that you want

5.1.17.1 Myrddin MushCron
.........................

Load in the Myrddin Mush Cron.  It’s a very handy piece of software and
strongly suggested to do so.  You can find this in the ‘Mushcode’
directory off the main Rhost directory.  Filename:

     ~/Rhost/Mushcode/MyrddinCRON

     Note: The globalroom() function returns the dbref# of the master
     room.  Handy!

     @chown/preserve the myrddin mush cron to immholder, then move to maste room.
     @chown/pres Myrddin=*Immholder
     @tel Myrddin=#234 (where #234 is the dbref# of your code closet)


File: rhostmushhandbook.info,  Node: AshCom,  Next: Mail Wrappers,  Prev: Myrddin MushCron,  Up: Load in all the various softcode that you want

5.1.17.2 AshCom
...............

Load in default softcoded comsystem.  This is PennMUSH and MUX/TM3
compatible.  Filename:

     ~/Rhost/Mushcode/comsys

Chown the Comsystem and everything inside it to immholder:

     @chown/pres ChanSys=*Immholder
     @dolist lcon(chansys)=@chown/pres ##=*immholder
     @tel Chansys=globalroom()


File: rhostmushhandbook.info,  Node: Mail Wrappers,  Next: Myrddin BBS,  Prev: AshCom,  Up: Load in all the various softcode that you want

5.1.17.3 Mail Wrappers
......................

Load in mail wrappers if you want MUX/TM3 and/or Penn mail wrapping.
Filename (MUX/TM3):

     ~/Rhost/Mushcode/mailwrappers/muxmail.wrap

Filename (Penn):

     ~/Rhost/Mushcode/mailwrappers/pennmail.wrap

Chown to immholder:

     @chown/pres MUX=*Immholder
     @chown/pres Penn=*Immholder
     @tel/list mux penn=globalroom()


File: rhostmushhandbook.info,  Node: Myrddin BBS,  Next: Other Mushcode,  Prev: Mail Wrappers,  Up: Load in all the various softcode that you want

5.1.17.4 Myrddin BBS
....................

Load in Myrddin’s BBS Filename:

     ~/Rhost/Mushcode/MyrddinBBS

Chown to immholder and the contents of it as well:

     @chown/pres Myrddin=*Immholder
     @dolist lcon(myrddin)=@chown/pres ##=*immholder
     @tel myrddin=globalroom()


File: rhostmushhandbook.info,  Node: Other Mushcode,  Prev: Myrddin BBS,  Up: Load in all the various softcode that you want

5.1.17.5 Other Mushcode
.......................

There’s other code in the Mushcode directory that you are welcome to
install.  You would follow similar procedures for loading it in,
chowning it, and moving to the master room as you did above.

Likewise, any softcode you find on the internet or on other mushes
should be portable to RhostMUSH with little to no changes depending on
the complexity of the code in question.


File: rhostmushhandbook.info,  Node: Minimal DB instructions,  Next: Ambrosia’s Minimal Rhost DB,  Prev: What to ype to get the basics running if you did not choose a pre-existing flatfile,  Up: Gettin Started

5.2 Minimal DB instructions
===========================

The ‘retired’ directory has older image files if you’re interested

Please use the netrhost.conf file with the database as they’re linked.

The flatfile must be loaded in as a new db

This is a minimal db with basic ‘features’ built in.

Copy the txt files into the Rhost’s txt directory off game:

     cp txt/* ~/Rhost/Server/game/txt

mkindx the files (substitute FILENAME with the filename):

     cd ~/Rhost/Server/game/txt
     ../mkindx FILENAME.txt FILENAME.indx

* Menu:

* Startup Steps::


File: rhostmushhandbook.info,  Node: Startup Steps,  Up: Minimal DB instructions

5.2.1 Startup Steps
-------------------

  1. Using the Startmush utility for the first time, select the load db
     method

— or —

  1. copy the netrhost.conf file into the games directory

  2. make any relevant changes you wish

  3. db_load the flatfile

       1. go into the game directory

       2. type:

               ./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new

  4. Startmush as expected


File: rhostmushhandbook.info,  Node: Ambrosia’s Minimal Rhost DB,  Prev: Minimal DB instructions,  Up: Gettin Started

5.3 Ambrosia’s Minimal Rhost DB
===============================

* Menu:

* Version; 1.0.5 2020-01-31: Version 1 0 5 2020-01-31.
* Introduction::
* Features::
* Bitlevels::
* Quota::
* Functions: Functions<2>.
* Compiling::


File: rhostmushhandbook.info,  Node: Version 1 0 5 2020-01-31,  Next: Introduction,  Up: Ambrosia’s Minimal Rhost DB

5.3.1 Version: 1.0.5 2020-01-31
-------------------------------

Version history:

     1.0.0

             - Initial database setup.

     1.0.1

             - Small fixes of objid(), isstaff() and bccheck()
               permissions and handling.

             - bittype() access lowered to Architect level

             - NO_CODE flag made visual to Architect

     1.0.2

             - Several convenience changes and fixes: _ Attributes moved
               to @aflags system, allowing Architects to set,
               Guildmasters to see them.

             - @flagdef lowered to Royalty level.  @quota/max,
               @quota/unlock and @convert moved to Architect level.

             - NO_CODE flag made settable/unsettable by Architects.

             - Fixed typo in conf file: ifselse -> ifelse

             - Switched _Attributes to use the @aflags system See:
               Guildmaster Set: Architect

     1.0.3

             - Removed @flagdefs from in-game softcode, converted to
               flag_access_* config options

             - Lowered mailstatus() access to architect.

     1.0.4

             - Changed softcoded objid() to tag(), due to Rhost’s new
               hardcoded objid() which does perform a different
               functionality.

             - Added more staff recommendations to this file.

             - Added Reality TXLevel ‘Admin’ to all objects in the db
               except #1

     1.0.5

             - Replaced softcoded tag() system with Rhost’s new
               hardcoded @tag/tag() system.  All previous tags are set
               on the database.  The Tag Object was removed.

             - @function startup on BC-Admin-Royalty fixed - @wait 1
               workaround for Tags in place.

             - Places System @startup integrated into BC-Admin-Royalty’s
               @startup

             - Made @dump and @dump/flat available to Councilors in
               netrhost.conf

     1.0.6

             - A small typo fix in netrhost.conf.  float_preciiosn ->
               precision and functions_max -> function_max.  Thanks to
               <Bobbi@COH>


File: rhostmushhandbook.info,  Node: Introduction,  Next: Features,  Prev: Version 1 0 5 2020-01-31,  Up: Ambrosia’s Minimal Rhost DB

5.3.2 Introduction
------------------

     Note: READ THIS DOCUMENT CAREFULLY!

Greetings,

This minimal Rhost DB was made with a secure setup, and as a good base
to start a new game off in mind.


File: rhostmushhandbook.info,  Node: Features,  Next: Bitlevels,  Prev: Introduction,  Up: Ambrosia’s Minimal Rhost DB

5.3.3 Features
--------------

* Menu:

* Configuration::
* Softcode::
* Functions::


File: rhostmushhandbook.info,  Node: Configuration,  Next: Softcode,  Up: Features

5.3.3.1 Configuration
.....................

   * Limbo, Master Room and Auxiliary room.

   * BC-Admin-<bitlevel> characters set up for each bitlevel to own
     global and data objects, and inherit to.

   * BC-Admin-Mortal is @powered EXAMINE_ALL(Guildmaster),
     NOFORCE(Architect) and LONG_FINGERS.

   * @startup on BC-Admin-Immortal lowers DARK flag access to Councilor
     level, and NO_CODE visual access to Architect level.

   * Global Command objects inheriting from each bitlevel, with a
     separate staff-only object for each level.

   * Global Function objects inheriting from each bitlevel.

   * local Function objects inheriting from each bitlevel.

   * @function and @hook access lowered to Royalty level to remove
     immediate need for Immortals or actual Immortal code.

   * @rxlevel, @txlevel, bittype() access lowered to Architect level to
     remove immediate need for Royalty in many cases.

   * @startup on BC-Admin-Royalty to automatically load @hooks and
     @functions from the Global Function objects, based on attribute
     naming.

   * Misc Data object to hold general data, like Staff lists etc.

   * Reality levels ‘Real’ and ‘Admin’.

     Note: All created items and players by default are in Recieve-Level
     ‘Real’ and Transmit-Levels ‘Real’ and ‘Admin’.

   * All globals, Master Room, BCs-*, and other staff/code-related
     objects currently have only ‘Admin’ as their Transmit-Level.  This
     does not prevent them fromi working properly.  The only exception
     is #1, who has empty reality levels.

   * The supplied netrhost.conf offers a secure setup of options, allows
     Royalty to use @hook and @function, and also sets the
     function_access of several functions to !no_code, which allows
     NO_CODE players to use the comsys properly.

     Note: IT IS HIGHLY RECOMMENDED to use this .conf as a base for this
     DB. The ‘Port’ configuration parameter is XXXX’d out.  Set it first
     before starting your game.

   * All existing objects have been @set SAFE and INDESTRUCTABLE.

   * All existing objects have a paranoid series of @locks set on
     themselves.

   * The +supersafe command is provided on #1 as an example of what was
     used to easily set this on objects.

   * Players are @set NO_CODE and WANDERER by default.  They get 40
     credits on creation, and a 1-credit-per-day paycheck.

   * All *mit sideeffects, as well as set(), create() and list() are
     enabled.  The latter three are necessary for the Comsystem.  The
     rest of sideeffects are disabled completely.

   * Flashing ansi is disabled.

   * _Attributes are settable by Architects, and seeable by
     Guildmasters.  Read: Still invisible and unsettable by mortals.

   * Architects can set up, unlock, and change alternate @quota on
     players.

   * Architects can set/unset the NO_CODE flag.

   * Guildmasters can see _Attributes

   * Architects can set _Attributes


File: rhostmushhandbook.info,  Node: Softcode,  Next: Functions,  Prev: Configuration,  Up: Features

5.3.3.2 Softcode
................

   * Set-up compatibility SoftFunctions and @hook object.

   * Set up Comsys 1.0.9b at Architect level.  (+bbhelp command)

   * Set up Myrddin +bboard at Architect level.

   * Set up Myrddon Cron at Architect level.

   * Anomaly Jobs (+jhelp)

   * SGP Places & Mutter

   * Set up Penn-style follow.

   * Set up @scan (Up to architect-level items).

   * Set up Penn- and Mux compatibility Mailwrappers.  (phelp and mhelp
     commands)

   * help .txt files and .indx files for the above.

   * @dynhelp access lowered to architect to call above helpfiles.


File: rhostmushhandbook.info,  Node: Functions,  Prev: Softcode,  Up: Features

5.3.3.3 Functions
.................

   * isstaff() - Softcoded function that returns ‘1’ if its argument
     matches a #dbref in the ‘isstaff’ attribute on the Misc Data
     object.

   * bccheck() - Softcoded function that returns ‘1’ if its argument
     matches a #dbref in the ‘bcs’ attribute on the Misc Data object.

   * width() - Softcoded function that returns 78 for now.  For
     cross-MU* compatibility.

   * pass() - Softcoded function that takes a number as its parameter,
     and return a random string of that length.  Perfect for setting
     random passwords.

   * cmdmessage() - Softcoded function that takes two strings as its
     parameters.  Returns ‘<< STRING1 >> String2’.  The <<>> part is
     highlighted red.  Good for all kinds of messages sent by game
     commands.

   * header() - Highly versatile, and a buffer-saving alternative to
     using printf() for centering with ansi borders.  HIGHLY recommended
     to use instead of printf() for such things.

     header(text,width,filler,fillercolor,outerpadding,paddingcolor,
            leftinnerpadding,leftinnercolor,rightinnerpadding,rightinnercolor)
       text - Text to center
       width - Width of the header, defaults to width()
       filler - Character(s) to draw the line with. Default: =
       fillercolor - ansicode to color the line with
       outerpadding - Characters to frame the outer ends of the line with.
       paddingcolor - ansicode to color the outer characters with
       leftinnerpadding - characters to put at the left side of <text>
       leftinnercolor - ansicode to color the leftside characters with
       rightinnerpadding - characters to put at the right side of <text>
       rightinnercolor - ansicode to color the rightside characters with

     Note: ALL of header()’s parameters are optional.  By default,
     header() simply draws a 78-char wide line of =’s.  Simply leave
     parameters empty if you want to set one of the latter parameters.


File: rhostmushhandbook.info,  Node: Bitlevels,  Next: Quota,  Prev: Features,  Up: Ambrosia’s Minimal Rhost DB

5.3.4 Bitlevels
---------------

The whole DB is highly geared for a low-bitlevel setup.  I am a strong
believer in least-privileges-needed to do the job.  Bittypes and powers
are tools to do that job, not badges of friendship or trust that get
tossed about.

     Note: Here is my suggested list of powers and bittypes for
     staffers.

* Menu:

* Storytellers::
* Builder-BCs::
* Building Head::
* Enforcers::
* Coders::
* Head Coder::
* MU* Head(s): MU* Head s.
* Site Admins::
* Globals::


File: rhostmushhandbook.info,  Node: Storytellers,  Next: Builder-BCs,  Up: Bitlevels

5.3.4.1 Storytellers
....................

@powered TEL_ANYWHERE, JOIN_PLAYER and GRAB_PLAYER on Guildmaster level.


File: rhostmushhandbook.info,  Node: Builder-BCs,  Next: Building Head,  Prev: Storytellers,  Up: Bitlevels

5.3.4.2 Builder-BCs
...................

Mortal, with @quota and money for their job.  There should be one shared
BC for each area of the game, like BC-Houston.  Special Rooms, items or
exits that require privilegs to examine or @tel a player should belong
to a BC-Houston-Powered that is @powered EXAMINE_ALL, LONG_FINGERS And
TEL_ANYTHING on Guildmaster level.  If the object actually needs to
modify a player directly, have it use a restricted staff Global, or if
you absolutely must, make a BC-Houston-Admin and @set it Architect.  Do
not give normal builders access to it, only @chown things to it and @set
them inherit after review.

Both the -powered and -admin BCs can have random passwords and be @set
NO_CONNECT.


File: rhostmushhandbook.info,  Node: Building Head,  Next: Enforcers,  Prev: Builder-BCs,  Up: Bitlevels

5.3.4.3 Building Head
.....................

@set Guildmaster, powered TEL_ANYWHERE, TEL_ANYTHING and optionally
CHOWN_OTHER on Guildmaster level.  Mind that the latter technically
allows them to @chown anything guildmaster- and lower-owned in the
master and auxiliary rooms.  However, it allows the Building Head to
@chown items between BCs- and to the BC-<location>-powered.


File: rhostmushhandbook.info,  Node: Enforcers,  Next: Coders,  Prev: Building Head,  Up: Bitlevels

5.3.4.4 Enforcers
.................

As Storyteller above, plus being @powered Security at Guildmaster level,
in order to handle problem players.

Optionally always given to Storytellers.


File: rhostmushhandbook.info,  Node: Coders,  Next: Head Coder,  Prev: Enforcers,  Up: Bitlevels

5.3.4.5 Coders
..............

@set Architect


File: rhostmushhandbook.info,  Node: Head Coder,  Next: MU* Head s,  Prev: Coders,  Up: Bitlevels

5.3.4.6 Head Coder
..................

Always trust your head coder.  @set Architect for the everyday bit.
Give access to a maintenance Councilor bit for special code projects.
Finished code along those lines should get @chowned to the
bc-admin-councilor.

If you as the MU* Head(s) don’t know Softcode well, or want to leave
anything Code to your Head Coder, also give them optional access to a
maintenance Royalty bit in order to properly code banning/blacklisting
+commands and other rare code that requires Royalty powers.  Again,
chown finished code to bc-admin-royalty.


File: rhostmushhandbook.info,  Node: MU* Head s,  Next: Site Admins,  Prev: Head Coder,  Up: Bitlevels

5.3.4.7 MU* Head(s)
...................

You’re the boss(es).  But please use an Architect bit for your everyday
things.  Keep Immortal to yourself.  Keep #1 to yourself.  And seriously
avoid using either of them except for creating a Royalty bit or doing
intricate DB maintenance.


File: rhostmushhandbook.info,  Node: Site Admins,  Next: Globals,  Prev: MU* Head s,  Up: Bitlevels

5.3.4.8 Site Admins
...................

They already have more powers than any in-game bit can ever have ;)

Depending on actual involvement with your game, their abilities in-game
can range from merely being @powered free_wall for notifying players of
downtimes and/or being @powered shutdown in order to shut down the game
for maintenance, up to being the only person with actual access to #1.


File: rhostmushhandbook.info,  Node: Globals,  Prev: Site Admins,  Up: Bitlevels

5.3.4.9 Globals
...............

Handle necessary functionality for adminning through the admin-only
globals and softcode.

The setup I personally suggest is to have ALL staffers be AT MAX
Architect-level for everyday work and communication, with special coders
that -really- require it having Councilor-characters available to log
into for maintenance or special code setup.  Technically if everything
is done right, the Coder(s) of the game do not require higher privileges
than Architect for the vast majority of things.  Royalty-level code
should be a rare exception, if at all necessary.  The MU* Head(s) or
site-admin should be the only one having access to #1, Immortals or
perhaps even Royalty.  The BC’s, Global Function objects and Function
objects at level Royalty and higher have simply been provided as a
if-necessary convenience.

Current objects are only @chowned to certain bitlevels if it is really
required for them to function.  Whenever possible, they have been
@chowned to the mortal BC-Admin-Mortal.  All custom global functions
listed above are on the semi- -mortal Global Functions object.  The
Master Room and Auxiliary Room have been @chowned to BC-Admin-Architect.

The Comsystem and +bboard are owned by BC-Admin-Architect, which means
that higher bitlevels might not be able to use those systems if they
hide and set themselves DARK. This is intentional.  The Architect
bitlevel is enough to freely set attributes on players, so these systems
did not need anything higher, and it prioritizes Councilor+ as mere
mainenance-duty bitlevels.  Even the MU* Head should log on as an
Architect for everyday things.

The Comsystem and BBOARD have been modified to be configurable by
Architect and higher.  Both systems have a CANUSE attribute with the
according code on them.  Note that if you want both systems to be only
configurable by Councilor+, that instead of @chowning them to a
Councilor after changing those attribute for Councilor or higher, I
suggest to simply @set the bboard and comsystem core objects NO_MODIFY
instead, keeping them at Architect-power but making them unmodifyable by
Architects.


File: rhostmushhandbook.info,  Node: Quota,  Next: Functions<2>,  Prev: Bitlevels,  Up: Ambrosia’s Minimal Rhost DB

5.3.5 Quota
-----------

I highly recommend the use of the alternative @quota system.
BC-Admin-Mortal and BC-Admin-Guildmaster both have this @quota system
set up on themselves.  Both of them have a high amount of money for
everyday operations.  You should not give them free quota or money.


File: rhostmushhandbook.info,  Node: Functions<2>,  Next: Compiling,  Prev: Quota,  Up: Ambrosia’s Minimal Rhost DB

5.3.6 Functions
---------------

I also recommend to setup most global functions with /Privileged even if
they are mortal-powered, to make them work even when players are set
NO_CODE and WANDERER by default.

Enjoy!


File: rhostmushhandbook.info,  Node: Compiling,  Prev: Functions<2>,  Up: Ambrosia’s Minimal Rhost DB

5.3.7 Compiling
---------------

P.S. the ‘bin/asksource.save0’ file has been supplied for loading in the
‘make config’ or ‘make confsource’ step of Rhost installation.  It
provides the settings I have used when creating this database.  Some
settings, like the ANSI substitution, are used in the DB.

–Ambrosia@RhostMUSH <--Ambrosia@RhostMUSH>


File: rhostmushhandbook.info,  Node: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Next: Security,  Prev: Gettin Started,  Up: Top

6 What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH
************************************************************************

* Menu:

* Flags: Flags<3>.
* Toggles: Toggles<2>.
* @power::
* @depower::
* Multi-tiered bitlevel systems::
* Altering bitlevels::


File: rhostmushhandbook.info,  Node: Flags<3>,  Next: Toggles<2>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.1 Flags
=========

Flags are pretty much exactly the same as any other mush.  It’s a flag
that you set or unset on a target which then enables/disables or alters
something that target can do.  There’s help on all the flags in help and
wizhelp.


File: rhostmushhandbook.info,  Node: Toggles<2>,  Next: @power,  Prev: Flags<3>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.2 Toggles
===========

Toggles were designed as a single point flag that immediately enables or
disables a set ability or condition, thus a ‘toggle’.  It works exactly
like a flag and was originally designed for two reasons.  To distinguish
from the multi-meaning of a ‘flag’, and because frankly we ran out of
flag space :)


File: rhostmushhandbook.info,  Node: @power,  Next: @depower,  Prev: Toggles<2>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.3 @power
==========

A power is similar to a power on other mushes, but unlike them, our
powers are multi-tier.  This means that they can be customized to
empower something at a given bitlevel.  You may empower something from
guildmaster up to councilor level.  There are some powers with a power
level of N/A meaning they are a toggle power granting an absolute power
level as specified in the help for that power.  This requires the
INHERIT flag for non-players to inherit powers, however, a specific
object can be granted a power as well.


File: rhostmushhandbook.info,  Node: @depower,  Next: Multi-tiered bitlevel systems,  Prev: @power,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.4 @depower
============

This is the anti-thesis of @power.  Also, depowers do not require
inheritance.  They also have priority over flags, toggles, and powers.
You can use depower to remove or lower abilities and control from a
target, even a full wizard (royalty) can be depowered.


File: rhostmushhandbook.info,  Node: Multi-tiered bitlevel systems,  Next: Altering bitlevels,  Prev: @depower,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.5 Multi-tiered bitlevel systems
=================================

RhostMUSH offers a multi-tier bitlevel system.  They go in order of
presidence You do not have to use all these bits, only use what you
want.

* Menu:

* ghod (#1) <bitlevel 7>: ghod #1 <bitlevel 7>.
* Immortal(i) <Level 6> - Basically #1: Immortal i <Level 6> - Basically #1.
* Royalty(W) <Level 5> - FULL wizbit level: Royalty W <Level 5> - FULL wizbit level.
* Councilor(a) <Level 4> - High wizbit level: Councilor a <Level 4> - High wizbit level.
* Architect(B) <Level 3> - Middle wizbit level: Architect B <Level 3> - Middle wizbit level.
* Guildmaster(g) <Level 2> - Lowest wizbit level: Guildmaster g <Level 2> - Lowest wizbit level.
* Wanderer <bitlevel 0>::
* Guest <bitlevel 0 as well>::


File: rhostmushhandbook.info,  Node: ghod #1 <bitlevel 7>,  Next: Immortal i <Level 6> - Basically #1,  Up: Multi-tiered bitlevel systems

6.5.1 ghod (#1) <bitlevel 7>
----------------------------

This bitlevel can do everything.  Only those who you trust with absolute
power should have this.  Period.


File: rhostmushhandbook.info,  Node: Immortal i <Level 6> - Basically #1,  Next: Royalty W <Level 5> - FULL wizbit level,  Prev: ghod #1 <bitlevel 7>,  Up: Multi-tiered bitlevel systems

6.5.2 Immortal(i) <Level 6> - Basically #1
------------------------------------------

The only thing this bitlevel can not do is directly effect #1, set/unset
some internal flags/attributes, and set/unset the immortal flag.  These
players can do EVERYTHING else.  Treat this bit as you would treat #1.
Only give it to those you know without a doubt you can trust.

   * Can do everything except set some internal flags, effect #1, and
     set/remove the immortal flag.


File: rhostmushhandbook.info,  Node: Royalty W <Level 5> - FULL wizbit level,  Next: Councilor a <Level 4> - High wizbit level,  Prev: Immortal i <Level 6> - Basically #1,  Up: Multi-tiered bitlevel systems

6.5.3 Royalty(W) <Level 5> - FULL wizbit level
----------------------------------------------

This is your standard wizard.  They can do everything you’re used to on
other mushes that wizards can do.  In addition, they also override all
locks by default (this can be disabled), and they have an enhanced
wizcloaking ability (which also can be disabled).  They can also set all
the lower bitlevels.

   * All things of Level 4 and lower

   * Ability to set more flags: STOP, NOSTOP, FUBAR

   * Ability to @attribute,

   * Ability to WIZCLOAK


File: rhostmushhandbook.info,  Node: Councilor a <Level 4> - High wizbit level,  Next: Architect B <Level 3> - Middle wizbit level,  Prev: Royalty W <Level 5> - FULL wizbit level,  Up: Multi-tiered bitlevel systems

6.5.4 Councilor(a) <Level 4> - High wizbit level
------------------------------------------------

This is your almost-but-not-quite wizard.  They have access to about 80%
of the wizard commands.  This includes @nuke, @toad, @newpassword and
the like.  The only things they can’t do that wizards can is cloak,
override locks, and use some of the database manipulation tools in
wizhelp.

   * All things of Level 3 and lower

   * Ability to set more flags: NOCONNECT, WANDERER, FREE

   * Ability to @nuke, @toad, @boot, @chownall, @dbck, @poor,
     @newpassword, @pcreate, slay


File: rhostmushhandbook.info,  Node: Architect B <Level 3> - Middle wizbit level,  Next: Guildmaster g <Level 2> - Lowest wizbit level,  Prev: Councilor a <Level 4> - High wizbit level,  Up: Multi-tiered bitlevel systems

6.5.5 Architect(B) <Level 3> - Middle wizbit level
--------------------------------------------------

This is your sub-wizard.  They still have the ability to control
anything their bitlevel and lower (including @chown, @destroy, etc) but
do not have any control of other players (like @nuke, @toad, etc) but
they can set the slave flag.  Otherwise, all things their level and
lower they can treat as if they owned it.

   * All things of Level 2

   * Ability to fully control and modify anything their level and lower
     (including @cloning, @destroying, etc)

   * Ability to use @tel on anything their level and lower.

   * Ability to bypass jump_ok rooms on anything their level & lower.

   * Ability to set some restricted flags: SLAVE, NO_YELL

   * Has infinite quota and money

   * Able to give negative money (Steal)

   * Able to @toggle the MONITOR


File: rhostmushhandbook.info,  Node: Guildmaster g <Level 2> - Lowest wizbit level,  Next: Wanderer <bitlevel 0>,  Prev: Architect B <Level 3> - Middle wizbit level,  Up: Multi-tiered bitlevel systems

6.5.6 Guildmaster(g) <Level 2> - Lowest wizbit level
----------------------------------------------------

This is the lowest wiz bit.  They only have moderate abilities.  They
can examine/decompile anything their level and lower, they can
@guild/@quota people, and they have a few other minor abilities.  They
don’t have free money however.

   * Ability to access things remotely (long_fingers)

   * Things are FREE for them in the queue.

   * Can see dbref#’s of things their level and lower

   * Can examine/decompile things their level and lower.

   * Can set @quota/@guild on their level and lower.


File: rhostmushhandbook.info,  Node: Wanderer <bitlevel 0>,  Next: Guest <bitlevel 0 as well>,  Prev: Guildmaster g <Level 2> - Lowest wizbit level,  Up: Multi-tiered bitlevel systems

6.5.7 Wanderer <bitlevel 0>
---------------------------

This is a hinderance flag.  This flag is automatically set on new
players that are created (which can be disabled).  This flag stops the
player from creating/destroying any database information.  In effect it
stops them from any type of building type commands.  They still are
allowed to set/unset locks/attributes/etc though without hinderance.


File: rhostmushhandbook.info,  Node: Guest <bitlevel 0 as well>,  Prev: Wanderer <bitlevel 0>,  Up: Multi-tiered bitlevel systems

6.5.8 Guest <bitlevel 0 as well>
--------------------------------

This is a bigger hinderance flag.  By default all guests should be set
this.  This flag stops the player from ANY database manipulation along
with @teleporting, and many other advanced commands.  It’s extreamly
dehibilatating.


File: rhostmushhandbook.info,  Node: Altering bitlevels,  Prev: Multi-tiered bitlevel systems,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.6 Altering bitlevels
======================

Please keep in mind each of these bitlevels can be tweeked with the
@admin parameters and with the @powers (accessable by royalty) or
@depowers (only by immortal and higher).


File: rhostmushhandbook.info,  Node: Security,  Next: Maintenance,  Prev: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Up: Top

7 Security
**********

* Menu:

* Considerations to locking down restrictions in RhostMUSH::
* Extended lockdown of the mush and considerations::
* Methods to block anonymous connections and the pros and cons of doing so::
* Setting up an SSL tunnel for secure connection options::


File: rhostmushhandbook.info,  Node: Considerations to locking down restrictions in RhostMUSH,  Next: Extended lockdown of the mush and considerations,  Up: Security

7.1 Considerations to locking down restrictions in RhostMUSH
============================================================

Sometimes, you want to have things run at various privilage levels and
do not want to have things with too much access.  Weither that is online
objects or players you want to block from connecting to your mush.
Here’s things you can do.

One thing to keep in mind is that RhostMUSH, unlike PennMUSH is not flag
dependant on permission level, it’s ownership based.  While setting a
wizard flag on an object would work, it’s not recommended and it is
instead recommended to chown the object in question to a wizard (like
your wizard holder character) Then the object must be set inherit to
actually inherit the wizard.

Note: inherit is required to inherit anything from the player. Flags, powers,

     toggles.  The only thing that is inherited automatically is
     depowers.

* Menu:

* Online; Blocking object abilities: Online Blocking object abilities.
* Offline; Blocking twinks from being abusive on your game: Offline Blocking twinks from being abusive on your game.


File: rhostmushhandbook.info,  Node: Online Blocking object abilities,  Next: Offline Blocking twinks from being abusive on your game,  Up: Considerations to locking down restrictions in RhostMUSH

7.1.1 Online: Blocking object abilities
---------------------------------------

We have various flag levels.  It is strongly recommanded you check
wizhelp on ‘control’ for a detailed overview of what each bitlevel can
or can not do prior to giving the ownership to the object.  Things
useful for tweaking control on players and objects:

* Menu:

* FLAGS (access with @set): FLAGS access with @set.
* TOGGLES (@toggle): TOGGLES @toggle.
* @powers, @depowers, and @locks: @powers @depowers and @locks.


File: rhostmushhandbook.info,  Node: FLAGS access with @set,  Next: TOGGLES @toggle,  Up: Online Blocking object abilities

7.1.1.1 FLAGS (access with @set)
................................

     IMMORTAL, ROYALTY, COUNCILOR, ARCHITECT, GUILDMASTER, FUBAR, SLAVE,
     SIDEFX, NO_CONNECT, WANDERER, SAFE, AUDITORIUM, BACKSTAGE,
     NOBACKSTAGE, INDESTRUCTIBLE, INHERIT, JUMP_OK, NO_TEL, NO_WALL,
     NO_EXAMINE, NO_MODIFY, NO_CONNECT, NO_POSSESS, NO_PESTER,
     NO_OVERRIDE, NO_USELOCK, NO_MOVE, NO_YELL, CLOAK, SCLOAK, DARK,
     UNFINDABLE, SEE_OEMIT, TELOK, SUSPECT, SPAMMONITOR


File: rhostmushhandbook.info,  Node: TOGGLES @toggle,  Next: @powers @depowers and @locks,  Prev: FLAGS access with @set,  Up: Online Blocking object abilities

7.1.1.2 TOGGLES (@toggle)
.........................

     BRANDY_MAIL, PENN_MAIL, MUXPAGE, VPAGE, NOISY, MONITOR* (all
     monitor toggles), MORTALREALITY, NODEFAULT, NO_FORMAT, PAGELOCK,
     SNUFFDARK, VARIABLE


File: rhostmushhandbook.info,  Node: @powers @depowers and @locks,  Prev: TOGGLES @toggle,  Up: Online Blocking object abilities

7.1.1.3 @powers, @depowers, and @locks
......................................

Please review help (and wizhelp) for each of these items on how it can
affect a player, thing, exit, or room.  The help is quite verbose.


File: rhostmushhandbook.info,  Node: Offline Blocking twinks from being abusive on your game,  Prev: Online Blocking object abilities,  Up: Considerations to locking down restrictions in RhostMUSH

7.1.2 Offline: Blocking twinks from being abusive on your game
--------------------------------------------------------------

FLAGS : FUBAR, SLAVE, NO_CONNECT Commands: : @boot, @nuke, @toad,
@turtle Sitelocks: (@admin) : forbid_host, forbid_site, register_host,
register_site, noguest_host, noguest_site Sitelock by player : @badsite,
@goodsite, NO_CONNECT (flag) Monitoring player : SUSPECT (flag), @snoop
TOR/Proxy blocking: : @blacklist (see shell’s tor_pull.sh), @admin
proxy_checker (see wizhelp), @tor (see wizhelp)


File: rhostmushhandbook.info,  Node: Extended lockdown of the mush and considerations,  Next: Methods to block anonymous connections and the pros and cons of doing so,  Prev: Considerations to locking down restrictions in RhostMUSH,  Up: Security

7.2 Extended lockdown of the mush and considerations
====================================================

These are flags, powers, toggles, and various conditions for
consideration when you decide to use some of the advanced features of
RhostMUSH. These are not all that is availble, but tend to be the
juicier ones to consider.

* Menu:

* Attribute Restriction::
* Command Restriction::
* Flag/Toggle Restriction::
* Config restrictions::
* Function Restrictions::
* Flags: Flags<4>.
* Toggles: Toggles<3>.
* @powers: @powers<2>.
* @depowers::
* Site Restrictions::


File: rhostmushhandbook.info,  Node: Attribute Restriction,  Next: Command Restriction,  Up: Extended lockdown of the mush and considerations

7.2.1 Attribute Restriction
---------------------------

     @attribute – Used for user-defined attributes @admin attr_access –
     used for built in attributes (like desc) @aflags – Used to set up
     lovely delicious attribute permission masks


File: rhostmushhandbook.info,  Node: Command Restriction,  Next: Flag/Toggle Restriction,  Prev: Attribute Restriction,  Up: Extended lockdown of the mush and considerations

7.2.2 Command Restriction
-------------------------

     @icmd - Very useful.  Please see wizhelp on it.  It disallows
     commands from executing including overriding them with softcode
     alternatives @admin access - Changes permissions, disables, or sets
     to be overridden a command.  Useful when you plan to override
     commands with softcode.


File: rhostmushhandbook.info,  Node: Flag/Toggle Restriction,  Next: Config restrictions,  Prev: Command Restriction,  Up: Extended lockdown of the mush and considerations

7.2.3 Flag/Toggle Restriction
-----------------------------

     @flagdef - Again, see wizhelp on this.  There are also
     netrhost.conf options so you can have them loaded at start.  This
     allows tweaking flags and toggles to who can set/unset/see as well
     as what type can use it or wha type it can be used on.


File: rhostmushhandbook.info,  Node: Config restrictions,  Next: Function Restrictions,  Prev: Flag/Toggle Restriction,  Up: Extended lockdown of the mush and considerations

7.2.4 Config restrictions
-------------------------

     @admin config_access - Changes permission of who can set a config
     param


File: rhostmushhandbook.info,  Node: Function Restrictions,  Next: Flags<4>,  Prev: Config restrictions,  Up: Extended lockdown of the mush and considerations

7.2.5 Function Restrictions
---------------------------

     @function/@lfunction – Allows softcoded functions that you can
     optionally lock down at your leasure @admin function_access – You
     can use this even on softcoded functions if you so desired.


File: rhostmushhandbook.info,  Node: Flags<4>,  Next: Toggles<3>,  Prev: Function Restrictions,  Up: Extended lockdown of the mush and considerations

7.2.6 Flags
-----------

     GUEST - This is your guest flag, it should only be set on guests
     WANDERER - the WANDERER flag is default on new players.  This flag
     disables all building abilitites of the player.  NO_COMMAND - You
     can use this to stop a player from being able to connect without
     worrying about changing their password FUBAR - As the flag states,
     it f*’s them up beind all recognition.  It essentially stops them
     from doing absolutely anything in the mush but pose and say.  Yes,
     it even disables the quit command.  SLAVE - Funny enough, slave
     allows anything but say and pose.  To ruin a troll’s life, set both
     FUBAR and SLAVE and sit back and smile.  NO_TEL - The target can’t
     teleport or be teleported NO_MOVE - The target is locked at their
     location unable to move at all NO_WALL - They do not see any @wall
     except a wizard @wall/no_prefix.  This has the bonus of snuffing db
     save messages.  NO_POSSESS - Sometimes it’s useful to grant a
     builder character to multiple players.  The NO_POSSESS flag makes
     it so that player can not be logged in more than 2 times.
     NO_MODIFY - The target can not be modified (except by immortal/#1)
     NO_EXAMINE - The target can not be examined/decompiled (except by
     immortal/#1) STOP - Once a matching $command is found on an object
     set STOP, it ‘stops’ trying to find other $command matches.  NOSTOP
     - If a target that is set STOP is also set NOSTOP, it will check
     the master room for a command and execute that as well if found.
     NO_PESTER - Stops target from @pemit or whisper.  You may use @icmd
     as well.  NO_OVERRIDE - Useful for immortals.  By default they
     override all locks, including attribute locks.  This makes it so an
     immortal’s passing of locks will behave like a mortals NO_USELOCK -
     This is like NO_OVERRIDE but only effects uselocks.  You likely
     want to set this on your immortal and wizard.  NO_ANSINAME - stops
     a target from having an ansified name NO_CODE - lock down advanced
     coding from a target SPAMMONITOR - stop a target from issuing more
     than 60 commands a minute.  FREE - Stop costing money for day to
     day processing of commands/building


File: rhostmushhandbook.info,  Node: Toggles<3>,  Next: @powers<2>,  Prev: Flags<4>,  Up: Extended lockdown of the mush and considerations

7.2.7 Toggles
-------------

     MONITOR - Enables site monitoring.  This is the main toggle
     MONITOR_SITE - Adds site information to site monitoring
     MONITOR_USERID - Adds the userid to site monitoring MONITOR_STATS -
     Adds connection stats to site monitoring MONITOR_FAIL - Adds
     showing failed connections to site monitoring MONITOR_CONN - Adds
     connection monitoring to site monitoring MONITOR_DISREASON - Adds
     disconnect reasons to site monitoring MONITOR_TIME - Adds time
     stamps to site monitoring MONITOR_BAD - Shows all bad creation
     attempts to site monitoring MONITOR_VLIMIT - Shows attempts to
     bypass MAX ATTRIBUTES MONITOR_AREG - Shows all auto registration
     attempts MONITOR_CPU - Shows all CPU warnings and/or alerts on the
     mush NO_FORMAT - Bypasses @conformat, @exitformat, and other
     formats SEE_SUSPECT - Allows you to see suspect info in the
     WHO/DOING FORCEHALTED - Allows you to @force/@sudo a HALTED target
     NOSHPROG - Disallows using ‘|’ to execute commands outside @program
     PROG - Allows the target to use @program IMMPROG - Disables the
     ability to use @quitprogram from a @program PROG_ON_CONNECT -
     Allows a @program to resume if someone reconnects IGNOREZONE -
     Enables a zone to process @icmd’s PAGELOCK - Enforces target to
     require passing pagelocks MAIL_LOCKDOWN - Blocks the ability of a
     wizard to check another player’s mail ATRUSE - Enables the
     attribute to use attribute content locking NOGLOBPARENT - Disables
     the target from inheriting global parenting LOGROOM - Enables
     system logs on the room EXFULLWIZATTR - Allows target to examine
     all wizard attributes NODEFAULT - Disables attribute
     formatting/handling on the target CHKREALITY - Enables the use of
     reality locks on the target HIDEIDLE - Disables deidling when you
     execute any command MORTALREALITY - Enforces a wizard to pass
     realities as a mortal SNUFFDARK - Hides dark exits from a wizard


File: rhostmushhandbook.info,  Node: @powers<2>,  Next: @depowers,  Prev: Toggles<3>,  Up: Extended lockdown of the mush and considerations

7.2.8 @powers
-------------

     WIZ_WHO - Allows target to see sites ala wizard who NOFORCE -
     target an not be forced (except by immortal/#1) FREE_QUOTA - Allow
     target to have unlimited quota JOIN_PLAYER - Allow to ‘join’ a
     player’s location NO_BOOT - Player can not be booted except by
     immortal/#1 STEAL - Player can give negative money TEL_ANYWHERE -
     Player can teleport anywhere STAT_ANY - Player can @search, @stat,
     or @find things HALT_QUEUE_ALL - Player can halt the queue
     SEARCH_ANY - Player can search for anything WHO_UNFIND - Player can
     see hidden player on WHO SHUTDOWN - Player can @shutdown the mush
     PURGE - Player can use /purge to @destroy and @nuke EXAMINE_FULL -
     Player can examine anything (not set NO_EXAMINE or cloaked)
     FORMATTING - @*formats allow passing what a person sees as %0, %1,
     etc CHOWN_ANYWHERE - Chown anything anywhere to yourself
     CHOWN_OTHER - Chown something you don’t own to yourself EXAMINE_ALL
     - Examine other things (tiered) SEE_QUEUE_ALL - Player can see the
     full queue GRAB_PLAYER - Player can grab a remote player and pull
     them to location LONG_FINGERS - Player is granted remote control of
     things they own BOOT - Player can @boot SEE_QUEUE - Player can see
     advanced queue features TEL_ANYTHING - Player can @teleport
     anything PCREATE - Player can @pcreate players NOWHO - Allows the
     use of @hide HALT_QUEUE - Allows halting queue by specified
     bitlevel SECURITY - Allows setting NOMOVE NO_TEL SLAVE NO_YELL
     WRAITH - Allows bypassing exit locks HIDEBIT - Hides your admin
     level from lower levels FULLTEL - Allows full immortal level
     teleportation EXECSCRIPT - Allows executing external scripts in
     ~/game/scripts


File: rhostmushhandbook.info,  Node: @depowers,  Next: Site Restrictions,  Prev: @powers<2>,  Up: Extended lockdown of the mush and considerations

7.2.9 @depowers
---------------

     WALL - Disables the ability to @wall LONG_FINGERS - Disables remote
     access to things STEAL - Can not steal money CREATE - Can not
     create anything WIZ_WHO - Can not access wizard who CLOAK - Can not
     wizard cloak BOOT - Can not boot PAGE - Can not page FORCE - Can
     not @force/@sudo LOCKS - Can not pass locks COMMAND - Can not
     execute any $command (including master room) MASTER - Can not use
     any master room $command EXAMINE - Lowers or disables the ability
     to examine/decompile NUKE - Can not nuke, toad, or turtle FREE - No
     longer has free money for anything OVERRIDE - No longer can
     override anything TEL_ANYWHERE - No longer can teleport anywhere
     TEL_ANYTHING - No longer can teleport anything other than
     themselves POWER - Can no longer use @power MODIFY - Can not modify
     things CHOWN_ME - Can not chown anything to themselves CHOWN_OTHER
     - Can not chown anything to others ABUSE - Can not use $commands on
     anything they do not own UNL_QUOTA - No longer has infinite quota
     SEARCH_ANY - Disables the ability to @search/@find things GIVE -
     Disables ability to give things/money RECEIVE - Disables the
     ability to recieve things/money NOGOLD - Limits (or disables) how
     much gold someone can give NOSTEAL - Can not give negative gold
     PASSWORD - Can not change password MORTAL_EXAMINE - drops examine
     and all fetching to mortal only PERSONAL_COMMAND - Disables all
     $commands on anything they own


File: rhostmushhandbook.info,  Node: Site Restrictions,  Prev: @depowers,  Up: Extended lockdown of the mush and considerations

7.2.10 Site Restrictions
------------------------

     These are accessable via the @admin command, and the following
     options are allowable.

     You may see all site information at any time with: @list sites

* Menu:

* IP based restrictions::
* DNS based restrictions::


File: rhostmushhandbook.info,  Node: IP based restrictions,  Next: DNS based restrictions,  Up: Site Restrictions

7.2.10.1 IP based restrictions
..............................

     You may use CIDR notation such as /32 instead of 255.255.255.255.
     Config file: (see section on forbid_site as it describes and gives
     examples) Online Syntax: MASK:

                             @admin forbid_site=123.123.123.0 255.255.255.0
                             @admin forbid_site=123.123.123.123 255.255.255.255

             CIDR::

                             @admin forbid_site=123.123.123.0 /24
                             @admin forbid_site=123.123.123.123 /32

             REMOVING: MASK::

                             @site/all 123.123.123.123=255.255.255.255
                             @site/forbid 123.123.123.0=254.255.255.0

                       CIDR::

                             @site/all 123.123.123.123=/32
                             @site/forbid 123.123.123.0=/24

          forbid_site      - Set the specified site forbid only
          register_site    - Set the specified site register only
          noguest_site     - Set the specified site unable to connect to guests
          suspect_site     - Set the specified site suspect on connect
          noautoreg_site   - Set the specified site to not allow autoregistration
          trust_site       - Allow site to bypass suspect site restrictions
          permit_site      - Allow site to bypass sitelock restrictions
          nodns_site       - Site will no longer do reverse DNS lookups
          noauth_site      - Site will no longer do AUTH ident lookups


File: rhostmushhandbook.info,  Node: DNS based restrictions,  Prev: IP based restrictions,  Up: Site Restrictions

7.2.10.2 DNS based restrictions
...............................

     These allow globbing wildcard matches.  The advanced feature is you
     can specify filtering on when the condition is matched, such as
     allowing 2 players from a site to be connected before disallowing
     anyone else to connect.  Config File: (see section on forbid_host
     as it describes and gives examples) Online Syntax:

                  ADD:      @admin forbid_host=*.dsl*.comcast.net *.aol.com *another.site
                  DEL:      @admin forbid_host=!*.aol.com
                  ADVANCED: @admin forbid_host=mudconnect.com|3 (allow 3 at once only)

          forbid_host     - Set the specified site(s) forbid only
          register_host   - Set the specified site(s) register only
          noguest_host    - Set the specified site(s) unable to connect to guests
          suspect_host    - Set the specified site(s) suspect on connect
          noautoreg_host  - Set the specified site(s) to not allow autoregistration
          validate_host   - Do not allow any autoregistration from emails matching site
          goodmail_host   - Always allow autoregistration from emails matching site
          nobroadcast_host - Snuff online site broadcasts via MONITOR for specified site


File: rhostmushhandbook.info,  Node: Methods to block anonymous connections and the pros and cons of doing so,  Next: Setting up an SSL tunnel for secure connection options,  Prev: Extended lockdown of the mush and considerations,  Up: Security

7.3 Methods to block anonymous connections and the pros and cons of doing so
============================================================================

     Now let’s assume you have some troll attempting to use proxies to
     connect.  There’s multiple ways to stop this.

* Menu:

* Blacklisting through external tor_pull.sh script: Blacklisting through external tor_pull sh script.
* Blacklisting through internal @blacklist command::
* Blacklisting through internal @tor command::
* Blacklisting through internal @admin command::


File: rhostmushhandbook.info,  Node: Blacklisting through external tor_pull sh script,  Next: Blacklisting through internal @blacklist command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.1 Blacklisting through external tor_pull.sh script
------------------------------------------------------

     In ~/Rhost/Server/game you will see a script called tor_pull.sh
     Execute this by running (from the game directory) ./tor_pull.sh
     This populates the blacklist with registered proxies from various
     sites on the internet.  If you want specified ip’s added, feel free
     to add them at the end of this file.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @blacklist command,  Next: Blacklisting through internal @tor command,  Prev: Blacklisting through external tor_pull sh script,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.2 Blacklisting through internal @blacklist command
------------------------------------------------------

     On the mush, have as part of your startup @blacklist/load This will
     load in the generated blacklist file for automatic forbid sites
     based on the ip.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @tor command,  Next: Blacklisting through internal @admin command,  Prev: Blacklisting through internal @blacklist command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.3 Blacklisting through internal @tor command
------------------------------------------------

     @tor.  Please see ‘wizhelp tor’ on how to set this up.  It in
     effect will actively block all known exit nodes for TOR’s
     annonymous proxy service.  It self-updates and will actively block
     TOR connections.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @admin command,  Prev: Blacklisting through internal @tor command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.4 Blacklisting through internal @admin command
--------------------------------------------------

     @admin proxy_checker (please see wizhelp) This little doodad uses
     MTU checking against packet size which will detect most methods of
     proxies.  Sadly, this also has false positives because some
     situations require a differentating MTU value such as briged
     network connect with things like cloud services, docker, or similar
     encapsulated network services.  However, this option has several
     settings from just monitoring/alerting of possible proxies to
     downright forbidding them.  If you’re being actively attacked, it
     may be worth considering adding this to add additional protection.


File: rhostmushhandbook.info,  Node: Setting up an SSL tunnel for secure connection options,  Prev: Methods to block anonymous connections and the pros and cons of doing so,  Up: Security

7.4 Setting up an SSL tunnel for secure connection options
==========================================================

* Menu:

* Quickstart for SSL setup with stunnel::
* Detailed SSL setup with stunnel::


File: rhostmushhandbook.info,  Node: Quickstart for SSL setup with stunnel,  Next: Detailed SSL setup with stunnel,  Up: Setting up an SSL tunnel for secure connection options

7.4.1 Quickstart for SSL setup with stunnel
-------------------------------------------

  1. Modify your netrhost.conf file and add/change the following
     parameters:

       1. stunnel_reip 1

       2. stunnel_cmd SECRET-MAGIC-COOKIE

                 1. SECRET-MAGIC-COOKIE is a case sensitive single word
                    phrase.  Any printable character other than the ‘#’
                    character is allowable.  You may use up to 30
                    characters.

                 2. Make sure the secret is a hard to guess phrase.
                    This is used by stunnel to forward on the
                    originating IP address.

       3. stunnel_host localhost 127.0.0.1 othersite.goes.here

                 1. This is optional.

                 2. If you do not specify it it defaults to ‘localhost
                    127.0.0.1’.  If your domain has a unique name like
                    ‘localhost.localdomain’ like some ubuntu
                    distributions, then you should customize your
                    stunnel_host.

  2. go into the stunnel directory

  3. ./stunnel_setup.sh

       1. Choose the defaults or alter them based on preferences

       2. Make sure to choose the warpbubble conf file

  4. ./stunnel_start.sh

  5. Use ./stunnel_stop.sh to stop the SSL tunnel at any time

You do not need to shutdown the ssl handler if you shutdown the mush.
They are entirely separate processes.


File: rhostmushhandbook.info,  Node: Detailed SSL setup with stunnel,  Prev: Quickstart for SSL setup with stunnel,  Up: Setting up an SSL tunnel for secure connection options

7.4.2 Detailed SSL setup with stunnel
-------------------------------------

To setup SSL connectivity, we use the STUNNEL application to tunnel SSL
to the mush.  This acts a bit like a man in the middle but remains
controlled by the game owner which would have access to the end point
anyway.

Note: it is assumed you will have already initially set up your
netrhost.conf.

* Menu:

* stunnel directory::
* Modifying netrhost.conf: Modifying netrhost conf.
* Running the stunnel setup program::
* Starting the stunnel proxy::
* Shutting down the stunnel proxy::
* Configuring firewall on the host::


File: rhostmushhandbook.info,  Node: stunnel directory,  Next: Modifying netrhost conf,  Up: Detailed SSL setup with stunnel

7.4.2.1 stunnel directory
.........................

You would set up the stunnel from the ‘stunnel’ directory.  There the
following files are of relevance:

README – a readme explaining the points of stunnel stunnel.conf.example
– The example stunnel.conf file.  If you wish to create this manually
you’re welcome to.  Just make sure the end file is stunnel.conf
stunnel_setup.sh – the script to build a stunnel.conf file for you which
will be dropped at your specified location.  stunnel_kill.sh –
Stop/terminate the stunnel process.  stunnel_start.sh – Start the
stunnel process.  warpbubble.pl – the perl script that handles stunnel
to mush connectivity.  stunnel_src – If you do not have stunnel, this
directory will allow you to download, compile and locally install.


File: rhostmushhandbook.info,  Node: Modifying netrhost conf,  Next: Running the stunnel setup program,  Prev: stunnel directory,  Up: Detailed SSL setup with stunnel

7.4.2.2 Modifying netrhost.conf
...............................

To be able to utilize SSL, you first must set your netrhost.conf file
with the relevant information to enable SSL connectiions.  These three
config options must be set to be able to use SSL, however, sconnect_host
if not set will default to ‘localhost 127.0.0.1’.

sconnect_reip 1 – This enables the SSL tunnel layer handler within
rhost.  sconnect_cmd XYZZY – this will set the secret SSL command
handshake command to XYZZY. This is case sensitive and can be up to 31
characters.  Please make sure to only use printable non-whitespace
characters.  Ergo: one word sconnect_host wildcards – This allows
wildcarded sites (one or more) to allow to access the sconnect/stunnel
handler.  This defaults to ‘localhost’ and ‘127.0.0.1’ so if you have
‘localhost.localdomain’ instead then you must set this to whatever is
seen as ‘localhost’ to you.  You can verify this by checking your
/etc/hosts file.

Note: the sconnect_host is optional.  If you do not specify it, it will
default to two values: ‘localhost’ and ‘127.0.0.1’.


File: rhostmushhandbook.info,  Node: Running the stunnel setup program,  Next: Starting the stunnel proxy,  Prev: Modifying netrhost conf,  Up: Detailed SSL setup with stunnel

7.4.2.3 Running the stunnel setup program
.........................................

At this point you’re ready to run the stunnel setup program.  So at this
point type the following:

     ./stunnel_setup.sh

This will prompt you through settings.  Most you can select the defaults
to.  The SSL port you may need to change based on your administrative
requirements.  It will prompt you with whatever you set for your mush
name.  If you have not selected a mush name at this point, you can
select the defaults.

You will want to use the config file for warpbubble as this hides the
secret.

Be aware that if you have DNS host lookups disabled on your mush, you
MUST have 127.0.0.1 as an entry for your sconnect_host file.


File: rhostmushhandbook.info,  Node: Starting the stunnel proxy,  Next: Shutting down the stunnel proxy,  Prev: Running the stunnel setup program,  Up: Detailed SSL setup with stunnel

7.4.2.4 Starting the stunnel proxy
..................................

When you have your stunnel.conf file to the way you want, you then issue
the following command to run your SSL layer:

     ./stunnel_start.sh


File: rhostmushhandbook.info,  Node: Shutting down the stunnel proxy,  Next: Configuring firewall on the host,  Prev: Starting the stunnel proxy,  Up: Detailed SSL setup with stunnel

7.4.2.5 Shutting down the stunnel proxy
.......................................

If ever you need to bring down the SSL layer, you may kill it with the
command:

     ./stunnel_stop.sh


File: rhostmushhandbook.info,  Node: Configuring firewall on the host,  Prev: Shutting down the stunnel proxy,  Up: Detailed SSL setup with stunnel

7.4.2.6 Configuring firewall on the host
........................................

Please be aware that the port that the SSL layer is on must be opened in
any firewall rule you specified to allow the connectivity.  This also
must not be the port the mush is running on and requires a separate
port.


File: rhostmushhandbook.info,  Node: Maintenance,  Next: Troubleshooting,  Prev: Security,  Up: Top

8 Maintenance
*************

* Menu:

* Note about Patching::
* Daily Backups for RhostMUSH::
* Signals and why you need them for control::
* Shutting down gracefully::
* Autoshutdown script::
* Network Port redirector::
* Using the built-in cron system for periodically running commands::
* The following scripts are used in the game directory::
* Textfiles for RhostMUSH::


File: rhostmushhandbook.info,  Node: Note about Patching,  Next: Daily Backups for RhostMUSH,  Up: Maintenance

8.1 Note about Patching
=======================

There’s two ways you can look to patch the source.  If you plan to run
the RhostMUSH source from a git repository, then please use the git repo
to constantly update your code.  If you knew enough to want to set up a
git repo then we expect knowledge on how to keep source trees updated in
the git repo to be used the same as any other source distribution.

If, however, you have no idea what a git repo even is, or have no
inclination of using git to manage your RhostMUSH source, or just don’t
care one way or another, then you can use the included patch.sh routine
(from under the Server directory) to patch your source at any time.

From the server directory just type:

     ./patch.sh

That will auto-compile your source, auto make all your header files and
essentially keep everything up to date to the latest source.  Once
that’s done, all you do from within the game is two commands:

     @reboot (or @reboot/silent)  -- This will load in the new binary
     @readcache  -- This will read in all the .txt file changes


File: rhostmushhandbook.info,  Node: Daily Backups for RhostMUSH,  Next: Signals and why you need them for control,  Prev: Note about Patching,  Up: Maintenance

8.2 Daily Backups for RhostMUSH
===============================

Make SURE YOU RUN DAILY Backups.  Rhost is very stable, but things
outside the mush can damage the game.  paranoia is fine, especially when
they really are out to get you.  TO make the backups, do the following:

      @dump/flat      -- This makes a flatfile dump of the main database.  You want to run this daily.
      wmail/unload    -- This makes a flatfile dump of the mail database.  You want to run this daily.
      @areg/unload    -- Only worry about this if you are using auto-registration emailing.  Few do.
      newsdb/unload   -- Only worry if you use the hardcoded bbs system.  Most don't use it.


     Backups are already handled and integrated with a script 'backup_flat.sh'.
     If you wish to customize this, feel free.  Again, it is well documented and
     just require changing settings at the top of this script.

     By default, it does 7 contiguous backups.  You may increase or decrease
     this value to any value you want.

     It will, by default, backup all your txt/\*.txt files, your netrhost.conf
     file, your netrhost.db.flat (mush db) file, your RhostMUSH.dump.\*
     (mail db) files, your RhostMUSH.news.\* (internal news/bbs db -- if used),
     your RhostMUSH.areg.\* (the autoregistration db -- if used), and any sqlite
     database you currently may be using which are OPTIONALLY backed up if you
     remove the '#' from before it.

     The backup script also will optionally rcp/scp, ftp, or mail any backups
     you want to a remote destination.  Be forewarned, the backup files can
     potentially get rather large for larger games, even compressed.  The
     average size for these files will be 1-5MB.  It could potentially get
     over 10-20MB in size for excessively large games, so plan accordingly.

     Be aware that the backup system will NOT make successful backups if you
     run out of disk space.  This includes actually running out of disk space
     or running out of disk quota.  There is a mechanism inside the backup
     script to specify an email address that you wish to get alerts from
     in these instances.  I recommend using it.

     If you make changes to your backup_flat.sh script with an already
     active and running mush and wish to just restart the backup procedure
     just issue::

        ./backup_restart.sh


File: rhostmushhandbook.info,  Node: Signals and why you need them for control,  Next: Shutting down gracefully,  Prev: Daily Backups for RhostMUSH,  Up: Maintenance

8.3 Signals and why you need them for control
=============================================

Rhost by default allows signals at the shell to handle various processes
in-game.

The following signals are useful.

* Menu:

* TERM (kill -TERM or kill -15): TERM kill -TERM or kill -15.
* USR1 (kill -USR1): USR1 kill -USR1.
* USR2 (kill -USR2): USR2 kill -USR2.
* KILL (kill -KILL or kill -9): KILL kill -KILL or kill -9.


File: rhostmushhandbook.info,  Node: TERM kill -TERM or kill -15,  Next: USR1 kill -USR1,  Up: Signals and why you need them for control

8.3.1 TERM (kill -TERM or kill -15)
-----------------------------------

        - This will immediately terminate the mush, dumping a special
          flatfile called netrhost.db.TERM and scramming the db in
          question by force-closing it without any writes.  A TERM is
          the effort for the mush to shut down the mush as fast as
          possible to avoid any db corruption if possible since a TERM
          signal is common during a server shutdown, so time is
          paramount.


File: rhostmushhandbook.info,  Node: USR1 kill -USR1,  Next: USR2 kill -USR2,  Prev: TERM kill -TERM or kill -15,  Up: Signals and why you need them for control

8.3.2 USR1 (kill -USR1)
-----------------------

        - This by default issues a reboot on the server.  This is a
          special parameter because this can actually be changed in-game
          to do any number of other things.  Please refer to the
          RhostMUSH running in question if this is the default behavior
          or if the method for USR1 is doing something else.


File: rhostmushhandbook.info,  Node: USR2 kill -USR2,  Next: KILL kill -KILL or kill -9,  Prev: USR1 kill -USR1,  Up: Signals and why you need them for control

8.3.3 USR2 (kill -USR2)
-----------------------

        - This will shutdown (cleanly) the mush.  This behaves as if you
          issued a @shutdown from within the game, and follows all
          proper procedure in bringing the game down cleanly and safely.
          This shoudl be used when doing maintenance on the game or if
          you need to bring it down from the shell.


File: rhostmushhandbook.info,  Node: KILL kill -KILL or kill -9,  Prev: USR2 kill -USR2,  Up: Signals and why you need them for control

8.3.4 KILL (kill -KILL or kill -9)
----------------------------------

        - This signal can not be caught and will immediately terminate
          the game without any safty to the database at all.  Short of
          something horribly wrong going on, this should never be used
          to bring down your mush.  Doing so will almost certainly
          corrupt your databases (ALL OF THEM) that are open, including
          but not limited to your main database, your mail database,
          your autoregistration database, and so forth.  So if you do
          this, plan to do some database recovery from your flat files.
          Also, when you bring down a mush in this manner, you need to
          issue Startmush -f to bring it back up.


File: rhostmushhandbook.info,  Node: Shutting down gracefully,  Next: Autoshutdown script,  Prev: Signals and why you need them for control,  Up: Maintenance

8.4 Shutting down gracefully
============================

* Menu:

* Rhostmush has many ways to shut down the game cleanly::
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost.


File: rhostmushhandbook.info,  Node: Rhostmush has many ways to shut down the game cleanly,  Next: WARNING Never kill -9 Rhost,  Up: Shutting down gracefully

8.4.1 Rhostmush has many ways to shut down the game cleanly
-----------------------------------------------------------

  1. Log into the mush and issue @shutdown

  2. Issue a kill -USR2 to the mush which issues an emergency @shutdown

  3. Issue a kill -TERM to the mush which issues an emergency abort and
     clean shutdown.


File: rhostmushhandbook.info,  Node: WARNING Never kill -9 Rhost,  Prev: Rhostmush has many ways to shut down the game cleanly,  Up: Shutting down gracefully

8.4.2 WARNING: Never kill -9 Rhost
----------------------------------

Under NO CIRCUMSTANCES should you kill -9 your mush unless you don’t
care for the database.  The reason is if the mush happens to be saving,
in any method, to the database, especially a QDBM database, you will
likely have just corrupted your database, so pull out a flatfile to
recover.

Sadly, this also may occur if the server hosting you takes a nose-dive
in the middle of a db write.  Rhost can recover corruption in-game while
up, but if it bombs in the middle of a write, all bets are off.  :)


File: rhostmushhandbook.info,  Node: Autoshutdown script,  Next: Network Port redirector,  Prev: Shutting down gracefully,  Up: Maintenance

8.5 Autoshutdown script
=======================

The makefile will ‘make’ the program that will STOP the mush.  Please
tweek ‘autolog.h’ with the proper parameters.

The ‘startup.sh’ will START the mush.

Both of these are intended to be used for automations (automated
processes) like your rc.local file and/or startup scripts when you bring
your server up.


File: rhostmushhandbook.info,  Node: Network Port redirector,  Next: Using the built-in cron system for periodically running commands,  Prev: Autoshutdown script,  Up: Maintenance

8.6 Network Port redirector
===========================

This is a port redirector incase you decide to move your mush to a new
site/port.  To use, first, compile the code.  To do this you would type
the following:

     cc portmsg.c -o portmsg

if ‘cc’ is not defined, try the following:

     gcc portmsg.c -o portmsg

Once compiled, you would then modify the file ‘file’ to describe the
mush, what was done, where it’s moved to, then specify the IP address
and the PORT where specified.

To launch the application, you would then type:

     ./portmsg file <port>

Where <port> is the port where the mush used to run at.


File: rhostmushhandbook.info,  Node: Using the built-in cron system for periodically running commands,  Next: The following scripts are used in the game directory,  Prev: Network Port redirector,  Up: Maintenance

8.7 Using the built-in cron system for periodically running commands
====================================================================

* Menu:

* Syntax for rhost.cron: Syntax for rhost cron.


File: rhostmushhandbook.info,  Node: Syntax for rhost cron,  Up: Using the built-in cron system for periodically running commands

8.7.1 Syntax for rhost.cron
---------------------------

The rhost.cron file will be in the syntax as follows:

     username (or dbref#)
     command1;command2;command3;...;commandN
     command
     command
     command1;command2;command3;...;commandN

You can have commands strung together with a semicolon on the same line.
This counts as a single line of input.  You can have at most 20 lines of
commands after the target you wish to execute the commands as.  The
target may be a player name OR a dbref# of any valid dbref# within the
game.  Invalid targets will abort the cron process.  Non-printable
characters in the cron file will abort the process.  Any aborts or
warnings will be logged in the netrhost.gamelog.

Here is a working example of the code cron file.  This example will
perform dumps of the mush.

* Menu:

* Example syntaxt for rhost.cron: Example syntaxt for rhost cron.


File: rhostmushhandbook.info,  Node: Example syntaxt for rhost cron,  Up: Syntax for rhost cron

8.7.1.1 Example syntaxt for rhost.cron
......................................

     #1
     @dump/flat; @@ dump the main game database to flatfile
     wmail/unload; @@ dump the mail database to flatfile
     @areg/unload; @@ dump the registration database to flatfile
     newsdb/unload; @@ dump the news bbs database to flatfile


File: rhostmushhandbook.info,  Node: The following scripts are used in the game directory,  Next: Textfiles for RhostMUSH,  Prev: Using the built-in cron system for periodically running commands,  Up: Maintenance

8.8 The following scripts are used in the game directory
========================================================

Startmush – used to Start up the mush backup_flat.sh – Used to run
backups with @dump/flat within the game (Started with Startmush
automatically) backup_restart.sh – Restart the backup_flat.sh if changes
are done compress_logs.sh – Compress logs in ‘oldlogs’.  Ran with
Startmush findit.sh – Internal script used to check for flatfile
validity mailhide.sh – Wrapper to hide from address using the ‘mail’
progam minimal.sh – Auto-load the minimal db into the mush
proxysnarf.sha – Internal script for the tor_pull.sh tor proxy blacklist
tor_pullit.sh – Internal script for the tor_pull.sh for proxy blacklist
recovery.sh – If your db is corrupt, run this to auto-revert to an
earlier flatfile tor_pull.sh – Create a blacklist.txt file that can be
loaded via the internal @blacklist command for proxy handling


File: rhostmushhandbook.info,  Node: Textfiles for RhostMUSH,  Prev: The following scripts are used in the game directory,  Up: Maintenance

8.9 Textfiles for RhostMUSH
===========================

areghost.txt - file player gets when autoregistration on registered
host.  autoreg.txt - file player gets when autoregistration on
non-registered host.  autoreg_include.txt - file player receives in
email when they autoregister attached to login/passwd badsite.txt - file
player gets when site is not allowed.  connect.txt - file player gets
when connect create_reg.txt - file player gets when their site is
register and they can’t create.  doorconf.txt - file that is searched
for information regarding @door.

     Note: Need to mkindx doorconf.txt doorconf.indx for this file

down.txt - file player gets when the mush has logins disabled (@disable
login) error.txt - the ‘Huh?  (type help for help)’ messages.

     Note: Need to mkindx error.txt error.indx for this file

full.txt - file player gets when the mush can’t have any more players.
guest.txt - file player gets when they connect as a guest.  help.txt -
your help file

     Note: Need to mkindx help.txt help.indx for this file

motd.txt - your motd file news.txt - your news file

     Note: Need to mkindx news.txt news.indx for this file

newuser.txt - file newly created players get when they connect for the
first time.  noguest.txt - file player gets when they are not allowed to
connect to a guest.  plushelp.txt - optional +help file.  (needs compile
time option)

     Note: Need to mkindx plushelp.txt plushelp.indx for this file

quit.txt - file player gets when they disconnect.  register.txt - file
player gets when the site is locked down for registration.  wizhelp.txt
- your wizhelp file

     Note: Need to mkindx wizhelp.txt wizhelp.indx for this file

wizmotd.txt - your wiz motd file

* Menu:

* Textfile Frequently Asked Questions::


File: rhostmushhandbook.info,  Node: Textfile Frequently Asked Questions,  Up: Textfiles for RhostMUSH

8.9.1 Textfile Frequently Asked Questions
-----------------------------------------

Q: How do I put color in these files?  A1: Look at ansi.h and you need
to put the literal ASCII codes.  They will look like: ^[[0m (for
ANSI_NORMAL). That’s <ESC>[ A2: You can enable ansi_txtfiles then use %c
(or %x/%m) encoding for ansi, however you compiled your Rhost.

Q: I want to design my own txt files to read in the mush.  A: Easy.
Design them like help.txt would be set up, mkindx the file, then you can
access it via @dynhelp online.

Q: Do I have to mkindx these files whenever I make changes?  A: Only the
ones that have ‘& ‘ index.  (help.txt, wizhelp.txt, news.txt, etc)

Q: Do I have to @readcache in the game whenever I make a change?  A:
Only when you modify any of the files listed in README.TXTFILES. Not the
ones you use with @dynhelp.

Q: Can’t I just make code in the mush that then is used for these silly
txt files?  A: Absolutely.  Check ‘wizhelp file_object’.


File: rhostmushhandbook.info,  Node: Troubleshooting,  Next: Advanced Features,  Prev: Maintenance,  Up: Top

9 Troubleshooting
*****************

* Menu:

* Reporting bugs or getting help::
* Stack limit and debugging::
* How to reset the password for #1::
* Troubleshooting difficulties compiling RhostMUSH::
* Dealing with DB Corruption::
* Dealing with a corrupt mail database::


File: rhostmushhandbook.info,  Node: Reporting bugs or getting help,  Next: Stack limit and debugging,  Up: Troubleshooting

9.1 Reporting bugs or getting help
==================================

If you find any bugs or problems, notify one of the developers of
RhostMUSH and a patch or workaround will be made available as soon as
possible.  Current developers are: Seawolf, Thorin, Ashen-Shugar,
Lensman, Kale, Mac, Zenty, Ambrosia, Amos, and Morgan.  They can be
found around the net.

* Menu:

* Troubleshooting issues with starting up::


File: rhostmushhandbook.info,  Node: Troubleshooting issues with starting up,  Up: Reporting bugs or getting help

9.1.1 Troubleshooting issues with starting up
---------------------------------------------

* Menu:

* Problem; If it says the shared ID is already in use: Problem If it says the shared ID is already in use.
* Problem; Your log file is massive and your mush is running: Problem Your log file is massive and your mush is running.
* Problem; The database flatfile you’re loading can’t load because a db is already defined: Problem The database flatfile you’re loading can’t load because a db is already defined.
* Problem; The mail database won’t load and mail shows ‘offline’: Problem The mail database won’t load and mail shows ‘offline’.


File: rhostmushhandbook.info,  Node: Problem If it says the shared ID is already in use,  Next: Problem Your log file is massive and your mush is running,  Up: Troubleshooting issues with starting up

9.1.1.1 Problem: If it says the shared ID is already in use
...........................................................

A1: please verify that it is the right shared debug_id in your
netrhost.conf file

A2: Force a start by running:

     ./Startmush -f


File: rhostmushhandbook.info,  Node: Problem Your log file is massive and your mush is running,  Next: Problem The database flatfile you’re loading can’t load because a db is already defined,  Prev: Problem If it says the shared ID is already in use,  Up: Troubleshooting issues with starting up

9.1.1.2 Problem: Your log file is massive and your mush is running
..................................................................

A1: To rotate this use the @logrotate command.  See wizhelp on
@logrotate


File: rhostmushhandbook.info,  Node: Problem The database flatfile you’re loading can’t load because a db is already defined,  Next: Problem The mail database won’t load and mail shows ‘offline’,  Prev: Problem Your log file is massive and your mush is running,  Up: Troubleshooting issues with starting up

9.1.1.3 Problem: The database flatfile you’re loading can’t load because a db is already defined
................................................................................................

A1: remove netrhost.db* and netrhost.gdbm* from your data directory


File: rhostmushhandbook.info,  Node: Problem The mail database won’t load and mail shows ‘offline’,  Prev: Problem The database flatfile you’re loading can’t load because a db is already defined,  Up: Troubleshooting issues with starting up

9.1.1.4 Problem: The mail database won’t load and mail shows ‘offline’
......................................................................

A1: from within the MUSH run:

     wmail/load


File: rhostmushhandbook.info,  Node: Stack limit and debugging,  Next: How to reset the password for #1,  Prev: Reporting bugs or getting help,  Up: Troubleshooting

9.2 Stack limit and debugging
=============================

Rhost uses a stack limit in the debug monitor.

This stack limit is set to a reasonable amount of 1000.  This is defined
in the debug.h file in the hdrs directory.

This will directly impact the function_recursion_limit from being set
above 100.  If, for whatever reason, you really must have a ridiculously
high recursion limit, then it is a suggestion to manually modify the
stack limit in debug.h to a higher number.

We have reasonably set it to 10000 without too much issue, but keep in
mind, the overhead is higher for every stack you throw on the process
table.  Higher stack means more memory used.

Also be aware that your shell stack limit directly is affected to this
value.

Type:

     ulimit -a

This will show you your shell stack limits.  Do NOT set the STACKMAX
value higher than your shell’s stack value.

The value in ~/Rhost/Server/hdrs/debug.h is currently set as:

     #define STACKMAX 1000

Feel free to change this to a higher value if you wish.

The caveat.  This effects the debug stack daemon.  Meaning, the only way
for this to be updated is through @shutdown and then a fresh
./Startmush.

A @reboot WILL NOT LOAD IN A NEW DEBUG MONITOR!!!!

You can issue @list stack to see the current stack ceiling ingame.


File: rhostmushhandbook.info,  Node: How to reset the password for #1,  Next: Troubleshooting difficulties compiling RhostMUSH,  Prev: Stack limit and debugging,  Up: Troubleshooting

9.3 How to reset the password for #1
====================================

     Warning: You can only use one of these options at a time.  Make
     sure to change back your nerhost.conf and then reboot after making
     the changes.

* Menu:

* Method 1; Reset to Default Password: Method 1 Reset to Default Password.
* Method 2; Increase Permissions of Immortals: Method 2 Increase Permissions of Immortals.


File: rhostmushhandbook.info,  Node: Method 1 Reset to Default Password,  Next: Method 2 Increase Permissions of Immortals,  Up: How to reset the password for #1

9.3.1 Method 1: Reset to Default Password
-----------------------------------------

in your netrhost.conf file add:

     newpass_god 777

This will reset #1’s password to the default ‘Nyctasia’.


File: rhostmushhandbook.info,  Node: Method 2 Increase Permissions of Immortals,  Prev: Method 1 Reset to Default Password,  Up: How to reset the password for #1

9.3.2 Method 2: Increase Permissions of Immortals
-------------------------------------------------

in your netrhost.conf file add:

     newpass_god 1

This will allow IMMORTAL players to @newpassword #1 upon reboot.


File: rhostmushhandbook.info,  Node: Troubleshooting difficulties compiling RhostMUSH,  Next: Dealing with DB Corruption,  Prev: How to reset the password for #1,  Up: Troubleshooting

9.4 Troubleshooting difficulties compiling RhostMUSH
====================================================

* Menu:

* Changes to conf for high-bit CPUs::
* Changes to autconf for certain systems::


File: rhostmushhandbook.info,  Node: Changes to conf for high-bit CPUs,  Next: Changes to autconf for certain systems,  Up: Troubleshooting difficulties compiling RhostMUSH

9.4.1 Changes to conf for high-bit CPUs
---------------------------------------

RhostMUSH automatically detects 64-bit platforms, and should compile
cleanly on these.

In case you are trying to compile Rhost on some other crazy-wide CPUs
such as the PS2, PS3 or other 128 or 256 bit CPUs, you can easily do so
by changing a few lines of code in conf.c.

change:

     typedef unsigned int    pmath1;
     typedef int             pmath2;
     #define ALLIGN1 4

to:

     typedef unsigned long   pmath1;
     typedef long            pmath2;
     #define ALLIGN1 8

     Note: Replace 8 with the size of your CPU’s long integer.  (4 for
     32-bit, 8 for 64-bit, 16 for 128-bit, etc etc)

RhostMUSH has only been tested to work on the AMD64, but there is no
reason to believe the same will not hold true for IA64.


File: rhostmushhandbook.info,  Node: Changes to autconf for certain systems,  Prev: Changes to conf for high-bit CPUs,  Up: Troubleshooting difficulties compiling RhostMUSH

9.4.2 Changes to autconf for certain systems
--------------------------------------------

You should not have to worry about this, but incase something really
weird occurs, you may need to look into these changes…

The autoconfig.h file needs to have modifications to it by hand.

There are three manual entries:

This one sets how it defines the int to character pointer.  It’s safe to
keep it as ‘unsigned int’ for 32 bit platforms.  For non 32-bit, define
it to how an int is defined on that system:

     typedef unsigned int    pmath1;

This one sets how it defines the signed int to character pointer.  Same
restrictions apply as above for unsigned int:

     typedef int     pmath2;

This sets the allignment for the given platform.  4 represents a 32 bit
platform.  8 would represent a 64 bit platform, etc.  Change
accordingly:

     #define ALLIGN1 4

     Warning: Make sure these three entries are defined in your
     autoconf.h file else the mush will not compile.


File: rhostmushhandbook.info,  Node: Dealing with DB Corruption,  Next: Dealing with a corrupt mail database,  Prev: Troubleshooting difficulties compiling RhostMUSH,  Up: Troubleshooting

9.5 Dealing with DB Corruption
==============================

Ok.  Your database won’t come up.

If you are reading this, then likely the scenerio is one of the
following:

  1. The mush says it can’t find your database files.

  2. The mush says it can’t read or load your database files.

  3. The mush seems to load fine but I can’t log in anyone and when I do
     all the names and attributes of things seem to be gone!

  4. Bringing up your mail database

First thing is first.  Don’t have a panic attack.

* Menu:

* If the mush says it can’t find your database files::
* If the mush says it can’t read or load your database files::
* If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!::
* Bringing up your mail database::


File: rhostmushhandbook.info,  Node: If the mush says it can’t find your database files,  Next: If the mush says it can’t read or load your database files,  Up: Dealing with DB Corruption

9.5.1 If the mush says it can’t find your database files
--------------------------------------------------------

* Menu:

* Check the names of the database files in your ‘data’ directory::
* Check your netrhost.conf file: Check your netrhost conf file.
* Check your mush.config file: Check your mush config file.


File: rhostmushhandbook.info,  Node: Check the names of the database files in your ‘data’ directory,  Next: Check your netrhost conf file,  Up: If the mush says it can’t find your database files

9.5.1.1 Check the names of the database files in your ‘data’ directory
......................................................................

They should be named something like:

     netrhost.db
     netrhost.db.old
     netrhost.db.old.prev
     netrhost.gdbm.dir
     netrhost.gdbm.pag

And you may see a netrhost.db.flat


File: rhostmushhandbook.info,  Node: Check your netrhost conf file,  Next: Check your mush config file,  Prev: Check the names of the database files in your ‘data’ directory,  Up: If the mush says it can’t find your database files

9.5.1.2 Check your netrhost.conf file
.....................................

If you never touched the *database or muddb_name params, you should be
good.

Verify your *database params (and muddb_name) are still set to
‘netrhost’ as part of the name.  Ergo, the default values and you didn’t
change them.  These should match up with the filenames in your data
directory.

If these names do not match up, it can’t find the database files to
load.  So you shouldn’t have to change these names, ever.  :)


File: rhostmushhandbook.info,  Node: Check your mush config file,  Prev: Check your netrhost conf file,  Up: If the mush says it can’t find your database files

9.5.1.3 Check your mush.config file
...................................

If you never modified this file, you should be good.

The gamename should be ‘netrhost’ for this file.  This does NOT control
the name of your game.  This controls the name of all the files as
associated to the mush.  So changing this means the netrhost.conf file,
all your database files, and so forth.  Please don’t change this :)


File: rhostmushhandbook.info,  Node: If the mush says it can’t read or load your database files,  Next: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Prev: If the mush says it can’t find your database files,  Up: Dealing with DB Corruption

9.5.2 If the mush says it can’t read or load your database files
----------------------------------------------------------------

Double check everything for the previous issue.  Make sure everything is
named properly.

* Menu:

* Verify you have enough disk space. (quota): Verify you have enough disk space quota.
* Verify you have enough disk space. (system): Verify you have enough disk space system.


File: rhostmushhandbook.info,  Node: Verify you have enough disk space quota,  Next: Verify you have enough disk space system,  Up: If the mush says it can’t read or load your database files

9.5.2.1 Verify you have enough disk space. (quota)
..................................................

Some account have a limited quota to run in.  If you reached or exceed
your disk quota, you can have a corrupted database.  So always keep your
eye on the size.  quota -s to see a human readable format to see how
much quota you have left.  You want to make sure current in use is below
the ‘grace’ and soft/hard limits shown.  If not, you’re out of space.

You will need to remove some files before you repair and bring up your
mush again.  Try to keep your quota at least 200 megs free to allow
plenty of wonderful growth space for the mush.


File: rhostmushhandbook.info,  Node: Verify you have enough disk space system,  Prev: Verify you have enough disk space quota,  Up: If the mush says it can’t read or load your database files

9.5.2.2 Verify you have enough disk space. (system)
...................................................

The second way you can run out of disk space is by the filesystem
itself.  do a df -h .  in your ‘game’ directory’.  That is df -h
<period>.  This will return how much disk space is being used and how
much remains.  If it shows 100% used, you’re out of disk space and the
db is corrupt.

At this point, you’re pretty screwed.  You can see if anything exists in
your system to free up some space, but if the filesystem itself is
filled, reach out to the owner of the server and let them know.  It’s a
much bigger deal than just your mush if that’s the case.

Until this issue is resolved, you can not repair and bring up your mush.
No disk to run the game.


File: rhostmushhandbook.info,  Node: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Next: Bringing up your mail database,  Prev: If the mush says it can’t read or load your database files,  Up: Dealing with DB Corruption

9.5.3 If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!
------------------------------------------------------------------------------------------------------------------------------------

Ok, at this point you likely had your mush up when the physical server
went down hard.  Weither through an emergency shutdown or a physical
power outage, your db likely was brought down hard during a write, so it
left it in a corrupt state.  These things happen.  This is why we always
strongly request you make daily flatfile dumps.

So, to recover your database.

* Menu:

* The bad news::
* The good news::
* Now, to restore your database?: Now to restore your database?.


File: rhostmushhandbook.info,  Node: The bad news,  Next: The good news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.1 The bad news
....................

If you have no flatfile backup or never bothered with backups?  I’m
sorry, at this point you’re SOA. There’s no easy way to recover a
corrupted binary database.  If you absolutely need data out of it we may
be able to help you to piece meal things out of it, but otherwise it’s a
lost cause.  You’ll have to start over from scratch.  I’m sorry.


File: rhostmushhandbook.info,  Node: The good news,  Next: Now to restore your database?,  Prev: The bad news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.2 The good news
.....................

If you made backups, or if the server had a normal shutdown, you likely
have a flatfile backup.  You will see a netrhost.db.flat in either the
‘data’ directory or ‘prevflat’ directory.  That is your manual flatfile
backup.

If the server had a normal shutdown, you will see a file called
netrhost.db.TERMFLAT. This is a scram-emergency db flatfile.  It
attempts to write this at the time of server shutdown to hopefully keep
a clean backup in the case of issues since it identifies the server is
coming down hard.  Make sure if you plan to use the TERMFLAT as your
recovery flatfile that the very last line shows something like ** END OF
DUMP **.  That shows you had a successful backup.


File: rhostmushhandbook.info,  Node: Now to restore your database?,  Prev: The good news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.3 Now, to restore your database?
......................................

Please refer to the file ‘README.DBLOADING’.


File: rhostmushhandbook.info,  Node: Bringing up your mail database,  Prev: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Up: Dealing with DB Corruption

9.5.4 Bringing up your mail database
------------------------------------

Your mail db may or may not come up at this point.

* Menu:

* If after restoring main database your mail database works::
* If after restoring main database your mail database does not work::


File: rhostmushhandbook.info,  Node: If after restoring main database your mail database works,  Next: If after restoring main database your mail database does not work,  Up: Bringing up your mail database

9.5.4.1 If after restoring main database your mail database works
.................................................................

If your mail database came up and does not show ‘Mail: mail is currently
off’ then you should be good to go.

Please issue on the MUSH:

     wmail/fix
     wmail/lfix

This will put your mail system in sync with your current database and
fix up any errors that may exist.

wmail/fix fixes the mail.

wmail/lfix loads in the fixes.


File: rhostmushhandbook.info,  Node: If after restoring main database your mail database does not work,  Prev: If after restoring main database your mail database works,  Up: Bringing up your mail database

9.5.4.2 If after restoring main database your mail database does not work
.........................................................................

If your mail database is not up and shows ‘Mail: mail is currently off’
then your mail db is currupt.


File: rhostmushhandbook.info,  Node: Dealing with a corrupt mail database,  Prev: Dealing with DB Corruption,  Up: Troubleshooting

9.6 Dealing with a corrupt mail database
========================================

It says when you try to access mail that mail is disabled and/or off.

Nothing you do can bring it on line.  Well, this is bad, but not
horrible.

The mail db is totally separate from the main game database.  This means
that it in no way damaged or corrupted your main mush database.

The bad news?  Yes.  Your mail database is corrupt.  To bring it back,
is it hopes that you read ahead of time about how to backup your mush,
which would include the mail database.

* Menu:

* Backing up your mail database::
* Automatically recovering your mail database::
* Manually recovering your mail database::


File: rhostmushhandbook.info,  Node: Backing up your mail database,  Next: Automatically recovering your mail database,  Up: Dealing with a corrupt mail database

9.6.1 Backing up your mail database
-----------------------------------

You should be making a flatifile dump of mail db daily by running on the
MUSH:

     wmail/unload

To recover your mail, it assumes you have a mail flatfile in either the
~/Server/game/data directory or the ~/Server/game/prevflat directory.
The latter directory is used in junction to the backup_flat.sh and will
always house the latest flatfile if not one recently dumped in your data
directory.


File: rhostmushhandbook.info,  Node: Automatically recovering your mail database,  Next: Manually recovering your mail database,  Prev: Backing up your mail database,  Up: Dealing with a corrupt mail database

9.6.2 Automatically recovering your mail database
-------------------------------------------------

If you have a flatfile dump of your mail db, run this command on the
MUSH:

     wmail/load

Yup, that’s it.  It’ll take care of everything else.  Isn’t automation
grand?

Doesn’t even require a reboot :)

     Note: You may at this point wish to run the following: wmail/fix –
     this fixes the mail database and sync’s it to the mush db.
     wmail/lfix – this loads in the fixed mail database

If you have a very old mail database, this is likely going to be
required to sync against nuked players and other changes to the game
since the flatfile.

If this is a new db that you have, you can skip the fixing.


File: rhostmushhandbook.info,  Node: Manually recovering your mail database,  Prev: Automatically recovering your mail database,  Up: Dealing with a corrupt mail database

9.6.3 Manually recovering your mail database
--------------------------------------------

To recover your mail manually, you need to delete your mail databases,
reboot, then reload your mail flatfiles.  If you have no mail flatfiles,
well, you’re going to have to start over with the mail database.  Sorry.

First, go into the ‘game’ subdirectory.  Inside that directory is a
‘data’ directory.

You will be deleting all the files with the following names:

     RhostMUSH.mail.*                (like RhostMUSH.mail.dir/RhostMUSH.mail.pag)
     RhostMUSH.folder.*              (like RhostMUSH.folder.dir/RhostMUSH.folder.pag)

     Warning: DO NOT DELETE OTHER NAMED FILES!!!

Once these files are deleted, you may issue a @reboot to restart the
mush.  This will unlock the mail system and load in a fresh db.

Now, if you have flatfiles of the old mail database, you will see in
either the ‘data’ directory or the ‘prevflat’ directory files that are
called:

     RhostMUSH.dump.folder
     RhostMUSH.dump.mail

Make sure these two files are in the ‘data’ subdirectory.  Copy them in
if they exist in your ‘prevflat’ directory.

Once they are in the ‘data’ directory, within the mush type: wmail/load

This loads in the flatfile and recover the mail database.

Now, at this point the mail db may not be 100% in-sync with the game db.

So let’s fix it.

wmail/fix – this will run a fix on the mail db and repair any issues.

wmail/lfix – this will load the fixed flatfile back into the mush.

At this point you should be good to go.


File: rhostmushhandbook.info,  Node: Advanced Features,  Next: Format for image files,  Prev: Troubleshooting,  Up: Top

10 Advanced Features
********************

* Menu:

* Adding hardcoded modules::
* Shutting down gracefully: Shutting down gracefully<2>.
* Reality levels::
* Execscript and external programs and scripts::
* Using printf() for advanced text output: Using printf for advanced text output.


File: rhostmushhandbook.info,  Node: Adding hardcoded modules,  Next: Shutting down gracefully<2>,  Up: Advanced Features

10.1 Adding hardcoded modules
=============================

RhostMUSH does support module writing.

* Menu:

* Modifying sourcode to add a module::
* Adding an @startup to make use of modules::
* Contributing your module back to Rhost::


File: rhostmushhandbook.info,  Node: Modifying sourcode to add a module,  Next: Adding an @startup to make use of modules,  Up: Adding hardcoded modules

10.1.1 Modifying sourcode to add a module
-----------------------------------------

This requires hooking your changes into local.c, then modifying the
Makefile (in the src directory) for any new source files that you wish
to add.

Something to be aware of is that all localized data is ran after the
system cache subroutine.


File: rhostmushhandbook.info,  Node: Adding an @startup to make use of modules,  Next: Contributing your module back to Rhost,  Prev: Modifying sourcode to add a module,  Up: Adding hardcoded modules

10.1.2 Adding an @startup to make use of modules
------------------------------------------------

This means that if your code is depending on @startups, you need to put
a delay in the @startup so that your local code can be loaded in as
modules prior to the @startup execution.

Something that will not work:

     @startup me=@superhappyfuncommand loadmeup=now

A small alteration that will likely make this work fine:

     @startup me=@wait 1=@superhappyfuncommand loadmeup=now

That 1 second delay for the queue will give the game engine time to load
in your module code.


File: rhostmushhandbook.info,  Node: Contributing your module back to Rhost,  Prev: Adding an @startup to make use of modules,  Up: Adding hardcoded modules

10.1.3 Contributing your module back to Rhost
---------------------------------------------

If you wish your modules to be part of the main Rhost distribution you
have two options:

  1. Attempt to hack the bin/asksource.sh and bin/asksource.blank files.

  2. Ask one of the Rhost devs to do it for you :)


File: rhostmushhandbook.info,  Node: Shutting down gracefully<2>,  Next: Reality levels,  Prev: Adding hardcoded modules,  Up: Advanced Features

10.2 Shutting down gracefully
=============================

* Menu:

* Rhostmush has many ways to shut down the game cleanly: Rhostmush has many ways to shut down the game cleanly<2>.
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost<2>.


File: rhostmushhandbook.info,  Node: Rhostmush has many ways to shut down the game cleanly<2>,  Next: WARNING Never kill -9 Rhost<2>,  Up: Shutting down gracefully<2>

10.2.1 Rhostmush has many ways to shut down the game cleanly
------------------------------------------------------------

  1. Log into the mush and issue @shutdown

  2. Issue a kill -USR2 to the mush which issues an emergency @shutdown

  3. Issue a kill -TERM to the mush which issues an emergency abort and
     clean shutdown.


File: rhostmushhandbook.info,  Node: WARNING Never kill -9 Rhost<2>,  Prev: Rhostmush has many ways to shut down the game cleanly<2>,  Up: Shutting down gracefully<2>

10.2.2 WARNING: Never kill -9 Rhost
-----------------------------------

Under NO CIRCUMSTANCES should you kill -9 your mush unless you don’t
care for the database.  The reason is if the mush happens to be saving,
in any method, to the database, especially a QDBM database, you will
likely have just corrupted your database, so pull out a flatfile to
recover.

Sadly, this also may occur if the server hosting you takes a nose-dive
in the middle of a db write.  Rhost can recover corruption in-game while
up, but if it bombs in the middle of a write, all bets are off.  :)


File: rhostmushhandbook.info,  Node: Reality levels,  Next: Execscript and external programs and scripts,  Prev: Shutting down gracefully<2>,  Up: Advanced Features

10.3 Reality levels
===================

Reality levels are a means to forbid (or allow) interaction between
objects in the same location.

* Menu:

* Visibility::
* Descriptions::
* Configuration parameters::
* Example mush.conf: Example mush conf.
* Commands::
* Functions: Functions<3>.
* Example 1; A simplified Witchcraft setup: Example 1 A simplified Witchcraft setup.
* Example 2; A WoD setup: Example 2 A WoD setup.
* Example 3; Softcode: Example 3 Softcode.


File: rhostmushhandbook.info,  Node: Visibility,  Next: Descriptions,  Up: Reality levels

10.3.1 Visibility
-----------------

Each object (player, room, exit, thing) has two lists of reality levels.
An Rx list, which describe what it can see and a Tx list, which describe
where it can be seen.  Those are bitfields.  In order for X to see Y a
bitwise ‘and’ is performed between X’s RxLevel and Y’s TxLevel.  If the
result is not 0, then X sees Y. If the result is 0, as far as X is
concerned, Y doesn’t exist.  This affects contents lists, exit lists,
look, say, pose, @emit, @verb, connect/disconnect, has arrived/has left
messages, exit and object matching.  ‘here’ and ‘me’ match always.

It doesn’t affect @remit, @pemit, page, WHO or channels.  By default,
all new objects are created with an RxLevel of 1 and TxLevel of 1.
Rooms are an exception, created with an RxLevel of 1 and a TxLevel of
0xFFFFFFFF. Those default levels can be changed with configuration
parameters.  An object is always visible to itself, even if its Rx and
Tx levels don’t match.  (See examples below)


File: rhostmushhandbook.info,  Node: Descriptions,  Next: Configuration parameters,  Prev: Visibility,  Up: Reality levels

10.3.2 Descriptions
-------------------

For every reality level defined, you can define an attribute that serves
as description.  If you look at something and match more than one of its
TxLevels, you’ll see all the corresponding descriptions on the target
object.  If the object doesn’t have any descriptions for the matching
levels, you’ll see the regular @desc.

The @adesc attribute on the target is only triggered if the target can
see the looker in turn.  It’s only triggered once, no matter how many
descs the looker sees.  The @odesc is shown only to those people that
see /both/ the looker and the target.

Through extension, @afail/@ofail and similar pairs (@adrop/@odrop,
@asucc/@osucc etc) work in the same way.  @verb commands are similary
affected.

Softcoded commands are only matched on the objects that can see the
player.  The player doesn’t have to see the object.  This includes
commands in the Master Room.

Exits are treated specially.  In order to be able to use an exit name
(or to use the ‘move <exit>’ command) the exit must be visible to the
enactor.  In order to pass through the exit, the exit must see the
enactor in turn.  There are reasons for this, which will become evident
in the examples below.


File: rhostmushhandbook.info,  Node: Configuration parameters,  Next: Example mush conf,  Prev: Descriptions,  Up: Reality levels

10.3.3 Configuration parameters
-------------------------------

A few configuration parameters have been introduced to deal with the
reality levels:

     reality_level <name> <value> [<desc attribute name>]

This directive can only be used in the config file (not with the @admin
command) and should be repeated for each reality level you want to
define.  It defines a new level named <name> with a bitvalue of <value>
and an optional desc attribute.  There is a limit of 8 characters on
<name>, a 32-bit value on <value> (basically an unsigned long) and 32
characters on the attribute name.  A maximum of 32 reality levels can be
defined:

     def_exit_tx <value>
     def_exit_rx <value>
     def_room_tx <value>
     def_room_rx <value>
     def_player_rx <value>
     def_player_tx <value>
     def_thing_rx <value>
     def_thing_tx <value>

These 8 directives define the default reality levels of newly created
objects.  They can be set in the config file or with the @admin command.
Like above, <value> must be a decimal number:

     wiz_always_real <0|1>

If this parameter is set to 1 then wizards (and immortals on Rhost) will
see everything and will be visible to everyone.  Their effective Rx and
Tx levels will always be 0xFFFFFFFF. Also settable in the config file
and with the @admin command.

Compile with -DREALITY_LEVELS compile time option to enable ‘Real’ needs
to be ‘1’ This is an example file only to be added to the mush.conf file
Format:

     reality_level <8 char name> <hex-byte-mask> <optional-desc: DESC default>


File: rhostmushhandbook.info,  Node: Example mush conf,  Next: Commands,  Prev: Configuration parameters,  Up: Reality levels

10.3.4 Example mush.conf
------------------------

reality_level Real 1 reality_level Obf1 2 reality_level Obf2 4
reality_level Obf3 8 OBFDESC reality_level Obf4 16 OBFDESC reality_level
Obf5 32 OBFDESC reality_level Obf6 64 OBFDESC reality_level Obf7 128
OBFDESC reality_level Obf8 256 OBFDESC reality_level Obf9 512 OBFDESC
reality_level Obf10 1024 OBFDESC reality_level Umbra 2048 UMBRADESC
reality_level Fae 4096 FAEDESC reality_level Shadow 8192 SHADOWDESC
reality_level Spy 16384 reality_level Death 32768 DEATHDESC
reality_level All 4294967295


File: rhostmushhandbook.info,  Node: Commands,  Next: Functions<3>,  Prev: Example mush conf,  Up: Reality levels

10.3.5 Commands
---------------

Two wiz-only commands are used to set the reality levels of an object:

     @rxlevel <object>=<list>
     @txlevel <object>=<list>

<list> is a space-separated list of level names that have to be set on
the object.  If a level name is prefixed with an exclamation mark (!)
that level will be cleared from the object.

     Warning: Changing the Tx levels of an object might make it
     invisible to you.  In this case, you can still manipulate it by
     using his #dbref (or *player for players).


File: rhostmushhandbook.info,  Node: Functions<3>,  Next: Example 1 A simplified Witchcraft setup,  Prev: Commands,  Up: Reality levels

10.3.6 Functions
----------------

There are five functions that deal with reality levels:

     hasrxlevel(<object>,<level>)
     hastxlevel(<object>,<level>)

These two functions check if an object has the specified Rx or Tx level.
You must control <object>.  They return 0 or 1 and #-1 in case the
object does not exist or you don’t have permissions:

     rxlevel(<object>)
     txlevel(<object>)

These two functions return a space-separated list of the object’s Rx or
Tx levels.  Again, you must control the object:

     cansee(<obj1>,<obj2>)

A wiz-only function, returns 1 of <obj1> can see <obj2> from a reality
levels point of view.  It doesn’t check if the objects are in the same
location, the DARK/CLOAKED flags and so on.  Just <obj1>’s Rx level
against <obj2>’s Tx level.

     Warning: If you are using it on MUX2.0 with /both/ reality levels
     and Wod Realms enabled, the function will perform both checks and
     the Wod Realms version checks against the DARK flag.


File: rhostmushhandbook.info,  Node: Example 1 A simplified Witchcraft setup,  Next: Example 2 A WoD setup,  Prev: Functions<3>,  Up: Reality levels

10.3.7 Example 1: A simplified Witchcraft setup
-----------------------------------------------

In Witchcraft, besides the various Gifted classes, characters can be
spirits There are spirit realms to which the mundane can not travel.
Therefore we will use 2 reality levels: Real and Ghost.  Since some
spirits can become solid for a limited period of time, we will also use
an additional desc for the Ghost level, called GHOSTDESC. Therefore in
the config file we will have:

     reality_level Real 1
     reality_level Ghost 2 GHOSTDESC

Ghosts can pass through most mundane locks, so the exists should allows
the ghosts to pass:

     def_exit_rx 3

Note that def_exit_tx isn’t set.  Why?  Because ghosts see the mundane
world anyway, so a spirit character will have:

     @txlevel <player>=!Real Ghost
     @rxlevel <player>=Real Ghost

Let’s assume 3 players: John is a Mundane.  He won’t see spirits.
John’s Rx: Real John’s Tx: Real John’s @desc: This is John.  John’s
&GHOSTDESC: (Not important, since it’s never visible) Johh’s @adesc: %N
has looked at you.  John’s @odesc: has looked at John.

Jack is a Gifted.  He will sense spirits, but is still made from flesh
and blood so visible to mundanes.  Jack’s Rx: Real Ghost Jack’s Tx: Real
Jack’s @desc: This is Jack.  Jack’s &GHOSTDESC: (Not important, since
it’s never visible) Jack’s @adesc: %N has looked at you.  Jack’s @odesc:
has looked at Jack.

Frank is a ghost.  He will see other spirits as well as mundanes, but
won’t be visible to mundanes.  He can also become visible to everybody.
Frank’s Rx: Real Ghost Frank’s Tx: Ghost Frank’s @desc: This is Frank,
looking human.  Frank’s &GHOSTDESC: This is Frank’s ghostly shape.
Frank’s @adesc: %N has looked at you.  Frank’s @odesc: has looked at
Frank.

Following are commands that each of the players enter and what they see.
I’ll assume the +materialize command is defined like: &CMD_MATERIALIZE
<cmdobject>=$+materialize:@txlevel %#=Real; @pemit %#=You are now
material.

     John | Jack | Frank

               >>|<< 

> l | | A room | | This is a bare room.  | | Contents: | | Jack | |
Obvious exits: | | Out <O> | |

     >>|<<> l | >>|<<A room | >>|<<This is a bare room.  |
     >>|<<Contents: | >>|<<John Frank | >>|<<Obvious exits: | >>|<<Out
     <O> | | >>|<<> l | >>|<<A room | >>|<<This is a bare room.  |
     >>|<<Contents: | >>|<<John Jack | >>|<<Obvious exits: | >>|<<Out
     <O>

>l Jack | | Jack >>|<<John has looked at you.|John has looked at Jack.
This is Jack.  | | >l Frank | | I don’t see that here.  | |

     >>|>l Frank | |Frank |Jack has looked at you.  |This is Frank’s
     ghostly|<< >>|<<shape.  | | >>|<<>l John >>|<<Frank has looked at
     >>|<<John >>|<<John.  >>|<<This is John.  | >>|<<>+materialize |
     >>|<<You are now material.

>l Frank | | Frank >>|<<John has looked at >>|<<Frank has looked at you.
This is Frank, looking >>|<<Frank.  | human.  | |

     >>|<<>l Frank |

Jack has looked at >>|<<Frank >>|<<John has looked at you.  Frank.
>>|<<This is Frank, looking |

     >>|human.  | |This is Frank’s ghostly|<< >>|<<shape.  |


File: rhostmushhandbook.info,  Node: Example 2 A WoD setup,  Next: Example 3 Softcode,  Prev: Example 1 A simplified Witchcraft setup,  Up: Reality levels

10.3.8 Example 2: A WoD setup
-----------------------------

The reality levels will be defined like this: reality_level Real 1
reality_level Obf1 2 reality_level Obf2 4 reality_level Obf3 8 OBFDESC
reality_level Obf4 16 OBFDESC reality_level Obf5 32 OBFDESC
reality_level Umbra 64 UMBRADESC reality_level Fae 128 FAEDESC
reality_level Shadow 256 SHADOWDESC reality_level All 511

5 levels of Obfuscation, Umbra, Dreaming, Wraiths.  ‘All’ is a handy
replacement for all levels, useful for wizards and wizobjects that
should be visible on all levels.  Also useful when you want to set an
object’s levels to something without knowing what he had before.

@rxlevel #276=!All Real

!All will clear all levels, then the object will gain the Real level.
There is more than one Obfuscation level because of the relation between
Auspex and Obfuscation.

A vampire with Obfuscate 2, should not be visible by one with Auspex 1.
However one with Auspex 3 should see another vampire with Obfuscate 1, 2
/or/ 3.

Obfuscated players can move if they have Obf > 1.  Umbral and Shadow
players should also be able to see most of the exits.  So the exits at
creation should have default levels of Real + Obf2 + Obf3 + Obf4 + Obf5
+ Umbra + Shadow = 1 + 4 + 8 + 16 + 32 + 64 + 256 = 381:

     def_exit_rx 381
     def_exit_tx 381

Obf1 is not included since an Obfuscated vampire should not be able to
move if it only has Obf1.  Therefore they won’t see the exits.  If you
want them to be able to see the exits, but not to use them, change the
default Tx of the exits:

     def_exit_rx 381
     def_exit_tx 383

Joe the Mortal will have an RxLevel: Real and a TxLevel: Real Jack the
Malk, who likes to walk around Obfuscated and has Obfuscate 2 will have
an RxLevel: Real (he sees what the mortals see) but a TxLevel: Obf2
Jimmy the Nossie, who is using the Mask and has Obfuscate 4, but doesn’t
try to make himself invisible will have an RxLevel: Real (as Jack) and a
TxLevel: Real Obf4.  He will also set his @desc to what the mortals see
and &OBFDESC to his real slimy desc.  Simply put, he will be visible to
mortals, but not with his real desc.

Aldrin the Gangrel, has Auspex 4 and activates it.  Therefore, his
TxLevel will still be Real, but RxLevel: Real Obf1 Obf2 Obf3 Obf4 (all
of them).  So he can see Joe, Jack and Jimmy’s both descs.  Joe, on the
other hand, won’t see Jack at all.  He will still see Jimmy, but only
Jimmy’s @desc, not the OBFDESC

Frida the Fae… will have RxLevel: Real Fae and TxLevel: Real Fae.  @desc
set to the mundane desc, &FAEDESC set to the Chimerical desc.  Emily the
Enchanted will have an RxLevel: Real Fae, but the TxLevel: Real.  No
&FAEDESC on her, although she’ll be able to see it the one on Frida.
Gil the Garou, while travelling through the Umbra, will have RxLevel:
Umbra and TxLevel: Umbra.  &UMBRADESC is his friend.  He won’t see
mortals or other characters who are not in the Umbra.

Barbie the Bastet, who’s only peeking in the Umbra, without going there,
will have RxLevel: Umbra, TxLevel: Real.  Dangerous position since she
can’t see the things that see her.

Deanna the Drake, who activates her spirit vision, will have RxLevel:
Real Umbra and TxLevel: Real.  She will see characters in Umbra and real
world at the same time and perceive the desc appropiate to the realm the
ohter character is in.

Wanda the Wraith: RxLevel: Real Shadow, TxLevel: Shadow.  Her @desc
would be empty, but the &SHADOWDESC should be set.  Marie the Mortal+
Medium: RxLevel: Real Shadow, TxLevel: Real

Global code objects that all characters should be able to use: RxLevel:
All, TxLevel: All


File: rhostmushhandbook.info,  Node: Example 3 Softcode,  Prev: Example 2 A WoD setup,  Up: Reality levels

10.3.9 Example 3: Softcode
--------------------------

Considering the config directives from example 2 and assuming a function
getstat(<dbref>,<stat>) that will return the value of a player’s stat
from the sheet here are softcode examples that implement some of the WoD
powers.  In a real game you would have to use some more checks, of
course.

@create Reality Levels Commands (RLS) &CMD_OBFON rls=$+obf/on:@switch
[setr(0, getstat(%#,Obfuscate))]=0, @pemit %#=You don’t have Obfuscate!,
{@txlevel %#=!All Obf%q0; @pemit %#=You are now invisible.} &CMD_OBFOFF
rls=$+obf/off:@txlevel %#=Real; @pemit %#=You are now visible.  @@ Note:
+obf/on clears all TxLevels before setting the appropiate Obf @@ This is
necesary, because a character might advance from Obf2 to @@ Obf3 and he
should be visible /only/ on the Obf3 level.  @@ +obf/off simply sets the
Real Tx level, without clearing the Obf.  The @@ reason is the Mask.
Players with Obf3 or higher who use the Mask should @@ +obf/on, then
+obf/off after approval and everything is set.  &CMD_AUSPEXON
rls=$+auspex/on:@switch [setr(0, getstat(%#, Auspex))]=0, @pemit %#=You
don’t have Auspex!, {@rxlevel %#=[iter(lnum(1, %q0), Obf##)]; @pemit
%#=Auspex enabled.} &CMD_AUSPEXOFF rls=$+auspex/off:@switch
[hasrxlevel(%#, Obf1)]=0, @pemit %#= You don’t have Auspex enabled!,
{@rxlevel %#=[iter(lnum(1, 5), !Obf##)]; @pemit %#=Auspex disabled.}
&CMD_UMBRAENTER rls=$+umbra/enter:@rxlevel %#=!Real Umbra; @txlevel %#=
!Real Umbra; @pemit %#=You are now in the Umbra.  &CMD_UMBRALEAVE
rls=$+umbra/leave:@rxlevel %#=Real !Umbra; @txlevel %#= Real !Umbra;
@pemit %#=You left the Umbra.  &CMD_PEEKON rls=$+peek/on:@switch
hastxlevel(%#,Umbra)=1, {@rxlevel %#=Real !Umbra; @pemit %#=You are now
peeking in the real world}, {@rxlevel %#=!Real Umbra; @pemit %#=You are
now peeking into the Umbra} &CMD_PEEKOFF rls=$+peek/off:@rxlevel
%#=!Real !Umbra [setinter(Real Umbra, txlevel(%#))]; @pemit %#=You are
no longer peeking.


File: rhostmushhandbook.info,  Node: Execscript and external programs and scripts,  Next: Using printf for advanced text output,  Prev: Reality levels,  Up: Advanced Features

10.4 Execscript and external programs and scripts
=================================================

* Menu:

* Mush variables::
* set object::
* Example bash script::
* Notes and warnings::
* Scripts to be used with execscript::


File: rhostmushhandbook.info,  Node: Mush variables,  Next: set object,  Up: Execscript and external programs and scripts

10.4.1 Mush variables
---------------------

* Menu:

* Built in variables::
* Dynamic variables::
* Register variables::


File: rhostmushhandbook.info,  Node: Built in variables,  Next: Dynamic variables,  Up: Mush variables

10.4.1.1 Built in variables
...........................

Variable Description MUSH_PLAYER player dbref# MUSH_CAUSE cause dbref#
MUSH_CALLER caller dbref# MUSH_OWNER owner of player dbref# MUSH_FLAGS
space delimited list of flags on player MUSH_TOGGLES space delimited
list of toggles on player MUSH_OFLAGS space delimited list of flags of
player owner MUSH_OTOGGLES space delimited list of toggles of player
owner MUSHL_VARS space delimited list of MUSH attributes from player

     This is passed from the mush’s EXECSCRIPT_VARS attr


File: rhostmushhandbook.info,  Node: Dynamic variables,  Next: Register variables,  Prev: Built in variables,  Up: Mush variables

10.4.1.2 Dynamic variables
..........................

MUSHV_<arg> <arg> variable passed from MUSHL_VARS

     These are the attributes from EXECSCRIPT_VARS


File: rhostmushhandbook.info,  Node: Register variables,  Prev: Dynamic variables,  Up: Mush variables

10.4.1.3 Register variables
...........................

MUSHQ_<arg> setq registers 0-9 and a-z MUSHQN_<arg> labels that are
assigned the setq vars MUSHN_<arg> The labels that were defined by any
register

     Note: they must be ASCII-7 clean and contain no white spaces


File: rhostmushhandbook.info,  Node: set object,  Next: Example bash script,  Prev: Mush variables,  Up: Execscript and external programs and scripts

10.4.2 set object
-----------------

The script executed with execscript() will read in a file with the same
name as the script ending in ‘.set’.  This is a loader object that will
set attributes and registers back into the mush that you wish to pass
from the script.  The fields are SPACE SEPARATED. The values are NOT
evaluated.

* Menu:

* The format of the fields are::


File: rhostmushhandbook.info,  Node: The format of the fields are,  Up: set object

10.4.2.1 The format of the fields are
.....................................

* Menu:

* Dynamic variables: Dynamic variables<2>.
* Register variables: Register variables<2>.


File: rhostmushhandbook.info,  Node: Dynamic variables<2>,  Next: Register variables<2>,  Up: The format of the fields are

10.4.2.2 Dynamic variables
..........................

VARNAME OWNER CONTENTS (or leave null to clear)

* Menu:

* Examples::


File: rhostmushhandbook.info,  Node: Examples,  Up: Dynamic variables<2>

10.4.2.3 Examples
.................

SEX #123 Male DESC #123 %r%tThis is a willow tree of unique
description%r%rIt sways in the wind.  RED #123 This is the color
%ch%crred%cn.  WIPETHISATTR #123 MULTILINE #123 This is a line that
continues on because of the line feed (a control-M) on each line on the
lines above


File: rhostmushhandbook.info,  Node: Register variables<2>,  Prev: Dynamic variables<2>,  Up: The format of the fields are

10.4.2.4 Register variables
...........................

REGISTER Q CONTENTS (or leave null to clear)

* Menu:

* Examples (The last example clears register 0): Examples The last example clears register 0.


File: rhostmushhandbook.info,  Node: Examples The last example clears register 0,  Up: Register variables<2>

10.4.2.5 Examples (The last example clears register 0)
......................................................

W Q This is stored in register W 1 Q This is stored in register 1 0 Q
foo QN this sets register with label ‘foo’


File: rhostmushhandbook.info,  Node: Example bash script,  Next: Notes and warnings,  Prev: set object,  Up: Execscript and external programs and scripts

10.4.3 Example bash script
--------------------------

#!/bin/bash echo “This was called by player ${MUSH_PLAYER} that is owned
by ${MUSH_OWNER}” echo “Displaying Registers:” regs=”0 1 2 3 4 5 6 7 8 9
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z” for list in ${regs}
do

     eval echo “Register ${list}: ${MUSHQ_${list}}”

done echo “Displaying variables:” for vars in ${MUSHL_VARS} do

     eval echo “Variable ${vars}: ${MUSHV_${vars}}”

done


File: rhostmushhandbook.info,  Node: Notes and warnings,  Next: Scripts to be used with execscript,  Prev: Example bash script,  Up: Execscript and external programs and scripts

10.4.4 Notes and warnings
-------------------------

While MUSHL_VARS are sanitized on what is allowable as a mush variable,
this is not necessarilly sanitized on what the calling script can fetch
as a valid variable.  Of note, you can not set environment variables
that contain an equals sign.  Be aware of this limitation.

Remember, MUSHL_VARS is the environment variable seen by the script.
This is EXECSCRIPT_VARS on the mush itself, that is the attribute set on
the target that contains the execscript() that is being executed.


File: rhostmushhandbook.info,  Node: Scripts to be used with execscript,  Prev: Notes and warnings,  Up: Execscript and external programs and scripts

10.4.5 Scripts to be used with execscript
-----------------------------------------

account/ – Directory for execscripts relating to account creation
compile39.sh – Script for patching and compiling RhostMUSH 3.9
compile.sh – Script for patching and compiling RhostMUSH config.sh –
Script for setting compile time options for RhostMUSH debug.sh – Script
for debugging RhostMUSH dict.sh – Script for querying a dictionary
diff.sh – Script for querying differences between two arguments
fortune.sh – Script for querying fortune program fullweather.sh – Script
for querying a graphical weather forecast (alternative) git.sh – Script
for querying git version of RhostMUSH hello.sh – Script for teaching
execscript for ‘Hello World’ iostat.sh – Script for querying server
stats of RhostMUSH jsonvalidate.sh – Python Script for validating JSON
logsearch.sh – Script for searching throgh logfiles for RhostMUSH
math_example.sh – Examples of math operations to be used with math.sh
math.sh – Script for mathematical operations memory.sh – Script for
querying memory usage of RhostMUSH mkindx.sh – Script for indexing
RhostMSH helpfiles pastebinread.sh – Script for reading data from a
pastebin URL pastebinwrite.sh – Script for writing data to a pastebin
qspell.sh – Script for checking spelling (alternative) quota.sh – Script
for checking disk quote and usage random.sh – Script for getting a
random number roomlog.sh – Script for viewing logs in roomlog directory
spell.sh – Script for checking spelling stats.sh – Script for querying
server and process stats for RhostMUSH thes.sh – Script for adding a
word to the dictionary for spell scripts tinyurl.sh – Script for
shortening a URL weather.sh – Script for querying a graphical weather
forecast web.sh – Script for querying an arbitary website


File: rhostmushhandbook.info,  Node: Using printf for advanced text output,  Prev: Execscript and external programs and scripts,  Up: Advanced Features

10.5 Using printf() for advanced text output
============================================

The function printf() in Rhost can be used to greatly reduce coding in
efforts for outputs, screens and data display.  It can automatically
center, justify and wrap the text parameters given to it.

* Menu:

* Example one::
* Example two::
* Example three::


File: rhostmushhandbook.info,  Node: Example one,  Next: Example two,  Up: Using printf for advanced text output

10.5.1 Example one
------------------

     @emit printf(|$-12s|$12s|$^12s$&14s$_12s|,a b c, d e f, g h i, wrap(lnum(20),12, l, |, |), j k l)

     |a b c       |       d e f|   g h i    |0 1 2 3 4 5 |j     k    l|
                                            |6 7 8 9 10  |
                                            |11 12 13 14 |
                                            |15 16 17 18 |
                                            |19          |


File: rhostmushhandbook.info,  Node: Example two,  Next: Example three,  Prev: Example one,  Up: Using printf for advanced text output

10.5.2 Example two
------------------

       @emit printf($14&s $^4&s $-3&s $15&s,
       iter(Bruised|Hurt|Injured|Wounded|Mauled|Crippled|Incapacitated,##,|,%R),
       iter(|-1|-1|-2|-2|-5|,##,|,%r),iter(lnum(1,7),%[[if(gte(get(%#/damage),##),X,%b)]%],,%r),
       * Aggravated%RX Lethal%R/ Bashing)

           Bruised      [ ]    * Aggravated
              Hurt  -1  [ ]        X Lethal
           Injured  -1  [ ]       / Bashing
           Wounded  -2  [ ]
            Mauled  -2  [ ]
          Crippled  -5  [ ]
     Incapacitated      [ ]


File: rhostmushhandbook.info,  Node: Example three,  Prev: Example two,  Up: Using printf for advanced text output

10.5.3 Example three
--------------------

     @emit [printf($-10|"'s$-60|"s,a b c d e f g h i j k l m n o p q r s t u v w x y z,
     this is a test a groovy test blah blah blah [repeat(blah%b,100)])]END!

     a b c d e this is a test a groovy test blah blah blah blah blah blah
     f g h i j blah blah blah blah blah blah blah blah blah blah blah blah
     k l m n o blah blah blah blah blah blah blah blah blah blah blah blah
     p q r s t blah blah blah blah blah blah blah blah blah blah blah blah
     u v w x y blah blah blah blah blah blah blah blah blah blah blah blah
     z         blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah                                    END!


File: rhostmushhandbook.info,  Node: Format for image files,  Next: Upgrading a Legacy RhostMUSH Installation,  Prev: Advanced Features,  Up: Top

11 Format for image files
*************************

The image format goes like this:

Data Type Example Description ——— ——- ———————————————————- INT 3 TYPE:
room 0, thing 1, exit 2, player 3, zone 4, garbage 5 STRING Wizard NAME:
of the target.  Verbatum, no quotes surround it >>*<<INT 123 LOCATION:
dbref# of the target.  No prepending ‘#’ used.  >>*<<INT 234 CONTENTS:
The first content in a linked list content table (-1 if none) >>*<<INT
345 EXITS: The first exit in a linked list exit table (-1 if none)
>>*<<INT 0 LINK: This is the ‘home’ of the object or what it’s linked to
(-1 for none) >>*<<INT 123 NEXT: The next thing after this item for a
content holder STRING #123 LOCK: The boolean string lock if it exists.
(empty if no lock) >>*<<INT 1 OWNER: The dbref# owner of the target.
For players same dbref as player.  INT 789 PARENT: The parent of the
target.  (-1 if none) >>*<<INT 99999 MONEY: The int value of the money
the players has.  INT 194592 FLAGS1: The first word of flags (@set
flags) on a player (see FLAGS) INT 194222 FLAGS2: The second word of
flags (@set flags) on a player (see FLAGS) INT 199999 FLAGS3: The third
word of flags (@set flags []) on a player (see FLAGS) INT 1582958
FLAGS4: The forth word of flags (@set flags []) on a player (see FLAGS)
INT 159955 TOGGLES1: The first word of toggles (@toggle) on a player
(see TOGGLES) INT 159958 TOGGLES2: The second word of toggles (@toggle)
on a player (see TOGGLES) INT 159958 POWER1: The first word of powers
(@power) on a player (see POWERS) INT 159958 POWER2: The second word of
powers (@power) on a player (see POWERS) INT 159958 POWER3: The third
word of powers (@power) on a player (see POWERS) INT 159958 DEPOWER1:
The first word of depowers (@depower) on a player (see DEPOWERS) INT
159958 DEPOWER2: The second word of depowers (@depower) on a player (see
DEPOWERS) INT 159958 DEPOWER3: The third word of depowers (@depower) on
a player (see DEPOWERS) INT -1 ZONE(S): The list of zones starting here
and ending with ‘-1’.  (see ZONES) >STRING >VA ATTRIBUTENAME: Attribute
name to store, starts with > identifier STRING Wheee ATTRIBUTECONTENTS:
Contents of attribute.  Multi-lines seperate with ^M (control-M) >STRING
>Desc ATTRIBUTENAME: Another attribute to chain in STRING Ugly
ATTRIBUTECONTENTS: Contents of the next attribute >STRING >>*<<Password
PASSWORDATTRIB: Special password attribute.  Attribute name is
‘>>*<<Password’ STRING $6$xy$xy PASSWORDCONTENTS: The SHA512 password
(if glibc 2.7+ supported on system) (see PASS) < < This is the marker to
specify the end of the attribute contents.  This is always the last line

     Note: Any Data type starting with ‘*’ is ignored when
     @snapshot/loading.

The structure above with the examples would look like this in the file:

3 Wizard 123 234 345 0 123 #123 1 789 99999 194592 194222 199999 1582958
159955 159958 159958 159958 159958 159958 159958 159958 -1 >VA Wheee
>Desc Ugly >*Password $6$xy$xy <

* Menu:

* HELP key indexes for the values;: HELP key indexes for the values.


File: rhostmushhandbook.info,  Node: HELP key indexes for the values,  Up: Format for image files

11.1 HELP key indexes for the values:
=====================================

FLAGS: The following flags are to be used. They are BITWISE masks that you

     need to add together for the values tghat you apply

/* First word of flags `/ #define SEETHRU 0x00000008 /' Can see through
to the other side `/ #define WIZARD 0x00000010 /' gets automatic control
`/ #define LINK_OK 0x00000020 /' anybody can link to this room `/
#define DARK 0x00000040 /' Don’t show contents or presence `/ #define
JUMP_OK 0x00000080 /' Others may @tel here `/ #define STICKY 0x00000100
/' Object goes home when dropped `/ #define DESTROY_OK 0x00000200 /'
Others may @destroy `/ #define HAVEN 0x00000400 /' No killing here, or
no pages `/ #define QUIET 0x00000800 /' Prevent ‘feelgood’ messages `/
#define HALT 0x00001000 /' object cannot perform actions `/ #define
TRACE 0x00002000 /' Generate evaluation trace output `/ #define GOING
0x00004000 /' object is available for recycling `/ #define MONITOR
0x00008000 /' Process ^x:action listens on obj?  `/ #define MYOPIC
0x00010000 /' See things as nonowner/nonwizard `/ #define PUPPET
0x00020000 /' Relays ALL messages to owner `/ #define CHOWN_OK
0x00040000 /' Object may be @chowned freely `/ #define ENTER_OK
0x00080000 /' Object may be ENTERed `/ #define VISUAL 0x00100000 /'
Everyone can see properties `/ #define IMMORTAL 0x00200000 /' Object
can’t be killed `/ #define HAS_STARTUP 0x00400000 /' Load some attrs at
startup `/ #define OPAQUE 0x00800000 /' Can’t see inside `/ #define
VERBOSE 0x01000000 /' Tells owner everything it does.  `/ #define
INHERIT 0x02000000 /' Gets owner’s privs.  (i.e.  Wiz) `/ #define
NOSPOOF 0x04000000 /' Report originator of all actions.  `/ #define
ROBOT 0x08000000 /' Player is a ROBOT `/ #define SAFE 0x10000000 /' Need
/override to @destroy `/ #define CONTROL_OK 0x20000000 /' ControlLk
specifies who ctrls me `/ #define HEARTHRU 0x40000000 /' Can hear out of
this obj or exit `/ #define TERSE 0x80000000 /' Only show room name on
look >>*<</

/* Second word of flags `/ #define KEY 0x00000001 /' No puppets `/
#define ABODE 0x00000002 /' May @set home here `/ #define FLOATING
0x00000004 /' Inhibit Floating room..  msgs `/ #define UNFINDABLE
0x00000008 /' Cant loc() from afar `/ #define PARENT_OK 0x00000010 /'
Others may @parent to me `/ #define LIGHT 0x00000020 /' Visible in dark
places `/ #define HAS_LISTEN 0x00000040 /' Internal: LISTEN attr set `/
#define HAS_FWDLIST 0x00000080 /' Internal: FORWARDLIST attr set `/
#define ADMIN 0x00000100 /' Player has admin privs `/ #define GUILDOBJ
0x00000200 #define GUILDMASTER 0x00000400 /' Player has gm privs `/
#define NO_WALLS 0x00000800 /' So to stop normal walls `/ #define
REQUIRE_TREES 0x00001000 /' Trees are required on this target for attrib
sets `/ /' —-FREE—- 0x00002000 `/ /' #define OLD_NOROBOT 0x00002000 `/
#define SCLOAK 0x00004000 #define CLOAK 0x00008000 #define FUBAR
0x00010000 #define INDESTRUCTABLE 0x00020000 /' object can’t be nuked `/
#define NO_YELL 0x00040000 /' player can’t @wall `/ #define NO_TEL
0x00080000 /' player can’t @tel or be @tel’d `/ #define FREE 0x00100000
/' object/player has unlim money `/ #define GUEST_FLAG 0x00200000
#define RECOVER 0x00400000 #define BYEROOM 0x00800000 #define WANDERER
0x01000000 #define ANSI 0x02000000 #define ANSICOLOR 0x04000000 #define
NOFLASH 0x08000000 #define SUSPECT 0x10000000 /' Report some activities
to wizards `/ #define BUILDER 0x20000000 /' Player has architect privs
`/ #define CONNECTED 0x40000000 /' Player is connected `/ #define SLAVE
0x80000000 /' Disallow most commands >>*<</

/* Third word of flags - Thorin 3/95 `/ #define NOCONNECT 0x00000001
#define DPSHIFT 0x00000002 #define NOPOSSESS 0x00000004 #define COMBAT
0x00000008 #define IC 0x00000010 #define ZONEMASTER 0x00000020 #define
ALTQUOTA 0x00000040 #define NOEXAMINE 0x00000080 #define NOMODIFY
0x00000100 #define CMDCHECK 0x00000200 #define DOORRED 0x00000400
#define PRIVATE 0x00000800 /' For exits only `/ #define NOMOVE
0x00001000 #define STOP 0x00002000 #define NOSTOP 0x00004000 #define
NOCOMMAND 0x00008000 #define AUDIT 0x00010000 #define SEE_OEMIT
0x00020000 #define NO_GOBJ 0x00040000 #define NO_PESTER 0x00080000
#define LRFLAG 0x00100000 #define TELOK 0x00200000 #define NO_OVERRIDE
0x00400000 #define NO_USELOCK 0x00800000 #define DR_PURGE 0x01000000 /'
For rooms only…internal `/ #define NO_ANSINAME 0x02000000 /' Remove the
ability to set @ansiname `/ #define SPOOF 0x04000000 #define SIDEFX
0x08000000 /' Allow enactor to use side-effects `/ #define ZONECONTENTS
0x10000000 /' Search contents of zonemaster for $commands `/ #define
NOWHO 0x20000000 /' Player in WHO doesn’t show up - use with @hide `/
#define ANONYMOUS 0x40000000 /' Player set shows up as ‘Someone’ when
talking `/ #define BACKSTAGE 0x80000000 /' Immortal toggle for items on
control >>*<</

/* Forth word of flags - Thorin 3/95 `/ #define NOBACKSTAGE 0x00000001
/' Immortal toggle to control no-backstage `/ #define LOGIN 0x00000002
/' Enable player to login past @disable logins `/ #define INPROGRAM
0x00000004 /' Player is inside a program `/ #define COMMANDS 0x00000008
/' Optional define for $commands `/ #define MARKER0 0x00000010 /' TM 3.0
marker flags `/ #define MARKER1 0x00000020 #define MARKER2 0x00000040
#define MARKER3 0x00000080 #define MARKER4 0x00000100 #define MARKER5
0x00000200 #define MARKER6 0x00000400 #define MARKER7 0x00000800 #define
MARKER8 0x00001000 #define MARKER9 0x00002000 #define BOUNCE 0x00004000
/' That lovly TM 3.0 Bouncey thingy `/ #define SHOWFAILCMD 0x00008000 /'
Show failed $commands defauilt error `/ #define NOUNDERLINE 0x00010000
/' Strip UNDERLINE character from ANSI `/ #define NONAME 0x00020000 /'
Target does not display name with look `/ #define ZONEPARENT 0x00040000
/' Target zone allows inheritance of attribs `/ #define SPAMMONITOR
0x00080000 /' Monitor the target for spam `/ #define BLIND 0x00100000 /'
Exits and locations snuff arrived/left `/ #define NOCODE 0x00200000 /'
Players may not code `/ #define HAS_PROTECT 0x00400000 /' Player target
has protect name data `/ #define XTERMCOLOR 0x00800000 /' Extended AnSI
Xterm colors `/ #define HAS_ATTRPIPE 0x01000000 /' Attribute piping via
@pipe `/ /' 0x02000000 free `/ /' 0x04000000 free `/ /' 0x08000000 free
`/ /' 0x10000000 free `/ /' 0x20000000 free `/ /' 0x40000000 free `/ /'
0x80000000 free >>*<</

__________________________________________________________________

TOGGLES: Toggles are BITWISE masks taht need to be applied for each word like

     the flags above.  They are added together for each word type

/* First word of toggles - Thorin 3/95 `/ #define TOG_MONITOR 0x00000001
/' Active monitor on player `/ #define TOG_MONITOR_USERID 0x00000002 /'
show userid `/ #define TOG_MONITOR_SITE 0x00000004 /' show site `/
#define TOG_MONITOR_STATS 0x00000008 /' show stats `/ #define
TOG_MONITOR_FAIL 0x00000010 /' show fails `/ #define TOG_MONITOR_CONN
0x00000020 #define TOG_VANILLA_ERRORS 0x00000040 /' show normal error
msg `/ #define TOG_NO_ANSI_EX 0x00000080 /' supress ansi stuff in ex `/
#define TOG_CPUTIME 0x00000100 /' show cpu time for cmds `/ #define
TOG_MONITOR_DISREASON 0x00000200 #define TOG_MONITOR_VLIMIT 0x00000400
#define TOG_NOTIFY_LINK 0x00000800 #define TOG_MONITOR_AREG 0x00001000
#define TOG_MONITOR_TIME 0x00002000 #define TOG_CLUSTER 0x00004000 /'
Object is part of a cluster `/ #define TOG_SNUFFDARK 0x00008000 /' Snuff
Dark Exit Viewing `/ #define TOG_NOANSI_PLAYER 0x00010000 /' Do not show
ansi player names `/ #define TOG_NOANSI_THING 0x00020000 /' … things `/
#define TOG_NOANSI_ROOM 0x00040000 /' … rooms `/ #define TOG_NOANSI_EXIT
0x00080000 /' … exits `/ #define TOG_NO_TIMESTAMP 0x00100000 /' Do not
modify timestamps on target `/ #define TOG_NO_FORMAT 0x00200000 /'
Override @conformat/@exitformat `/ #define TOG_ZONE_AUTOADD 0x00400000
/' Automatically add FIRST zone in list `/ #define TOG_ZONE_AUTOADDALL
0x00800000 /' Automatically add ALL zones in list `/ #define
TOG_WIELDABLE 0x01000000 /' Marker to specify if object is wieldable `/
#define TOG_WEARABLE 0x02000000 /' Marker to specify if object is
wearable `/ #define TOG_SEE_SUSPECT 0x04000000 /' Specify who sees
suspect in WHO/MONITOR `/ #define TOG_MONITOR_CPU 0x08000000 /' Specify
who sees CPU overflow allerts `/ #define TOG_BRANDY_MAIL 0x10000000 /'
Define brandy like mail interface `/ #define TOG_FORCEHALTED 0x20000000
/' The item toggled can @force halted things `/ #define TOG_PROG
0x40000000 /' Can use @program on other people/things `/ #define
TOG_NOSHELLPROG 0x80000000 /' Target can not issue commands inside a
prog >>*<</

/* Second word of toggles – Ash `/ #define TOG_EXTANSI 0x00000001 /'
Specify if target can used extended ansi naming `/ #define TOG_IMMPROG
0x00000002 /' Only an immortal can @quitprogram them `/ #define
TOG_MONITOR_BFAIL 0x00000004 /' Monitor if a failed connect on bad
character `/ #define TOG_PROG_ON_CONNECT 0x00000008 /' Reverse logic of
program on connect `/ #define TOG_MAIL_STRIPRETURN 0x00000010 /' Strip
carrage return in mail combining `/ #define TOG_PENN_MAIL 0x00000020 /'
Use PENN style syntax `/ #define TOG_SILENTEFFECTS 0x00000040 /' Silents
did_it() functionality on target `/ #define TOG_IGNOREZONE 0x00000080 /'
Target is set to @icmd zones `/ #define TOG_VPAGE 0x00000100 /' Target
sees alias in pages `/ #define TOG_PAGELOCK 0x00000200 /' Target issues
pagelocks as normal `/ #define TOG_MAIL_NOPARSE 0x00000400 /' Don’t
parse %t/%b/%r in mail `/ #define TOG_MAIL_LOCKDOWN 0x00000800 /'
Mortal-accessed mail/number and mail/check `/ #define TOG_MUXPAGE
0x00001000 /' Have ‘page’ work like MUX `/ #define TOG_NOZONEPARENT
0x00002000 /' Zone Child does NOT inherit parent attribs `/ #define
TOG_ATRUSE 0x00004000 /' Enactor can use Attribute based USELOCKS `/
#define TOG_VARIABLE 0x00008000 /' Set exit to be variable `/ #define
TOG_KEEPALIVE 0x00010000 /' Send ‘keepalives’ to the target player `/
#define TOG_CHKREALITY 0x00020000 /' Target checks @lock/user for
Reality passes `/ #define TOG_NOISY 0x00040000 /' Always do noisy sets
`/ #define TOG_ZONECMDCHK 0x00080000 /' Zone commands checked on target
like @parent `/ #define TOG_HIDEIDLE 0x00100000 /' Allow
wizards/immortals to hide their idle time `/ #define TOG_MORTALREALITY
0x00200000 /' Override the wiz_always_real setting `/ #define
TOG_ACCENTS 0x00400000 /' Accents being displayed `/ #define
TOG_PREMAILVALIDATE 0x00800000 /' Pre-Validate the mail send list before
sending mail `/ #define TOG_SAFELOG 0x01000000 /' Allow ‘clean logging’
by the player `/ #define TOG_UTF8 0x02000000 /' UTF8 being displayed `/
/' 0x04000000 free `/ #define TOG_NODEFAULT 0x08000000 /' Allow target
to inherit default attribs `/ #define TOG_EXFULLWIZATTR 0x10000000 /'
Examine Wiz attribs `/ #ifdef ENH_LOGROOM #define TOG_LOGROOMENH
0x20000000 /' Enhanced Room Logging `/ #endif #define TOG_LOGROOM
0x40000000 /' Log Room’s location/contents `/ #define TOG_NOGLOBPARENT
0x80000000 /' Target does not inherit global attributes >>*<</

__________________________________________________________________

POWERS: Powers are handled a bit differently. They’re used as BITWISE shift

     markers that you would have to compute the shift then add it after
     the fact.

/* First word of power positions. Each position is 2 bits so the

     number here is how far over to shift the 2 bit pattern >>*<</

#define POWER_CHANGE_QUOTAS 0 #define POWER_CHOWN_ME 2 #define
POWER_CHOWN_ANYWHERE 4 #define POWER_CHOWN_OTHER 6 #define POWER_WIZ_WHO
8 #define POWER_EX_ALL 10 #define POWER_NOFORCE 12 #define
POWER_SEE_QUEUE_ALL 14 #define POWER_FREE_QUOTA 16 #define
POWER_GRAB_PLAYER 18 #define POWER_JOIN_PLAYER 20 #define
POWER_LONG_FINGERS 22 #define POWER_NO_BOOT 24 #define POWER_BOOT 26
#define POWER_STEAL 28 #define POWER_SEE_QUEUE 30

/* Second word of power positions.  >>*<</ #define POWER_SHUTDOWN 0
#define POWER_TEL_ANYWHERE 2 #define POWER_TEL_ANYTHING 4 #define
POWER_PCREATE 6 #define POWER_STAT_ANY 8 #define POWER_FREE_WALL 10
#define POWER_EXECSCRIPT 12 #define POWER_FREE_PAGE 14 #define
POWER_HALT_QUEUE 16 #define POWER_HALT_QUEUE_ALL 18 #define
POWER_FORMATTING 20 #define POWER_NOKILL 22 #define POWER_SEARCH_ANY 24
#define POWER_SECURITY 26 #define POWER_WHO_UNFIND 28

/* Third word of power positions.  `/ #define POWER_OPURGE 0 #define
POWER_HIDEBIT 2 #define POWER_NOWHO 4 #define POWER_FULLTEL_ANYWHERE 6
#define POWER_EX_FULL 8 #define POWER_API 10 #define POWER_MONITORAPI 12
#define POWER_WIZ_IDLE 14 #define POWER_WIZ_SPOOF 16 /' 18 free `/ /' 20
free `/ /' 22 free `/ /' 24 free `/ /' 26 free `/ /' 28 free `/ /' 30
free >>*<</

__________________________________________________________________

DEPOWERS: like @powers they are handled with a BITWISE offshift that you

     will have to calculate then add

/* First word >>*<</ #define DP_WALL 0 #define DP_LONG_FINGERS 2 #define
DP_STEAL 4 #define DP_CREATE 6 #define DP_WIZ_WHO 8 #define DP_CLOAK 10
#define DP_BOOT 12 #define DP_PAGE 14 #define DP_FORCE 16 #define
DP_LOCKS 18 #define DP_COM 20 #define DP_COMMAND 22 #define DP_MASTER 24
#define DP_EXAMINE 26 #define DP_NUKE 28 #define DP_FREE 30

/* Second word `/ #define DP_OVERRIDE 0 #define DP_TEL_ANYWHERE 2
#define DP_TEL_ANYTHING 4 #define DP_PCREATE 6 #define DP_POWER 8
#define DP_QUOTA 10 #define DP_MODIFY 12 #define DP_CHOWN_ME 14 #define
DP_CHOWN_OTHER 16 #define DP_ABUSE 18 #define DP_UNL_QUOTA 20 #define
DP_SEARCH_ANY 22 #define DP_GIVE 24 #define DP_RECEIVE 26 #define
DP_NOGOLD 28 #define DP_NOSTEAL 30 /' Third word…and there was much
rejoicing `/ #define DP_PASSWORD 0 #define DP_MORTAL_EXAMINE 2 #define
DP_PERSONAL_COMMANDS 4 /' 6 free `/ #define DP_DARK 8 /' 10 free `/ /'
12 free `/ /' 14 free `/ /' 16 free `/ /' 18 free `/ /' 20 free `/ /' 22
free `/ /' 24 free `/ /' 26 free `/ /' 28 free `/ /' 30 free >>*<</

__________________________________________________________________

     Note: ZONES: Zones are special.  If there are no zones, the value
     will be ‘-1’.

So entering zones if there are no zones: -1

Entering zones if it has three zones (#123, #456, and #789) 123 456 789
-1

As you see, the last value of the zone `MUST' be -1.  This tells it that
there are no more zones to add.


File: rhostmushhandbook.info,  Node: Upgrading a Legacy RhostMUSH Installation,  Next: Comparison of Flags,  Prev: Format for image files,  Up: Top

12 Upgrading a Legacy RhostMUSH Installation
********************************************

* Menu:

* Converting database betwen GDBM and QDBM::
* Updating RhostMUSH prior to 3.9.5p2: Updating RhostMUSH prior to 3 9 5p2.
* Adding MySQL to RhostMUSH older than 3.9.5p2: Adding MySQL to RhostMUSH older than 3 9 5p2.


File: rhostmushhandbook.info,  Node: Converting database betwen GDBM and QDBM,  Next: Updating RhostMUSH prior to 3 9 5p2,  Up: Upgrading a Legacy RhostMUSH Installation

12.1 Converting database betwen GDBM and QDBM
=============================================

Ok, if you plan to recompile your game that is using GDBM to QDBM, or
visa versa some bad news.

The databases are NOT COMPATIBLE to each other, at least in the binary
form.

* Menu:

* Downgrading QDBM to GDBM::
* Upgradging GDBM to QDBM::


File: rhostmushhandbook.info,  Node: Downgrading QDBM to GDBM,  Next: Upgradging GDBM to QDBM,  Up: Converting database betwen GDBM and QDBM

12.1.1 Downgrading QDBM to GDBM
-------------------------------

     Warning: I would NEVER change from QDBM back to GDBM, but if you’re
     set on it these steps:

     You would use the same steps if you plan to move QDBM to GDBM. I
     however would not do this.  Moving from QDBM to GDBM is a huge step
     backwards.  Seriously, don’t do it unless you have absolutely no
     other recourse.

     IF you plan (for whatever reason) to move from QDBM to GDBM, you
     should verify the following

  1. You have on a 64 bit system, no object that has more than 400
     attributes on it.

  2. You have on a 32 bit system, no object that has more than 750
     attributes on it.

  3. Any CONTENT of any attribute must be below 4000 characters in
     length.

  4. Once you have that done, you may follow the procedures below on
     converting (upgrade) from GDBM to QDBM. This works the same as
     converting (downgrading) QDBM back down to GDBM


File: rhostmushhandbook.info,  Node: Upgradging GDBM to QDBM,  Prev: Downgrading QDBM to GDBM,  Up: Converting database betwen GDBM and QDBM

12.1.2 Upgradging GDBM to QDBM
------------------------------

Now, if you’ve kept reading and plan to convert your GDBM database to
QDBM great news!  It’s more stable, it’s faster, and lets you have far
more flexibility.

So, BEFORE YOU RECOMPILE YOUR CODE. This is what you have to do.

* Menu:

* While logged in to your mush, issue the following commands: While logged in to your mush issue the following commands.
* Verify the files exist::
* Shutdown the MUSH::
* From the Server directory::
* From the Server/game directory::
* While logged into the mush issue the following commands::
* Verify that you have QDBM running and your valid values::


File: rhostmushhandbook.info,  Node: While logged in to your mush issue the following commands,  Next: Verify the files exist,  Up: Upgradging GDBM to QDBM

12.1.2.1 While logged in to your mush, issue the following commands
...................................................................

       A. @dump/flat – This will make a flatfile dump of your MUSH
          database

       B. wmail/unload – This will make a flatfile dump of your MAIL
          database

       C. @areg/unload – If you use the AutoRegistration engine, this
          dumps it

       D. newsdb/unload – If you use the hardcoded news/bbs engine.
          This dumps it


File: rhostmushhandbook.info,  Node: Verify the files exist,  Next: Shutdown the MUSH,  Prev: While logged in to your mush issue the following commands,  Up: Upgradging GDBM to QDBM

12.1.2.2 Verify the files exist
...............................

       A. Server/game/data/netrhost.db.flat

       B. Server/game/data/RhostMUSH.dump.folder

       C. Server/game/data/RhostMUSH.dump.mail

       D. (Optional) Server/game/data/RhostMUSH.areg.dump

       E. (Optional) Server/game/data/RhostMUSH.news.flat


File: rhostmushhandbook.info,  Node: Shutdown the MUSH,  Next: From the Server directory,  Prev: Verify the files exist,  Up: Upgradging GDBM to QDBM

12.1.2.3 Shutdown the MUSH
..........................

@shutdown your mush


File: rhostmushhandbook.info,  Node: From the Server directory,  Next: From the Server/game directory,  Prev: Shutdown the MUSH,  Up: Upgradging GDBM to QDBM

12.1.2.4 From the Server directory
..................................

       A. make clean

       B. make confsource 1.  Select QDBM and if you wish at this time
          increase your LBUF size 2.  Select any other options you may
          want

       C. (r)un and let it compile.

       D. Main DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               netrhost.gdbm*
               netrhost.db
               netrhost.db.new
               netrhost.db.new.prev

       E. Mail DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.folder.dir
               RhostMUSH.folder.pag
               RhostMUSH.mail.dir
               RhostMUSH.mail.pag

       F. (Optional) AutoReg DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.areg.dir
               RhostMUSH.areg.pag

       G. (Optional) News/BBS DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.news.dir
               RhostMUSH.news.pag


File: rhostmushhandbook.info,  Node: From the Server/game directory,  Next: While logged into the mush issue the following commands,  Prev: From the Server directory,  Up: Upgradging GDBM to QDBM

12.1.2.5 From the Server/game directory
.......................................

       A. Load the database:

               ./db_load data/netrhost.gdbm data/netrhost.db.flat data/netrhost.db.new

       B. Start the MUSH back:

               ./Startmush


File: rhostmushhandbook.info,  Node: While logged into the mush issue the following commands,  Next: Verify that you have QDBM running and your valid values,  Prev: From the Server/game directory,  Up: Upgradging GDBM to QDBM

12.1.2.6 While logged into the mush issue the following commands
................................................................

       A. Load in the mail database:

               wmail/load

       B. (optional) Load in the autoreg database:

               @areg/load

       C. (optional) Load in the news/bbs database:

               newsdb/load


File: rhostmushhandbook.info,  Node: Verify that you have QDBM running and your valid values,  Prev: While logged into the mush issue the following commands,  Up: Upgradging GDBM to QDBM

12.1.2.7 Verify that you have QDBM running and your valid values
................................................................

       A. @list options system

       B. @list options (spammy)


File: rhostmushhandbook.info,  Node: Updating RhostMUSH prior to 3 9 5p2,  Next: Adding MySQL to RhostMUSH older than 3 9 5p2,  Prev: Converting database betwen GDBM and QDBM,  Up: Upgrading a Legacy RhostMUSH Installation

12.2 Updating RhostMUSH prior to 3.9.5p2
========================================

Ok.

So you’re running an old RhostMUSH.

One prior to 3.9.5p2 and want to take advantage of the new format of the
Makefile and the automated mysql stuff and all the other goodies that
isn’t really (easilly) done with just patch.sh.

Well, you’re in luck.  It is actually fairly easy to do.

This is what you have to do.

First thing’s first.

  1. Log into your existing mush.  Let’s make current backups of all
     your flatfiles.  Issue:

          @dump/flat
          wmail/unload
          @areg/unload
          newsdb/unload

  2. Shutdown your game:

          @shutdown

  3. Make an image of all your current backed up files.  From The
     Server/game directory you would type:

          ./backup_flat.sh -s

     Note: Please remember the ‘-s’ to the ./backup_flat.sh.

  4. Make note of the most recently created file in the directory
     Server/game/oldflat.  It’s usually named something like:

          RhostMUSH.dbflat1.tar.gz

     Note: You will need this file later.

  5. Rename your ‘Rhost’ directory to something else.  This is the
     directory that you have containing the ‘Server’ directory.  Name it
     anything you want other than ‘Rhost’.  For those not used to unix
     you would type:

          mv Rhost Rhost_old

  6. Pull in the latest Rhost.  You would type:

          git clone https://github.com/RhostMUSH/trunk Rhost

     Note: You would type this in the same directory you have renamed
     your old ‘Rhost’ directory

  7. go into the Rhost/Server directory.  Type:

          make confsource

     Select what options you want (including the mysql and other
     goodies) then compile it (also within the menu, it’s the ‘r’
     option).

  8. Once your game is compiled and ready to go you need to copy in the
     data from your old game.  Copy the RhostMUSH.dbflat1.tar.gz we
     mentioned in step #4 to the Server/game directory of your NEW GAME
     DIRECTORY. From within the ‘game’ directory of your current game
     you should be able to issue (if you named the old one Rhost_old).
     Again this needs to be done FROM YOUR Server/game directory!!!

       A. cp netrhost.conf netrhost.conf.orig

       B. cp ../../Rhost_old/Server/game/RhostMUSH.dbflat1.tar.gz .

       C. tar -zxvf RhostMUSH.dbflat1.tar.gz

       D. Compare your current netrhost.conf to the default one that
          came with the source (that you renamed to netrhost.conf.orig).
          Likely the only sections you have to add to your current
          netrhost.conf (that came with your RhostMUSH.dbflat1.tar.gz
          archive), will be toward the end, with the include
          rhost_ingame.conf and rhost_mysql.conf.  Depending on how old
          your game is coming from you may need to add more options.
          Any config option that is the same between the netrhost.conf
          files do not have to be copied over, and you want to keep your
          custom settings (like don’t port or other stuff you have
          already customized).

       E. Load in your flatfile information:

               ./db_load data/netrhost.gdbm data/netrhost.db.flat data/netrhost.db.new

       F. Your ./Startmush should re-index all your txt files you
          originally made:

               ./Startmush

       G. In your game type the following as an immortal or as #1.

            1. Load in your mail flatfile:

                    wmail/load

            2. Load in your autoregistration flatfile (if available):

                    @areg/load

            3. Load in your hardcoded bbs flatfile (if available):

                    newsdb/load

  9. You should be good to go on a current directory structure for
     Rhost.  Enjoy!


File: rhostmushhandbook.info,  Node: Adding MySQL to RhostMUSH older than 3 9 5p2,  Prev: Updating RhostMUSH prior to 3 9 5p2,  Up: Upgrading a Legacy RhostMUSH Installation

12.3 Adding MySQL to RhostMUSH older than 3.9.5p2
=================================================

MySQL is now native in RhostMUSH as of 3.9.5p2.

     Warning: To autodetect it, YOU MUST HAVE mysql_config installed and
     running on your server.  Without this, even if you have mysql db
     installed it won’t be able to recognize the parameters you will
     need for it and will thus fail.  Please check your linux
     distribution to see what packages are needed to install
     mysql_config.

Download the git repository to a seperate directory so that you can copy
over the files that it requires you to.

Suggestion:

     git clone https://github.com/RhostMUSH/trunk ~/tmprho

If you are patching UP from an older version, you need to update the
following files:

  1. update your src/Makefile to the one in the 3.9.5p2+ repo ( cp
     ~/tmprho/Server/src/Makefile ~/Rhost/Server/src/Makefile )

  2. update your bin/asksource.* files to the one in the 3.9.5p2+ repo (
     cp ~/tmprho/Server/bin/asksource.* ~/Rhost/Server/bin/ )

  3. append ‘include rhost_mysql.conf’ BEFORE the rhost_ingame.conf file
     and before the section that says ‘define local aliases’ toward the
     end of your netrhost.conf file.  ( edit your
     ~/Rhost/Server/game/netrhost.conf file )

  4. copy the game/rhost_mysql.conf file from the 3.9.5p2+ repo ( cp
     ~/tmprho/Server/game/rhost_mysql.conf ~/Rhost/Server/game/ )

  5. The following lines have to be REPLACED/CHANGED in local.c ( toward
     the top ): ( you may edit this or copy the one from the other
     distro ) ( do either: edit ~/Rhost/Server/src/local.c ) ( or: cp
     ~/tmprho/Server/src/local.c ~/Rhost/Server/src/local.c )

     Note: IF REPLACING/CHANGING local.c COPY BELOW

     /* Called when the mush starts up, immediatly prior to the main game
      * loop being entered. By this point all databases are loaded and
      * all variables configured.
      */
     #ifdef MYSQL_VERSION
        extern void local_mysql_init(void);
        extern int sql_shutdown(dbref player);
     #endif

     #ifdef SQLITE
        extern void local_sqlite_init(void);
     #endif /* SQLITE */

     void local_startup(void) {
     #ifdef SQLITE
        local_sqlite_init();
     #endif /* SQLITE */
     #ifdef MYSQL_VERSION
        local_mysql_init();
     #endif
        load_regexp_functions();
     }

     /* Called immediatly after the main game loop exits. At this point
      * all databases and variables are still configured
      */
     void local_shutdown(void) {
     #ifdef MYSQL_VERSION
        sql_shutdown(-1);
     #endif
     }

  6. Issue ‘make clean’ then make confsource to rebuild using the latest
     builder script to build in the mysql changes.


File: rhostmushhandbook.info,  Node: Comparison of Flags,  Next: Comparison of powers,  Prev: Upgrading a Legacy RhostMUSH Installation,  Up: Top

13 Comparison of Flags
**********************

ABODE - ABODE BLIND - BLIND CHOWN_OK - CHOWN_OK DARK - DARK FREE - FREE
GOING - GOING/BYEROOM HAVEN - HAVEN INHERIT - INHERIT JUMP_OK - JUMP_OK
KEY - KEY LINK_OK - LINK_OK MONITOR - MONITOR NOSPOOF - NOSPOOF OPAQUE -
OPAQUE QUIET - QUIET STICKY - STICKY TRACE - TRACE UNFINDABLE -
UNFINDABLE VISUAL - VISUAL WIZARD - ROYALTY ANSI - ANSI/ANSICOLOR
PARENT_OK - PARENT_OK ROYALTY - COUNCILOR/ARCHITECT AUDIBLE - AUDIBLE
BOUNCE - BOUNCE CONNECTED - CONNECTED DESTROY_OK - DESTROY_OK ENTER_OK -
ENTER_OK FIXED - NO_TEL UNINSPECTED - Not Available - Just a marker flag
HALTED - HALTED IMMORTAL - GUILDMASTER (You don’t want IMMORTAL) GAGGED
- FUBAR CONSTANT - NO_MODIFY LIGHT - LIGHT MYOPIC - MYOPIC AUDITORIUM -
AUDITORIUM ZONE - Use @zone PUPPET - PUPPET TERSE - TERSE ROBOT - ROBOT
SAFE - SAFE TRANSPARENT - TRANSPARENT SUSPECT - SUSPECT VERBOSE -
VERBOSE STAFF - Not Available - Just a marker flag.  SLAVE - SLAVE
ORPHAN - Not Available - @lock/use the parent instead CONTROL_OK - Not
Available - Use @lock/ZoneWizLock STOP - STOP (See also NOSTOP) COMMANDS
- COMMANDS PRESENCE - Not Available - See: Reality Levels NOBLEED - Not
Needed.  Rhost doesn’t bleed ANSI. VACATION - Not Available - Just a
marker flag.  HEAD - Not Available - Just a marker flag.  WATCHER - Not
Available - @toggle MONITOR HTML - Not Available - Rhost doesn’t support
Pueblo REDIR_OK - Not Available - Rhost doesn’t support @redirect
SPEECHMOD - Not Available - Rhost doesn’t support @speechmod - use @icmd
MARKER0-MARKER9 - MARKER0-MARKER9


File: rhostmushhandbook.info,  Node: Comparison of powers,  Next: RhostMUSH Internal Help Files,  Prev: Comparison of Flags,  Up: Top

14 Comparison of powers
***********************

announce Can use the @wall command.  Rhost Equiv: - FREE_WALL (@power)

boot Can use the @boot command.  Rhost Equiv: BOOT (@power)

builder Can build, if the builder power is enabled.  Rhost Equiv:
ARCHITECT (flag)

chown_anything Can @chown anything to anyone.  Rhost Equiv: CHOWN_OTHER
(@power)

comm_all Like a wizard with respect to channels.  Rhost has no hardcoded
comsystem.  You can tweek the softcode.

control_all Can modify any object in the database.  (God-set only.)
Rhost Equiv: TwinkLock (@lock)

expanded_who Sees the wizard WHO, and SESSION commands.  Rhost Equiv:
WIZ_WHO (@power)

find_unfindable Can locate unfindable people.  see_hidden Can see hidden
(DARK) players on WHO, etc.  Rhost Equiv: WHO_UNFIND (@power)

free_money Unlimited money.  Rhost Equiv: FREE (flag)

free_quota Unlimited quota.  Rhost Equiv: FREE_QUOTA (@power)

guest Is this a guest character?  Rhost Equiv: GUEST (flag)

halt Can @halt anything, and @halt/all.  Rhost Equiv: HALT_QUEUE
(@power) or HALT_QUEUE_ALL (@power)

hide Can set themselves DARK. Rhost Equiv: NOWHO (@power)

idle No idle timeout.  Rhost Equiv: @timeout *player=-1

link_variable Can @link an exit to “variable”.  Rhost Equiv: Anyone can
do this.  VARIABLE (@toggle)

link_to_anything Can @link an exit to any (non-variable) destination.
Rhost Equiv: @lock/link (@lock)

long_fingers Can get, look, whisper, etc from a distance.  Rhost Equiv:
LONG_FINGERS (@power)

no_destroy Cannot be @toad’ed.  Rhost Equiv: INDESTRUCTABLE (flag)

open_anywhere Can @open an exit from any location.  Rhost Equiv:
@lock/open (@lock)

poll Can set the @poll.  Rhost has nothing equivelant.  Just softcode a
+poll, or @hook it for permissions.

prog Can use @program on players other than themself.  Rhost Equiv: PROG
(@toggle)

search Can @search anyone.  Rhost Equiv: SEARCH_ANY (@power)

see_all Can examine and see attributes like a wizard.  Rhost Equiv:
EXAMINE_FULL (@power) (and EXFULLWIZATTR (@toggle) for wiz only attribs)

see_queue Can @ps/all or @ps any player.  Rhost Equiv: SEE_QUEUE
(@power) or SEE_QUEUE_ALL (@power)

stat_any Can @stat any player.  Rhost Equiv: STAT_ANY (@power)

steal_money Can give negative money.  Rhost Equiv: STEAL (@power)

tel_anywhere Can teleport anywhere.  Rhost Equiv: TEL_ANYWHERE (@power)
or FULL_TEL (@power)

tel_anything Can teleport anything (includes tel_anywhere) Rhost Equiv:
TEL_ANYTHING (@power)

unkillable Cannot be killed with the ‘kill’ command.  Rhost Equiv:
NOKILL (@power)

use_sql Can call the SQL() function.  (God-set only.)  Rhost Equiv: SQL
is a 3rd party patch.

watch_logins Can set or reset the WATCHER flag on themselves.  Rhost
Equiv: MONITOR (@toggle)


File: rhostmushhandbook.info,  Node: RhostMUSH Internal Help Files,  Next: RhostMUSH Internal Wizhelp Files,  Prev: Comparison of powers,  Up: Top

15 RhostMUSH Internal Help Files
********************************


File: rhostmushhandbook.info,  Node: RhostMUSH Internal Wizhelp Files,  Next: Changelog,  Prev: RhostMUSH Internal Help Files,  Up: Top

16 RhostMUSH Internal Wizhelp Files
***********************************


File: rhostmushhandbook.info,  Node: Changelog,  Next: Historical Non-Disclosure Agreement,  Prev: RhostMUSH Internal Wizhelp Files,  Up: Top

17 Changelog
************

* Menu:

* RhostMUSH 4.0: RhostMUSH 4 0.
* RhostMUSH 3.9.5: RhostMUSH 3 9 5.
* RhostMUSH 3.9.4: RhostMUSH 3 9 4.
* RhostMUSH 3.9.3: RhostMUSH 3 9 3.
* RhostMUSH 3.9.2: RhostMUSH 3 9 2.
* RhostMUSH 3.9.1: RhostMUSH 3 9 1.
* RhostMUSH 3.9.0 p00: RhostMUSH 3 9 0 p00.
* RhostMUSH 3.2.4 p18: RhostMUSH 3 2 4 p18.
* RhostMUSH 3.2.4 p17: RhostMUSH 3 2 4 p17.
* RhostMUSH 3.2.4 p16: RhostMUSH 3 2 4 p16.
* RhostMUSH 3.2.4 p15: RhostMUSH 3 2 4 p15.
* RhostMUSH 3.2.4 p14: RhostMUSH 3 2 4 p14.
* RhostMUSH 3.2.4 p13: RhostMUSH 3 2 4 p13.
* RhostMUSH 3.2.4 p12: RhostMUSH 3 2 4 p12.
* RhostMUSH 3.2.4 p11: RhostMUSH 3 2 4 p11.
* RhostMUSH 3.2.4 p10: RhostMUSH 3 2 4 p10.
* RhostMUSH 3.2.4 p9: RhostMUSH 3 2 4 p9.
* RhostMUSH 3.2.4 p8: RhostMUSH 3 2 4 p8.
* RhostMUSH 3.2.4 p7: RhostMUSH 3 2 4 p7.
* RhostMUSH 3.2.4 p6: RhostMUSH 3 2 4 p6.
* RhostMUSH 3.2.4 p5: RhostMUSH 3 2 4 p5.
* RhostMUSH 3.2.4 p4: RhostMUSH 3 2 4 p4.
* RhostMUSH 3.2.4 p3: RhostMUSH 3 2 4 p3.


File: rhostmushhandbook.info,  Node: RhostMUSH 4 0,  Next: RhostMUSH 3 9 5,  Up: Changelog

17.1 RhostMUSH 4.0
==================

MUX passwords didn’t work properly because of a memcmp() bug.

        - Thanks Locke

@nuke didn’t properly wipe mail if issued from a non-player.

        - Thanks Benzaiten & Rockpath

@protect set/unset the wrong flags.

        - Thanks Rockpath

Help file typos fixed

        - Thanks Rockpath

Bug in EVAL could overwrite static pointer to attribute fetches

        - Thanks Ixokai

Bug in printf that could cause a SIGSEGV

        - Thanks Ixokai

Bug in AUTH and API handling where AUTH lookups happened with internal checks

        - Thanks Neil “Polk” Stevens

@set and set() now allow optionally setting contents starting with ‘_’.

        - Thanks <Gallifrey@BrazilMUX>

Added better user error handling to the build script.

        - Thanks qa’toq

Due to an insanely old bug in singleuser mode with attribute caps, flatfiles would cut off attributes at 750 on dbloading.

        - Thanks <Aqua@MuxNexus>

@recover/detail to show attributes and details of recoverable item

        - Thanks Ixokai

Suggestions in help files inspired from PennMUSH.

        - Thanks PennMUSH (Raevnos)

@door/push could crash with non-players

        - Thanks Xperta/Paige

Startmush had a confusing message for Nyctasia as #1’s password

        - Thanks Ixokai

@rxlevel/@txlevel handle bits as well as tabs

        - Thanks Myrddin

@fpose/nospace didn’t work because of wrong bitwise flags

        - Thanks Myrddin

Potential crash with freeing unitialized buffering in trace stack in eval.c

        - Thanks Myrddin

Crash with trace located as a 32 byte SBUF if compiled for that

        - Thanks Myrddin

idle_timeout included in the netrhost.conf by default as highly utilized

        - Thanks skew

all l*() math functions allowed empty args for backward compatibility

        - Thanks skew

Found bug in lattr() with command matching.

        - Thanks Damascus

Bug in final sorting for setunion/setdiff/setinter.

        - Thanks Aqua

Duplicate entries possible with help suggestions.

        - Thanks Alley

Global parents (ancestors) should inherit from its own parents.

        - Thanks Matrix

parsestr() was missing a prefix handler for the | option.

        - Thanks Aqua

conf files didn’t ignore spaces/blank lines

        - Thanks ELpH

Erraneous warning when vattr_cmds not defined

        - Thanks ELpH

Added ability to specify subdirectories in a controlled method via @admin for execscript()

        - Thanks Kumakun

Added optional target sender for mailsend()

        - Thanks Rockpath

Mysql would abort on sub-results if one of the results were NULL

        - Thanks Myrddin

libxcrypt broke SHA512 passwords. (Ubuntu 20+)

        - Thanks Darren

Typo in speech.c with a variable.

        - Thanks Oleo

SIDEFX permissions were borked for normal players.

        - Thanks jan6

#lambda wasn’t case insensitive

        - Thanks Alley


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 5,  Next: RhostMUSH 3 9 4,  Prev: RhostMUSH 4 0,  Up: Changelog

17.2 RhostMUSH 3.9.5
====================

Softcode overrides for connect files

        - Thanks Matrix

Bug in the milisecond timers with regards to dumps

        - Thanks Matrix

Ansi auto-recognized in connect.txt (optionally)

        - Thanks Rook

floating point can dynamically be increased for precision.

        - Thanks Stephen

Ansi compression and optimization encoding

        - Thanks Exaurdon

Fix for timers with milisecond and alarms

        - Thanks Ol’Sarge

Fix for Mysql.c issue in a sigfault

        - Thanks Ol’Sarge

@depower didn’t work right for inheritance on power_objects

        - Thanks Sunder

Buffer overrun in ansi_txtfile because of non-null termination.

        - Thanks Rook

mail/mark/save would not alert you if you hit MAX SAVED messages.

        - Thanks Mercutio

old_setq had an issue with ‘!’ parameter not reusing registers.

        - Thanks Ixokai

missing test case for scandir() function fixed.

        - Thanks Maighdlin

suggestion to make textfile() more useful in functions.

        - Thanks qa’toq

alteration of new Makefile build procedure rebuilt based on <Ternary@Dark> Metal’s suggestions.

        - Thanks Ternary/Ol’Sarge

fix to the src/Makefile to redefine default SHELL since latest Debian horked it with dash.

        - Thanks Mercutio

Make ‘.’ as first char allowable in attribute names.

        - Thanks Ixokai

@limit with unlimited values for @destroy and vlimit was broke.

        - Thanks Ixokai

@decompile didn’t show @toggles

        - Thanks Tesagk

xinc() and xdec() didn’t properly handle labels for registers.

        - Thanks UnRegistered Guest (Wanted to be Anonymous)

columns() bug with left justification if fed null for field.

        - Thanks Merit

@dynhelp/noindex to snuff the hilight index in @dynhelp.

        - Thanks Darren

ltoggles()/hastoggle() didn’t mirror lflags()/hasflag() for permissions.

        - Thanks Polk

dark permission makes on-connect screen command ignored to be overridden.

        - Thanks Ixokai

crashbug on random error messages if error.txt was empty

        - Thanks Darren

compile issue when you do not have sideeffects enabled at comiletime

        - Thanks benzaiten

Idea for /quiet for @pipe

        - Thanks Ixokai

Missing showing PARIS mode enabled in WHO/DOING for @list options

        - Thanks Myrddin

El Capitan 10.11.5 would not compile cleanly out of the box due to sudden header file location changes.

        - Thanks Darren

Main Makefile no longer worked on latest FreeBSD because of their change from gmake.

        - Thanks Oleo

Added RPAD and LPAD softcode wrappers

        - Thanks Darren

Dark exits were broken with sees()

        - Thanks Mercutio

objid’s were based on localtime and not gmtime

        - Thanks Fantom

Bug in safer_ufun with setting attributes on self and permissions with u().

        - Thanks Mike/Talvo

Improvement of help entries for @label and various documentation fixes.

        - Thanks Mike/Talvo

Added additional spacing to parenmatch() to help with pretty printing.

        - Suggestion from Thenomain (thanks!)

&pageformat and &outpageformat idea from PennMUSH

        - Thanks Mike and the PennMUSH folk :)

Added help entry for a suggestion on special characters.

        - Thanks Tesagk

Added ‘d’ and ‘D’ options for wildcarding on editansi.

        - Thanks Anixy

Removed attribute flags from @decompile/tf

        - Thanks Darren

Potential crash bug with flag-handling with NONAME in use.

        - Thanks Polk & Aqua

Missing free on an sbuf in sqlite.c

        - Thanks Darren

Added %_<-> to pop last label used.

        - Suggestion – Ixokai

Nested /notrace on @function/@lfunction was broke.

        - Thanks Ixokai

Idea and general code for NO_CONNECT message – Kage

        - Thanks Kage

Alternate date formats for convtime()

        - Thanks Ixokai

Typos in help.txt

        - Thanks Kilmoran

all localization didn’t save state for register names.

        - Thanks Myrddin

All locatization with CLEAR didn’t wipe and reset register names.

        - Thanks Myrddin

&SPEECH_PREFIX/&SPEECH_SUFFIX for say/pose pre and post processing.

        - Thanks MuSoapBox (Auspice, Sparks, Seamus, faraday, Thenomain,
          and others)

] for @hook/ignore and @hook/permit was broken.

        - Thanks Ixokai


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 4,  Next: RhostMUSH 3 9 3,  Prev: RhostMUSH 3 9 5,  Up: Changelog

17.3 RhostMUSH 3.9.4
====================

REALITY_LEVELS wouldn’t compile because of undeclared function.

        - Thanks Dahan

HELP spelling fixes

        - Thanks Sketch

compile time issue when enhanced ansi is deselected.

        - Thanks Wisdom

if you have an ssl library that conflicts with openssl dev libs, openssl support is confused

        - Thanks Wisdom

reality_compare – option to alter how descs are seen

        - Thanks Derek (from SVN site)

Crash bug in @blacklist/list fixed

        - Thanks Distraida

Bug in CPU alerting with new player creation on their first connect.

        - Thanks <Darren@Nightlife>

Bug with compiling without BANG support with undeclared variables.

        - Thanks <Darren@Nightlife>

You can now input extended ASCII right into the mush (and it converts to markup)

        - Thanks mindboosternoori

functions.c bombed with the clang compiler because of restrictive type-casting comparisons.

        - Thanks Fraibert

@include didn’t properly null out args if forcefully specified null.

        - Thanks Volund

@skip/@ifelse, @switch, and @sudo didn’t evaluate substitutions properly.

        - Thanks Volund

Compiletime bug in speech.c with REALITY_LEVELS not defined.

        - Thanks psc943


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 3,  Next: RhostMUSH 3 9 2,  Prev: RhostMUSH 3 9 4,  Up: Changelog

17.4 RhostMUSH 3.9.3
====================

@include – Idea Copied from Penn

        - Thanks Jules (and PennMUSH)

Fix for $Z in timefmt()

        - Thanks Chime/Loki (Haunted)


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 2,  Next: RhostMUSH 3 9 1,  Prev: RhostMUSH 3 9 3,  Up: Changelog

17.5 RhostMUSH 3.9.2
====================

@assert/@break didn’t handle {} correctly.

        - Thanks Wyrd

singletime() handles (w)eeks, (M)onths, and (y)ears like MUX.

        - Thanks Chime & MUX2

crash bug in command.c with regards to mail handler

        - Thanks Chime

aliased rjust to rj and ljust to lj and updated help files appropiately.

        - Thanks Montague

glibc for MAX_INT/MIN_INT had issues with math functions - wrapper fixes
this.

parser issue with regexp, parenthesis, and backslashes – Fixed

        - Thanks Chime

Idea for @titlecaption

        - Thanks <Zero@NewJediOrder>

IDLE had a missmatch on r and n parsing – Fixed

        - Thanks <Mike@M*U*S*H>

Discussion/Ideas for strdistance() function.

        - Thanks <Sketch@M*U*S*H>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 1,  Next: RhostMUSH 3 9 0 p00,  Prev: RhostMUSH 3 9 2,  Up: Changelog

17.6 RhostMUSH 3.9.1
====================

cluster_hasattr() bug for #-1 that should be 0 for non-existant attribs.

        - Thanks Ol’Sarge@Cajun <Ol'Sarge@Cajun>

cluster_flags()/cluster_hasflag() added for cluster support

        - Thanks Cody

Fix for log.c C99 compile issues on old compilers.

        - Thanks Sombranox

sees() handles optional third argument for exits

        - Thanks Sombranox

#lambda inherited from parent wrongly - Fixed

        - Thanks Xandar

writable() added for TM3 compatability.

        - Thanks Wyrd

@list user_attrib now does flag based matching

        - Thanks sombranox

cluster_set() didn’t evaluate attributes right

        - Thanks Cody

cluster_regrep*() didn’t select the right proper target object

        - Thanks Cody

flag setting/notifying identifies if target was set/unset before

        - Thanks PennMUSH (Kimiko)

elist() didn’t evaluate properly - Introduced 3.9.1p2

        - Thanks Cary

page alerts you if you’re cloaked from people you page.

        - Thanks Wyrd

Added flatfile stale attribute cleaner and penn 1.8 flatfile converter

        - Thanks Wyrd

Added switch_search @admin param for switching functionality.

        - Thanks Minion

Added @include to Rhost

        - Thanks PennMUSH (Javelin)

@trigger can handle $command/^listen attributes

        - Thanks TinyMUSH3/PennMUSH

error.txt files can evaluate arguments

        - Thanks Camber/Orion

mux_lcon_compat added to allow lcon() to return empty string.

        - Thanks Minion

cluster_wipe added for clusters

        - Thanks Cary

NO_CODE broke global_error_obj as it’s executed by enactor.

        - Thanks Matrix

Help file typos for various cluster commands.

        - Thanks <Mike@M*U*S*H>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 0 p00,  Next: RhostMUSH 3 2 4 p18,  Prev: RhostMUSH 3 9 1,  Up: Changelog

17.7 RhostMUSH 3.9.0 p00
========================

     Note: v3.9 is the development branch leading to RhostMUSH v4.0

* Menu:

* Changes::
* Additions::
* Admin Params::
* Bug Fixes::


File: rhostmushhandbook.info,  Node: Changes,  Next: Additions,  Up: RhostMUSH 3 9 0 p00

17.7.1 Changes
--------------

Fixed some mishandled signals which should not cause Rhost to panic
shutdown.

Added a Makefile define IGNORE_SIGNALS to turn off signal handling
entirely.

Changed Makefile to use RFC date (date -R) instead of local datestring.

Updated version() to allow showing build number by supplying an
argument.

Added signal handling of SIGUSR1, SIGTERM, SIGUSR2.

Added user configurable SIGUSR1 handling through signal_object.

Added zones_like_parents for zones to search like @parents.

        - this does require the ZONECMDCHK @toggle set on each
          item/player.

Modify snooplog to show site information.

Added %@ support to parser (caller)

        - Penn/MUX/TM3

Added %+ support to parser (args sent to functions)

        - Penn

Added %? support to parser (invocations)

        - Penn

Added NO_CODE flag for easier control of coding tool avaiability

Added full REGEXP support (based on Penn’s PCRE implementation)

Added some extra bounds checking to internal varabiables (non-issue)

[18-9] Added compatibility with @assert and @break for Penn Compat

        - PennMUSH

Added a QUIET switch to tel()

        - Leona @ Faetopia

[18-9] Modify snooplog to show site information.

[18-10] lattr() modification to handle lock() shows.

[18-11] lattr() modification to handle attribute flag checks.

[18-11] examine/parent now shows dbref#’s of the targetted items

[18-16] 7th argument to wrap() to allow last line to ‘left justify’

[18-18] Added %@ support (for Penn, TM3, and MUX compatibility)

        - Lots and Lots and Lots of people.

Merged all 3.2.4 code to 3.9.0

        - Ashen-Shugar

Added MUX, TM3, Penn, Rhost default options to asksource.sh

Modified valid ‘good characters’ for starting attribs for MUX compat.

Tprintf handler for buffering rewritten to be ‘safe’

        - Lensman

lnum/lnum2 added to allow ‘stepping’ argument.

Reality locktypes 2&3 could be too restrictive, so some lax was given.

Added reality locktypes 4 & 5 to duplicate 2 & 3 but with
‘lock-pass-nonexit’

@log allows writing to subdirectories.  5 depth maximum.

@edit has /check argument to run a ‘simulation’ of an @edit.

        - Penn

@search has a /nogarbage switch to check against GOING/RECOVER items.

moon() takes optional second argument (boolean) to show only percentage
of phase

@grep takes /regexp switch for regexp matching.

Added ] pre-parser command

Rewrite of permission handler to allow a second permission structure (32
more permissions)

@edit has /single argument to allow editing first match only.

edit() has 4th optional argument to specify an edit of single match
only.

Change in WANDERER and GUEST to check owner as well as target.

Added Good_chk() macro to include Good_obj() && !Going() && !Recover()

Added eval/no_eval @admin permissions for function
evaluation/non-evaluation.

list() given 4th argument to handle optional header.

Added /toreality switch to @pemit.  (works only with contents)

Vastly improved TinyMUSH3 converter.

@hook modified to show sub-overrides and sub-includes

Added the ability to pass delim and params to self-made %-subs.

Added a new @admin boolean parameter round_kludge.

        - Loki

Added support of labels for setq(), setr(), r().  (SVN 84, fix in SVN
87)

Added extra protection to garble() on exec() call for CPU (SVN 84)

Added templates (ala SETQ_TEMPLATE) for setq labels.  (SVN 89)

Enhancement to idle timeout to take into account lagging servers (SVN
93)

Center allows NON-ANSI multi-character filler [SVN 94]

Lexits() and Lcon() take optional output seperators [SVN 95->96]

Lexits and Lcon() take arguments to turn #dbrefs into names [SVN
101->102]

Added /notify switch to @switch [SVN 108]

Added additional arguments to dice() [SVN 110]

Made v() allow registers 11 through MAX-ARGS [SVN 111]

Made strfunc() aware of bypass() [SVN 112]

Mail now displays a ‘m’ by any message set for auto-deletion [SVN 117]

map() now allows ArgN arguments to be passed to it as %1-%??  [SVN 118]

Added time skew detection and protection to readjust mush time [SVN 123]

Added some addition protection for network flooding [SVN 123]

Added optional arguments to dig() and open() for location/returns [SVN
123]

Enhanced door code to be useable [SVN 125]

Modified asksource.sh script to handle all new options [SVN 125]

Added MUX2 password compatibility for reading converted databases [SVN
125]

Added beta option support for MySQL, Doors, and 64bit SBUF/attribs [SVN
125]

Added auto-detection of 64 bit platforms [SVN 125]

Added MAILFILTER attribute to change destination of incoming mail [SVN
127]

Fixed some uninitialized variables in view_atr [SVN 129]

        - Loki

Altered case() and caseall() to support #$ substitution like switch() [SVN 130]

        - Loki

Slight mistake in the case()/caseall() fix in 130. Fixed [SVN 136]

        - Loki

QDBM support added as an optional database layer [SVN 131-135]

        - Ambrosia

Error() accepts an optional player argument to base error messages on.

        - Thanks Ratio (and many others)

FIX_AIX obsoleted by a small mail.c/mailfix.c rewrute

        - Ashen [SVN 162]

modified sub_include so that the CHR_<str> value if fed an integer
specifies how many values to take.

Copy/paste error lead to @break behaving like @assert. [SVN 168]

        - Loki

Removed minimal_db from the distro. It can be found on the download site under Contrib. [SVN 171]

        - LOKI

timefmt(), convsecs(), convtime() and moon() now handle 64 bit time.
[SVN 172]

list() has an optional target player for output (must control target)
[SVN 177]

garble() has new optional type value to return character count instead
of string [SVN 177]

remit() has optional key value to specify if it’s a to-reality output or
normal remit() [SVN 177]

/DISPLAY switch for @function to display details on target function.
[SVN 177]

/LIST switch for @function allows wildcarding.  [SVN 177]

@list buffers no longer spams the living crap out of you.  [SVN 177]

Sideeffects: Tidied up the wizhelp entries and added example page Allowed for keyword negation (i.e. sideeffects = PENN !OPEN MOVE). [SVN 178-179]

        - Lensman

strip() takes optional 3rd argument to specify allowing only specified
characters [SVN 180]

accents are now allowed as a markup language via the %f substitution.
Requires ZENTY_ANSI [SVN 180]

printf() modified with ‘&’ identifier for carrage return alignment
processing [SVN 181]

filter() can now take multiple arguments.  [SVN 190]

/STOP and /CONT switches added to @halt.  [SVN 192]

@wait/pid modified to be much nicer on the queue [SVN 192]

chr() allows characters 160 to 255 to be done via markups (%<3digit>)

Cleaned up extension characters by integrating into the accent parser
[SVN 201]

On rooms @toggled LOGROOM, if there is a LOGNAME attribute on the room, it uses that instead [SVN 204]

        - Thanks Ixokai

     Note: Name must be alphanumeric and be under 70 characters in
     length.

%q<variable> added for TM3 compatability with named labels [SVN 205]

setq/setr family now allow !  to asign next available register or
re-assign existing register [SVN 208]

nameq optionally displays register asigned to label [SVN 208]

the PID of the running process now stored to netrhost.pid [SVN 208]

Signal handling improved for USR1 and USR2 [SVN 212]

/oneeval switch to @pemit for single evaluation of a @pemit/list [SVN
213]

lexits() allow page listings [SVN 233]

lrooms() - fix for specific room identification [SVN 233]

@function/display now shows flags of functions [SVN 233]

rework lattr() and lattrp() as well as cluster_lattr() to use
centralized core functionality [SVN 233]

rework of ueval() to handle cluster or non-cluster [SVN 233]

lock() allows optional third argument to set/clear attribute locks [SVN
233]

merging of all cluster_Defaults into single handler [SVN 233]

action lists attached to >, @cluster/set, and cluster_set() [SVN 233]

@wait with +/- values [SVN 233]

        - Thanks Raevnos

BOUNCEFORWARD attribute parser for BOUNCE flag [SVN 233]

VATTRCNT() has optional 2nd argument to reset the vlimit on the dbref#
[SVN 244]

pgrep()/cluster_grep() has additional arguments for outputting matches [SVN 244]

        - Thanks Cary

Updated help for printf() [SVN 253]

Fix for OSX 10.5.2 with regards to more restrictive header include files [SVN 254]

        - Thanks Lyoc

     Note: TO BE DONE: add python interpreter TO BE DONE: @plugin


File: rhostmushhandbook.info,  Node: Additions,  Next: Admin Params,  Prev: Changes,  Up: RhostMUSH 3 9 0 p00

17.7.2 Additions
----------------

* Menu:

* Functions: Functions<4>.
* Commands: Commands<2>.
* Flags: Flags<5>.
* Toggles: Toggles<4>.


File: rhostmushhandbook.info,  Node: Functions<4>,  Next: Commands<2>,  Up: Additions

17.7.2.1 Functions
..................

[18-13] Add isint() for MUX/Penn compatability [18-17] Added fmod() for
Penn compatability.  regmatch() - regexp (penn) regmatchi() - regexp
(penn) regedit() - regexp (penn) regediti() - regexp (penn) regeditall()
- regexp (penn) regeditalli() - regexp (penn) reswitch() - regexp (penn)
reswitchi() - regexp (penn) reswitchall() - regexp (penn) reswitchalli()
- regexp (penn) regrab() - regexp (penn) regrabi() - regexp (penn)
regraball() - regexp (penn) regraballi() - regexp (penn) regrep() -
regexp (penn) regrepi() - regexp (penn) bypass() - used in @functions to
bypass hardcoded limits logtofile() - Function equiv of @log - limit
1/command.  searchng() - Like search() but don’t return GOING/RECOVER.
keepflags() - keep data type based on flags remflags() - remove data
type based on flags foldercurrent) - list current folder or share folder
folderlist() - list all folders of target nameq() - name/rename labels
for setq registers (SVN 84) spellnum() - Penn compatable returns full
name [SVN 125] ibreak() - for iter() and list() [SVN 109] shift() - and
additional arguments to dice() [SVN 110] fbound() - like bound but for
floating point [SVN 137] fbetween() - like between but for floating
point [SVN 137] strdistance() - Levenshtein Distance between two strings
[SVN 146] tr() - Transform string based on find/replace [SVN 156]
digest() - SSL algorithm encryptions.  Yay is life.  [SVN 158] roman() -
Number to Roman Numeral converter [SVN 160] printf() - Printf() moved to
the mush!  Yay is life.  [SVN 177] accent() - Allow accent() markup
characters specified by string [SVN 180] stripaccents() - Strip the
accents on the target string [SVN 180] pid() - Show pid processes of
anything you control [SVN 192] pgrep() - grep for parents [SVN 233]
cluster_u() - cluster u() [SVN 233] cluster_u2() - cluster u2() [SVN
233] cluster_ulocal() - cluster ulocal() [SVN 233] cluster_u2local() -
cluster u2local() [SVN 233] cluster_uldefault() - cluster uldefault()
[SVN 233] cluster_u2ldefault() - cluster u2ldefault() [SVN 233]
cluster_udefault() - cluster udefault() [SVN 233] cluster_u2default() -
cluster u2default() [SVN 233] cluster_grep() - cluster grep() [SVN 233]
cluster_regrep() - cluster regrep() [SVN 233] cluster_regrepi() -
cluster regrepi() [SVN 233] cluster_hasattr() - cluster hasattr() [SVN
233] cluster_lattr() - cluster lattr() [SVN 233] cluster_attrcnt() -
cluster attrcnt() [SVN 233] cluster_vattrcnt() - cluster vattrcnt() [SVN
233] cluster_get() - cluster get() [SVN 233] cluster_xget() - cluster
xget() [SVN 233] cluster_set() - cluster set() [SVN 233] cluster_default
- cluster default() [SVN 233] cluster_edefault - cluster edefault() [SVN
233] cluster_stats() - specifies statistics on cluster [SVN 233]
cluster_get_eval() - cluster get_eval() [SVN 233] cluster_ueval() -
cluster ueval() [SVN 233]


File: rhostmushhandbook.info,  Node: Commands<2>,  Next: Flags<5>,  Prev: Functions<4>,  Up: Additions

17.7.2.2 Commands
.................

@assert - Works like @break but reverse logic [18-9] idle - a ‘nothing’
command that won’t effect idle time.  Wizzes can optionally add command.
> for cluster sets (instead of &) [SVN 233] @cluster/new <dbref> – won’t
work on cluster object [SVN 233] @cluster/add <dbref>=<dbref> – won’t
add a pre-existing cluster object [SVN 233] @cluster/del <dbref> – won’t
delete a non-existing cluster object [SVN 233] @cluster/clear <dbref> –
purges the cluster list [SVN 233] @cluster/list <dbref> – lists objects
in cluster, total attributes, threshold, and action list [SVN 233]
@cluster/threshhold <dbref>=<number> – sets a threshold on the cluster
[SVN 233] @cluster/action <dbref>=<string> – sets action when treshhold
is met [SVN 233] @cluster/edit <dbref>=<string>,<string> – edits the
attribute(s) in a cluster [SVN 233] @cluster/set – @set for clusters
[SVN 233] @cluster/repair – repairs a damaged cluster (or tries to) [SVN
233] @cluster/grep – grep for a string in a cluster [SVN 233]
@cluster/reaction – edit for actions [SVN 233] @cluster/cut – physically
cuts the item from a cluster - only use as last resort [SVN 233]
@cluster/trigger – trigger action on cluster [SVN 233]


File: rhostmushhandbook.info,  Node: Flags<5>,  Next: Toggles<4>,  Prev: Commands<2>,  Up: Additions

17.7.2.3 Flags
..............

NO_CODE - Controls usage of code-commandss/functions.  Uses new second
permission table.


File: rhostmushhandbook.info,  Node: Toggles<4>,  Prev: Flags<5>,  Up: Additions

17.7.2.4 Toggles
................

HIDEIDLE - Stops the ‘idle’ from being updated as well as command count.
Wiz+ only.  MORTALREALITY - disables the inherit ability of wizards for
wiz_always_real [SVN 126]

MAILVALIDATE - validate the user list and abort mail without sending to anyone if invalid.

        - Thanks <Charlotte@Cajun>

CLUSTER - (internal toggle to handle cluster objects)


File: rhostmushhandbook.info,  Node: Admin Params,  Next: Bug Fixes,  Prev: Additions,  Up: RhostMUSH 3 9 0 p00

17.7.3 Admin Params
-------------------

[18-9] Added zones_like_parents for zones to search like @parents.  -
this does require the ZONECMDCHK @toggle set on each item/player.
log_maximum - specify the number of logtofile() calls allowed per
command.  power_objects - enable @power/@depower checks on non-players
rooms_can_open - allow rooms to be able to @open exits inside itself
sub_override - specify what %-subs can be overridden

sub_include - specify what %-subs you want added

        - Ambrosia

signal_object - Object containing signal handling attribute for SIGUSR1.

        - Odin

break_compatibility - @break/@assert allowed/disallowed
double-evaluation (disabled by default) signal_object_type - Type of
execution to do.  Default is ‘0’ (function only)’.  1 is a @trigger
effect.  [SVN 212] log_network_errors - enables (or disables) logging of
network errors on sockets


File: rhostmushhandbook.info,  Node: Bug Fixes,  Prev: Admin Params,  Up: RhostMUSH 3 9 0 p00

17.7.4 Bug Fixes
----------------

SORTBY was mangling the enactor.

        - Melpomine @ Vieux Carre

[18-7] THIS IS AN UNOFFICIAL PATCH. This fixes a Reality Level Lock issue.

        - Thanks Ixokai

[18-8] Fixes a vprintf allocation issue.

[18-9] Fixed a logical error with unfindable and the connect flag.

        - Thanks Xandar

[18-12] Fix double eval to @break/@assert to mimic Penn [18-13] Fixed
the convert scripts to handle irrigular behavior in TM3 flatfile [18-14]
Fix for LBUF free in elist() [18-15] Fix for permission issue with
regards to no_examine and attrib fetches [18-15] Fix for possible array
out-of-bounds with regards to backstage [18-16] Fix in wrap() for
wrap_out code with possible overrun (non-crash)

     Note: this effected both wrap() and wrapcolumns()

[18-17] Fix for moon() on displaying waxing/waning exact matches.

        - Thanks Jeff

[18-17] asksource.sh (make config/make confsource) fixed with (l)oad
issue.

[18-17] Fix for news/verbose switch that broke previous workings - Fixed

        - Thanks Ambrosia

[18-18] Fix for soundex() with a buffering issue (non-crashing) - Fixed

        - Thanks Jeff

Bug in (d)elete option in asksource script - Fixed

Bug in ‘home’ with reality level following - Fixed

        - Thanks Ol’Sarge @ Cajun

Bug in ‘@idesc <'@idesc>’ with reality level if ‘Real’ level not using ‘@desc <'@desc>’ - Fixed

        - Thanks Toby @ Cajun

Bug in ‘@rsrvdesc2 <'@rsrvdesc2>’ if target desc is ‘@idesc <'@idesc>’. - Fixed

        - Thanks Toby @ Cajun

Bug in double-free if default globals enabled - Fixed

        - Thanks Ixokai

Make config/confsource for option 15 and option 9 didn’t escape the ‘$’. - Fixed

        - Thanks Odin

Small issue in mail code where if max-index is reached mail won’t send -
Fixed

Bug in do_dbck with db loading/startup/reboot - small chance of crash. -Fixed

        - Thanks Odin

Feature bug in read_remote_name. Didn’t check examinable - Fixed

        - Ambrosia

Hook ‘fail’ didn’t work in hook_cmd. - Fixed

        - Rook

Bug in mail.c where it could effect @nuking players - fixed

        - Odin

Bug in news.c where it could effect @nuking players - fixed

        - Odin

Bug in @quota where buffer was mistakenly freed prior to display - Fixed

        - Ambrosia/Ashen

Issue with page/port and the MUXPAGE toggle. Resolved, page/port now cannot be used in combination with MUXPAGE

        - Lensman

Several missing helpfile entries added: isupper/islower, brace_compatibility, format_compatibility

     -Ambrosia

Bug in speech.c when compiling on some flavors of BSD fixed. Also cleaned some warnings.

        - Odin

Fixed a bug in cque.c relating to queue accounting on exceeding player_queue_max.

        - Odin, fixed and found by Brazil.

Fixed an issue with certain locks with displaying attribute names in examine. NON-CRITICAL-ISSUE

        - Ixokai

Fixed a strip issue of {}’s with regards to ‘]’. The ] command shouldn’t strip anything.

        - Odin & Ambrosia

Fixed a problem with 8-bit dates being passed to the compiler as build
time.  We now use date -R for RFC time.  Fixed a problem with examine on
targets you didn’t control.  Fixed problem with @kick and the queue.
Fixed buffer clobber issue in lloc() (introduce 3.9) Fixed logic error
of command pathing with ignore on ‘goto’ command.  Fixed ‘N’ command
from showing up.  (for ] alias) Fixed display for percent subs with
regards to @hook.

Fixed wrapcolumns() where it could crash on unique strings.

        - Thanks melkir

Fixed a bug with flag_name and possible duplicated entries Fixed chomp()
to handle %r conditions cleaner.

sub_include had a possible unitialized condition for %0-%9 on rare occurances. (SVN-87)

        - Thanks Loki

crash bug in lcon/lexit additions - fixed (SVN-105) Finally believe the
output snuffing issue is fixed (SVN-105) SIGSYS and some other signals
were mistakenly handled as panic shutdown.

setq()/setr() didn’t evaluate first argument. Introduced SVN 87 [SVN 113]

        - Thanks Melkir

Somehow @list options values got broken by a typo.  Weird.  Fixed.  [SVN
114] Tprintf off by one issue fixed for buffer allocation [SVN 115 - SVN
116] Off by one bug in map() from SVN 118.  Non crash, just argument
list off [SVN 119] Crash bug in ATRLOCK if attribute did not previously
exist in hash lookup [SVN 120] Realities had a logical bug.  Now
previous (broke) behavior available as option [SVN 122-124] Fixed a bug
in Reality level handling and CHKREALITY Toggle [SVN 125] Fixed
uninitalized variable with regards to dig()/@dig.  Introduced SVN 123
[SVN 128] Fix for QDBM compiles on aborting on the ‘rm’ section.
Introduced SVN 136 [SVN 137-138] Critical fix for time skew on AMD’s.
Infinite loop.  Introduced SVN 123 [SVN 139] Fix for sha1.c and
mushcrypt.c for compiling issues.  MUX2 provided code.  [SVN 140] Forgot
to update this bloody file [SVN 141] Fix for null entries deidling a
player.  It was intended behavior, but this could be confusing so was
fixed.  It still will de-cloak an idle-cloaked wiz.  [SVN 142] Fix for
timeskew affecting internal timers, such as database dumping.  [SVN 143]
Fixed a bad define for 64-bit autodetection.  [SVN 143]

Fix for timeskew affecting global timers. Introduced SVN 140. [SVN 144] (Rehash: SVN 151)

        - Thanks Ratio

Clean up code a bit with implicit declarations [SVN 145]

Bug in signal handling. If during a dump, it happened during an alarm() state, alarms would be ignored and as such the timer would be broke from that point on. Fix causes signal restore to re-set the alarm state.

        - Thanks Ratio

spellnum() had a comparision bug with ‘tens’ digit. [SVN 152]

        - Thanks Ratio

signal handling interferred with @reboots randomly (Introduced 3.9 SVN 100) [SVN 153]

        - Thanks Ratio

Crashbug in RANDMATCH() (Introduced 3.9) [SVN 157] Missing free_lbuf()
in caseall() (Introduced SVN 136) [SVN 157] Fix for QDBM and mail if the
mail db can’t load correctly.  [SVN 161]

Fix for @break/@assert to stop double-eval of first argument [SVN 164]

        - Thanks Brazil

Fix for all of the *default() functions evaluating default behavior all the time. It really probably shouldn’t have done that. [SVN 166]

        - Thanks Orion

Wouldn’t you know it, the *default() fix broke some backward
compatability (introduced SVN 166).  Fixed [SVN 167] Yet another fix but
this time to evaluate arguments to all the *u*default() functions (intro
SVN 166) Fixed [SVN 168] Fix for ptimefmt as the structure declaration
was missing an argument.  Bad mojo.  - Fixed [SVN 174] Rhost’s hardcoded
news system failed to free an lbuf on subscribe checks - Fixed [SVN 177]
creplace didn’t evaluate its second arguments and some syntax issues.  -
Fixed [SVN 183] Tweeking of unsafe_tprintf to safe_printf in some
locations where heavy usage is seen [SVN 190] mail/reply with the the
all option wouldn’t work if targets had spaces in names.  [SVN 194]
vsprintf didn’t like the double %% for statically stating % in certain
libraries [SVN 195] translate() didn’t take %0-%9 arguments [SVN 196]
citer() had a double lbuf free on replace_tokens [SVN 198]

@whereis/@whereall didn’t hide the location if user was hidden/dark correctly [SVN 202]

        - thanks Planet X

@mvattr/@cpattr should handle SBUF sized attribute names cleaner.  -
Fixed [SVN 207]

Help topic for @assert reversered - Fixed [SVN 209]

        - Bug ID 0000004 (BlackRook)

%q<label> broke with trace conditions. Introduced SVN 108 - Fixed [SVN 209]

        - Thanks Melpomine

bang support didn’t work for overloaded functions. Fixed [SVN 210]

        - Thanks Melpomine

SIGUSR1 would ignore the signal after use at times.  Fixed [SVN 212]
Possible SIGSEGV with argument preprocessing on certain commands.  Fixed
[SVN 213]

Fix for SIGALRM being ignored when IGNORE_SIGNALS compile time option enabled. fixed [SVN 225]

        - Thanks grump

Fix for map()/filter() for argument list passed. Fixed [SVN 227]

        - Thanks Ratio

Help not documented for fill character in ljc()/rjc() - Fixed [SVN 228]

        - Thanks Cary

OUTPUTPREFIX/OUTPUTSUFFIX stored through reboots - Fixed [SVN 233]

        - Thanks Adrick

Added missing topics for clustering - Fixed [SVN 244]

        - Thanks Cary

Logging network errors could cause heavy logging on really bad networks
- Fixed [SVN 245]

Connect honors @hide/unfindable/dark [SVN 320]

        - Thanks Planet X


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p18,  Next: RhostMUSH 3 2 4 p17,  Prev: RhostMUSH 3 9 0 p00,  Up: Changelog

17.8 RhostMUSH 3.2.4 p18
========================

[06/28/2004]

* Menu:

* Changes: Changes<2>.
* Bug Fixes: Bug Fixes<2>.


File: rhostmushhandbook.info,  Node: Changes<2>,  Next: Bug Fixes<2>,  Up: RhostMUSH 3 2 4 p18

17.8.1 Changes
--------------

@aflags takes /full switch to give count on how many objects have the
attribute.  useful incase you have concerns of attributes dissapearing.

Added queue_compatible config option to allow negative decremental of the semaphore attribute for elsemush compatibility

        - Lyle, Saffron, Dragon @ Paris

Added -DPARIS compile time option for older Penn/MUSH format compatibility

        - Dragon @ Paris

Added -OLD_SETQ compile time option to switch setq/setq_old compatibility

        - Thanks Lyle, Saffron, Dragon @ Paris

In all source, header, help, and readme files, ‘compatable’ renamed to ‘compatible’

        - Ambrosia

Enhanced mail/recall to show more stats (lots of people wanted them)

        - Lots of people

Added percent substitution ceiling for uniquely created DoS attacks.
Heh.  FUBAR flag no longer allows you to execute any functions.

Added config param ‘lcon_checks_dark’ that will enforce dark/unfindable.

        - Thanks Xandar

Beefed up on-line help for reality levels.  Hopefully they make sense
now :) Mail/read recognizes ‘both’ to handle first new/unread message
combination.  mail/anon optionally hides sender KEEPALIVE @toggle added.
- (AuroraMUX/Soruk) chkreality() function to check if victom sees
target’s reality.  CHKREALITY toggle that allows @Lock/user to become a
reality lock

@admin param ‘reality_locks’ to globally enable reality level lock checks.

        - Thanks lots of people.

Added /fail switch to @Hook.

        - Originally Amborsia, modified.  (MUX2 compat)

Added @admin param reality_locktype that optionally chooses how reality
locks are issued.  This should allow much more flexability.

Sideeffects could double eval. This was intended for some backward compatability with muse, but does allow a security risk. Now have an optional compile time option of SECURE_SIDEEFFECT that disables this.

        - Ambrosia

Added LOGGED attribute flag that will log anytime that attribute is
changed, modified, set, or cleared.

NOISY toggle to allow consistant noisy sets

        - Thanks Tam

backup_flat.sh now accept a ‘-s’ option for single-mode for cron entry.


File: rhostmushhandbook.info,  Node: Bug Fixes<2>,  Prev: Changes<2>,  Up: RhostMUSH 3 2 4 p18

17.8.2 Bug Fixes
----------------

WHO/DOING on the connect screen had a broken conditional where if you were NOT unfindable you still wouldn’t show up on WHO/DOING on the connect screen. - Fixed

        - Ambrosia & <Tam@Stargate>: Alpha Site

help files wouldn’t process escape characters right with ZENTY_ANSI - Fixed

        - Thanks Zivilyn/Xandar

mail/recall couldn’t do lookups based by-player on multi-sent messages -
Fixed Wizard objects not inherit hit attr @limits - Fixed

Possible crash bug with mail dynamic aliases via ‘$’. - Fixed

        - Thanks Xandar

@dynhelp/parse wouldn’t display ansi correctly (from previous fix) -
Fixed

CPU Protection not as robust on certain cases - Fixed

Month was off by one in mail/recall (introduced p18)

        - Thanks Mortalis @ Cajun

mail/recall had off-by-one for month (introduced p18)

logf() conflicted with built-in function in newest gcc compilers - Fixed

type cast warning in random function - Fixed

Unused variable cleanup in code.  - Fixed

format_name undocumented - Fixed

IGSWITCH @hook didn’t work with new format of commands in some instances
- Fixed

Trace output issues with CPU protection - Fixed

LBUF failed to be free on examining in rare cases.  (introduced p18) -
Fixed

Cleanup of some initialization variables.  Not a problem.  Just a
cleanup.

asksource broke on solaris systems.  - Fixed

Lots of cleanup for Solaris 2.8/2.9 builds.  Solaris didn’t declare
right.  - Fixed

Security issue with descs clobbering setq regs - Fixed (optional @admin
param)

new backup_flat.sh script broke for remote archives - Fixed

player cache had possible dereferenced pointer call - Fixed

autoreg_include.txt didn’t check txt subdirectory.  - Fixed

reality locks overwrote match state data (introduced p18) - Fixed

[18-1] Fix for IGSWITCH @hook and multiple switches - Fixed

[18-2] Fix for unfindable and loc() and other functions - Fixed

        - Thanks Spatterlight

[18-3] Fix for %l in trace output (same issue as loc() had) - Fixed

        - Thanks Spatterlight

[18-4] Fix for global attribute formatting where ‘what’ should have been
‘owhat’

[18-4] Modification to allow localized formatting with &format<attr>

        - Thanks Kevin

[18-5] Added content searches for all forms of help.

[18-6] Fix LBUF free issue (introduced 18-4)

Fix mail issue with marking and folders

        - Thanks Kevin

Enhanced @break to accept optional argument to ‘branch’


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p17,  Next: RhostMUSH 3 2 4 p16,  Prev: RhostMUSH 3 2 4 p18,  Up: Changelog

17.9 RhostMUSH 3.2.4 p17
========================

[ 06/04/2004]

* Menu:

* Changes: Changes<3>.
* Bug Fixes: Bug Fixes<3>.


File: rhostmushhandbook.info,  Node: Changes<3>,  Next: Bug Fixes<3>,  Up: RhostMUSH 3 2 4 p17

17.9.1 Changes
--------------

Rhost 3.2.4 is a locked version.  only bug fixes from this point on.
The next release will be 3.9 which will be alpha/beta leading to the 4.0
release.  Added sub-patchlevel versioning for pre-release patchlevel
testing.

Sanitizing of help files to correct missing/misdefined config parameters.

        - Ambrosia

An optional .conf file now has all available options to choose from.

        - Ambrosia

LOGROOM toggle now logs to subdirectory ‘roomlogs’.

        - Thanks Xandar

new admin param ‘roomlog_path’ specifies path of above LOGROOM path.
attrcnt() modified to help rebuild wonked attribute tables @aflags
modified to help list attribute information


File: rhostmushhandbook.info,  Node: Bug Fixes<3>,  Prev: Changes<3>,  Up: RhostMUSH 3 2 4 p17

17.9.2 Bug Fixes
----------------

malloc.h wasn’t properly identified in the configure tool - Fixed
ZENTY_ANSI didn’t handle ansi correctly if TINY_SUB was also defined -
Fixed

@admin param garbage_chunk wasn’t used - Removed

        - Ambrosia

@admin param precmd_obj wasn’t used - Removed

        - Ambrosia

sortby() imported for backward compatibility.

updated Rhost minimal_db to handle new conf file parameters.

        - Thanks Cloud

You could alias over hardcoded functionality - Fixed Improved attribute
handling for corrupting attributes.  @attribute/delete now does sanity
checking for attribute existing first @aflag shows the numerical unique
identifer of the attribute

@pcreate/reg would crash if issued by a non-player - fixed

        - Thanks Xandar


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p16,  Next: RhostMUSH 3 2 4 p15,  Prev: RhostMUSH 3 2 4 p17,  Up: Changelog

17.10 RhostMUSH 3.2.4 p16
=========================

[02/24/2004]

* Menu:

* Changes: Changes<4>.
* Additions: Additions<2>.
* Admin Params: Admin Params<2>.
* Bug Fixes: Bug Fixes<4>.


File: rhostmushhandbook.info,  Node: Changes<4>,  Next: Additions<2>,  Up: RhostMUSH 3 2 4 p16

17.10.1 Changes
---------------

+proof in mail now displays text for forwarding/replied messages.

        - Many Many People

@cpattr, @mvattr, and @edit now take attribute content locking into
effect.  inc() and dec() now take strings as ‘0’ values.  @door rewrite
to handle mangled port openings/closings.

@decompile now has /attribs, /flags, and /all switches

        - Thanks <Tam@Stargate>: Alpha Site

@set with the /noisy switch notifies if attributes (cleared)

        - Thanks <Tam@Stargate>: Alpha Site

@dynhelp (dynhelp()/textfile()) now does partial-matching.

- for mail writing will now allow you to insert ‘=’ without escaping.

        - Thanks <Alibi@Cajun>

New bugreport script to handle bug report mailing.

        - Lensman & Ashen-Shugar

New auto configurator scripts for make options.  ZoneWizLock now allows
you to examine any area in the zone as well as modify it.  Royalty and
higher ownership overrides this lock.  Help and Wizhelp have improved
topics.  Third party work on PHP and SQL support - Still in pre-beta,
not included.  contact <lensman@rhostmush.org> for SQL @hook for
security related commands shored up.  Modified credits for MUXPAGE
toggle.  Penn had the feature first :) Wizards now optionally checked
for @limits The non-command alias functionalty has been given a
well-needed overhall Better error handling was added to the functions in
htab.c Unified some of the Makefile defines for OsX, Cygwin, BSD. Added
funceval to @list

@doing and @doing/header expanded in length to full-use.

        - Thanksla Falor

switch(), switchall(), and @switch now optionally take #$ substitutions.
GREATLY updated auto-makefile configurator to handle most common library
checks.

lattr() takes multiple page values

        - Thanks <Sirona@Cajun>


File: rhostmushhandbook.info,  Node: Additions<2>,  Next: Admin Params<2>,  Prev: Changes<4>,  Up: RhostMUSH 3 2 4 p16

17.10.2 Additions
-----------------

* Menu:

* Functions: Functions<5>.


File: rhostmushhandbook.info,  Node: Functions<5>,  Up: Additions<2>

17.10.2.1 Functions
...................

aiindex() - works like iindex() except will append to a null list.
sortby() - Added for MUX2 compatibility


File: rhostmushhandbook.info,  Node: Admin Params<2>,  Next: Bug Fixes<4>,  Prev: Additions<2>,  Up: RhostMUSH 3 2 4 p16

17.10.3 Admin Params
--------------------

wizmax_vattr_limit - Attribute limiter for wizards wizmax_dest_limit -
Destroy limiter for wizards vattr_limit_checkwiz - Enable/Disable wiz
limiters

guild_attrname - Make the GUILD column in WHO read a different attribute. (new players also have this attr set with the default value)

        - Suggested by <Leona@Faetopia>

exits_connect_rooms - This parameter defines if rooms with exits will
never be floating.  This parameter will disregard the need for exits to
always be indirectly linked to the starting room.  switch_substitutions
- If enabled, allows #$ substitutions in switches.  examine_restrictive
- Settable 1-5 (0 disables) to restrict examine based on ‘level’


File: rhostmushhandbook.info,  Node: Bug Fixes<4>,  Prev: Admin Params<2>,  Up: RhostMUSH 3 2 4 p16

17.10.4 Bug Fixes
-----------------

Double free issue with caseall() - Fixed Possible SIGSEGV condition with
nobroadcast_host (introduced p15) - Fixed If memory/system corrupted,
could corrupt room check in command.c - Fixed Possible SIGSEGV with
+proofing mail (introduced p15) - Fixed

Exit movement backward compatibility broke with unlinked exits (introduced p15) - Fixed

        - Thanks Ol’Sarge@Cajun <Ol'Sarge@Cajun>

Possible SIGSEGV legacy bug with flag handling - Fixed

        - Thanks <Tethys@Cajun>

strmath() didn’t work like expected with ‘amt’ argument - Fixed BOUNCE
flag was not cleared on recoverable objects - Fixed

        - Thanks Iuz

debugstack extra free in alias table (introduced p15) - fixed

        - Thanks <Jamie@M*U*S*H>

NDBM in make confsource assumed ndbm.h on server sane.  It’s usually
not.  - Fixed Wizard limits wern’t verified on ownership if not set
INHERIT - Fixed

help/wizhelp didn’t show that you could do topic wildcard searches - Fixed

        - Thanks Falor

help syntax error with regards to null() and @@() - Fixed

        - Thanks Falor

Passing only one attr to @admin logout_cmd_alias caused a crash - Fixed

        - Thanks Ambrosia

BLIND wasn’t consistant for all commands - Fixed

        - Thanks Xandar

The hash tables could appear to loose information where aliases were
used.  (introduced p15) - Fixed The Hash tables are sized too small and
don’t reflect ‘todays Rhost’.  - Fixed @flag/remove wouldn’t return an
error message if no alias existed - Fixed hash with an off-by-one count.
(Introduced p16 beta) - Fixed

Typo with help.txt with regards to terse flag - Fixed

        - Thanks Sasaki <Chie@Fantasy> Moon


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p15,  Next: RhostMUSH 3 2 4 p14,  Prev: RhostMUSH 3 2 4 p16,  Up: Changelog

17.11 RhostMUSH 3.2.4 p15
=========================

[09/09/2003]

* Menu:

* Changes: Changes<5>.
* Additions: Additions<3>.
* Admin Params: Admin Params<3>.
* Bug Fixes: Bug Fixes<5>.


File: rhostmushhandbook.info,  Node: Changes<5>,  Next: Additions<3>,  Up: RhostMUSH 3 2 4 p15

17.11.1 Changes
---------------

MASSIVE internal rewrite of internal flag/command/function structure to prepare for loadable/unloadable module support.

        - Lensman

New Directory Structure for data, txt, src, hdrs.

        - Lensman

Script Rewrites for better resilliancy

        - Lensman, Ambrosia, Ashen-Shugar

local.c plugin support

        - Lensman

Alias system overhauled and rewritten to be more robust

        - Lensman

! and !! patch

        - Written and provided by Jeff

We now run on gdbm 1.8.3

        - Thanks Lensman

wildmatch fix

        - Lensman & Ash

minimal database provided that includes SGP, myrddin bbs, global code
Add method for global (master room) exits to be shown with ‘look’

     Note: PRIVATE and/or FLOATING flags remove this if set on exit.

Add anonymous mail via the /anon switch

        - Thanks Saffron & Lyle @ Paris

mail/recall cleaned up for better display/information.

        - Thanks <Ivory@Mednights>

Timestamps added for original message in forward/reply

        - Thanks <Ivory@Mednights>

lit() can accept commas as part of it’s input string

+bcc in mail/write now gives mail BLINDLY to get target. They won’t see the To: list(s).

        - Thanks Saffron & Lyle @ Paris

modified hastype() to have same permissions as type()

        - Thanks Rynos

fixed mail issue with dynamic mail aliases and permissions.

        - Thanks Erik

Add way for @emit to parse ‘##’ for target it receives. /sub switch.

        - Thanks Jared Leisner @ Ennerseas

Add method to see ‘mail/status’ with mailstatus() function.

        - Thanks Rosalind @ Nevermore

config(sideeffects_txt) return the string of sideeffects enabled.

        - Lensman

Penn conversion script included in distribution.

        - Thanks Mac

/preserve switch to @chown and @chownall. Will keep all flags constant.

        - Lensman

@list stack now shows filenames instead of file pointers.

/pid added to @notify to handle PID processes

        - Thanks Storm

/recpid added to @wait to record PID process to setq-registers specified.

        - Thanks Storm

@function takes /d[elete] switch to delete user-defined functions.
lzones() now take optional arguments for large zone lists.  Improved CPU
protection (yes, even more).  @doors are no longer preserved between
reboots.

13th argument to columns() to allow padding of short columns

        - Thanks Patrick Bogen

inc()/dec() (the hardcoded xinc/xdec) now, like other servers, handle non-numericals for arguments.

        - Thanks Xandar

@pcreate now allows you the /register switch so wizards can email the pwds.

        - Thanks Xandar

@pemit (and all switches) now handle REALITY LEVELS with /reality switch.

        - Thanks <Dervish@Cajun>

@admin alias allows re-aliasing existing aliases or deleting aliases.

        - Lensman


File: rhostmushhandbook.info,  Node: Additions<3>,  Next: Admin Params<3>,  Prev: Changes<5>,  Up: RhostMUSH 3 2 4 p15

17.11.2 Additions
-----------------

* Menu:

* Functions: Functions<6>.
* Flags: Flags<6>.
* Toggles: Toggles<5>.


File: rhostmushhandbook.info,  Node: Functions<6>,  Next: Flags<6>,  Up: Additions<3>

17.11.2.1 Functions
...................

elementsmux() - for MUX elements() compatibility.

        - Thanks <Rook@EnnerSeas>

parsestr() - helps with speech formatting.

chomp() - used to strip returns before, after, or both sides of string.

        - Thanks Storm

escapex() - just like escape() but you can choose what chars to _not_
escape

securex() - just like escapex() but for secure()’s counterpart


File: rhostmushhandbook.info,  Node: Flags<6>,  Next: Toggles<5>,  Prev: Functions<6>,  Up: Additions<3>

17.11.2.2 Flags
...............

BLIND - flag for exits and rooms to make target arrival/leaving ‘snuffed’.

        - Idea from many people (and TM3)

DEFAULT - Attribute flag for handling default global attrib (TM3)
SINGLETHREAD - Attribute flag to handle single-threading $commands
ATRLOCK - Attribute flag to handle global attribute locking


File: rhostmushhandbook.info,  Node: Toggles<5>,  Prev: Flags<6>,  Up: Additions<3>

17.11.2.3 Toggles
.................

MUXPAGE - Toggle to allow mux-like paging for Penn/MUX/TM3 compatibility.

        - Thanks PennMUSH

NOGLOBPARENT - Toggle to disable inheritance of global inheret parents.
NODEFAULT - Toggle to disable global default handling (TM3)


File: rhostmushhandbook.info,  Node: Admin Params<3>,  Next: Bug Fixes<5>,  Prev: Additions<3>,  Up: RhostMUSH 3 2 4 p15

17.11.3 Admin Params
--------------------

mail_verbosity - Add Subj: to sent mail as well as to disconnected players.

        - Thanks Saffron & Lyle @ Paris

mail_anonymous - Default name for anonymous mail (Default: `Anonymous')
sidefx_maxcalls - (1000 default) for max sideffects allowed/command.
oattr_enable_altname - to enable/disable alt name usage in
odrop/ofail/osucc.

oattr_uses_altname - for alt names sent to odrop/ofail/osucc.

        - Thanks Rook @ Ennerseas (default _NPC)

empower_fulltel - Offer two methods for FULLTEL (‘self’ & anything not cloaked)

        - Thanks <Punk@FantasyMoon>

spam_msg - Message sent to spammers

        - Ambrosia

spam_objmsg - Message sent to spammers of objects

        - Ambrosia

room_aconnect - Aconnects on individual rooms work (cloak/dark checked)

        - Lensman

room_adisconnect - Adisconnects on individual rooms work (cloak/dark checked)

        - Lensman

player_attr_default - Sets default @<attrib> handler for did_it()
attribs (TM3) thing_attr_default - Sets default @<attrib> handler for
did_it() attribs (TM3) exit_attr_default - Sets default @<attrib>
handler for did_it() attribs (TM3) room_attr_default - Sets default
@<attrib> handler for did_it() attribs (TM3) global_clone_obj - Sets
default dbref# for cloning attributes global_clone_player - Sets default
debref# for cloning attributes (TM3) global_clone_thing - Sets default
debref# for cloning attributes (TM3) global_clone_room - Sets default
debref# for cloning attributes (TM3) global_clone_exit - Sets default
debref# for cloning attributes (TM3) global_attrdefault - Sets global
locker for attribute sets/clears nobroadcast_host - Define what sites
will be ‘snuffed’ from MONITOR


File: rhostmushhandbook.info,  Node: Bug Fixes<5>,  Prev: Admin Params<3>,  Up: RhostMUSH 3 2 4 p15

17.11.4 Bug Fixes
-----------------

Bug in wizhelp with ‘mail_lockdown’ toggle. - Fixed

        - Thanks Dervish

Multiple help/wizhelp fixes. - Fixed

        - Thanks Dervish

Bug with @mvattr and QUIET flag - Fixed

        - Thanks Xandar

Objects could use the brandy toggle to send mail.  - Fixed Security
issue with autoregistration - Fixed goto didn’t have hooks before/after
right - Fixed

SIGSEGV on autozone add if player didn’t belong to zone - Fixed

        - Thanks Rook & Sylph @ Ennerseas

Bug with teleporting and permissions - Fixed

        - Thanks Mach <Speed@FantasyMoon>

NASTY bug that could corrupt registries with @freeze/@thaw/@wait (RARE) - Fixed

        - Thanks Rook @ Ennerseas

Fix help entry with @convert/@quota cross-matching. - Fixed

        - Thanks Dervish

Fix alloc corruption with ‘page’ from liberal nulls. (p15 introduced) - Fixed

        - Thanks Xandar

Fix issue where if in @program string sent to global_error_obj incorrect - Fixed

        - Thanks Zivilyn

Fix for orflags()/andflags() being broke with flag rewrite. - Fixed

        - Thinks Rosalind & Vulcan @ Nevermore

Fix for @hooks to now successfully work on goto - Fixed Fix for @uptime
to show time up longer than a year - Fixed

Fix for @hook on goto. Did not handle /permit or /ignore right - Fixed

        - Thanks Rook

Fix for legacy bug in @list functions for blowing a buffer if too many user defined functions have been defined. Wow, talk about old.

        - Thanks <Aalita@Ennersea>

Fix for ZENTY_ANSI compiletime with a possible buffer overrun.  - Fixed
Fix for ZENTY_ANSI with handling safebuff() - Fixed.  Fix for two rhosts
running same debugmon debug_id - Fixed.  Fix for mis-matched
DPUSH/RETURN for DPOP in door.c - Fixed

Fix for pemit()/npemit() with argument evaluation - Fixed

        - Thanks <Matthew@Draconis>

Fix for legacy bug with vattr initialization - Fixed

        - Thanks <Matthew@Draconis>

Fix for library overflow issues regarding system call on ptimefmt() - Fixed

        - Thanks Shari

Fix for default() and edefault() returning improperly for invalid dbref# - Fixed

        - Thanks Matthew

lock(), rxlevel(), txlevel(), and parent() didn’t increment the sidefx
counter the correct way.  - Fixed

wizhelp entry with no_move had grammer mistakes. - Fixed

        - Matthew

Possible overrun on the stack with regards to iter() during certain config opts.

        - Thanks <Illithid@Ennersea>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p14,  Next: RhostMUSH 3 2 4 p13,  Prev: RhostMUSH 3 2 4 p15,  Up: Changelog

17.12 RhostMUSH 3.2.4 p14
=========================

[07/10/2002]

* Menu:

* Changes: Changes<6>.
* Additions: Additions<4>.
* Admin Params: Admin Params<4>.
* Bug Fixes: Bug Fixes<6>.


File: rhostmushhandbook.info,  Node: Changes<6>,  Next: Additions<4>,  Up: RhostMUSH 3 2 4 p14

17.12.1 Changes
---------------

round() excepts negative args (60) for rounding values to whole numbers. (MUX2) The SPOOF flag is now inheritable.

        - Thanks Milk & Nyssa

Added /nosub switch to @pemit so ## and #@ arn’t subbed.

Add /preserve to @wipe that wipes all _but_ the match

        - Thanks Mikhail Mikhailov

Force an ANSI_NORMAL at the end of @extansi calls @oxtport/@o<blah> messages don’t show if a null string. This is handy if you want to process sideeffects but don’t want a result to show.

        - Thanks Nyssa

Add to cpu-slamming an optional way to register-site/forbid-site the
person.  set() now handles ansi.  setq()/setr()/r() now handles ansi.
If owner set FLOATING, floating messages not returned.  Improved chksum
methods on @freeze/@thaw

Added /basic switch to @lock for PENN compatibility.

        - Thanks <Trispis@M*U*S*H>

Attributes starting with a ‘~’ are now supported if ATTR_HACK enabled.

        - Thanks <Trispis@M*U*S*H>

Added wildcard matches to @list user_attributes.

        - Thanks <Brazil@MUX2>

Added a-z setq() registers for MUX/TM3 compatibility.  (very MEMORY
intensive) @list alloc now shows additional stack/lbuf information.
iter() and it’s ilk now use Brazil’s replace_token() call for ## and #@
(MUX2) citer() now has an output seperator lwho() takes argument of ‘2’
to list JUST the ports.  Add internal attribute SpamMonitor to store
history of command(s).  Modified MONITOR sitecons so it shows the remote
port they’re connecting from.  Modify sin(), tan(), etc (ala MUX) for
conversions.  Backward compatible (MUX2)

Zenty’s ANSI modifications.

        - Thanks <Zenty@RhostMUSH>

Added way to convert PENN 1.7.5 flatfiles to RhostMUSH native.

        - Thanks Mac

Added SHS password encryption and plantext to crypt/SHS conversion on the fly.

        - Thanks <Azhdeen@RhostMUSH>


File: rhostmushhandbook.info,  Node: Additions<4>,  Next: Admin Params<4>,  Prev: Changes<6>,  Up: RhostMUSH 3 2 4 p14

17.12.2 Additions
-----------------

* Menu:

* Functions: Functions<7>.
* Commands: Commands<3>.
* Flags: Flags<7>.
* Toggles: Toggles<6>.


File: rhostmushhandbook.info,  Node: Functions<7>,  Next: Commands<3>,  Up: Additions<4>

17.12.2.1 Functions
...................

txlevel() - sideeffect that sets @txlevel (or displays)

        - Thanks <accela@AniMUSH>

rxlevel() - sideeffect that sets @rxlevel (or displays)

        - Thanks <accela@AniMUSH>

rset() - sideeffect that sets attribute and returns value.

        - Thanks <Trispis@M*U*S*H>

pedit() - used to mimic Penn’s edit() functionality (Penn)

ptimefmt() - used to mimic Penn/Mux’s timefmt() functionality
(Penn/MUX2)

textfile() - works like dynhelp() but pushes onto buffer (Penn)

        - Thanks Raevnos & PennMUSH

lattrp() - lattr() for parent checks

        - Idea from Jake & MUX2

ctu() - function that does deg/rad/grad conversion visiblemux() - works
like mux’s visible()


File: rhostmushhandbook.info,  Node: Commands<3>,  Next: Flags<7>,  Prev: Functions<7>,  Up: Additions<4>

17.12.2.2 Commands
..................

@hook to show/display/change individual hooks.  Switches are:

              /permit    - Return 'Permission denied.' if fail lock (1/0 boolean)
              /ignore    - Fall through command check if fail lock (1/0 boolean)
              /before    - Process functionality before command execution.
              /after     - Process functionality after command execution.
              /igswitch  - Mark command to ignore failed /switch matches.

     - Thanks Moe@BrazilMUX (/igswitch idea)


File: rhostmushhandbook.info,  Node: Flags<7>,  Next: Toggles<6>,  Prev: Commands<3>,  Up: Additions<4>

17.12.2.3 Flags
...............

ATTRIBUTE FLAG: uselock - when set on an attribute with a $command, will
look for a matching ~<attribute> to eval the lock.  This does BOOLEAN
evaluation.  1 pass, 0 fail.

SPAMMONITOR - mark if player and/or target item check for spam (60
cmds/sec)


File: rhostmushhandbook.info,  Node: Toggles<6>,  Prev: Flags<7>,  Up: Additions<4>

17.12.2.4 Toggles
.................

ZONEINHERIT - Allows zonemasters to have attributes inherited to
children.


File: rhostmushhandbook.info,  Node: Admin Params<4>,  Next: Bug Fixes<6>,  Prev: Additions<4>,  Up: RhostMUSH 3 2 4 p14

17.12.3 Admin Params
--------------------

muddb_name - admin param for db names to seperate from ‘mud_name’

        - Thanks <Milk@MattRhost>

global_error_obj - evaluate the VA attribute on the object if defined. this will evaluate the ‘huh?’ message(s).

        - Thanks <Zenty@RhostMUSH>

mail_autodeltime - specifies when mail is globally purged (default 21
days) global_parent_room - globally inherit attributes to room w/o
@parent global_parent_thing - globally inherit attributes to thing w/o
@parent global_parent_player - globally inherit attributes to player w/o
@parent global_parent_exit - globally inherit attributes to exit w/o
@parent hook_obj - globally define the ‘hook’ object.  hook_cmd -
process ‘hooks’ on specified commands:

              PERMIT   - to pass who can use/etc (bitmask 1)
              IGNORE   - to IGNORE who can use/etc (bitmask 2)
              BEFORE   - to pass what is done before command (bitmask 4)
              AFTER    - to pass what is done after command (bitmask 8)
              IGSWITCH - bypass error control on non-existant switches.

     - Thanks Moe@BrazilMUX (igswitch idea)

look_moreflags - if enabled, will show global flags on things with
examine.  stack_limit - nest check for ‘stack’ to throttle back a given
amount.  (Penn)


File: rhostmushhandbook.info,  Node: Bug Fixes<6>,  Prev: Admin Params<4>,  Up: RhostMUSH 3 2 4 p14

17.12.4 Bug Fixes
-----------------

HELPFILE - trigger() was not a command but was shown in help. -Fixed

        - Thanks <accela@AniMUSH>

HELPFILE - trim() had examples with args reversed. - Fixed

        - Thanks <accela@AniMUSH>

HELPFILE - locate() had ‘I’ instead of ‘i’. - Fixed

        - Thanks <DOSBoots@AniMUSH>

HELPFILE - Help on substitutions incorrect with %-subs. - Fixed

        - Thanks <DOSBoots@AniMUSH>

HELPFILE - wizhelp didn’t list ‘news’ and ‘newsdb’ in the main list. - Fixed

        - Thanks <Nyssa@Everywhere>

HELPFILE - help didn’t show the /quiet switch to @trigger. - Fixed

        - Thanks Deus <Maximas@TaintedEarth>

HELPFILE - modify help for twinklock to point to NOMODIFY flag.

        - Thanks Lyle

Option incorrectly shown in @list options mail.  - Fixed SESSION didn’t
cut the name off at 16 chars (formatting issue) - Fixed mailquick()’s
arg didn’t totally mirror MUX’s mail() - Fixed Fix for if who_unfindable
disabled, player_dark disabled, and allow_whodark enabled you’d never
get the connect flag of a wizard.  - Fixed

Linux and other weird unix systems tended to hang on AUTH lookups still. - Fixed

        - <Thorin@RhostMUSH>

v() wouldn’t handle special chars as first char if enabled via ATTR_HACK - Fixed

        - Thanks <Trispis@M*U*S*H>

parent() when used to set a new parent did not return the dbref# - Fixed
Fixed legacy bug in QUEUE which effected a-z setq() regs.  - Fixed
‘home’ check was broke if set disabled and ignore at the same time -
Fixed

@thaw didn’t handle semaphores properly. - Fixed

        - Thanks Dervish

Zone-ignores didn’t work for QUIT, LOGOUT, and it’s ilk. - Fixed

        - Thanks Nyssa

Debug Monitor stack had a conditional off-by-one state on @reboots - Fixed

        - Thanks Mac and Ambrosia

@extansi was broke when ZENTY_ANSI not defined - Fixed

        - Thanks Ambrosia & Lensman

plushelp_file and plushelp_index missing from wizhelp - Fixed

        - Thanks Ronan

wildcard matching could become problematic - Fixed.

        - Thanks <Sketch@M*U*S*H> & Javelin


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p13,  Next: RhostMUSH 3 2 4 p12,  Prev: RhostMUSH 3 2 4 p14,  Up: Changelog

17.13 RhostMUSH 3.2.4 p13
=========================

[02/01/2002]

* Menu:

* Changes: Changes<7>.
* Additions: Additions<5>.
* Admin Params: Admin Params<5>.
* Bug Fixes: Bug Fixes<7>.


File: rhostmushhandbook.info,  Node: Changes<7>,  Next: Additions<5>,  Up: RhostMUSH 3 2 4 p13

17.13.1 Changes
---------------

Help was missing for @admin parameter areg_lim.  - Added Help was
inconsistant for die() and dice().  - Changed

/quiet switch to @notify. Also added /quiet switch to @drain.

        - Thanks <Hellspawn@MUX2>

@cpattr modified so if no source given, assumes enactor (player) to be
source.  lattr() now takes 3rd argument.  ‘$’ for all $commands, ‘^’ for
listens.  /clear switch added to @toggle.  It only clears what you have
access to clear.  If there are more than 20 zones on an item, it
displays the dbref#’s only.  /## notation added to @site and all @admin
site information.  (0-32 range) ANSI highlight of @edit substitutions
added.  Follows NO_ANSI_EX toggle.  Multiple ‘types’ now allowed in
function remtype() On buffer problems, it records the line number and
file that it happened.  @list options handle sub-options now (config,
mail, boolean, values) Name field increased from 16 to 22 characters
(MUX2/TM3/PENN) /instant switch to @destroy (compatibility) - is the
‘default’ behavior.  (TM3) Immortals/#1 can use mail/recall to see mail
sent by others.  3rd argument to lrooms()’s to show level you’re in
(MUX2) LOGGING option to @flagdef.  Logs all setting/removing
(configurable)

Allow specifying filename to @dump/flat (filename restricted and ends in .flat)

        - Thanks <Reptile@CotM>

Modification to @lock/GetFrom to include target’s location as well.
Options added to mail[/read] for more flexability (ball, nall, uall)
Ports listing added to lwho() (boolean 1/0 - 0 (null) default) Ports
added to idle() (boolean 1/0 and optional specified port) Ports added to
conn() (boolean 1/0 and optional specified port) cmds() modified to
handle target port lattr() handles optional target of *player and player
now.


File: rhostmushhandbook.info,  Node: Additions<5>,  Next: Admin Params<5>,  Prev: Changes<7>,  Up: RhostMUSH 3 2 4 p13

17.13.2 Additions
-----------------

* Menu:

* Functions: Functions<8>.
* Commands: Commands<4>.
* De-Powers::
* Toggles: Toggles<7>.


File: rhostmushhandbook.info,  Node: Functions<8>,  Next: Commands<4>,  Up: Additions<5>

17.13.2.1 Functions
...................

safebuff() - function to go back in the function until the first matched
delimiter if strlen() is equal to or greater than the maximum.  (3998
characters)

     Note: this _WILL_ strip ansi.

floordiv() - return the ‘floor’ (rounded down) of result of division.
(MUX2) last() - return last word specified by delimiter (MUX2)
singletime() - return time rounded to lowest element (s, m, h, d, etc)
(MUX2) parenmatch() - (2 args, 1 just for error) (Idea from ChaoticMUX)
ansifies all bracket/paren/brace matches and RED’s nonmatch.  lrand() -
(4 arguments) - returns random numbers between two points (MUX2)
keeptype() - does reverse of remtype() lcmds() - List all commands ‘$’
or listens ‘^’ on object (MUX2) pack() - convert a number to base 2-64.
(MUX2) unpack() - convert a pack()’d number back to base 10 (MUX2)
crc32() - return a crc32 code for the specified string.  (MUX2) toggle()
- works like the @toggle command.  Follows SIDEFX restrictions.
moneyname() - returns the singular/plural name based on argument
(Discordia) config() - if no argument, displays all parameters (you have
access to), otherwise display the value of the specified parameter.


File: rhostmushhandbook.info,  Node: Commands<4>,  Next: De-Powers,  Prev: Functions<8>,  Up: Additions<5>

17.13.2.2 Commands
..................

@eval - force evaluation of functionality (TM3)


File: rhostmushhandbook.info,  Node: De-Powers,  Next: Toggles<7>,  Prev: Commands<4>,  Up: Additions<5>

17.13.2.3 De-Powers
...................

mortal_examine - if set, target always examines like a mortal. (@decompile/etc)

        - Thanks <Belial@Armageddon>


File: rhostmushhandbook.info,  Node: Toggles<7>,  Prev: De-Powers,  Up: Additions<5>

17.13.2.4 Toggles
.................

mail_lockdown - target is restricted in mail ‘monitoring’ like a mortal.
muxpage - allows ‘p <blah>’ to work like in MUX/TM3


File: rhostmushhandbook.info,  Node: Admin Params<5>,  Next: Bug Fixes<7>,  Prev: Additions<5>,  Up: RhostMUSH 3 2 4 p13

17.13.3 Admin Params
--------------------

log (parameter) god - log all activity of #1 heavy_cpu_max - ceilings
heavilly used cpu-intensive functions.  lastsite_paranoia - enable
auto-register/auto-forbid of hosts spamming site.  max_lastsite_cnt -
specify # of connects in period of time to allow from site.
min_con_attempt - specify the wait between ‘first’ connect and subquent
cons.  lattr_default_oldstyle - (default 0) snuffs the ‘#-1 NO MATCH’
(TM3) formats_are_local - localize @nameformat, @conformat, @exitformat
mail_def_object - default object for global aliases.  Handle
‘alias.name’ and ‘comment.name’.  wizard_queue_limit - distinguish
between wizard and mortals for queues.  max_pcreate_time - time range
allowed before max_pcreates reached.  max_pcreate_lim - number of
pcreates allowed in given timeframe pcreate_paranoia - level of action
you want to take against infidels (0-2) global_parent_obj - global
parent that attributes are inherited off of.


File: rhostmushhandbook.info,  Node: Bug Fixes<7>,  Prev: Admin Params<5>,  Up: RhostMUSH 3 2 4 p13

17.13.4 Bug Fixes
-----------------

convtime() used daylight savings - no longer uses daylight savings -
Fixed IDESC wouldn’t work with Reality Levels - Fixed Bad memory could
corrupt command parsing with sockets - Fixed @list alloc would scroll
values negative - Fixed @teleport and movement could ‘hide’ from wizards
in inventories - Fixed home, if @icmd’d, wouldn’t allow the command to
be overridden - Fixed The CLOAK flag would give ‘has left’ messages -
Fixed The lookup_player() code now handles ‘*’ as well as not.  - Fixed
If recycling was not enabled, you could still @destroy - Fixed

Trace output was broke with how it displayed enactor/target - Fixed

        - Thanks <Raevnos@M*U*S*H>

NOSTOP flag on objects in the master room could cause an infinite loop - Fixed

        - Thanks <Selene@TaintedEarth>

QueueMax attribute would not work unless owned by the target.  - Fixed

DNS/AUTH lookups could have unforseen behavior with non-printable chars - Fixed

        - Thanks <Morgan@RhostMUSH>

setqmatch() does not work like the help dictated it should. - Fixed

        - Thanks <Belial@Armageddon>

hastoggle() was wizard-only for no reason - Fixed

        - Thanks <Belial@Armageddon>

atof() could have buffer issues if string greater than 100 characters. - Fixed

        - Thanks <Brazil@BrazilMUX>

Counts for input, output, and lost fields were not accurate - Fixed

        - Thanks <Amos@RhostMUSH>

@conncheck could have unpredicatable results with the name of the door. - Fixed

        - Thanks <Amos@RhostMUSH>

MONITOR information had some uninitialized values that could crash - Fixed

        - Thanks <Amos@RhostMUSH>

DARK flags with wizards so it won’t show wiz as being connected. - Fixed

        - Thanks <Ian@Everywhere>

mid() didn’t work like it did in MUX2/PENN. It’s now an alias - Fixed

type() could bypass cloaked targets - Fixed

        - Thanks <Brazil@BrazilMUX>

quick_wild() could cause some SIGSEGV’s if not accurately verified -
Fixed

inventory doesn’t handle Reality Levles corrected - Fixed

        - Thanks <Zenty@BrazilMUX>

lcon(), next(), con(), lexits(), lcon(), xcon(), and sees() with
reguards to handling Reality Levles were broke.  - Fixed

Help for trim() had examples with it’s 2nd and 3rds arguments reversed - Fixed

        - Thanks <accela@AniMUSH>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p12,  Next: RhostMUSH 3 2 4 p11,  Prev: RhostMUSH 3 2 4 p13,  Up: Changelog

17.14 RhostMUSH 3.2.4 p12
=========================

[06/15/2001]

* Menu:

* Changes: Changes<8>.
* Additions: Additions<6>.
* Admin Params: Admin Params<6>.
* Bug Fixes: Bug Fixes<8>.


File: rhostmushhandbook.info,  Node: Changes<8>,  Next: Additions<6>,  Up: RhostMUSH 3 2 4 p12

17.14.1 Changes
---------------

Introduction of REALMS/Reality Levels

        - Thanks to <Shade@Mediterranian> for the code

randextract() handles 5th arg for output and can handle ‘1’ arg passed
Cleaned up handling of ndbm.h Improved validation for autoregistration
Improved logging

Added total commands on @conncheck

        - Thanks <Meglos@MyrkaMUX> (Zenty’s concept)

Modified @aconnect/@adisconnect behavior.  @aconnect accepts %0 as 1/0
based on existing connection @adisconnect accepts %0 (reason), %1 (time
on), %2 (1/0 based on conn) mail/status shows ‘-‘ on current message
read.  @list cmdslogged - shows current individual commands being logged
@list powers - shows powers @list depowers - shows depowers @list
rlevels - shows rlevels Added ‘+proof’ to mail/write command Cleaned up
help with the mail system for easier understanding Added protection to
functions that could be abused with poor coding practices

Added HILIGHT’ing to puppets when displaying messages.

        - Thanks to <Rynos@Armageddon>

Added LastIP attribute to house the IP address the person last connected from.

        - Thanks <Jeff@Sandbox>

Help fixes for wizhelp on permissions.

        - Thanks <Jeff@Sandbox>

Help fixes for help with regards to arbitrary commands.  Improved DoS
protection vers.  race conditions on connect screen.  switch() and
switchall() now recognize > and < as math-args (config param)


File: rhostmushhandbook.info,  Node: Additions<6>,  Next: Admin Params<6>,  Prev: Changes<8>,  Up: RhostMUSH 3 2 4 p12

17.14.2 Additions
-----------------

* Menu:

* Functions: Functions<9>.
* Commands: Commands<5>.
* Flags: Flags<8>.


File: rhostmushhandbook.info,  Node: Functions<9>,  Next: Commands<5>,  Up: Additions<6>

17.14.2.1 Functions
...................

rxlevel() - return RX reality level for source check txlevel() - return
TX reality level for target check listrlevels() - list all levels
hasrxlevel() - return ‘1’ if target has rxlevel() hastxlevel() - return
‘1’ if target has txlevel() cansee() - return ‘1’ if target can see
source (reality level based only)


File: rhostmushhandbook.info,  Node: Commands<5>,  Next: Flags<8>,  Prev: Functions<9>,  Up: Additions<6>

17.14.2.2 Commands
..................

@rxlevel - set/remove reality level source check @txlevel - set/remove
reality level target check mrpage (mrp) - respond to the player list
that you received in a page.  like rpage, this is seperate from lpage


File: rhostmushhandbook.info,  Node: Flags<8>,  Prev: Commands<5>,  Up: Additions<6>

17.14.2.3 Flags
...............

NONAME - if set on a target, the name is not displayed.


File: rhostmushhandbook.info,  Node: Admin Params<6>,  Next: Bug Fixes<8>,  Prev: Additions<6>,  Up: RhostMUSH 3 2 4 p12

17.14.3 Admin Params
--------------------

reality_level - define new reality level(s).  32 max.  wiz_always_real -
a wizard is defined as always seeing everything as ‘real’ def_exit_rx -
default exit RX value (1 default) def_exit_tx - default exit TX value (1
default) def_room_rx - default room RX value (1 default) def_room_tx -
default room TX value (1 default) def_player_rx - default room RX value
(1 default) def_player_tx - default room TX value (1 default)
def_thing_rx - default thing RX value (1 default) def_thing_tx - default
thing TX value (1 default)

validate_host - Specify invalid site-masks for autoregistration emails

        - Thanks <Zara@UnderGround> Labyrinth

log_command_list - Specify commands to individually log partial_conn -
Enable/disable @aconnect on partial connects partial_deconn -
Enable/disable @adisconnects on partial disconnects secure_functions -
Enable/disable security on listed functions FOREACH, WHILE, FOLD,
FILTER, MAP, STEP, and MIX max_logins_allowed (mudstate) - absolute
ceiling of connections allowed to avoid any type of DoS based attack.
This will always be 10 less than the OS can handle.  penn_switches - if
enabled, switch() and switchall() will work like PENN and accept < and >
as mathmatical operands.


File: rhostmushhandbook.info,  Node: Bug Fixes<8>,  Prev: Admin Params<6>,  Up: RhostMUSH 3 2 4 p12

17.14.4 Bug Fixes
-----------------

filter() would accept ‘1<blah>’ as well as ‘1’. - Fixed.

        - Thanks <Raevnos@M*U*S*H>

possible pointer-misalignment with internal messaging with MONITOR -
Fixed Rare occurance of getting inside a garbage object (non-crash-bug)
- Fixed @mvattr had small bug with copying over itself - Fixed @mvattr
had small bug with keeping original copy - Fixed Semaphores didn’t do
wait time correctly (introduced in p11) - Fixed Time/Create stamps
visible by anyone.  Shouldn’t be.  - Fixed LBUF not freed in mail/quota
- Fixed @dynhelp not able to parse subdirectories - Fixed (using a ‘^’)
@icmd not inherited in all instances - Fixed for everything Some side
effects had wrong security/permission checks - Fixed Side effects did
not check inheritance for permission - Fixed Iter()/list() and suite did
not handle ansi properly - Fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p11,  Next: RhostMUSH 3 2 4 p10,  Prev: RhostMUSH 3 2 4 p12,  Up: Changelog

17.15 RhostMUSH 3.2.4 p11
=========================

[03/15/2001]

* Menu:

* Changes: Changes<9>.
* Additions: Additions<7>.
* Admin Params: Admin Params<7>.
* Bug Fixes: Bug Fixes<9>.


File: rhostmushhandbook.info,  Node: Changes<9>,  Next: Additions<7>,  Up: RhostMUSH 3 2 4 p11

17.15.1 Changes
---------------

elist() has 5th argument (for string seperator)

        - Thanks <Talek@M*U*S*H>

@icmd has new switches to handle location/zone overriding:

     /droom - disable commands on room
     /iroom - ignore commands on room
     /croom - clear commands on room
     /lroom - list commands on room
     /lallroom - list all commands at current location

DoS Protection increased for vattr’s and object creation/destruction
@wait giving new /until switch to specify exact static time strmath()
has two new args.  First handles start location, second count Mail uses
~ to evaluate attributes for player targets

Enhanced email authorization for autoregistration.

        - Thanks <Jeff@SandBox>

Enhanced page to handle alias displaying

        - Thanks <Wolfie@CotM>

Pagelock to follow normal methodology when wizard-overrides in effect

Improved mail/write +list (proof) interface for mail with BRANDY_MAIL toggle.

        - Thanks <Belial@Armegeddon>

@pemit has /silent switch for PENN compatibility


File: rhostmushhandbook.info,  Node: Additions<7>,  Next: Admin Params<7>,  Prev: Changes<9>,  Up: RhostMUSH 3 2 4 p11

17.15.2 Additions
-----------------

* Menu:

* Functions: Functions<10>.
* Commands: Commands<6>.
* Toggles: Toggles<8>.


File: rhostmushhandbook.info,  Node: Functions<10>,  Next: Commands<6>,  Up: Additions<7>

17.15.2.1 Functions
...................

foreach() - (MUX) added for compatibility ilev() - Returns nest level of
an iter()


File: rhostmushhandbook.info,  Node: Commands<6>,  Next: Toggles<8>,  Prev: Functions<10>,  Up: Additions<7>

17.15.2.2 Commands
..................

@limit [/vmod /dmod /list /reset] - to limit max @destroy/vattr creation


File: rhostmushhandbook.info,  Node: Toggles<8>,  Prev: Commands<6>,  Up: Additions<7>

17.15.2.3 Toggles
.................

IGNOREZONE - toggles zone/location to enable zone/location command
disable/ignore VPAGE - toggles aliases to show/not show in pages you
receive.

PAGELOCK - toggles pages to normal methodologies when wizard lock overriding

        - Thanks <Jeff@Sandbox>

MAIL_NOPARSE - seperate toggle to break up translating %r’s and %t’s in
mail viewing.


File: rhostmushhandbook.info,  Node: Admin Params<7>,  Next: Bug Fixes<9>,  Prev: Additions<7>,  Up: RhostMUSH 3 2 4 p11

17.15.3 Admin Params
--------------------

ignore_zone - globally specify zone ignoring for a command

     Note: ignore_zone allows all other ignore_* params for level
     specifiers.)

disable_zone - globally specify zone disabling for a command
global_ansimask - globally define what ansi codes to allow/deny
expand_goto - force exit movement to use a ‘goto’.  max_dest_limit -
specify maximum @destroys allowed per player max_vattr_limit - specify
maximum _NEW_ vattrs allowed per player

hide_nospoof - if ‘1’ you have to control target to see NOSPOOF flag

        - Thanks <Jeff@SandBox>


File: rhostmushhandbook.info,  Node: Bug Fixes<9>,  Prev: Admin Params<7>,  Up: RhostMUSH 3 2 4 p11

17.15.4 Bug Fixes
-----------------

buffer issue with @decompile - fixed

remove lmath() from help. - fixed

        - Thanks <Raevnos@M*U*S*H>

mail showed cloaked wizzes being connected - fixed

        - Thanks <Morgan@RhostMUSH> Team

moon() didn’t handle full moons properly - fixed

        - Thanks <Jeff@SandBox>

isdbref() thought ‘#’ was a valid dbref. - fixed

        - Thanks <Raevnos@M*U*S*H>

Attribute setting issue introduced with P11

        - MUCH Thanks <Jeff@SandBox>

Logging options were a bit skewered with on/off settings. - fixed

        - Thanks <Sorien@Delphi>

Attempted to free mbufs in @disable login area twice.  - fixed

Parenting fix with possible recursion - fixed

        - Thanks <Brazil@MUX2>

@lock/chown not documented in help - fixed

@lock/chown required on CHOWN_OK object. Shouldn’t be. - Fixed

     -Thanks <Rynos@Armageddon>

@icmd for players broke with room/location addition - fixed.

     -Thanks <Jeff@SandBox>

Cloaked items didn’t trigger @startup - fixed.

     -Thanks <Rynos@Armageddon>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p10,  Next: RhostMUSH 3 2 4 p9,  Prev: RhostMUSH 3 2 4 p11,  Up: Changelog

17.16 RhostMUSH 3.2.4 p10
=========================

[02/15/2001]

* Menu:

* Changes: Changes<10>.
* Additions: Additions<8>.
* Admin Params: Admin Params<8>.
* Bug Fixes: Bug Fixes<10>.


File: rhostmushhandbook.info,  Node: Changes<10>,  Next: Additions<8>,  Up: RhostMUSH 3 2 4 p10

17.16.1 Changes
---------------

improved CPU handler for DoS protection


File: rhostmushhandbook.info,  Node: Additions<8>,  Next: Admin Params<8>,  Prev: Changes<10>,  Up: RhostMUSH 3 2 4 p10

17.16.2 Additions
-----------------

* Menu:

* Functions: Functions<11>.


File: rhostmushhandbook.info,  Node: Functions<11>,  Up: Additions<8>

17.16.2.1 Functions
...................

strfunc(<function>,<string of args>[,<optional seperator for args>) -
for lists


File: rhostmushhandbook.info,  Node: Admin Params<8>,  Next: Bug Fixes<10>,  Prev: Additions<8>,  Up: RhostMUSH 3 2 4 p10

17.16.3 Admin Params
--------------------

max_cpu_cycles admin param (default 3) cpu_secure_lvl admin param
(default 0)


File: rhostmushhandbook.info,  Node: Bug Fixes<10>,  Prev: Admin Params<8>,  Up: RhostMUSH 3 2 4 p10

17.16.4 Bug Fixes
-----------------

you could still get into a garbage object - fixed (MINOR) forwardlists
were not cleared on @wipe - fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p9,  Next: RhostMUSH 3 2 4 p8,  Prev: RhostMUSH 3 2 4 p10,  Up: Changelog

17.17 RhostMUSH 3.2.4 p9
========================

[12/15/2000]

* Menu:

* Changes: Changes<11>.
* Additions: Additions<9>.
* Admin Params: Admin Params<9>.
* Bug Fixes: Bug Fixes<11>.


File: rhostmushhandbook.info,  Node: Changes<11>,  Next: Additions<9>,  Up: RhostMUSH 3 2 4 p9

17.17.1 Changes
---------------

mail/write +acc added to allow extending player lists and not replacing.

mail/recall[/all] <playerlist> to list messages by player-name you sent to

        - Suggested by <Julius@Bermuda>

functionality for @flagdef for flagname filtering on display and paging.
Cleaned up some functionality more cases to valid() (name, attrname,
playername)

filler to columns() (new argument)

        - Thanks <Morgan@BrazilMUX>

‘save’ to helpfile showing that you do not need to save

        - Suggested by <Jamie@AdminMUSH>


File: rhostmushhandbook.info,  Node: Additions<9>,  Next: Admin Params<9>,  Prev: Changes<11>,  Up: RhostMUSH 3 2 4 p9

17.17.2 Additions
-----------------

* Menu:

* Functions: Functions<12>.
* Flags: Flags<9>.
* Toggles: Toggles<9>.


File: rhostmushhandbook.info,  Node: Functions<12>,  Next: Flags<9>,  Up: Additions<9>

17.17.2.1 Functions
...................

caseall() - works like switchall() but for case (Taken from PENN) cand()
- works like and() but stops processing on first ‘FALSE’ (from PENN)
cor() - works like or() but stops processing on first ‘TRUE’ (from PENN)
moon() - based on the POM code from berkley isword() - returns ‘TRUE’ if
entire string is all alpha (or has a hyphon) itext() - returns nth arg
(text ‘##’) of an iter() (from PENN) inum() - returns nth arg (num ‘#@’)
of an iter() (from PENN) modulo() - returns the modulus of the numbers
(from PENN)


File: rhostmushhandbook.info,  Node: Flags<9>,  Next: Toggles<9>,  Prev: Functions<12>,  Up: Additions<9>

17.17.2.2 Flags
...............

NO_PARSE - attribute flag that stops processing/evaluation of %0-%9 in
$commands.  SAFE - attribute flag that stops modification of attribute
it’s set on (TM 3.0) SHOWFAILCMD - when set on object any matching
failed $cmd uses the @ufail suite.


File: rhostmushhandbook.info,  Node: Toggles<9>,  Prev: Flags<9>,  Up: Additions<9>

17.17.2.3 Toggles
.................

MAIL_STRIPRETURN - when combining lines uses spaces instead of carrage
returns PENN_MAIL - when sending mail, use PENN like style


File: rhostmushhandbook.info,  Node: Admin Params<9>,  Next: Bug Fixes<11>,  Prev: Additions<9>,  Up: RhostMUSH 3 2 4 p9

17.17.3 Admin Params
--------------------

guest_namelist - specifies a dynamic namelist for guests (with
protection) hackattr_nowiz - defines if ‘_attr’ is wiz only or follows
normal rules hackattr_see - defines if ‘_attr’ is viewable by wizard
only.  penn_playercmds - $commands on player work only for that player
or inventory (from PENN)


File: rhostmushhandbook.info,  Node: Bug Fixes<11>,  Prev: Admin Params<9>,  Up: RhostMUSH 3 2 4 p9

17.17.4 Bug Fixes
-----------------

Bug with dynhelp(). Player (3rd arg) never resolved correctly - fixed

        - Thanks <Svlatmaer@BTW>

Possible (and very rare) overflow conditions with certain wiz commands -
fixed SIGSEGV bug with recursive @functions - fixed When @toggled
MONITOR_BAD, MONITOR_FAIL doubled up failed connections - fixed
Malaligned pointer in command.c.  Non-crash issue.  - fixed

setq() registers wern’t cleared for extreamly fast command input - fixed

        - Thanks <Brazil@BrazilMUX>

ex thing/`sta' returns ‘no attribs found’ if tstamps enabled - fixed
enhanced security for .txt file reading/verification (possible DoS) -
fixed attrib flag DARK could not be unset by non-god.  Only #1 can set
it now - fixed encrypt/decrypt really mangled with how it passed key -
fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p8,  Next: RhostMUSH 3 2 4 p7,  Prev: RhostMUSH 3 2 4 p9,  Up: Changelog

17.18 RhostMUSH 3.2.4 p8
========================

[10/12/2000]

* Menu:

* Changes: Changes<12>.
* Additions: Additions<10>.
* Admin Params: Admin Params<10>.
* Bug Fixes: Bug Fixes<12>.


File: rhostmushhandbook.info,  Node: Changes<12>,  Next: Additions<10>,  Up: RhostMUSH 3 2 4 p8

17.18.1 Changes
---------------

lnum() and lnum2() now can handle negative numbers.  @list options shows
if the COMMAND flag is used.  NOMODIFY can be configured to be
settable/unsettable/modifiable by imm only.  vector functions (vadd,
etc) that return a list now recognize output seps.  MAX_ARGS in
‘externs.h’ may be changed to increase the total number of arguments
functions like switch() may take.  MAX_ARGS is currently defaulted to
‘30’ though MUX 2.0 has it set to ‘100’.  This HAS to be a compile time
change else possible SIGSEGV’s could happen.  mail/write
+editall=old,new - argument to mail/write added.  Modifies ALL lines.
mail/write +feditall=old,new - modify ALL matches on ALL lines.
mail/write +fedit #=old,new - modify ALL matches on given line.
mail/write +cc/+bcc=new - if FORWARDING or SENDING (not reply!)  will
allow the user to redefine who the message is being sent out to.  _ATTR
can be compile-time added to be wiz-only settable/modifiable attributes.
Modified mail/write +justify, +insert, +edit, +editall to rehandle line
count Made option to make harder password guessing.  dice() takes ‘1’
for expanded, ‘2’ for expanded w/o totals, and optional output
seperator.  Also has optional argument for low-limit Can mimic TM 3.0’s
lrand() function.  modified connecting to @program based on toggle.
added modified/created with ‘examine’ and ‘examine/brief’ and ‘examine
thing/*’


File: rhostmushhandbook.info,  Node: Additions<10>,  Next: Admin Params<10>,  Prev: Changes<12>,  Up: RhostMUSH 3 2 4 p8

17.18.2 Additions
-----------------

* Menu:

* Functions: Functions<13>.
* Commands: Commands<7>.
* Flags: Flags<10>.
* Toggles: Toggles<10>.


File: rhostmushhandbook.info,  Node: Functions<13>,  Next: Commands<7>,  Up: Additions<10>

17.18.2.1 Functions
...................

mailalias() - returns the dbref# list of players in the given global mail alias

        - Suggested by <Stormwolf@CotF>

programmer() - returns the dbref# of thing that put target in @program
vcross() - taken from TinyMUX 2.0 (with permission) switchall() - idea
taken from TinyMUSH 3.0 (coded from scratch) brackets() - idea taken
from PENN 1.7.3 @@() - works like null() but does not evaluate (idea
from PENN 1.7.3)


File: rhostmushhandbook.info,  Node: Commands<7>,  Next: Flags<10>,  Prev: Functions<13>,  Up: Additions<10>

17.18.2.2 Commands
..................

@flagdef - define flag permission levels (/set, /unset, /see) @dynhelp -
dynamically read a specified <file>.txt file (needs matching .indx!)


File: rhostmushhandbook.info,  Node: Flags<10>,  Next: Toggles<10>,  Prev: Commands<7>,  Up: Additions<10>

17.18.2.3 Flags
...............

COMMANDS - optional #ifdef to define what uses commands or not (TinyMUSH compat) uses -DENABLE_COMMAND_FLAG

        - Idea from TinyMUSH 2.2.4

NO_CLONE - attribute flag to stop attributes from copying over when
@cloned

MARKER0 through MARKER9

        - idea from TinyMUSH 3.0

BOUNCE - allows players to pass what they hear to their contents w/o
effecting @ahear/@amhear/etc.


File: rhostmushhandbook.info,  Node: Toggles<10>,  Prev: Flags<10>,  Up: Additions<10>

17.18.2.4 Toggles
.................

MONITOR_BAD - monitor failed connections/creations to non-existant
players PROG_ON_CONNECT - reverses the current global logic of program
and connecting.


File: rhostmushhandbook.info,  Node: Admin Params<10>,  Next: Bug Fixes<12>,  Prev: Additions<10>,  Up: RhostMUSH 3 2 4 p8

17.18.3 Admin Params
--------------------

imm_nomod - when enabled (default disabled) specifies that only immortal
can set/unset the NOMODIFY flag and only immortals can modify things set
NOMODIFY. This will allow NOMODIFY to mimic CONSTANT ala TM 3.0

paranoid_exit_linking - when enabled, you MUST control exit to link.
This includes UNLINKED exits.  Also, exits won’t be @chowned to you
automatically.  (Default disabled)

notonerr_return - when DISABLED (default enabled) not() returns a ‘0’
for any function returning #-1.

safer_passwords - requires passwords be 5+ chars long and have one upper, one lower, and one special character.

        - Idea from TinyMUSH 2.2.4

max_sitecons - (default 50) specifies the maximum # of port connections
to site of that given site.


File: rhostmushhandbook.info,  Node: Bug Fixes<12>,  Prev: Admin Params<10>,  Up: RhostMUSH 3 2 4 p8

17.18.4 Bug Fixes
-----------------

NOMODIFY wasn’t strict enough - fixed BACKSTAGE/NOBACKSTAGE didn’t
handle @zones - fixed create() didn’t check command permissions first
for @dig, @open, and @pcreate put a temp fix for a possible SIGSEGV bug.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p7,  Next: RhostMUSH 3 2 4 p6,  Prev: RhostMUSH 3 2 4 p8,  Up: Changelog

17.19 RhostMUSH 3.2.4 p7
========================

[07/15/2000]

* Menu:

* Changes: Changes<13>.
* Admin Params: Admin Params<11>.
* Bug Fixes: Bug Fixes<13>.


File: rhostmushhandbook.info,  Node: Changes<13>,  Next: Admin Params<11>,  Up: RhostMUSH 3 2 4 p7

17.19.1 Changes
---------------

@set now recognizes the following attribute flags:

     GOD
     IMMORTAL
     WIZARD (suggested by Stormwolf@CotF)
     ROYALTY (alias for WIZARD)
     COUNCILOR
     ARCHITECT
     GUILDMASTER
     HIDDEN
     DARK


File: rhostmushhandbook.info,  Node: Admin Params<11>,  Next: Bug Fixes<13>,  Prev: Changes<13>,  Up: RhostMUSH 3 2 4 p7

17.19.2 Admin Params
--------------------


File: rhostmushhandbook.info,  Node: Bug Fixes<13>,  Prev: Admin Params<11>,  Up: RhostMUSH 3 2 4 p7

17.19.3 Bug Fixes
-----------------

@list options did not show RESTRICT_HOME config setting. Fixed

        - Reported by <Mercutio@ShatteredCathedrals>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p6,  Next: RhostMUSH 3 2 4 p5,  Prev: RhostMUSH 3 2 4 p7,  Up: Changelog

17.20 RhostMUSH 3.2.4 p6
========================

[06/16/2000]

* Menu:

* Changes: Changes<14>.
* Admins Params::
* Bug Fixes: Bug Fixes<14>.


File: rhostmushhandbook.info,  Node: Changes<14>,  Next: Admins Params,  Up: RhostMUSH 3 2 4 p6

17.20.1 Changes
---------------

@list site_information now shows DNS blocking


File: rhostmushhandbook.info,  Node: Admins Params,  Next: Bug Fixes<14>,  Prev: Changes<14>,  Up: RhostMUSH 3 2 4 p6

17.20.2 Admins Params
---------------------

forbid_host - allows DNS entry/modify for forbidding hosts register_host
- allows DNS entry/modify for registered hosts autoreg_host - allows DNS
entry/modify for disallowing autoreg to hosts noguest_host - allows DNS
entry/modify for disallowing guests to hosts suspect_host - allows DNS
entry/modify for suspect hosts


File: rhostmushhandbook.info,  Node: Bug Fixes<14>,  Prev: Admins Params,  Up: RhostMUSH 3 2 4 p6

17.20.3 Bug Fixes
-----------------

ansi() didn’t recognize ‘u’ for underline. Fixed.

        - Reported by <LadyDraconis@BermudaByNight>

@program had small issue with prompt storage.  Fixed.

autoreg file inclusion didn’t count total lines right. Fixed.

        - Reported by <Rachel@AdminMUSH>

hastoggles(), haspowers(), and hasdepowers() didn’t work.  Fixed.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p5,  Next: RhostMUSH 3 2 4 p4,  Prev: RhostMUSH 3 2 4 p6,  Up: Changelog

17.21 RhostMUSH 3.2.4 p5
========================

[06/01/2000]

* Menu:

* Changes: Changes<15>.
* Admin Params: Admin Params<12>.
* Bug Fixes: Bug Fixes<15>.


File: rhostmushhandbook.info,  Node: Changes<15>,  Next: Admin Params<12>,  Up: RhostMUSH 3 2 4 p5

17.21.1 Changes
---------------

New /noauth and /nodns switches to @site Better timeout conditions for
AUTH lookups.  @list site_information now shows additional information


File: rhostmushhandbook.info,  Node: Admin Params<12>,  Next: Bug Fixes<15>,  Prev: Changes<15>,  Up: RhostMUSH 3 2 4 p5

17.21.2 Admin Params
--------------------

noauth_site – specifies site and mask that AUTH lookups are not to be
performed nodns_site – specifies site and mask that DNS lookups are not
to be performed


File: rhostmushhandbook.info,  Node: Bug Fixes<15>,  Prev: Admin Params<12>,  Up: RhostMUSH 3 2 4 p5

17.21.3 Bug Fixes
-----------------

AUTH hung if remote server was configured wrong.  Fix put in around the
OS limitation to handle this.  Command substitution (%c/%x) could cause
a SIGSEGV at random times.  Fixed.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p4,  Next: RhostMUSH 3 2 4 p3,  Prev: RhostMUSH 3 2 4 p5,  Up: Changelog

17.22 RhostMUSH 3.2.4 p4
========================

[04/15/2000]

* Menu:

* Changes: Changes<16>.
* Additions: Additions<11>.
* Alias Additions::
* Admin Params: Admin Params<13>.
* Bug Fixes: Bug Fixes<16>.


File: rhostmushhandbook.info,  Node: Changes<16>,  Next: Additions<11>,  Up: RhostMUSH 3 2 4 p4

17.22.1 Changes
---------------

wizhelp has new topic for setting up guests (GUEST SETUP)

help has help for differences/useful (DIFFERENCE/USEFUL)

        - Suggested by <Sycorax@ShatteredCathedrals>

filter() now supports an output seperator

lnum() and lnum2() optionally return NULL if given a ‘0’.

        - Suggested by <Gorath@Rhostshyl>

mask() now takes ‘~’ for adding 1’s comp, ‘1’ for 1’s and ‘2’ for 2’s.
mailquick() takes 3rd argument for MUX mail() compatibility.
news/articlelife takes ‘forever’ as a valid argument.  mail/status takes
/subject, (U)nread, (N)ew, (B)oth new/unread, (S)aved, (M)arked, and
(O)ld mail as optional search params.  mail/number takes same new args
as mail/status news/read now marks messages as ‘read’.  @ansiname now
allows raw ansi (under controlled circumstances)

dig(), create(), open(), clone() all optionally return dbref#’s.

        - Suggested by <Corum@Underground>

@list options now shows more (and valuable) information.  @function/list
now shows flags for privalaged/preserved functions.  mail/status and
mail/read now show connected players.  mail/write and - now show how
many characters you have written.  mail/forward and mail/reply now
recognize the BRANDY_MAIL @toggle.


File: rhostmushhandbook.info,  Node: Additions<11>,  Next: Alias Additions,  Prev: Changes<16>,  Up: RhostMUSH 3 2 4 p4

17.22.2 Additions
-----------------

* Menu:

* Functions: Functions<14>.
* Commands: Commands<8>.
* Toggles: Toggles<11>.


File: rhostmushhandbook.info,  Node: Functions<14>,  Next: Commands<8>,  Up: Additions<11>

17.22.2.1 Functions
...................

listmatch(<string>,<wildcard>[,<delimiter>])
setqmatch(<string>,<wildcard>[,<delimiter>]) listnewsgroups([<player>])
inprogram(player)


File: rhostmushhandbook.info,  Node: Commands<8>,  Next: Toggles<11>,  Prev: Functions<14>,  Up: Additions<11>

17.22.2.2 Commands
..................

@program (idea from MUX) @quitprogram (idea from MUX)

@progprompt

        - Suggested by <Zara@Underground>

@extansi

train

        - Suggested by <Trey@GameHendge>

@function/preserve (idea from MUX) +help (hardcode) (idea from MUX)


File: rhostmushhandbook.info,  Node: Toggles<11>,  Prev: Commands<8>,  Up: Additions<11>

17.22.2.3 Toggles
.................

PROG (idea from MUX) NOSHPROG IMMPROG


File: rhostmushhandbook.info,  Node: Alias Additions,  Next: Admin Params<13>,  Prev: Additions<11>,  Up: RhostMUSH 3 2 4 p4

17.22.3 Alias Additions
-----------------------

* Menu:

* Commands: Commands<9>.


File: rhostmushhandbook.info,  Node: Commands<9>,  Up: Alias Additions

17.22.3.1 Commands
..................

@prog aliased to @program


File: rhostmushhandbook.info,  Node: Admin Params<13>,  Next: Bug Fixes<16>,  Prev: Alias Additions,  Up: RhostMUSH 3 2 4 p4

17.22.4 Admin Params
--------------------

login_to_prog

noshell_prog

        - Suggested by <Draken-Korin@Underground>

sidefx_returnval nospam_connect (idea from PENN)

noregist_onwho

        - Suggested by <Rachel@AdminMUSH>

lnum_compat

mailinclude_file

        - Suggested by <Rachel@AdminMUSH>

must_unlquota


File: rhostmushhandbook.info,  Node: Bug Fixes<16>,  Prev: Admin Params<13>,  Up: RhostMUSH 3 2 4 p4

17.22.5 Bug Fixes
-----------------

news/articlelife not in wizhelp

        - Reported by <Rachel@AdminMUSH>

filter() did not correctly parse arguments in some instances – fixed

        - Reported by <Troll@Bermuda>

@set thing/attr=_thing/attr would on rare occurances not work – fixed

        - Reported by <Troll@Bermuda>

lock() would not parse the second argument in some occurances – fixed

        - Reported by <Cerebus@Bermuda>

mail/reply didn’t function right when BRANDY_MAIL toggled – fixed

setunion() would not parse 3rd/4th args correctly on rare occurances –fixed

        - Reported by <Tyr@Forgotten> (Thanks for the patch)

news/articlelife wouldn’t reset articlelife with ‘-1’.  – fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p3,  Prev: RhostMUSH 3 2 4 p4,  Up: Changelog

17.23 RhostMUSH 3.2.4 p3
========================

[11/15/1999]

* Menu:

* Changes: Changes<17>.
* Additions: Additions<12>.
* Alias Additions: Alias Additions<2>.
* Admin Params: Admin Params<14>.
* Bug Fixes: Bug Fixes<17>.


File: rhostmushhandbook.info,  Node: Changes<17>,  Next: Additions<12>,  Up: RhostMUSH 3 2 4 p3

17.23.1 Changes
---------------

     Note: Make sure to make the appropiate aliases

@flag is not listed in ‘wizhelp commands’

        - reported by <Stormwolf@Children>

remtype(<string>,<type>[,<sep>,<osep>])

        - suggested by <Stormwolf@Children>

name(<target>[,<newname>]) examine/quick - Previous /brief functionality

examine/brief - Modified for MUX/PENN compatibility

        - suggested by <Rachel@AdminMUSH>

@function[/list] - for PENN compatibility

@pemit/zone[/list] <zone(s)>

     if zonemaster - all rooms in zone.  if !zonemaster - specified
     zone.

@dolist/notify ‘mail/next -‘ - reads previous mail ‘mail/zap -‘ - marks
current message and reads previous mail


File: rhostmushhandbook.info,  Node: Additions<12>,  Next: Alias Additions<2>,  Prev: Changes<17>,  Up: RhostMUSH 3 2 4 p3

17.23.2 Additions
-----------------

* Menu:

* Functions: Functions<15>.
* Commands: Commands<10>.
* Flags: Flags<11>.
* Powers::
* Toggles: Toggles<12>.


File: rhostmushhandbook.info,  Node: Functions<15>,  Next: Commands<10>,  Up: Additions<12>

17.23.2.1 Functions
...................

mailquick(<player>[,<folder>]) (wiz only) eval(<object>,<attr>) or
eval(<string>) translate(<string>,<(s)pace/un(p)arse>)
valid(name,<string>)
entrances(target[,(a)ll/(r)oom/(t)hing/(p)layer/(e)xit])
graball(<string>,<wildcard>[,<sep>]) remit(<list of rooms>,<string>)
rnum(<perspective>,<target>) wipe(<obj>[/attr]) destroy(<obj>) step()
(borrowed and modified from TinyMUSH 3.0) localize(<string>)
null(<string>) ladd(<string>[,<sep>]) lsub(<string>[,<sep>])
lmul(<string>[,<sep>]) ldiv(<string>[,<sep>]) land(<string>[,<sep>])
lavg(<string>[,<sep>]) lmax(<string>[,<sep>]) lmin(<string>[,<sep>])
lor(<string>[,<sep>]) lxor(<string>[,<sep>]) lnor(<string>[,<sep>])
lxnor(<string>[,<sep>]) lastcreate(<target>,<(r)oom, (t)hing, (e)xit,
(p)layer>) ncomp(<num>,<num>) streq(<str>,<str>) while() (borrowed and
modified from TinyMUSH 3.0)=20 xcon(<target>[/<switch>],<start>,<count>)
modifystamp(<target>) createdstamp(<target>) inzone(<zone>) zemit(<list
of zones>,<string>) zwho(<zone>) zfun([<zone>/]<attr>[,<args>])
zfun2([<zone>/]<attr>[,<args>]) zfunlocal([<zone>/]<attr>[,<args>])
zfun2local([<zone>/]<attr>[,<args>])
zfundefault([<zone>/]<attr>,<default>[,<args>])
zfun2default([<zone>/]<attr>,<default>[,<args>])
zfuneval([<zone>/]<attr>/<level>[,<args>])
zfunldefault([<zone>/]<attr>,<default>[,<args>])
zfunl2default([<zone>/]<attr>,<default>[,<args>])


File: rhostmushhandbook.info,  Node: Commands<10>,  Next: Flags<11>,  Prev: Functions<15>,  Up: Additions<12>

17.23.2.2 Commands
..................

@hide[/on/off] - For PENN compatibility @saystring - define what is
substituted instead of ‘says’


File: rhostmushhandbook.info,  Node: Flags<11>,  Next: Powers,  Prev: Commands<10>,  Up: Additions<12>

17.23.2.3 Flags
...............

NOWHO (internal) - mark who is @hidden LOGIN - bypass @disable logins
ZONECONTENTS - makes zonemaster behave like master room BACKSTAGE -
check to see if auto-inherited to ownership NOBACKSTAGE - marker for
backstage checks ANONYMOUS - return ‘Someone’ when cloaked when talk/say


File: rhostmushhandbook.info,  Node: Powers,  Next: Toggles<12>,  Prev: Flags<11>,  Up: Additions<12>

17.23.2.4 Powers
................

NOWHO - specify who can @hide EXAMINE_FULL - examine anything but #1,
cloaked, and noexamine things FULLTEL - teleport anywhere but #1 and
cloaked locations.


File: rhostmushhandbook.info,  Node: Toggles<12>,  Prev: Powers,  Up: Additions<12>

17.23.2.5 Toggles
.................

BRANDY_MAIL - send mail with ‘mail user-list=3Dsubject’ methodology
FORCEHALTED - force someone who is halted


File: rhostmushhandbook.info,  Node: Alias Additions<2>,  Next: Admin Params<14>,  Prev: Additions<12>,  Up: RhostMUSH 3 2 4 p3

17.23.3 Alias Additions
-----------------------

* Menu:

* Functions: Functions<16>.
* Commands: Commands<11>.
* Flags: Flags<12>.


File: rhostmushhandbook.info,  Node: Functions<16>,  Next: Commands<11>,  Up: Alias Additions<2>

17.23.3.1 Functions
...................

subeval() aliased to eval() grepi() aliased to grep() zone() aliased to
lzone() element aliased to elements() if() aliased to ifelse()
matchall() aliased to totmatch() nonzero() aliased to ifelse()
filterbool() aliased to filter() landbool() aliased to land() lorbool()
aliased to lor() lnorbool() aliased to lnor() andbool() aliased to and()
notbool() aliased to not() xorbool() aliased to xor() loop() aliased to
list() enumerate() aliased to elist() mean() aliased to avg()


File: rhostmushhandbook.info,  Node: Commands<11>,  Next: Flags<12>,  Prev: Functions<16>,  Up: Alias Additions<2>

17.23.3.2 Commands
..................

@brief aliased to examine/brief @lemit aliased to @emit/room @remit
aliased to @pemit/contents/list @zemit aliased to @pemit/zone/list


File: rhostmushhandbook.info,  Node: Flags<12>,  Prev: Commands<11>,  Up: Alias Additions<2>

17.23.3.3 Flags
...............

NO_COMMAND alias to NOCOMMAND


File: rhostmushhandbook.info,  Node: Admin Params<14>,  Next: Bug Fixes<17>,  Prev: Alias Additions<2>,  Up: RhostMUSH 3 2 4 p3

17.23.4 Admin Params
--------------------

mail_tolist (default 0) - enable/disable To: <players> in mail =
automatically mail_default (default 0) - change ‘mail’ from mail/quick
to mail/status


File: rhostmushhandbook.info,  Node: Bug Fixes<17>,  Prev: Admin Params<14>,  Up: RhostMUSH 3 2 4 p3

17.23.5 Bug Fixes
-----------------

depower - tel_anywhere (broke - fixed) look - could see cloaked things
if given long-finger ability (fixed) recover objects - could be examined
to find names of them and owner (fixed) grab() - crashed server if given
only one argument - fixed

go - couldn’t use ‘go’ through parent exits before

        - Reported by <Medwyn@Underground>

ueval() - fixed missing LBUF free mail/write +list - gave erraneous
results - fixed

lexits() - won’t show exits set PRIVATE at the ‘home’ of those exits.

        - Reported by <Medwyn@Underground>

min() - value shoved a double in an int

        - Reported by <Stormwolf@Children>

max() - value shoved a double in an int

        - Reported by <Stormwolf@Children>

wmail/size - tried to free null pointer

        - Reported by <Mercutio@Shattered>

host sites over 50 characters would cause the host parameter to not
properly null terminate.  - fixed.  @open would, under rare
circumstances, clobber the return exit from how tprintf() buffers.
-fixed.  andflags() and orflags() didn’t escape out ‘2’ or ‘1’ right.  -
fixed


File: rhostmushhandbook.info,  Node: Historical Non-Disclosure Agreement,  Next: Copyright,  Prev: Changelog,  Up: Top

18 Historical Non-Disclosure Agreement
**************************************

The following NDA comes from the time when RhostMUSH was not publially
available.  It is preserved here for historical reasons.  We are suckers
for looking back at things.  :) –Ambrosia

       1. I agree, to not give out the code, in part or in full, in any
          form of medium, to anyone or anything not previously allowed
          by the developers.

       2. I agree, to not let others look at the code, in part or in
          full, in any form of medium, to anyone or anything not
          previously allowed by the developers.

       3. I am aware that any modifications I make to the code is
          _FULLY_ permitted, and that I do _NOT_ have to return said
          patches to the developers.

     Note: The Rhost developers would like to see what was added, and
     possibly look at adding them to the main distro if we see others
     would like it (with full credits to you), but we belive once you
     have the code, you should be allowed to play with it fully as long
     as the first two rules are kept.


File: rhostmushhandbook.info,  Node: Copyright,  Next: Indices and tables,  Prev: Historical Non-Disclosure Agreement,  Up: Top

19 Copyright
************

Copyright © 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021

Seawolf, Thorin, Ashen-Shugar, Kale, Lensman, Morgan, Odin, Kage,
Ambrosia, Rook

All rights, reserved.

The copyright includes but is not limited to all changes and
modifications to the code, the help files, and all information included
in this code.  Copying of these changes is not permitted without prior
approval.  Borrowing of ideas require notification of where idea
originated.  Please use ‘RhostMUSH’ when identifying source.
Modification of code is allowed as long as contact and acceptance is
made prior to changes with one (or more) of the original writers of the
code in writing.

This copyright does not include the original code that was given as GNU
freeware

This copyright information may not be changed, altered, or omitted.


File: rhostmushhandbook.info,  Node: Indices and tables,  Prev: Copyright,  Up: Top

Indices and tables
******************

   * genindex

   * search



Tag Table:
Node: Top367
Ref: index doc580
Ref: 0580
Node: Installing RhostMUSH25349
Ref: install doc25502
Ref: 125502
Ref: install id125502
Ref: 225502
Ref: install installing-rhostmush25502
Ref: 325502
Ref: install rhostmush-handbook25502
Ref: 425502
Node: RhostMUSH Requirements26027
Ref: install id226145
Ref: 526145
Ref: install rhostmush-requirements26145
Ref: 626145
Node: System Requirements26319
Ref: install id326438
Ref: 726438
Ref: install system-requirements26438
Ref: 826438
Node: Supported Platforms27104
Ref: install supported-platforms27220
Ref: 927220
Node: Unsupported Platforms27694
Ref: install unsupported-platforms27837
Ref: a27837
Node: Untested Platforms27937
Ref: install untested-platforms28082
Ref: b28082
Node: Known Platform Issues28192
Ref: install known-platform-issues28307
Ref: c28307
Node: Software Requirements28659
Ref: install id428807
Ref: d28807
Ref: install software-requirements28807
Ref: e28807
Node: Optional Packages29392
Ref: install optional-packages29478
Ref: f29478
Node: Hosting Requirements30273
Ref: install hosting-requirements30431
Ref: 1030431
Ref: install id530431
Ref: 1130431
Node: Requirements if Using Windows30896
Ref: install requirements-if-using-windows31024
Ref: 1231024
Ref: install windows-requirements31024
Ref: 1331024
Node: Installing on Windows 10 with BASH31217
Ref: install installing-on-windows-10-with-bash31370
Ref: 1431370
Node: Installing on Windows with Cygwin31950
Ref: install installing-on-windows-with-cygwin32140
Ref: 1532140
Node: Startig RhostMUSH on Windows32552
Ref: install startig-rhostmush-on-windows32699
Ref: 1632699
Node: Obtaining RhostMUSH32835
Ref: install id632981
Ref: 1732981
Ref: install obtaining-rhostmush32981
Ref: 1832981
Node: Compiling RhostMush33486
Ref: install compiling-rhostmush33646
Ref: 1933646
Ref: install id733646
Ref: 1a33646
Node: Setup directory permissions33817
Ref: install setup-directory-permissions33943
Ref: 1b33943
Node: Compile the source code34316
Ref: install compile-the-source-code34471
Ref: 1c34471
Node: The confsource Menu34721
Ref: install the-confsource-menu34811
Ref: 1d34811
Node: Note about Compiling35287
Ref: install note-about-compiling35437
Ref: 1e35437
Node: Note about Recompiling36770
Ref: install note-about-recompiling36888
Ref: 1f36888
Node: Installing using an ansible playbook37494
Ref: install ansible-install37665
Ref: 2037665
Ref: install installing-using-an-ansible-playbook37665
Ref: 2137665
Node: Starting a Newly Compiled MUSH38267
Ref: install starting-a-newly-compiled-mush38456
Ref: 2238456
Node: Configuring the game38612
Ref: install configuring-the-game38736
Ref: 2338736
Node: Starting the game38970
Ref: install starting-the-game39126
Ref: 2439126
Node: First login to the game39507
Ref: install first-login-to-the-game39634
Ref: 2539634
Node: Creating RHostMUSH with a Provided DB40186
Ref: install creating-rhostmush-with-a-provided-db40402
Ref: 2640402
Node: Important before you actually start building40578
Ref: install important-before-you-actually-start-building40743
Ref: 2740743
Node: Using the prebuilt flatfile42564
Ref: install using-the-prebuilt-flatfile42729
Ref: 2842729
Node: To load a prebuilt flatfile43386
Ref: install to-load-a-prebuilt-flatfile43488
Ref: 2943488
Node: Almost Backwards Instructions for Compiling and Starting a MUSH44770
Ref: install almost-backwards-instructions-for-compiling-and-starting-a-mush45003
Ref: 2a45003
Node: Basic Instructions for starting a new RhostMUSH46005
Ref: install basic-instructions-for-starting-a-new-rhostmush46247
Ref: 2b46247
Node: Manual configuration of source code46439
Ref: install manual-configuration-of-source-code46610
Ref: 2c46610
Node: Loading a database for your MUSH47553
Ref: install loading-a-database-for-your-mush47724
Ref: 2d47724
Node: Option Only perform these steps if using a provided database48035
Ref: install option-only-perform-these-steps-if-using-a-provided-database48175
Ref: 2e48175
Node: Configure the netrhost conf file for your MUSH48745
Ref: install configure-the-netrhost-conf-file-for-your-mush48899
Ref: 2f48899
Node: Start a MUSH and logging on for the first time49539
Ref: install start-a-mush-and-logging-on-for-the-first-time49756
Ref: 3049756
Node: Option Things to do once you have connected if you did NOT use a provided database50125
Ref: install option-things-to-do-once-you-have-connected-if-you-did-not-use-a-provided-database50301
Ref: 3150301
Node: Customtize the textfiles for your game51811
Ref: install customtize-the-textfiles-for-your-game52014
Ref: 3252014
Node: Three Options for Starting a MUSH52384
Ref: install three-options-for-starting-a-mush52559
Ref: 3352559
Node: Option 1 Creating a new game with a blank database53100
Ref: install option-1-creating-a-new-game-with-a-blank-database53304
Ref: 3453304
Node: Options 2 Creating a new game with Ambrosia’s default database53558
Ref: install options-2-creating-a-new-game-with-ambrosia-s-default-database53833
Ref: 3553833
Node: Option 3 Creating a new game with the generic default database55485
Ref: install option-3-creating-a-new-game-with-the-generic-default-database55701
Ref: 3655701
Node: Starting your MUSH56137
Ref: install starting-your-mush56265
Ref: 3756265
Node: What RhostMUSH is about and what’s so great about RhostMUSH56473
Ref: features doc56656
Ref: 3856656
Ref: features what-rhostmush-is-about-and-what-s-so-great-about-rhostmush56656
Ref: 3956656
Node: Recycle bin59854
Ref: features recycle-bin59992
Ref: 3a59992
Node: @snapshot60590
Ref: features snapshot60768
Ref: 3b60768
Node: Wizard and Immortals by default61051
Ref: features wizard-and-immortals-by-default61258
Ref: 3c61258
Node: Titles and Captions to a player’s name62242
Ref: features titles-and-captions-to-a-player-s-name62493
Ref: 3d62493
Node: Have an alternate name with locks for NPC obfuscation62615
Ref: features have-an-alternate-name-with-locks-for-npc-obfuscation62863
Ref: 3e62863
Node: Have multiple player aliases63009
Ref: features have-multiple-player-aliases63280
Ref: 3f63280
Node: Actively control how dark works both game-wide and individually63461
Ref: features actively-control-how-dark-works-both-game-wide-and-individually63757
Ref: 4063757
Node: Make config file changes in-game without having to reboot or have shell access64133
Ref: features make-config-file-changes-in-game-without-having-to-reboot-or-have-shell-access64453
Ref: 4164453
Node: Execute any binary or script as a localized function64646
Ref: features execute-any-binary-or-script-as-a-localized-function64950
Ref: 4264950
Node: Customized percent substitutions like %n %# etc65105
Ref: features customized-percent-substitutions-like-n-etc65376
Ref: 4365376
Node: Redefine percent substitutions like %n %# etc65523
Ref: features redefine-percent-substitutions-like-n-etc65794
Ref: 4465794
Node: Localize command and function overrides in a sandbox65938
Ref: features localize-command-and-function-overrides-in-a-sandbox66176
Ref: 4566176
Node: Multiple Zones66339
Ref: features multiple-zones66580
Ref: 4666580
Node: Optionally control enable or disable sideeffects66778
Ref: features optionally-control-enable-or-disable-sideeffects67016
Ref: 4767016
Node: Have 31 cross-interactive realities for locations67169
Ref: features have-31-cross-interactive-realities-for-locations67427
Ref: 4867427
Node: Override any command with softcode68014
Ref: features override-any-command-with-softcode68282
Ref: 4968282
Node: The abilility to raise or lower permissions on the various68456
Ref: features the-abilility-to-raise-or-lower-permissions-on-the-various68719
Ref: 4a68719
Node: Customize new commands on the connect screen68926
Ref: features customize-new-commands-on-the-connect-screen69193
Ref: 4b69193
Node: Softcode any txt file like connect txt69320
Ref: features softcode-any-txt-file-like-connect-txt69595
Ref: 4c69595
Node: Advanced tracing methods for debugging your code including labels!69787
Ref: features advanced-tracing-methods-for-debugging-your-code-including-labels70085
Ref: 4d70085
Node: Built in pretty-printing of attributes with the parenmatch function70427
Ref: features built-in-pretty-printing-of-attributes-with-the-parenmatch-function70713
Ref: 4e70713
Node: Plenty more not mentioned!71215
Ref: features plenty-more-not-mentioned71465
Ref: 4f71465
Node: Advanced features of RhostMUSH71873
Ref: features advanced-features-of-rhostmush72103
Ref: 5072103
Node: Debugging/Tracing73500
Ref: features debugging-tracing73610
Ref: 5173610
Node: Zoning74206
Ref: features zoning74339
Ref: 5274339
Node: Reality Levels74871
Ref: features reality-levels75018
Ref: 5375018
Node: Function and Command Overriding75702
Ref: features function-and-command-overriding75858
Ref: 5475858
Node: The Recycle Bin77013
Ref: features the-recycle-bin77193
Ref: 5577193
Node: Percent Substitution Adding/Overriding77932
Ref: features percent-substitution-adding-overriding78088
Ref: 5678088
Node: Hooking78585
Ref: features hooking78748
Ref: 5778748
Node: Command based uselocks79067
Ref: features command-based-uselocks79239
Ref: 5879239
Node: Differentating between command and listen locks79972
Ref: features differentating-between-command-and-listen-locks80180
Ref: 5980180
Node: Wizard auto-overiding and how to disable it80588
Ref: features wizard-auto-overiding-and-how-to-disable-it80806
Ref: 5a80806
Node: Advanced FLAG and TOGGLE control81400
Ref: features advanced-flag-and-toggle-control81592
Ref: 5b81592
Node: Advanced site control82464
Ref: features advanced-site-control82630
Ref: 5c82630
Node: Auto-Registration83158
Ref: features auto-registration83316
Ref: 5d83316
Node: Which bit level is best?83701
Ref: features which-bit-level-is-best83888
Ref: 5e83888
Node: What are the limits for size/growth for RhostMUSH?84950
Ref: features what-are-the-limits-for-size-growth-for-rhostmush85164
Ref: 5f85164
Node: Sqlite and MySQL/Maria setup and why use it?87948
Ref: features sqlite-and-mysql-maria-setup-and-why-use-it88193
Ref: 6088193
Node: Executing outside scripts and binaries within RhostMUSH88694
Ref: features executing-outside-scripts-and-binaries-within-rhostmush88925
Ref: 6188925
Node: Pulling external data into RhostMUSH89500
Ref: features pulling-external-data-into-rhostmush89731
Ref: 6289731
Node: Integrating a unix cron right into RhostMUSH90062
Ref: features integrating-a-unix-cron-right-into-rhostmush90290
Ref: 6390290
Node: Signal handling how it works and when and why use it90766
Ref: features signal-handling-how-it-works-and-when-and-why-use-it91051
Ref: 6491051
Node: Setting up global parents global @parents global attribute formatting and other global setups91864
Ref: features setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups92153
Ref: 6592153
Node: RhostMUSH limitations and how to get around them94936
Ref: features rhostmush-limitations-and-how-to-get-around-them95240
Ref: 6695240
Node: Things other mushes can do that Rhost can not and how to emulate it97879
Ref: features things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it98110
Ref: 6798110
Node: PennMUSH98294
Ref: features pennmush98429
Ref: 6898429
Node: MUX99427
Ref: features mux99562
Ref: 6999562
Node: Advanced guest setup100022
Ref: features advanced-guest-setup100269
Ref: 6a100269
Node: Attribute permission masking and the joys of the power behind it100728
Ref: features attribute-permission-masking-and-the-joys-of-the-power-behind-it100955
Ref: 6b100955
Node: The amazing @cluster and what it can do for you101595
Ref: features the-amazing-cluster-and-what-it-can-do-for-you101829
Ref: 6c101829
Node: What we plan for the future102582
Ref: features what-we-plan-for-the-future102793
Ref: 6d102793
Node: Additional features not covered otherwise103273
Ref: features additional-features-not-covered-otherwise103428
Ref: 6e103428
Node: Random notes and things to know about RhostMUSH103961
Ref: features random-notes-and-things-to-know-about-rhostmush104156
Ref: 6f104156
Node: Note on bits their levels and things they do105124
Ref: features note-on-bits-their-levels-and-things-they-do105333
Ref: 70105333
Node: You need to @pcreate your guest characters and set them GUEST106010
Ref: features you-need-to-pcreate-your-guest-characters-and-set-them-guest106249
Ref: 71106249
Node: @powers are INHERITED106683
Ref: features powers-are-inherited106940
Ref: 72106940
Node: @depowers are automatically checked first before anything else107208
Ref: features depowers-are-automatically-checked-first-before-anything-else107420
Ref: 73107420
Node: Zones are unique107604
Ref: features zones-are-unique107833
Ref: 74107833
Node: The db auto-repares itself when it can107927
Ref: features the-db-auto-repares-itself-when-it-can108136
Ref: 75108136
Node: You can get your connect txt to parse ansi108417
Ref: features you-can-get-your-connect-txt-to-parse-ansi108658
Ref: 76108658
Node: Re-compiled binaries do not require an @shutdown108921
Ref: features re-compiled-binaries-do-not-require-an-shutdown109188
Ref: 77109188
Node: Softcode emulations of functions from other servers are included109467
Ref: features softcode-emulations-of-functions-from-other-servers-are-included109683
Ref: 78109683
Node: Comparison of modern MUSH servers110075
Ref: differences doc110246
Ref: 79110246
Ref: differences comparison-of-modern-mush-servers110246
Ref: 7a110246
Node: Differences to expect to the end user between PennMUSH MUX and RhostMUSH111375
Ref: differences differences-to-expect-to-the-end-user-between-pennmush-mux-and-rhostmush111595
Ref: 7b111595
Node: PennMUSH<2>112199
Ref: differences pennmush112345
Ref: 7c112345
Node: MUX<2>112966
Ref: differences mux113130
Ref: 7d113130
Node: RhostMUSH113665
Ref: differences rhostmush113809
Ref: 7e113809
Node: Comparison of features between RhostMUSH PennMUSH and MUX2114543
Ref: differences comparison-of-features-between-rhostmush-pennmush-and-mux2114804
Ref: 7f114804
Node: Organization of help and wizhelp115464
Ref: differences organization-of-help-and-wizhelp115691
Ref: 80115691
Node: Mail comsystem guests master rooms etc116449
Ref: differences mail-comsystem-guests-master-rooms-etc116641
Ref: 81116641
Node: Comparisons of features117031
Ref: differences comparisons-of-features117217
Ref: 82117217
Node: @commands with equivalents117369
Ref: differences commands-with-equivalents117546
Ref: 83117546
Node: @commands unique to RhostMUSH123006
Ref: differences commands-unique-to-rhostmush123177
Ref: 84123177
Node: @lock equivalents123788
Ref: differences lock-equivalents123968
Ref: 85123968
Node: @locks that only exist in RhostMUSH125094
Ref: differences locks-that-only-exist-in-rhostmush125272
Ref: 86125272
Node: Flag and toggle equivalents125459
Ref: differences flag-and-toggle-equivalents125666
Ref: 87125666
Node: Flags and toggles that only exist in RhostMUSH127852
Ref: differences flags-and-toggles-that-only-exist-in-rhostmush128042
Ref: 88128042
Node: Flags128179
Ref: differences flags128294
Ref: 89128294
Node: Toggles128728
Ref: differences toggles128843
Ref: 8a128843
Node: @power equivalents129419
Ref: differences power-equivalents129603
Ref: 8b129603
Node: @power unique to RhostMUSH131265
Ref: differences power-unique-to-rhostmush131357
Ref: 8c131357
Node: Functions equivalents131706
Ref: differences functions-equivalents131947
Ref: 8d131947
Node: Functions that only exist in RhostMUSH144965
Ref: differences functions-that-only-exist-in-rhostmush145072
Ref: 8e145072
Node: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost146756
Ref: differences what-may-need-to-be-modified-to-get-softcode-from-pennmush-tinymush2-tinymush3-or-mux2-to-work-on-rhost147049
Ref: 8f147049
Node: Problematic functions between codebases148323
Ref: differences problematic-functions-between-codebases148560
Ref: 90148560
Node: Problematic features between codebases148705
Ref: differences problematic-features-between-codebases148971
Ref: 91148971
Node: Problematic commands149208
Ref: differences problematic-commands149446
Ref: 92149446
Node: SIDEFX flag149572
Ref: differences sidefx-flag149786
Ref: 93149786
Node: Variable exits150058
Ref: differences variable-exits150257
Ref: 94150257
Node: Zones150677
Ref: differences zones150872
Ref: 95150872
Node: @powers151367
Ref: differences powers151564
Ref: 96151564
Node: Attribute length152011
Ref: differences attribute-length152221
Ref: 97152221
Node: Attribute contents152567
Ref: differences attribute-contents152779
Ref: 98152779
Node: 256 color153064
Ref: differences color153272
Ref: 99153272
Node: Unicode/UTF8153327
Ref: differences unicode-utf8153538
Ref: 9a153538
Node: Attributes per object153761
Ref: differences attributes-per-object153973
Ref: 9b153973
Node: Destroying154307
Ref: differences destroying154520
Ref: 9c154520
Node: object id’s155027
Ref: differences object-id-s155237
Ref: 9d155237
Node: lsearch and search155341
Ref: differences lsearch-and-search155564
Ref: 9e155564
Node: @locks can be different155856
Ref: differences locks-can-be-different156085
Ref: 9f156085
Node: Customer user-locks156240
Ref: differences customer-user-locks156466
Ref: a0156466
Node: Attribute trees156792
Ref: differences attribute-trees157020
Ref: a1157020
Node: Prefix permission locking157372
Ref: differences prefix-permission-locking157597
Ref: a2157597
Node: align and printf157898
Ref: differences align-and-printf158113
Ref: a3158113
Node: MySQL158337
Ref: differences mysql158538
Ref: a4158538
Node: Mail System158678
Ref: differences mail-system158872
Ref: a5158872
Node: Comsystem158983
Ref: differences comsystem159189
Ref: a6159189
Node: Various Functions159295
Ref: differences various-functions159506
Ref: a7159506
Node: Empty Attributes160049
Ref: differences empty-attributes160263
Ref: a8160263
Node: Player Stats160495
Ref: differences player-stats160713
Ref: a9160713
Node: Percent Substitutions160945
Ref: differences percent-substitutions161155
Ref: aa161155
Node: Switches161375
Ref: differences switches161581
Ref: ab161581
Node: Flags<2>161857
Ref: differences id1162049
Ref: ac162049
Node: Aliases162352
Ref: differences aliases162527
Ref: ad162527
Node: Things other mushes can do that Rhost can not and how to emulate it<2>162611
Ref: differences things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it162874
Ref: ae162874
Node: PennMUSH<3>163071
Ref: differences id2163215
Ref: af163215
Node: MUX<3>164101
Ref: differences id3164245
Ref: b0164245
Node: Database164664
Ref: database doc164788
Ref: b1164788
Ref: database database164788
Ref: b2164788
Node: Loading an existing Database164910
Ref: database loading-an-existing-database165054
Ref: b3165054
Node: Converting a flatfile database for use in RhostMUSH166182
Ref: database converting-a-flatfile-database-for-use-in-rhostmush166326
Ref: b4166326
Node: Gettin Started167528
Ref: gettingstarted doc167685
Ref: b5167685
Ref: gettingstarted gettin-started167685
Ref: b6167685
Node: What to ype to get the basics running if you did not choose a pre-existing flatfile167880
Ref: gettingstarted what-to-ype-to-get-the-basics-running-if-you-did-not-choose-a-pre-existing-flatfile168057
Ref: b7168057
Node: Login to #1 from the connect screen169355
Ref: gettingstarted login-to-1-from-the-connect-screen169604
Ref: b8169604
Node: Change #1’s password to something you’ll remember but is hard to guess169745
Ref: gettingstarted change-1-s-password-to-something-you-ll-remember-but-is-hard-to-guess170014
Ref: b9170014
Node: Master Room170293
Ref: gettingstarted master-room170555
Ref: ba170555
Node: Flag and protect Master Room170898
Ref: gettingstarted flag-and-protect-master-room171110
Ref: bb171110
Node: Player Holder Characters171296
Ref: gettingstarted player-holder-characters171559
Ref: bc171559
Node: Immortal Holder172027
Ref: gettingstarted immortal-holder172144
Ref: bd172144
Node: Royalty/Wizard Holder172303
Ref: gettingstarted royalty-wizard-holder172451
Ref: be172451
Node: Councilor/Admin Holder172621
Ref: gettingstarted councilor-admin-holder172776
Ref: bf172776
Node: Architect/Staff Holder172956
Ref: gettingstarted architect-staff-holder173113
Ref: c0173113
Node: Guildmaster/Lead Holder173293
Ref: gettingstarted guildmaster-lead-holder173419
Ref: c1173419
Node: Chown #0 The starting room and #2 The Master room to immholder173603
Ref: gettingstarted chown-0-the-starting-room-and-2-the-master-room-to-immholder173924
Ref: c2173924
Node: Create yourself your own immortal player then log off #1 and into this immortal player174271
Ref: gettingstarted create-yourself-your-own-immortal-player-then-log-off-1-and-into-this-immortal-player174615
Ref: c3174615
Node: Log out of #1 and log into your immortal player174949
Ref: gettingstarted log-out-of-1-and-log-into-your-immortal-player175259
Ref: c4175259
Node: Create your guest characters175495
Ref: gettingstarted create-your-guest-characters175778
Ref: c5175778
Node: Dig a closet to store important objects but non-master room176075
Ref: gettingstarted dig-a-closet-to-store-important-objects-but-non-master-room176358
Ref: c6176358
Node: Set the flags on the closet and ownership of it176568
Ref: gettingstarted set-the-flags-on-the-closet-and-ownership-of-it176878
Ref: c7176878
Node: Create an Admin object for future ease of customization177143
Ref: gettingstarted create-an-admin-object-for-future-ease-of-customization177454
Ref: c8177454
Node: Set the flags on the admin object and ownership and location177607
Ref: gettingstarted set-the-flags-on-the-admin-object-and-ownership-and-location177904
Ref: c9177904
Node: Add admin object to configuration178293
Ref: gettingstarted add-admin-object-to-configuration178594
Ref: ca178594
Node: Reboot your mush to load up the change for the admin object178890
Ref: gettingstarted reboot-your-mush-to-load-up-the-change-for-the-admin-object179181
Ref: cb179181
Node: Do @admin/list to see if it shows the admin object179330
Ref: gettingstarted do-admin-list-to-see-if-it-shows-the-admin-object179634
Ref: cc179634
Node: Load in all the various softcode that you want179839
Ref: gettingstarted load-in-all-the-various-softcode-that-you-want180075
Ref: cd180075
Node: Myrddin MushCron180356
Ref: gettingstarted myrddin-mushcron180481
Ref: ce180481
Node: AshCom181044
Ref: gettingstarted ashcom181191
Ref: cf181191
Node: Mail Wrappers181526
Ref: gettingstarted mail-wrappers181668
Ref: d0181668
Node: Myrddin BBS182046
Ref: gettingstarted myrddin-bbs182196
Ref: d1182196
Node: Other Mushcode182481
Ref: gettingstarted other-mushcode182609
Ref: d2182609
Node: Minimal DB instructions183035
Ref: gettingstarted minimal-db-instructions183250
Ref: d3183250
Node: Startup Steps183821
Ref: gettingstarted startup-steps183905
Ref: d4183905
Node: Ambrosia’s Minimal Rhost DB184362
Ref: gettingstarted ambrosia-s-minimal-rhost-db184485
Ref: d5184485
Node: Version 1 0 5 2020-01-31184712
Ref: gettingstarted version-1-0-5-2020-01-31184834
Ref: d6184834
Node: Introduction186990
Ref: gettingstarted introduction187129
Ref: d7187129
Node: Features187327
Ref: gettingstarted features187451
Ref: d8187451
Node: Configuration187537
Ref: gettingstarted configuration187623
Ref: d9187623
Node: Softcode190600
Ref: gettingstarted softcode190704
Ref: da190704
Node: Functions191304
Ref: gettingstarted functions191386
Ref: db191386
Node: Bitlevels193395
Ref: gettingstarted bitlevels193512
Ref: dc193512
Node: Storytellers194008
Ref: gettingstarted storytellers194097
Ref: dd194097
Node: Builder-BCs194214
Ref: gettingstarted builder-bcs194325
Ref: de194325
Node: Building Head195049
Ref: gettingstarted building-head195157
Ref: df195157
Node: Enforcers195535
Ref: gettingstarted enforcers195638
Ref: e0195638
Node: Coders195827
Ref: gettingstarted coders195927
Ref: e1195927
Node: Head Coder195974
Ref: gettingstarted head-coder196075
Ref: e2196075
Node: MU* Head s196654
Ref: gettingstarted mu-head-s196760
Ref: e3196760
Node: Site Admins197045
Ref: gettingstarted site-admins197148
Ref: e4197148
Node: Globals197546
Ref: gettingstarted globals197630
Ref: e5197630
Node: Quota199765
Ref: gettingstarted quota199886
Ref: e6199886
Node: Functions<2>200179
Ref: gettingstarted id1200300
Ref: e7200300
Node: Compiling200517
Ref: gettingstarted compiling200624
Ref: e8200624
Node: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH200983
Ref: toggles doc201140
Ref: e9201140
Ref: toggles what-flags-toggles-powers-depowers-and-bitlevels-mean-in-rhostmush201140
Ref: ea201140
Node: Flags<3>201420
Ref: toggles flags201561
Ref: eb201561
Node: Toggles<2>201812
Ref: toggles toggles201968
Ref: ec201968
Node: @power202304
Ref: toggles power202460
Ref: ed202460
Node: @depower203005
Ref: toggles depower203180
Ref: ee203180
Node: Multi-tiered bitlevel systems203468
Ref: toggles multi-tiered-bitlevel-systems203655
Ref: ef203655
Node: ghod #1 <bitlevel 7>204423
Ref: toggles ghod-1-bitlevel-7204564
Ref: f0204564
Node: Immortal i <Level 6> - Basically #1204730
Ref: toggles immortal-i-level-6-basically-1204919
Ref: f1204919
Node: Royalty W <Level 5> - FULL wizbit level205391
Ref: toggles royalty-w-level-5-full-wizbit-level205601
Ref: f2205601
Node: Councilor a <Level 4> - High wizbit level206149
Ref: toggles councilor-a-level-4-high-wizbit-level206367
Ref: f3206367
Node: Architect B <Level 3> - Middle wizbit level206950
Ref: toggles architect-b-level-3-middle-wizbit-level207174
Ref: f4207174
Node: Guildmaster g <Level 2> - Lowest wizbit level208042
Ref: toggles guildmaster-g-level-2-lowest-wizbit-level208246
Ref: f5208246
Node: Wanderer <bitlevel 0>208860
Ref: toggles wanderer-bitlevel-0209047
Ref: f6209047
Node: Guest <bitlevel 0 as well>209451
Ref: toggles guest-bitlevel-0-as-well209584
Ref: f7209584
Node: Altering bitlevels209881
Ref: toggles altering-bitlevels210051
Ref: f8210051
Node: Security210274
Ref: security doc210428
Ref: f9210428
Ref: security security210428
Ref: fa210428
Node: Considerations to locking down restrictions in RhostMUSH210711
Ref: security considerations-to-locking-down-restrictions-in-rhostmush210880
Ref: fb210880
Node: Online Blocking object abilities211985
Ref: security online-blocking-object-abilities212185
Ref: fc212185
Node: FLAGS access with @set212692
Ref: security flags-access-with-set212818
Ref: fd212818
Node: TOGGLES @toggle213280
Ref: security toggles-toggle213443
Ref: fe213443
Node: @powers @depowers and @locks213658
Ref: security powers-depowers-and-locks213790
Ref: ff213790
Node: Offline Blocking twinks from being abusive on your game214008
Ref: security offline-blocking-twinks-from-being-abusive-on-your-game214208
Ref: 100214208
Node: Extended lockdown of the mush and considerations214735
Ref: security extended-lockdown-of-the-mush-and-considerations214985
Ref: 101214985
Node: Attribute Restriction215555
Ref: security attribute-restriction215700
Ref: 102215700
Node: Command Restriction215956
Ref: security command-restriction216133
Ref: 103216133
Node: Flag/Toggle Restriction216492
Ref: security flag-toggle-restriction216667
Ref: 104216667
Node: Config restrictions216992
Ref: security config-restrictions217169
Ref: 105217169
Node: Function Restrictions217305
Ref: security function-restrictions217467
Ref: 106217467
Node: Flags<4>217733
Ref: security flags217886
Ref: 107217886
Node: Toggles<3>220166
Ref: security toggles220308
Ref: 108220308
Node: @powers<2>222329
Ref: security powers222472
Ref: 109222472
Node: @depowers224261
Ref: security depowers224411
Ref: 10a224411
Node: Site Restrictions225949
Ref: security site-restrictions226080
Ref: 10b226080
Node: IP based restrictions226360
Ref: security ip-based-restrictions226477
Ref: 10c226477
Node: DNS based restrictions228012
Ref: security dns-based-restrictions228129
Ref: 10d228129
Node: Methods to block anonymous connections and the pros and cons of doing so229406
Ref: security methods-to-block-anonymous-connections-and-the-pros-and-cons-of-doing-so229654
Ref: 10e229654
Node: Blacklisting through external tor_pull sh script230197
Ref: security blacklisting-through-external-tor-pull-sh-script230422
Ref: 10f230422
Node: Blacklisting through internal @blacklist command230860
Ref: security blacklisting-through-internal-blacklist-command231136
Ref: 110231136
Node: Blacklisting through internal @tor command231412
Ref: security blacklisting-through-internal-tor-command231684
Ref: 111231684
Node: Blacklisting through internal @admin command232014
Ref: security blacklisting-through-internal-admin-command232229
Ref: 112232229
Node: Setting up an SSL tunnel for secure connection options232962
Ref: security setting-up-an-ssl-tunnel-for-secure-connection-options233153
Ref: 113233153
Node: Quickstart for SSL setup with stunnel233360
Ref: security quickstart-for-ssl-setup-with-stunnel233539
Ref: 114233539
Node: Detailed SSL setup with stunnel234997
Ref: security detailed-ssl-setup-with-stunnel235176
Ref: 115235176
Node: stunnel directory235777
Ref: security stunnel-directory235905
Ref: 116235905
Node: Modifying netrhost conf236700
Ref: security modifying-netrhost-conf236870
Ref: 117236870
Node: Running the stunnel setup program237991
Ref: security running-the-stunnel-setup-program238170
Ref: 118238170
Node: Starting the stunnel proxy238895
Ref: security starting-the-stunnel-proxy239082
Ref: 119239082
Node: Shutting down the stunnel proxy239297
Ref: security shutting-down-the-stunnel-proxy239483
Ref: 11a239483
Node: Configuring firewall on the host239669
Ref: security configuring-firewall-on-the-host239820
Ref: 11b239820
Node: Maintenance240121
Ref: maintenance doc240224
Ref: 11c240224
Ref: maintenance maintenance240224
Ref: 11d240224
Node: Note about Patching240600
Ref: maintenance note-about-patching240714
Ref: 11e240714
Node: Daily Backups for RhostMUSH241797
Ref: maintenance daily-backups-for-rhostmush241961
Ref: 11f241961
Node: Signals and why you need them for control244337
Ref: maintenance signals-and-why-you-need-them-for-control244506
Ref: 120244506
Node: TERM kill -TERM or kill -15244925
Ref: maintenance term-kill-term-or-kill-15245065
Ref: 121245065
Node: USR1 kill -USR1245569
Ref: maintenance usr1-kill-usr1245733
Ref: 122245733
Node: USR2 kill -USR2246122
Ref: maintenance usr2-kill-usr2246285
Ref: 123246285
Node: KILL kill -KILL or kill -9246671
Ref: maintenance kill-kill-kill-or-kill-9246810
Ref: 124246810
Node: Shutting down gracefully247566
Ref: maintenance shutting-down-gracefully247727
Ref: 125247727
Node: Rhostmush has many ways to shut down the game cleanly247915
Ref: maintenance rhostmush-has-many-ways-to-shut-down-the-game-cleanly248076
Ref: 126248076
Node: WARNING Never kill -9 Rhost248408
Ref: maintenance warning-never-kill-9-rhost248569
Ref: 127248569
Node: Autoshutdown script249143
Ref: maintenance autoshutdown-script249286
Ref: 128249286
Node: Network Port redirector249658
Ref: maintenance network-port-redirector249841
Ref: 129249841
Node: Using the built-in cron system for periodically running commands250476
Ref: maintenance using-the-built-in-cron-system-for-periodically-running-commands250692
Ref: 12a250692
Node: Syntax for rhost cron250889
Ref: maintenance syntax-for-rhost-cron251022
Ref: 12b251022
Node: Example syntaxt for rhost cron251918
Ref: maintenance example-syntaxt-for-rhost-cron252017
Ref: 12c252017
Node: The following scripts are used in the game directory252349
Ref: maintenance the-following-scripts-are-used-in-the-game-directory252565
Ref: 12d252565
Node: Textfiles for RhostMUSH253519
Ref: maintenance textfiles-for-rhostmush253662
Ref: 12e253662
Node: Textfile Frequently Asked Questions255448
Ref: maintenance textfile-frequently-asked-questions255554
Ref: 12f255554
Node: Troubleshooting256539
Ref: troubleshooting doc256651
Ref: 130256651
Ref: troubleshooting troubleshooting256651
Ref: 131256651
Node: Reporting bugs or getting help256925
Ref: troubleshooting reporting-bugs-or-getting-help257052
Ref: 132257052
Node: Troubleshooting issues with starting up257470
Ref: troubleshooting troubleshooting-issues-with-starting-up257587
Ref: 133257587
Node: Problem If it says the shared ID is already in use258248
Ref: troubleshooting problem-if-it-says-the-shared-id-is-already-in-use258451
Ref: 134258451
Node: Problem Your log file is massive and your mush is running258707
Ref: troubleshooting problem-your-log-file-is-massive-and-your-mush-is-running259010
Ref: 135259010
Node: Problem The database flatfile you’re loading can’t load because a db is already defined259220
Ref: troubleshooting problem-the-database-flatfile-you-re-loading-can-t-load-because-a-db-is-already-defined259540
Ref: 136259540
Node: Problem The mail database won’t load and mail shows ‘offline’259808
Ref: troubleshooting problem-the-mail-database-won-t-load-and-mail-shows-offline260062
Ref: 137260062
Node: Stack limit and debugging260259
Ref: troubleshooting stack-limit-and-debugging260427
Ref: 138260427
Node: How to reset the password for #1261730
Ref: troubleshooting how-to-reset-the-password-for-1261916
Ref: 139261916
Node: Method 1 Reset to Default Password262327
Ref: troubleshooting method-1-reset-to-default-password262492
Ref: 13a262492
Node: Method 2 Increase Permissions of Immortals262696
Ref: troubleshooting method-2-increase-permissions-of-immortals262861
Ref: 13b262861
Node: Troubleshooting difficulties compiling RhostMUSH263081
Ref: troubleshooting troubleshooting-difficulties-compiling-rhostmush263268
Ref: 13c263268
Node: Changes to conf for high-bit CPUs263466
Ref: troubleshooting changes-to-conf-for-high-bit-cpus263642
Ref: 13d263642
Node: Changes to autconf for certain systems264459
Ref: troubleshooting changes-to-autconf-for-certain-systems264635
Ref: 13e264635
Node: Dealing with DB Corruption265624
Ref: troubleshooting dealing-with-db-corruption265815
Ref: 13f265815
Node: If the mush says it can’t find your database files266640
Ref: troubleshooting if-the-mush-says-it-can-t-find-your-database-files266835
Ref: 140266835
Node: Check the names of the database files in your ‘data’ directory267157
Ref: troubleshooting check-the-names-of-the-database-files-in-your-data-directory267361
Ref: 141267361
Node: Check your netrhost conf file267693
Ref: troubleshooting check-your-netrhost-conf-file267933
Ref: 142267933
Node: Check your mush config file268445
Ref: troubleshooting check-your-mush-config-file268610
Ref: 143268610
Node: If the mush says it can’t read or load your database files269023
Ref: troubleshooting if-the-mush-says-it-can-t-read-or-load-your-database-files269355
Ref: 144269355
Node: Verify you have enough disk space quota269764
Ref: troubleshooting verify-you-have-enough-disk-space-quota269960
Ref: 145269960
Node: Verify you have enough disk space system270613
Ref: troubleshooting verify-you-have-enough-disk-space-system270809
Ref: 146270809
Node: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!271585
Ref: troubleshooting if-the-mush-seems-to-load-fine-but-i-can-t-log-in-anyone-and-when-i-do-all-the-names-and-attributes-of-things-seem-to-be-gone271895
Ref: 147271895
Node: The bad news272640
Ref: troubleshooting the-bad-news272850
Ref: 148272850
Node: The good news273251
Ref: troubleshooting the-good-news273499
Ref: 149273499
Node: Now to restore your database?274241
Ref: troubleshooting now-to-restore-your-database274468
Ref: 14a274468
Node: Bringing up your mail database274597
Ref: troubleshooting bringing-up-your-mail-database274838
Ref: 14b274838
Node: If after restoring main database your mail database works275107
Ref: troubleshooting if-after-restoring-main-database-your-mail-database-works275316
Ref: 14c275316
Node: If after restoring main database your mail database does not work275786
Ref: troubleshooting if-after-restoring-main-database-your-mail-database-does-not-work275995
Ref: 14d275995
Node: Dealing with a corrupt mail database276251
Ref: troubleshooting dealing-with-a-corrupt-mail-database276385
Ref: 14e276385
Node: Backing up your mail database277070
Ref: troubleshooting backing-up-your-mail-database277235
Ref: 14f277235
Node: Automatically recovering your mail database277706
Ref: troubleshooting automatically-recovering-your-mail-database277918
Ref: 150277918
Node: Manually recovering your mail database278648
Ref: troubleshooting manually-recovering-your-mail-database278822
Ref: 151278822
Node: Advanced Features280392
Ref: advanced doc280515
Ref: 152280515
Ref: advanced advanced-features280515
Ref: 153280515
Node: Adding hardcoded modules280804
Ref: advanced adding-hardcoded-modules280929
Ref: 154280929
Node: Modifying sourcode to add a module281168
Ref: advanced modifying-sourcode-to-add-a-module281324
Ref: 155281324
Node: Adding an @startup to make use of modules281652
Ref: advanced adding-an-startup-to-make-use-of-modules281855
Ref: 156281855
Node: Contributing your module back to Rhost282434
Ref: advanced contributing-your-module-back-to-rhost282594
Ref: 157282594
Node: Shutting down gracefully<2>282903
Ref: advanced shutting-down-gracefully283051
Ref: 158283051
Node: Rhostmush has many ways to shut down the game cleanly<2>283301
Ref: advanced rhostmush-has-many-ways-to-shut-down-the-game-cleanly283471
Ref: 159283471
Node: WARNING Never kill -9 Rhost<2>283805
Ref: advanced warning-never-kill-9-rhost283975
Ref: 15a283975
Node: Reality levels284551
Ref: advanced reality-levels284719
Ref: 15b284719
Node: Visibility285187
Ref: advanced visibility285280
Ref: 15c285280
Node: Descriptions286296
Ref: advanced descriptions286422
Ref: 15d286422
Node: Configuration parameters287668
Ref: advanced configuration-parameters287801
Ref: 15e287801
Node: Example mush conf289357
Ref: advanced example-mush-conf289486
Ref: 15f289486
Node: Commands290038
Ref: advanced commands290155
Ref: 160290155
Node: Functions<3>290689
Ref: advanced functions290828
Ref: 161290828
Node: Example 1 A simplified Witchcraft setup291828
Ref: advanced example-1-a-simplified-witchcraft-setup291980
Ref: 162291980
Node: Example 2 A WoD setup295136
Ref: advanced example-2-a-wod-setup295294
Ref: 163295294
Node: Example 3 Softcode298936
Ref: advanced example-3-softcode299046
Ref: 164299046
Node: Execscript and external programs and scripts301018
Ref: advanced execscript-and-external-programs-and-scripts301196
Ref: 165301196
Node: Mush variables301427
Ref: advanced mush-variables301552
Ref: 166301552
Node: Built in variables301675
Ref: advanced built-in-variables301781
Ref: 167301781
Node: Dynamic variables302319
Ref: advanced dynamic-variables302452
Ref: 168302452
Node: Register variables302610
Ref: advanced register-variables302716
Ref: 169302716
Node: set object302989
Ref: advanced set-object303142
Ref: 16a303142
Node: The format of the fields are303521
Ref: advanced the-format-of-the-fields-are303607
Ref: 16b303607
Node: Dynamic variables<2>303782
Ref: advanced id65303908
Ref: 16c303908
Node: Examples304035
Ref: advanced examples304111
Ref: 16d304111
Node: Register variables<2>304426
Ref: advanced id66304552
Ref: 16e304552
Node: Examples The last example clears register 0304759
Ref: advanced examples-the-last-example-clears-register-0304871
Ref: 16f304871
Node: Example bash script305100
Ref: advanced example-bash-script305257
Ref: 170305257
Node: Notes and warnings305735
Ref: advanced notes-and-warnings305916
Ref: 171305916
Node: Scripts to be used with execscript306451
Ref: advanced scripts-to-be-used-with-execscript306604
Ref: 172306604
Node: Using printf for advanced text output308462
Ref: advanced using-printf-for-advanced-text-output308617
Ref: 173308617
Node: Example one308967
Ref: advanced example-one309083
Ref: 174309083
Node: Example two309535
Ref: advanced example-two309673
Ref: 175309673
Node: Example three310223
Ref: advanced example-three310341
Ref: 176310341
Node: Format for image files311229
Ref: advanced format-for-image-files311378
Ref: 177311378
Node: HELP key indexes for the values314481
Ref: advanced help-key-indexes-for-the-values314582
Ref: 178314582
Node: Upgrading a Legacy RhostMUSH Installation328889
Ref: legacy doc329040
Ref: 179329040
Ref: legacy upgrading-a-legacy-rhostmush-installation329040
Ref: 17a329040
Node: Converting database betwen GDBM and QDBM329356
Ref: legacy converting-database-betwen-gdbm-and-qdbm329529
Ref: 17b329529
Node: Downgrading QDBM to GDBM329864
Ref: legacy downgrading-qdbm-to-gdbm330008
Ref: 17c330008
Node: Upgradging GDBM to QDBM330972
Ref: legacy upgradging-gdbm-to-qdbm331116
Ref: 17d331116
Node: While logged in to your mush issue the following commands331776
Ref: legacy while-logged-in-to-your-mush-issue-the-following-commands331935
Ref: 17e331935
Node: Verify the files exist332439
Ref: legacy verify-the-files-exist332624
Ref: 17f332624
Node: Shutdown the MUSH332950
Ref: legacy shutdown-the-mush333103
Ref: 180333103
Node: From the Server directory333179
Ref: legacy from-the-server-directory333340
Ref: 181333340
Node: From the Server/game directory334433
Ref: legacy from-the-server-game-directory334632
Ref: 182334632
Node: While logged into the mush issue the following commands334891
Ref: legacy while-logged-into-the-mush-issue-the-following-commands335120
Ref: 183335120
Node: Verify that you have QDBM running and your valid values335476
Ref: legacy verify-that-you-have-qdbm-running-and-your-valid-values335666
Ref: 184335666
Node: Updating RhostMUSH prior to 3 9 5p2335863
Ref: legacy updating-rhostmush-prior-to-3-9-5p2336089
Ref: 185336089
Node: Adding MySQL to RhostMUSH older than 3 9 5p2339908
Ref: legacy adding-mysql-to-rhostmush-older-than-3-9-5p2340085
Ref: 186340085
Node: Comparison of Flags342838
Ref: flags doc342987
Ref: 187342987
Ref: flags comparison-of-flags342987
Ref: 188342987
Node: Comparison of powers344560
Ref: powers doc344697
Ref: 189344697
Ref: powers comparison-of-powers344697
Ref: 18a344697
Node: RhostMUSH Internal Help Files347435
Ref: helpfile doc347585
Ref: 18b347585
Ref: helpfile rhostmush-internal-help-files347585
Ref: 18c347585
Node: RhostMUSH Internal Wizhelp Files347652
Ref: wizhelpfile doc347791
Ref: 18d347791
Ref: wizhelpfile rhostmush-internal-wizhelp-files347791
Ref: 18e347791
Node: Changelog347864
Ref: changelog doc348009
Ref: 18f348009
Ref: changelog changelog348009
Ref: 190348009
Ref: changelog id1348009
Ref: 191348009
Node: RhostMUSH 4 0348992
Ref: changelog changelog-4-0349086
Ref: 192349086
Ref: changelog rhostmush-4-0349086
Ref: 193349086
Node: RhostMUSH 3 9 5352038
Ref: changelog changelog-3-9-5352156
Ref: 194352156
Ref: changelog rhostmush-3-9-5352156
Ref: 195352156
Node: RhostMUSH 3 9 4356554
Ref: changelog changelog-3-9-4356674
Ref: 196356674
Ref: changelog rhostmush-3-9-4356674
Ref: 197356674
Node: RhostMUSH 3 9 3357947
Ref: changelog changelog-3-9-3358067
Ref: 198358067
Ref: changelog rhostmush-3-9-3358067
Ref: 199358067
Node: RhostMUSH 3 9 2358249
Ref: changelog changelog-3-9-2358369
Ref: 19a358369
Ref: changelog rhostmush-3-9-2358369
Ref: 19b358369
Node: RhostMUSH 3 9 1359150
Ref: changelog changelog-3-9-1359274
Ref: 19c359274
Ref: changelog rhostmush-3-9-1359274
Ref: 19d359274
Node: RhostMUSH 3 9 0 p00361037
Ref: changelog changelog-3-9-0p00361165
Ref: 19e361165
Ref: changelog rhostmush-3-9-0-p00361165
Ref: 19f361165
Node: Changes361352
Ref: changelog changes361444
Ref: 1a0361444
Node: Additions369976
Ref: changelog additions370089
Ref: 1a1370089
Node: Functions<4>370228
Ref: changelog functions370317
Ref: 1a2370317
Node: Commands<2>373191
Ref: changelog commands373297
Ref: 1a3373297
Node: Flags<5>374556
Ref: changelog flags374660
Ref: 1a4374660
Node: Toggles<4>374781
Ref: changelog toggles374865
Ref: 1a5374865
Node: Admin Params375259
Ref: changelog admin-params375374
Ref: 1a6375374
Node: Bug Fixes376270
Ref: changelog bug-fixes376367
Ref: 1a7376367
Node: RhostMUSH 3 2 4 p18384926
Ref: changelog changelog-3-2-4p18385058
Ref: 1a8385058
Ref: changelog rhostmush-3-2-4-p18385058
Ref: 1a9385058
Node: Changes<2>385183
Ref: changelog id2385281
Ref: 1aa385281
Node: Bug Fixes<2>387470
Ref: changelog id3387568
Ref: 1ab387568
Node: RhostMUSH 3 2 4 p17390047
Ref: changelog changelog-3-2-4p17390179
Ref: 1ac390179
Ref: changelog rhostmush-3-2-4-p17390179
Ref: 1ad390179
Node: Changes<3>390305
Ref: changelog id4390403
Ref: 1ae390403
Node: Bug Fixes<3>391107
Ref: changelog id5391205
Ref: 1af391205
Node: RhostMUSH 3 2 4 p16391990
Ref: changelog changelog-3-2-4p16392122
Ref: 1b0392122
Ref: changelog rhostmush-3-2-4-p16392122
Ref: 1b1392122
Node: Changes<4>392309
Ref: changelog id6392407
Ref: 1b2392407
Node: Additions<2>394204
Ref: changelog id7394326
Ref: 1b3394326
Node: Functions<5>394400
Ref: changelog id8394472
Ref: 1b4394472
Node: Admin Params<2>394621
Ref: changelog id9394745
Ref: 1b5394745
Node: Bug Fixes<4>395472
Ref: changelog id10395575
Ref: 1b6395575
Node: RhostMUSH 3 2 4 p15397287
Ref: changelog changelog-3-2-4p15397419
Ref: 1b7397419
Ref: changelog rhostmush-3-2-4-p15397419
Ref: 1b8397419
Node: Changes<5>397606
Ref: changelog id11397704
Ref: 1b9397704
Node: Additions<3>400567
Ref: changelog id12400689
Ref: 1ba400689
Node: Functions<6>400805
Ref: changelog id13400894
Ref: 1bb400894
Node: Flags<6>401306
Ref: changelog id14401414
Ref: 1bc401414
Node: Toggles<5>401764
Ref: changelog id15401851
Ref: 1bd401851
Node: Admin Params<3>402123
Ref: changelog id16402247
Ref: 1be402247
Node: Bug Fixes<5>403980
Ref: changelog id17404083
Ref: 1bf404083
Node: RhostMUSH 3 2 4 p14406555
Ref: changelog changelog-3-2-4p14406687
Ref: 1c0406687
Ref: changelog rhostmush-3-2-4-p14406687
Ref: 1c1406687
Node: Changes<6>406874
Ref: changelog id18406972
Ref: 1c2406972
Node: Additions<4>408856
Ref: changelog id19408978
Ref: 1c3408978
Node: Functions<7>409119
Ref: changelog id20409211
Ref: 1c4409211
Node: Commands<3>409940
Ref: changelog id21410049
Ref: 1c5410049
Node: Flags<7>410584
Ref: changelog id22410691
Ref: 1c6410691
Node: Toggles<6>410975
Ref: changelog id23411062
Ref: 1c7411062
Node: Admin Params<4>411175
Ref: changelog id24411299
Ref: 1c8411299
Node: Bug Fixes<6>412613
Ref: changelog id25412716
Ref: 1c9412716
Node: RhostMUSH 3 2 4 p13414834
Ref: changelog changelog-3-2-4p13414966
Ref: 1ca414966
Ref: changelog rhostmush-3-2-4-p13414966
Ref: 1cb414966
Node: Changes<7>415153
Ref: changelog id26415251
Ref: 1cc415251
Node: Additions<5>417046
Ref: changelog id27417168
Ref: 1cd417168
Node: Functions<8>417304
Ref: changelog id28417396
Ref: 1ce417396
Node: Commands<4>418612
Ref: changelog id29418722
Ref: 1cf418722
Node: De-Powers418810
Ref: changelog de-powers418918
Ref: 1d0418918
Node: Toggles<7>419078
Ref: changelog id30419166
Ref: 1d1419166
Node: Admin Params<5>419337
Ref: changelog id31419461
Ref: 1d2419461
Node: Bug Fixes<7>420449
Ref: changelog id32420552
Ref: 1d3420552
Node: RhostMUSH 3 2 4 p12422909
Ref: changelog changelog-3-2-4p12423041
Ref: 1d4423041
Ref: changelog rhostmush-3-2-4-p12423041
Ref: 1d5423041
Node: Changes<8>423228
Ref: changelog id33423326
Ref: 1d6423326
Node: Additions<6>424755
Ref: changelog id34424877
Ref: 1d7424877
Node: Functions<9>424995
Ref: changelog id35425087
Ref: 1d8425087
Node: Commands<5>425453
Ref: changelog id36425562
Ref: 1d9425562
Node: Flags<8>425812
Ref: changelog id37425900
Ref: 1da425900
Node: Admin Params<6>425990
Ref: changelog id38426114
Ref: 1db426114
Node: Bug Fixes<8>427383
Ref: changelog id39427486
Ref: 1dc427486
Node: RhostMUSH 3 2 4 p11428373
Ref: changelog changelog-3-2-4p11428505
Ref: 1dd428505
Ref: changelog rhostmush-3-2-4-p11428505
Ref: 1de428505
Node: Changes<9>428692
Ref: changelog id40428790
Ref: 1df428790
Node: Additions<7>429827
Ref: changelog id41429949
Ref: 1e0429949
Node: Functions<10>430072
Ref: changelog id42430165
Ref: 1e1430165
Node: Commands<6>430290
Ref: changelog id43430402
Ref: 1e2430402
Node: Toggles<8>430515
Ref: changelog id44430605
Ref: 1e3430605
Node: Admin Params<7>430990
Ref: changelog id45431114
Ref: 1e4431114
Node: Bug Fixes<9>431719
Ref: changelog id46431822
Ref: 1e5431822
Node: RhostMUSH 3 2 4 p10432881
Ref: changelog changelog-3-2-4p10433012
Ref: 1e6433012
Ref: changelog rhostmush-3-2-4-p10433012
Ref: 1e7433012
Node: Changes<10>433201
Ref: changelog id47433300
Ref: 1e8433300
Node: Additions<8>433374
Ref: changelog id48433497
Ref: 1e9433497
Node: Functions<11>433572
Ref: changelog id49433645
Ref: 1ea433645
Node: Admin Params<8>433767
Ref: changelog id50433892
Ref: 1eb433892
Node: Bug Fixes<10>434014
Ref: changelog id51434118
Ref: 1ec434118
Node: RhostMUSH 3 2 4 p9434261
Ref: changelog changelog-3-2-4p9434391
Ref: 1ed434391
Ref: changelog rhostmush-3-2-4-p9434391
Ref: 1ee434391
Node: Changes<11>434578
Ref: changelog id52434676
Ref: 1ef434676
Node: Additions<9>435231
Ref: changelog id53435353
Ref: 1f0435353
Node: Functions<12>435470
Ref: changelog id54435560
Ref: 1f1435560
Node: Flags<9>436137
Ref: changelog id55436246
Ref: 1f2436246
Node: Toggles<9>436526
Ref: changelog id56436613
Ref: 1f3436613
Node: Admin Params<9>436781
Ref: changelog id57436905
Ref: 1f4436905
Node: Bug Fixes<11>437256
Ref: changelog id58437359
Ref: 1f5437359
Node: RhostMUSH 3 2 4 p8438170
Ref: changelog changelog-3-2-4p8438299
Ref: 1f6438299
Ref: changelog rhostmush-3-2-4-p8438299
Ref: 1f7438299
Node: Changes<12>438488
Ref: changelog id59438587
Ref: 1f8438587
Node: Additions<10>440032
Ref: changelog id60440156
Ref: 1f9440156
Node: Functions<13>440300
Ref: changelog id61440394
Ref: 1fa440394
Node: Commands<7>440855
Ref: changelog id62440967
Ref: 1fb440967
Node: Flags<10>441149
Ref: changelog id63441259
Ref: 1fc441259
Node: Toggles<10>441673
Ref: changelog id64441763
Ref: 1fd441763
Node: Admin Params<10>441955
Ref: changelog id65442081
Ref: 1fe442081
Node: Bug Fixes<12>442867
Ref: changelog id66442971
Ref: 1ff442971
Node: RhostMUSH 3 2 4 p7443225
Ref: changelog changelog-3-2-4p7443354
Ref: 200443354
Ref: changelog rhostmush-3-2-4-p7443354
Ref: 201443354
Node: Changes<13>443515
Ref: changelog id67443617
Ref: 202443617
Node: Admin Params<11>443869
Ref: changelog id68443993
Ref: 203443993
Node: Bug Fixes<13>444036
Ref: changelog id69444140
Ref: 204444140
Node: RhostMUSH 3 2 4 p6444295
Ref: changelog changelog-3-2-4p6444424
Ref: 205444424
Ref: changelog rhostmush-3-2-4-p6444424
Ref: 206444424
Node: Changes<14>444569
Ref: changelog id70444668
Ref: 207444668
Node: Admins Params444748
Ref: changelog admins-params444869
Ref: 208444869
Node: Bug Fixes<14>445235
Ref: changelog id71445336
Ref: 209445336
Node: RhostMUSH 3 2 4 p5445714
Ref: changelog changelog-3-2-4p5445843
Ref: 20a445843
Ref: changelog rhostmush-3-2-4-p5445843
Ref: 20b445843
Node: Changes<15>446004
Ref: changelog id72446106
Ref: 20c446106
Node: Admin Params<12>446282
Ref: changelog id73446406
Ref: 20d446406
Node: Bug Fixes<15>446612
Ref: changelog id74446716
Ref: 20e446716
Node: RhostMUSH 3 2 4 p4446933
Ref: changelog changelog-3-2-4p4447062
Ref: 20f447062
Ref: changelog rhostmush-3-2-4-p4447062
Ref: 210447062
Node: Changes<16>447271
Ref: changelog id75447370
Ref: 211447370
Node: Additions<11>448640
Ref: changelog id76448763
Ref: 212448763
Node: Functions<14>448887
Ref: changelog id77448981
Ref: 213448981
Node: Commands<8>449158
Ref: changelog id78449272
Ref: 214449272
Node: Toggles<11>449550
Ref: changelog id79449642
Ref: 215449642
Node: Alias Additions449718
Ref: changelog alias-additions449846
Ref: 216449846
Node: Commands<9>449930
Ref: changelog id80450004
Ref: 217450004
Node: Admin Params<13>450070
Ref: changelog id81450198
Ref: 218450198
Node: Bug Fixes<16>450519
Ref: changelog id82450623
Ref: 219450623
Node: RhostMUSH 3 2 4 p3451357
Ref: changelog changelog-3-2-4p3451459
Ref: 21a451459
Ref: changelog rhostmush-3-2-4-p3451459
Ref: 21b451459
Node: Changes<17>451687
Ref: changelog id83451786
Ref: 21c451786
Node: Additions<12>452493
Ref: changelog id84452619
Ref: 21d452619
Node: Functions<15>452775
Ref: changelog id85452870
Ref: 21e452870
Node: Commands<10>454273
Ref: changelog id86454386
Ref: 21f454386
Node: Flags<11>454528
Ref: changelog id87454634
Ref: 220454634
Node: Powers454952
Ref: changelog powers455057
Ref: 221455057
Node: Toggles<12>455251
Ref: changelog id88455338
Ref: 222455338
Node: Alias Additions<2>455490
Ref: changelog id89455621
Ref: 223455621
Node: Functions<16>455754
Ref: changelog id90455854
Ref: 224455854
Node: Commands<11>456373
Ref: changelog id91456491
Ref: 225456491
Node: Flags<12>456666
Ref: changelog id92456762
Ref: 226456762
Node: Admin Params<14>456826
Ref: changelog id93456957
Ref: 227456957
Node: Bug Fixes<17>457156
Ref: changelog id94457260
Ref: 228457260
Node: Historical Non-Disclosure Agreement458389
Ref: nda doc458511
Ref: 229458511
Ref: nda historical-non-disclosure-agreement458511
Ref: 22a458511
Node: Copyright459629
Ref: index copyright459760
Ref: 22b459760
Node: Indices and tables460741
Ref: index indices-and-tables460828
Ref: 22c460828

End Tag Table


Local Variables:
coding: utf-8
End:
