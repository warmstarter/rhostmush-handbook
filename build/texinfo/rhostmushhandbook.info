This is rhostmushhandbook.info, produced by makeinfo version 6.5 from
rhostmushhandbook.texi.

     RhostMUSH Handbook , Mar 30, 2021

     wstarter

     Copyright © 2021, wstarter

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* rhostmushhandbook: (rhostmushhandbook.info). One line description of project
END-INFO-DIR-ENTRY


   Generated by Sphinx 3.5.1.


File: rhostmushhandbook.info,  Node: Top,  Next: Installing RhostMUSH,  Up: (dir)

RhostMUSH Handbook
******************

     RhostMUSH Handbook , Mar 30, 2021

     wstarter

     Copyright © 2021, wstarter

The RhostMUSH source tree offers many abilities and options not normally
found in any other flavor of mush.  This doesn’t make it better than
other servers (though we think so `j/k') but it does give you a wider
selection of configurability, which, as you know, is the best part of
setting up a mush.  (yea, right)

   * A high-performance duel-quota system.

   * A complete rewrite of key areas and referbishments of all the other
     areas.

   * An on-line recover tool for accidental db destruction.

   * Multi-wizard architecture for better control of staff.

   * Multi-power system to tweek abilities of players.

   * Multi-zone system where people can belong to multiple zones.

   * Built in error correction for db corruption or other misuse.

   * Built in accounting for those annoying twinks who try to hack.

   * Many new functions and commands not seen anywhere else.

   * A lot more that could drag this document out for pages.

* Menu:

* Installing RhostMUSH::
* What RhostMUSH is about and what’s so great about RhostMUSH::
* Comparison of modern MUSH servers::
* Database::
* Gettin Started::
* What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH.
* Security::
* Maintenance::
* Troubleshooting::
* Advanced Features::
* Format for image files::
* Requirements if Using Windows::
* Upgrading a Legacy RhostMUSH Installation::
* Comparison of Flags::
* Comparison of powers::
* RhostMUSH Internal Help Files::
* RhostMUSH Internal Wizhelp Files::
* Changelog::
* Historical Non-Disclosure Agreement::
* Copyright::
* Indices and tables::

 — The Detailed Node Listing —

Installing RhostMUSH

* RhostMUSH Requirements::
* Obtaining RhostMUSH Source Code::
* Options for making a MUSH::
* Compiling RhostMush::
* Configuring the game::
* Creating RHostMUSH with a Provided DB::
* Basic Instructions for starting a new RhostMUSH::
* Customtize the textfiles for your game::
* Three Options for Starting a MUSH::

RhostMUSH Requirements

* System Requirements::
* Software Requirements::
* Hosting Requirements::

Software Requirements

* Optional Packages::

Options for making a MUSH

* Compile time options::
* Configuration file options::
* Starting database options::
* The Choices We Make::

Compiling RhostMush

* Setup directory permissions::
* Compile the source code::

Compile the source code

* Saving your compile options::
* Troubleshooting compile errors::
* Recompiling the source code::

Configuring the game

* Persistent configurable game options::
* Starting the game::
* First login to the game::

Creating RHostMUSH with a Provided DB

* Important before you actually start building::
* Using the prebuilt flatfile::

Using the prebuilt flatfile

* To load a prebuilt flatfile::

Basic Instructions for starting a new RhostMUSH

* Manual configuration of source code::
* Loading a database for your MUSH::
* Option; Things to do once you have connected if you did NOT use a provided database: Option Things to do once you have connected if you did NOT use a provided database.

Loading a database for your MUSH

* Option; Only perform these steps if using a provided database: Option Only perform these steps if using a provided database.

Three Options for Starting a MUSH

* Option 1; Creating a new game with a blank database: Option 1 Creating a new game with a blank database.
* Options 2; Creating a new game with Ambrosia’s default database: Options 2 Creating a new game with Ambrosia’s default database.
* Option 3; Creating a new game with the generic default database: Option 3 Creating a new game with the generic default database.

What RhostMUSH is about and what’s so great about RhostMUSH

* Recycle bin::
* @snapshot::
* Wizard and Immortals by default::
* Titles and Captions to a player’s name::
* Have an alternate name with locks for NPC obfuscation::
* Have multiple player aliases::
* Actively control how dark works both game-wide and individually::
* Make config file changes in-game without having to reboot or have shell access::
* Execute any binary or script as a localized function::
* Customized percent substitutions (like %n, %#, etc): Customized percent substitutions like %n %# etc.
* Redefine percent substitutions (like %n, %#, etc): Redefine percent substitutions like %n %# etc.
* Localize command and function overrides in a sandbox::
* Multiple Zones::
* Optionally control, enable, or disable sideeffects: Optionally control enable or disable sideeffects.
* Have 31 cross-interactive realities for locations::
* Override any command with softcode::
* The abilility to raise or lower permissions on the various::
* Customize new commands on the connect screen::
* Softcode any txt file (like connect.txt): Softcode any txt file like connect txt.
* Advanced tracing methods for debugging your code including labels!::
* Built in pretty-printing of attributes with the parenmatch() function: Built in pretty-printing of attributes with the parenmatch function.
* Plenty more not mentioned!::
* Advanced features of RhostMUSH::
* Random notes and things to know about RhostMUSH::

Advanced features of RhostMUSH

* Debugging/Tracing::
* Zoning::
* Reality Levels::
* Function and Command Overriding::
* The Recycle Bin::
* Percent Substitution Adding/Overriding::
* Hooking::
* Command based uselocks::
* Differentating between command and listen locks::
* Wizard auto-overiding and how to disable it::
* Advanced FLAG and TOGGLE control::
* Advanced site control::
* Auto-Registration::
* Which bit level is best?::
* What are the limits for size/growth for RhostMUSH?::
* Sqlite and MySQL/Maria setup and why use it?::
* Executing outside scripts and binaries within RhostMUSH::
* Pulling external data into RhostMUSH::
* Integrating a unix cron right into RhostMUSH::
* Signal handling, how it works, and when and why use it: Signal handling how it works and when and why use it.
* Setting up global parents, global @parents, global attribute formatting, and other global setups: Setting up global parents global @parents global attribute formatting and other global setups.
* RhostMUSH limitations and how to get around them::
* Things other mushes can do that Rhost can not and how to emulate it::
* Advanced guest setup::
* Attribute permission masking and the joys of the power behind it::
* The amazing @cluster and what it can do for you::
* What we plan for the future::
* Additional features not covered otherwise::

Things other mushes can do that Rhost can not and how to emulate it

* PennMUSH::
* MUX::

Random notes and things to know about RhostMUSH

* Note on bits, their levels, and things they do: Note on bits their levels and things they do.
* You need to @pcreate your guest characters and set them GUEST::
* @powers are INHERITED::
* @depowers are automatically checked first before anything else::
* Zones are unique::
* The db auto-repares itself when it can::
* You can get your connect.txt to parse ansi: You can get your connect txt to parse ansi.
* Re-compiled binaries do not require an @shutdown::
* Softcode emulations of functions from other servers are included::

Comparison of modern MUSH servers

* Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH: Differences to expect to the end user between PennMUSH MUX and RhostMUSH.
* Comparison of features between RhostMUSH, PennMUSH, and MUX2: Comparison of features between RhostMUSH PennMUSH and MUX2.
* Organization of help and wizhelp::
* Mail, comsystem, guests, master rooms, etc..: Mail comsystem guests master rooms etc.
* Comparisons of features::
* @commands with equivalents::
* @commands unique to RhostMUSH::
* @lock equivalents::
* @locks that only exist in RhostMUSH::
* Flag and toggle equivalents::
* Flags and toggles that only exist in RhostMUSH::
* @power equivalents::
* Functions equivalents::
* What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost.
* Things other mushes can do that Rhost can not and how to emulate it: Things other mushes can do that Rhost can not and how to emulate it<2>.

Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH

* PennMUSH: PennMUSH<2>.
* MUX: MUX<2>.
* RhostMUSH::

Flags and toggles that only exist in RhostMUSH

* Flags::
* Toggles::

@power equivalents

* @power unique to RhostMUSH::

Functions equivalents

* Functions that only exist in RhostMUSH::

What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost

* Problematic functions between codebases::
* Problematic features between codebases::
* Problematic commands::
* SIDEFX flag::
* Variable exits::
* Zones::
* @powers::
* Attribute length::
* Attribute contents::
* 256 color::
* Unicode/UTF8::
* Attributes per object::
* Destroying::
* object id’s::
* lsearch() and search(): lsearch and search.
* @locks can be different::
* Customer user-locks::
* Attribute trees::
* Prefix permission locking::
* align() and printf(): align and printf.
* MySQL::
* Mail System::
* Comsystem::
* Various Functions::
* Empty Attributes::
* Player Stats::
* Percent Substitutions::
* Switches::
* Flags: Flags<2>.
* Aliases::

Things other mushes can do that Rhost can not and how to emulate it

* PennMUSH: PennMUSH<3>.
* MUX: MUX<3>.

Database

* Loading an existing Database::
* Converting a flatfile database for use in RhostMUSH::
* Note about Compiling::

Gettin Started

* What to ype to get the basics running if you did not choose a pre-existing flatfile::
* Minimal DB instructions::
* Ambrosia’s Minimal Rhost DB::

What to ype to get the basics running if you did not choose a pre-existing flatfile

* Login to #1 from the connect screen::
* Change #1’s password to something you’ll remember but is hard to guess::
* Master Room::
* Flag and protect Master Room::
* Player Holder Characters::
* Chown #0 (The starting room) and #2 (The Master room) to immholder: Chown #0 The starting room and #2 The Master room to immholder.
* Create yourself your own immortal player then log off #1 and into this immortal player::
* Log out of #1 and log into your immortal player::
* Create your guest characters::
* Dig a closet to store important objects but non-master room::
* Set the flags on the closet and ownership of it::
* Create an Admin object for future ease of customization::
* Set the flags on the admin object and ownership and location::
* Add admin object to configuration::
* Reboot your mush to load up the change for the admin object::
* Do @admin/list to see if it shows the admin object::
* Load in all the various softcode that you want::

Player Holder Characters

* Immortal Holder::
* Royalty/Wizard Holder::
* Councilor/Admin Holder::
* Architect/Staff Holder::
* Guildmaster/Lead Holder::

Load in all the various softcode that you want

* Myrddin MushCron::
* AshCom::
* Mail Wrappers::
* Myrddin BBS::
* Other Mushcode::

Minimal DB instructions

* Startup Steps::

Ambrosia’s Minimal Rhost DB

* Version; 1.0.5 2020-01-31: Version 1 0 5 2020-01-31.
* Introduction::
* Features::
* Bitlevels::
* Quota::
* Functions: Functions<2>.
* Compiling::

Features

* Configuration::
* Softcode::
* Functions::

Bitlevels

* Storytellers::
* Builder-BCs::
* Building Head::
* Enforcers::
* Coders::
* Head Coder::
* MU* Head(s): MU* Head s.
* Site Admins::
* Globals::

What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH

* Flags: Flags<3>.
* Toggles: Toggles<2>.
* @power::
* @depower::
* Multi-tiered bitlevel systems::
* Altering bitlevels::

Multi-tiered bitlevel systems

* ghod (#1) <bitlevel 7>: ghod #1 <bitlevel 7>.
* Immortal(i) <Level 6> - Basically #1: Immortal i <Level 6> - Basically #1.
* Royalty(W) <Level 5> - FULL wizbit level: Royalty W <Level 5> - FULL wizbit level.
* Councilor(a) <Level 4> - High wizbit level: Councilor a <Level 4> - High wizbit level.
* Architect(B) <Level 3> - Middle wizbit level: Architect B <Level 3> - Middle wizbit level.
* Guildmaster(g) <Level 2> - Lowest wizbit level: Guildmaster g <Level 2> - Lowest wizbit level.
* Wanderer <bitlevel 0>::
* Guest <bitlevel 0 as well>::

Security

* Considerations to locking down restrictions in RhostMUSH::
* Extended lockdown of the mush and considerations::
* Methods to block anonymous connections and the pros and cons of doing so::
* Setting up an SSL tunnel for secure connection options::

Considerations to locking down restrictions in RhostMUSH

* Online; Blocking object abilities: Online Blocking object abilities.
* Offline; Blocking twinks from being abusive on your game: Offline Blocking twinks from being abusive on your game.

Online: Blocking object abilities

* FLAGS (access with @set): FLAGS access with @set.
* TOGGLES (@toggle): TOGGLES @toggle.
* @powers, @depowers, and @locks: @powers @depowers and @locks.

Extended lockdown of the mush and considerations

* Attribute Restriction::
* Command Restriction::
* Flag/Toggle Restriction::
* Config restrictions::
* Function Restrictions::
* Flags: Flags<4>.
* Toggles: Toggles<3>.
* @powers: @powers<2>.
* @depowers::
* Site Restrictions::

Site Restrictions

* IP based restrictions::
* DNS based restrictions::

Methods to block anonymous connections and the pros and cons of doing so

* Blacklisting through external tor_pull.sh script: Blacklisting through external tor_pull sh script.
* Blacklisting through internal @blacklist command::
* Blacklisting through internal @tor command::
* Blacklisting through internal @admin command::

Setting up an SSL tunnel for secure connection options

* Quickstart for SSL setup with stunnel::
* Detailed SSL setup with stunnel::

Detailed SSL setup with stunnel

* stunnel directory::
* Modifying netrhost.conf: Modifying netrhost conf.
* Running the stunnel setup program::
* Starting the stunnel proxy::
* Shutting down the stunnel proxy::
* Configuring firewall on the host::

Maintenance

* Note about Patching::
* Daily Backups for RhostMUSH::
* Signals and why you need them for control::
* Shutting down gracefully::
* Autoshutdown script::
* Network Port redirector::
* Using the built-in cron system for periodically running commands::
* The following scripts are used in the game directory::
* Textfiles for RhostMUSH::

Signals and why you need them for control

* TERM (kill -TERM or kill -15): TERM kill -TERM or kill -15.
* USR1 (kill -USR1): USR1 kill -USR1.
* USR2 (kill -USR2): USR2 kill -USR2.
* KILL (kill -KILL or kill -9): KILL kill -KILL or kill -9.

Shutting down gracefully

* Rhostmush has many ways to shut down the game cleanly::
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost.

Using the built-in cron system for periodically running commands

* Syntax for rhost.cron: Syntax for rhost cron.

Syntax for rhost.cron

* Example syntaxt for rhost.cron: Example syntaxt for rhost cron.

Textfiles for RhostMUSH

* Textfile Frequently Asked Questions::

Troubleshooting

* Reporting bugs or getting help::
* Stack limit and debugging::
* How to reset the password for #1::
* Troubleshooting difficulties compiling RhostMUSH::
* Dealing with DB Corruption::
* Dealing with a corrupt mail database::

Reporting bugs or getting help

* Troubleshooting issues with starting up::

Troubleshooting issues with starting up

* Problem; If it says the shared ID is already in use: Problem If it says the shared ID is already in use.
* Problem; Your log file is massive and your mush is running: Problem Your log file is massive and your mush is running.
* Problem; The database flatfile you’re loading can’t load because a db is already defined: Problem The database flatfile you’re loading can’t load because a db is already defined.
* Problem; The mail database won’t load and mail shows ‘offline’: Problem The mail database won’t load and mail shows ‘offline’.

How to reset the password for #1

* Method 1; Reset to Default Password: Method 1 Reset to Default Password.
* Method 2; Increase Permissions of Immortals: Method 2 Increase Permissions of Immortals.

Troubleshooting difficulties compiling RhostMUSH

* Changes to conf for high-bit CPUs::
* Changes to autconf for certain systems::

Dealing with DB Corruption

* If the mush says it can’t find your database files::
* If the mush says it can’t read or load your database files::
* If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!::
* Bringing up your mail database::

If the mush says it can’t find your database files

* Check the names of the database files in your ‘data’ directory::
* Check your netrhost.conf file: Check your netrhost conf file.
* Check your mush.config file: Check your mush config file.

If the mush says it can’t read or load your database files

* Verify you have enough disk space. (quota): Verify you have enough disk space quota.
* Verify you have enough disk space. (system): Verify you have enough disk space system.

If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

* The bad news::
* The good news::
* Now, to restore your database?: Now to restore your database?.

Bringing up your mail database

* If after restoring main database your mail database works::
* If after restoring main database your mail database does not work::

Dealing with a corrupt mail database

* Backing up your mail database::
* Automatically recovering your mail database::
* Manually recovering your mail database::

Advanced Features

* Installing using an ansible playbook::
* Adding hardcoded modules::
* Shutting down gracefully: Shutting down gracefully<2>.
* Reality levels::
* Execscript and external programs and scripts::
* Using printf() for advanced text output: Using printf for advanced text output.

Adding hardcoded modules

* Modifying sourcode to add a module::
* Adding an @startup to make use of modules::
* Contributing your module back to Rhost::

Shutting down gracefully

* Rhostmush has many ways to shut down the game cleanly: Rhostmush has many ways to shut down the game cleanly<2>.
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost<2>.

Reality levels

* Visibility::
* Descriptions::
* Configuration parameters::
* Example mush.conf: Example mush conf.
* Commands::
* Functions: Functions<3>.
* Example 1; A simplified Witchcraft setup: Example 1 A simplified Witchcraft setup.
* Example 2; A WoD setup: Example 2 A WoD setup.
* Example 3; Softcode: Example 3 Softcode.

Execscript and external programs and scripts

* Mush variables::
* set object::
* Example bash script::
* Notes and warnings::
* Scripts to be used with execscript::

Mush variables

* Built in variables::
* Dynamic variables::
* Register variables::

set object

* The format of the fields are::

The format of the fields are

* Dynamic variables: Dynamic variables<2>.
* Register variables: Register variables<2>.

Dynamic variables

* Examples::

Register variables

* Examples (The last example clears register 0): Examples The last example clears register 0.

Using printf() for advanced text output

* Example one::
* Example two::
* Example three::

Format for image files

* HELP key indexes for the values;: HELP key indexes for the values.

Requirements if Using Windows

* Installing on Windows 10 with BASH::
* Installing on Windows with Cygwin::
* Startig RhostMUSH on Windows::

Upgrading a Legacy RhostMUSH Installation

* Converting database betwen GDBM and QDBM::
* Updating RhostMUSH prior to 3.9.5p2: Updating RhostMUSH prior to 3 9 5p2.
* Adding MySQL to RhostMUSH older than 3.9.5p2: Adding MySQL to RhostMUSH older than 3 9 5p2.

Converting database betwen GDBM and QDBM

* Downgrading QDBM to GDBM::
* Upgradging GDBM to QDBM::

Upgradging GDBM to QDBM

* While logged in to your mush, issue the following commands: While logged in to your mush issue the following commands.
* Verify the files exist::
* Shutdown the MUSH::
* From the Server directory::
* From the Server/game directory::
* While logged into the mush issue the following commands::
* Verify that you have QDBM running and your valid values::

Changelog

* RhostMUSH 4.0: RhostMUSH 4 0.
* RhostMUSH 3.9.5: RhostMUSH 3 9 5.
* RhostMUSH 3.9.4: RhostMUSH 3 9 4.
* RhostMUSH 3.9.3: RhostMUSH 3 9 3.
* RhostMUSH 3.9.2: RhostMUSH 3 9 2.
* RhostMUSH 3.9.1: RhostMUSH 3 9 1.
* RhostMUSH 3.9.0 p00: RhostMUSH 3 9 0 p00.
* RhostMUSH 3.2.4 p18: RhostMUSH 3 2 4 p18.
* RhostMUSH 3.2.4 p17: RhostMUSH 3 2 4 p17.
* RhostMUSH 3.2.4 p16: RhostMUSH 3 2 4 p16.
* RhostMUSH 3.2.4 p15: RhostMUSH 3 2 4 p15.
* RhostMUSH 3.2.4 p14: RhostMUSH 3 2 4 p14.
* RhostMUSH 3.2.4 p13: RhostMUSH 3 2 4 p13.
* RhostMUSH 3.2.4 p12: RhostMUSH 3 2 4 p12.
* RhostMUSH 3.2.4 p11: RhostMUSH 3 2 4 p11.
* RhostMUSH 3.2.4 p10: RhostMUSH 3 2 4 p10.
* RhostMUSH 3.2.4 p9: RhostMUSH 3 2 4 p9.
* RhostMUSH 3.2.4 p8: RhostMUSH 3 2 4 p8.
* RhostMUSH 3.2.4 p7: RhostMUSH 3 2 4 p7.
* RhostMUSH 3.2.4 p6: RhostMUSH 3 2 4 p6.
* RhostMUSH 3.2.4 p5: RhostMUSH 3 2 4 p5.
* RhostMUSH 3.2.4 p4: RhostMUSH 3 2 4 p4.
* RhostMUSH 3.2.4 p3: RhostMUSH 3 2 4 p3.

RhostMUSH 3.9.0 p00

* Changes::
* Additions::
* Admin Params::
* Bug Fixes::

Additions

* Functions: Functions<4>.
* Commands: Commands<2>.
* Flags: Flags<5>.
* Toggles: Toggles<4>.

RhostMUSH 3.2.4 p18

* Changes: Changes<2>.
* Bug Fixes: Bug Fixes<2>.

RhostMUSH 3.2.4 p17

* Changes: Changes<3>.
* Bug Fixes: Bug Fixes<3>.

RhostMUSH 3.2.4 p16

* Changes: Changes<4>.
* Additions: Additions<2>.
* Admin Params: Admin Params<2>.
* Bug Fixes: Bug Fixes<4>.

Additions

* Functions: Functions<5>.

RhostMUSH 3.2.4 p15

* Changes: Changes<5>.
* Additions: Additions<3>.
* Admin Params: Admin Params<3>.
* Bug Fixes: Bug Fixes<5>.

Additions

* Functions: Functions<6>.
* Flags: Flags<6>.
* Toggles: Toggles<5>.

RhostMUSH 3.2.4 p14

* Changes: Changes<6>.
* Additions: Additions<4>.
* Admin Params: Admin Params<4>.
* Bug Fixes: Bug Fixes<6>.

Additions

* Functions: Functions<7>.
* Commands: Commands<3>.
* Flags: Flags<7>.
* Toggles: Toggles<6>.

RhostMUSH 3.2.4 p13

* Changes: Changes<7>.
* Additions: Additions<5>.
* Admin Params: Admin Params<5>.
* Bug Fixes: Bug Fixes<7>.

Additions

* Functions: Functions<8>.
* Commands: Commands<4>.
* De-Powers::
* Toggles: Toggles<7>.

RhostMUSH 3.2.4 p12

* Changes: Changes<8>.
* Additions: Additions<6>.
* Admin Params: Admin Params<6>.
* Bug Fixes: Bug Fixes<8>.

Additions

* Functions: Functions<9>.
* Commands: Commands<5>.
* Flags: Flags<8>.

RhostMUSH 3.2.4 p11

* Changes: Changes<9>.
* Additions: Additions<7>.
* Admin Params: Admin Params<7>.
* Bug Fixes: Bug Fixes<9>.

Additions

* Functions: Functions<10>.
* Commands: Commands<6>.
* Toggles: Toggles<8>.

RhostMUSH 3.2.4 p10

* Changes: Changes<10>.
* Additions: Additions<8>.
* Admin Params: Admin Params<8>.
* Bug Fixes: Bug Fixes<10>.

Additions

* Functions: Functions<11>.

RhostMUSH 3.2.4 p9

* Changes: Changes<11>.
* Additions: Additions<9>.
* Admin Params: Admin Params<9>.
* Bug Fixes: Bug Fixes<11>.

Additions

* Functions: Functions<12>.
* Flags: Flags<9>.
* Toggles: Toggles<9>.

RhostMUSH 3.2.4 p8

* Changes: Changes<12>.
* Additions: Additions<10>.
* Admin Params: Admin Params<10>.
* Bug Fixes: Bug Fixes<12>.

Additions

* Functions: Functions<13>.
* Commands: Commands<7>.
* Flags: Flags<10>.
* Toggles: Toggles<10>.

RhostMUSH 3.2.4 p7

* Changes: Changes<13>.
* Admin Params: Admin Params<11>.
* Bug Fixes: Bug Fixes<13>.

RhostMUSH 3.2.4 p6

* Changes: Changes<14>.
* Admins Params::
* Bug Fixes: Bug Fixes<14>.

RhostMUSH 3.2.4 p5

* Changes: Changes<15>.
* Admin Params: Admin Params<12>.
* Bug Fixes: Bug Fixes<15>.

RhostMUSH 3.2.4 p4

* Changes: Changes<16>.
* Additions: Additions<11>.
* Alias Additions::
* Admin Params: Admin Params<13>.
* Bug Fixes: Bug Fixes<16>.

Additions

* Functions: Functions<14>.
* Commands: Commands<8>.
* Toggles: Toggles<11>.

Alias Additions

* Commands: Commands<9>.

RhostMUSH 3.2.4 p3

* Changes: Changes<17>.
* Additions: Additions<12>.
* Alias Additions: Alias Additions<2>.
* Admin Params: Admin Params<14>.
* Bug Fixes: Bug Fixes<17>.

Additions

* Functions: Functions<15>.
* Commands: Commands<10>.
* Flags: Flags<11>.
* Powers::
* Toggles: Toggles<12>.

Alias Additions

* Functions: Functions<16>.
* Commands: Commands<11>.
* Flags: Flags<12>.



File: rhostmushhandbook.info,  Node: Installing RhostMUSH,  Next: What RhostMUSH is about and what’s so great about RhostMUSH,  Prev: Top,  Up: Top

1 Installing RhostMUSH
**********************

* Menu:

* RhostMUSH Requirements::
* Obtaining RhostMUSH Source Code::
* Options for making a MUSH::
* Compiling RhostMush::
* Configuring the game::
* Creating RHostMUSH with a Provided DB::
* Basic Instructions for starting a new RhostMUSH::
* Customtize the textfiles for your game::
* Three Options for Starting a MUSH::


File: rhostmushhandbook.info,  Node: RhostMUSH Requirements,  Next: Obtaining RhostMUSH Source Code,  Up: Installing RhostMUSH

1.1 RhostMUSH Requirements
==========================

* Menu:

* System Requirements::
* Software Requirements::
* Hosting Requirements::


File: rhostmushhandbook.info,  Node: System Requirements,  Next: Software Requirements,  Up: RhostMUSH Requirements

1.1.1 System Requirements
-------------------------

   * Operating System: Unix-like

        - Almost any variant of Unix or Linux should compile cleanly and
          run

        - Preliminary support for Windows with an equivalent development
          environment

   * Memory: 12-100 MB

        - Depending on size of database and buffers, as well as selected
          options

        - 1 GB (memory and swap combined) is the minimum required to
          compile

   * Storage: 100 MB and up

        - Depending on size of database and backup retention policy

     Note: Third-party applications can use considerably more resources


File: rhostmushhandbook.info,  Node: Software Requirements,  Next: Hosting Requirements,  Prev: System Requirements,  Up: RhostMUSH Requirements

1.1.2 Software Requirements
---------------------------

RhostMUSH is a Linux or Unix based server software that runs as a daemon
on the host.  In order to build this software, you will need the bare
minimum of the ability to run ‘make’ commands.

Package requirements are as follows:

   * bash/ksh/dash (or compatible shell - for use with build menu)

   * glibc and gcc/clang (compiling the code)

   * git (to clone the source and maintain patches)

   * libcrypt (for password encryption - this is usually standard on
     unix based systems)

* Menu:

* Optional Packages::


File: rhostmushhandbook.info,  Node: Optional Packages,  Up: Software Requirements

1.1.2.1 Optional Packages
.........................

RhostMUSH also offers optional linking and library attachments.  For
some of these libraries it will attempt to do auto-detection, but in a
worse case scenario, there exists override hashes in the menu to disable
options it thinks exist that do not.

Optional packages are as follows:

   * libpcre (if you wish to use system pcre libraries instead of the
     built-in ones)

   * mysql client & mysql_config (required for mysql capabilities)

   * openssl dev libraries/headers (for MUX password compatibility, and
     digest() and advanced cryptology functionality.

   * ruby/perl/python/etc (for custom interactive dynamic custom
     functions with the execscript() feature)

   * sqlite3 libraries (required for sqlite capabilities)


File: rhostmushhandbook.info,  Node: Hosting Requirements,  Prev: Software Requirements,  Up: RhostMUSH Requirements

1.1.3 Hosting Requirements
--------------------------

   * You will need a stable host and access to open a single port number
     of your choice on the firewall.

   * Most games choose a number between 1025 and 9999, by convention.

   * Please make sure your debug_id matches the port number + 5.

        - So if your port is 4201, your debug_id will be 42015.

        - The debug_id is for use in the API daemon that runs Rhost as a
          container to keep track of heap, stack, and execution
          location.


File: rhostmushhandbook.info,  Node: Obtaining RhostMUSH Source Code,  Next: Options for making a MUSH,  Prev: RhostMUSH Requirements,  Up: Installing RhostMUSH

1.2 Obtaining RhostMUSH Source Code
===================================

The only official source for obtaining RhostMUSH is through the
‘RhostMUSH’ github account.  If the source code was obtained in some
other manner, there are potentially any number of unintentional or
intentional issues that you might run into.

The recommended method of obtaing RhostMUSH is to clone it’s git
reposistory:

     git clone https://github.com/RhostMUSH/trunk Rhost

It is possible, but not recommended to download RhostMUSH via a web
browser:

     https://github.com/RhostMUSH/trunk/archive/master.zip

     Note: This documentation generally assumes that you obtained the
     RhostMUSH source code by cloning it’s git repository or at the very
     least downloading an archive of the source code from the GitHub
     website.

     It also assumes that the base directory from which all commands are
     run and all files are looked for is that git repo’s ‘Server/’
     directory, unless specifically noted otherwise.


File: rhostmushhandbook.info,  Node: Options for making a MUSH,  Next: Compiling RhostMush,  Prev: Obtaining RhostMUSH Source Code,  Up: Installing RhostMUSH

1.3 Options for making a MUSH
=============================

There is a `lot' of options once your start making your MUSH, but there
are also a few big choices right as you get started making a MUSH. No
matter which choices you ultimately make, there are certain things you
will need to know how to do.  This chapter is going to walk you through
making the simplest possible version of RhostMUSH. It’s going to show
you the things you would have to do no matter which choices you were
making.

In the process of making that simplest possible RhostMUSH you’ll also
learn what the basics of those choices are and when and how you would
make them.  Later chapters will get much more into all of those choices,
but they will also assume you know everything in this chapter already,
or at least have it as a handy point of reference.

While there are lots of little options, there are three big areas where
you make those choices.

* Menu:

* Compile time options::
* Configuration file options::
* Starting database options::
* The Choices We Make::


File: rhostmushhandbook.info,  Node: Compile time options,  Next: Configuration file options,  Up: Options for making a MUSH

1.3.1 Compile time options
--------------------------

One of the first steps of making a MUSH or really any computer program
is to compile the source code.  This takes what’s basically text files
full of code and turns them into a program you can run.  Within that
source code are a number of options to choose from, but any time you
want to change one of them, you have to recompile the source code and
then restart the MUSH.

These choices are typically made through the ‘confsource’ menu which
you’ll be seeing momentarily.  There are some pretty big choices here
from whether or not you want hardcoded +help and comsys, deciding
between a more secure server and certtain powerful but potentially
dangerous MUSHcode options, and then whether or not you want to be able
to connect to a variety of external programs like databases, webservers,
and even other programming languages.


File: rhostmushhandbook.info,  Node: Configuration file options,  Next: Starting database options,  Prev: Compile time options,  Up: Options for making a MUSH

1.3.2 Configuration file options
--------------------------------

While there are some options in RhostMUSH that can only be changed
through recompiling the source code, there are way more options that can
be changed without having to recompile.  These choices are mostly made
through the ‘netrhost.conf’ file.  Whenever a MUSH starts up or gets
rebooted, it’s going to look to what’s in that file.  A few of those
choices relate to further configuring the choices you made with
‘confsource’

The ‘netrhost.conf’ file has some aesthetic options like what if
anything it says when the database is being saved or whether or not your
MUSH will allow ANSI color, both in general, but also in things like
people’s names.  It has a lot of very esoteric options for tuning the
performance and safety of your MUSH. It also is where you define things
that connect to your database like your master room and guests.  It
let’s you determine which powers your staff does or does not have, and
it’s also where you have an option to change the password for #1 should
you forget it.  There are ways to change some of these options from
within the MUSH and even have those changes become new defaults that
survive a reboot.  One thing you set there that you definitely can’t
change from within the MUSH, is which port it runs on.


File: rhostmushhandbook.info,  Node: Starting database options,  Next: The Choices We Make,  Prev: Configuration file options,  Up: Options for making a MUSH

1.3.3 Starting database options
-------------------------------

This last big choice is one that you probably are well aware of at least
some of the things it allows for, mostly because the database is
basically where everyone on a MUSH lives.  Most of the choices you ever
make about your MUSH will happen in the database and it’s something
that’s basically always going to be changing in more ways than any one
person could follow.  No matter how vast the database of a MUSH gets,
they all started somewhere, and that’s the last big choice you have to
make.

Depending on how you look at it, there’s somewhere between thousands of
choices and two choices for a starting database.  What I mean is that
you have the choice of starting with a brand new database to populate,
only a room (#0) and you (#1), even the Master Room is something you’d
have to add to it.  The other option is to import an existing database,
though to choose that option you’d also have to have access to an
existing database.

Besides the brand new database that can be made on-demand, RhostMUSH
comes with two databases that you can use to get your start.  One is
called ‘Minimal’ and the other is called ‘Ambrosia’ after the lead
RhostMUSH developed that made it.  Despite the name, they’re both fairly
minimal, there’s no grid in either, but what you get is a lot of
pre-installed softcode and security, as well as a ‘netrhost.conf`’ file
that has been tuned to work well with it.  Even if you don’t use those
databases you can take ideas for the ‘netrhost.conf’ file for tuning
your MUSH or even use some RhostMUSH commands to import that softcode
into your database.


File: rhostmushhandbook.info,  Node: The Choices We Make,  Prev: Starting database options,  Up: Options for making a MUSH

1.3.4 The Choices We Make
-------------------------

Well, not you’re aware of those three big choices, what they are, and
where you’ll run across them.  Later in this Handbook we’ll be going
through those choices in-depth.  In this chapter, what we’ll be doing is
using the default options for for ‘confsource’ and ‘netrhost.conf’ and a
brand new database.  Those options and that blank slate are necessary so
that you have in front of you a working MUSH with only #0 and #1 and get
shown the way of building it into whatever is your dream MUSH, and I
know we all have one.

There will be a chance to make all those other choices later, in fact
that will be happening very soon.  There’s a lot of very interesting
choices that you can make with RhostMUSH, too many for anyone to ever be
able to use them all.  If you don’t start with mastering the basics,
you’ll never end up knowing what are the most RhostMUSH options.  I
can’t tell you what they are, it’s truly something you have to discover
on your own.  Remember, you want to build your dream MUSH, not mine.

     Note: Unless you are intending to start with a brand new database,
     you must be aware of it’s needs and expectations for the settings
     of ‘confsource’ and ‘netrhost.conf’ Starter databases tend to
     distribute with them config files of at least the options they
     expect set or not set during the process of configuring and
     compiling the server.

     Knowing which database you intend to use is the first choice made
     of these initial major configuration options, but that last that is
     made part of the MUSH.


File: rhostmushhandbook.info,  Node: Compiling RhostMush,  Next: Configuring the game,  Prev: Options for making a MUSH,  Up: Installing RhostMUSH

1.4 Compiling RhostMush
=======================

* Menu:

* Setup directory permissions::
* Compile the source code::


File: rhostmushhandbook.info,  Node: Setup directory permissions,  Next: Compile the source code,  Up: Compiling RhostMush

1.4.1 Setup directory permissions
---------------------------------

In order to both compile and run, all of the RhostMUSH files and
directories need to have the proper permissions set.  If you obtained
the source code directly from GitHub, it is likely that this step is not
required, but there is no harm in running it anyway:

     ./dirsetup.sh

If you did NOT obtain the source code directly from GitHub, it is
possible that even the above script will fail to run with ‘permission
denied’ or similar errors.  It is recommended that you obtain the source
code from there, but if for whatever reason this is not an option,
manually adjust your permissions and then re-run the automated
permission script:

     chmod +rx bin/*.sh src/*.sh game/*.sh game/Startmush game/db_*
     ./dirsetup.sh


File: rhostmushhandbook.info,  Node: Compile the source code,  Prev: Setup directory permissions,  Up: Compiling RhostMush

1.4.2 Compile the source code
-----------------------------

Once the source code has been obtained and the proper file and directory
permissions have been set, the RhostMUSH source code is ready to be
compiled.  This is typically done through an interactive program where
you configure the options you want to have available to your
installation:

     make confsource

     Note: It is recommended that if you are just starting out with
     RhostMUSH that you compile for the first time using the default
     compile options which have specifically been tuned to be closest to
     what the average person would need or expect.  Changing these
     options before you have a grood grasp of what they mean and how
     RhostMUSH works on a deeper level can potentially cause security
     issues, reduce compatibility with softcode rom other types of MUSH
     servers, as well as waste system resources.

* Menu:

* Saving your compile options::
* Troubleshooting compile errors::
* Recompiling the source code::


File: rhostmushhandbook.info,  Node: Saving your compile options,  Next: Troubleshooting compile errors,  Up: Compile the source code

1.4.2.1 Saving your compile options
...................................

‘make confsource’ will remember the most recent options you used to
compile the source code for the next time you use ‘make confsource’ It
might still be a good idea to more permanently save the options you used
to attempt to compile.  However, you still might want to have these
options saved more permanently, just in case.  At the ‘make confsource’
menu there is an option to save your current settings to a file.  If you
choose to do this, you will find the the save file in the ‘bin/’
directory.


File: rhostmushhandbook.info,  Node: Troubleshooting compile errors,  Next: Recompiling the source code,  Prev: Saving your compile options,  Up: Compile the source code

1.4.2.2 Troubleshooting compile errors
......................................

Should this result in an error, a script has been included to correct
the most common errors, after which you can once more try to compile:

     ./bin/script_setup.sh
     make confsource

Once the compile process successfully complete, you should be able to
start-up your new RhostMUSH server.  If it complains about missing
binaries make sure they are linked.  The provided script will fix this
issue, and is not harmful to run in any situation:

     make links


File: rhostmushhandbook.info,  Node: Recompiling the source code,  Prev: Troubleshooting compile errors,  Up: Compile the source code

1.4.2.3 Recompiling the source code
...................................

If you plan to use ‘make confsource’ to recompile your source, you
should first issue a ‘make clean’ before re-issuing a ‘make confsource’

A failure to issue ‘make clean’ prior to re-compiling with ‘make
confsource’ can potentially leave stale object files which may cause
unforseen issues when running code, including but not limited to random
crashes.  Generally whenever recompiling it’s good to always make clean
first.

     Note: You may also issue ‘make source’ if the ‘Makefile’ is already
     defined how you want it to be.  Please remember to ‘make clean’
     before ‘make source`’ whenever you alter the code or import new
     source code.


File: rhostmushhandbook.info,  Node: Configuring the game,  Next: Creating RHostMUSH with a Provided DB,  Prev: Compiling RhostMush,  Up: Installing RhostMUSH

1.5 Configuring the game
========================

* Menu:

* Persistent configurable game options::
* Starting the game::
* First login to the game::


File: rhostmushhandbook.info,  Node: Persistent configurable game options,  Next: Starting the game,  Up: Configuring the game

1.5.1 Persistent configurable game options
------------------------------------------

Upon compiling a RhostMUSH server, if it doesn’t already exist, a
‘netrhost.conf’ is copied into the ‘game/’ directory for your game.  It
includes useful defaults for most compile-time options that will work
well for most games, particularly ones using both the default
‘confsource’ options and related database.

This configuration is derived from ‘defaults/game/netrhost.conf.default’

While this ‘netrhost.conf’ is very well documented and quite easy to
change in some places, but there are also some rather technical options
that you it’s important to know the full implications of this.

     Note: The default ‘netrhost.conf’ starts the game running on the
     port `4021' of the server.  If this is your time creating a MUSH,
     it is recommended that this setting is the only one that you
     potentially change, and only if there is a good reason to.  Ports
     below 1024 are priviliged ports and can not be used for this
     purpose.


File: rhostmushhandbook.info,  Node: Starting the game,  Next: First login to the game,  Prev: Persistent configurable game options,  Up: Configuring the game

1.5.2 Starting the game
-----------------------

Once done, you start up the system with the following command:

     ./Startmush

It will prompt you to start a new db if it doesn’t find one.

You may also do the commands individually:

     [csh] netrhost -s netrhost.conf >& netrhost.log &
     [sh]  netrhost -s netrhost.conf > netrhost.log 2>&1 &


File: rhostmushhandbook.info,  Node: First login to the game,  Prev: Starting the game,  Up: Configuring the game

1.5.3 First login to the game
-----------------------------

Once started, log in the #1 character (Wizard) with it’s appropiate
password (no, not ‘potrzebie’, but ‘Nyctasia’).  There were private
reasons for the password change.

Once in, do a @shutdown to save the database.  Then you can run Startup
normally.  You may make a backup of your database at anytime on-line by
utilizing the @dump/flat option.  A script comes with this distribution
that allows the ability of auto-archiving your database for a
configurable number of backups.


File: rhostmushhandbook.info,  Node: Creating RHostMUSH with a Provided DB,  Next: Basic Instructions for starting a new RhostMUSH,  Prev: Configuring the game,  Up: Installing RhostMUSH

1.6 Creating RHostMUSH with a Provided DB
=========================================

* Menu:

* Important before you actually start building::
* Using the prebuilt flatfile::


File: rhostmushhandbook.info,  Node: Important before you actually start building,  Next: Using the prebuilt flatfile,  Up: Creating RHostMUSH with a Provided DB

1.6.1 Important before you actually start building
--------------------------------------------------

The main parts of making your RhostMUSH, easy pleasy:

  1. The stunnel directory contains TLS/SSL connectivity.  This has to
     be linked to another port and will tunnel to the mush port.  The
     README file explains how to set up and configure your TLS/SSL
     connection.

  2. ./patch.sh – This makes sure you have the latest code.  If you got
     this by git clone ‘https://github.com/RhostMUSH/trunk’ then you can
     ignore patching.  You can use ./patch.sh at any time to update your
     code.  It ignores local.c incase you make your own modules.

  3. make confsource.  Yup, it’s menu driven, nifty eh?

       1. Options you may want to select (other than the defaults):

       2. 5 (%c is selected by default, but choose %x as well for
          MUX/TM3 compat)

       3. 9 (if you want $commands to require the COMMAND flag)

       4. 16 (if you want a wider WHO listing like older versions of
          MUX)

       5. 22 (if you’re converting a TinyMUSH3 or TinyMUX/MUX2 flatfile)

       6. 24 (if you have issues with -lssl not being found)

       7. B3 (for 64 character attribute names)

       8. B6 (select 8K for Penn/MUX2/TM3 default, up to 32K. 64K is
          network intensive)

       9. B5 (will be autoselected if you choose 8K or more.  Pick this
          anyway)

       10. B4 (if you have sqlite libraries and wish to use this)

  4. ‘r’ to compile with the settings you selected.

  5. Modify your netrhost.conf file as specified.  Make sure to align
     your port and debug_id as shown in the netrhost.conf file.

  6. If you wish to port in an old flatfile, please refer to the readme
     directory on how to port your flatfile in (README.DBLOADING).


File: rhostmushhandbook.info,  Node: Using the prebuilt flatfile,  Prev: Important before you actually start building,  Up: Creating RHostMUSH with a Provided DB

1.6.2 Using the prebuilt flatfile
---------------------------------

There are pre-loaded flatfile databases you can use at this point.  The
netrhost.db.flat and corrisponding netrhost.conf file will be located in
the minimal-DBs/minimal_db directory.

You may auto-load the minimal db and corresponding netrhost.conf file
with the command:

     ./minimal.sh

This is ran from within the ‘game’ directory.  Once this is ran, you
will need to customize the netrhost.conf file for your purposes.  The
port and debug_id must be changed at the very least.  Keep the debug_id
coordinated to the port as described.

* Menu:

* To load a prebuilt flatfile::


File: rhostmushhandbook.info,  Node: To load a prebuilt flatfile,  Up: Using the prebuilt flatfile

1.6.2.1 To load a prebuilt flatfile
...................................

  1. Make a backup of your existing netrhost.conf file:

          cp game/netrhost.conf game/netrhost.conf.backup

  2. Copy the netrhost.conf file into your game directory:

          cp -f ./minimal-DBs/minimal_db/netrhost.conf ./game/netrhost.conf

  3. At this point you can modify your netrhost.conf file settings in
     your game directory.  Using an editor modify the ‘port’ and
     ‘debug_id’ respectively in your netrhost.conf as state.  The ‘port’
     will be the port the mush listens on, the debug_id is for the
     debug-stack and is your port with a ‘5’ at the end.  So if your
     port is 4444, the debug_id is 44445

  4. Load in the flatfile into the mush (You could do this in the
     Startmush as well) Manually:

          cd game

     ./db_load data/netrhost.gdbm
     ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new dwF

     Start your mush:

          ./Startmush

     This will load the db that you loaded.

     —————OR——-

     From Startmush when prompted, hit <RETURN> for searching then
     select the number of the netrhost.db.flat that is listed as
     ~/minimal-DBs/minimal_db/netrhost.db.flat:

          ./Startmush


File: rhostmushhandbook.info,  Node: Basic Instructions for starting a new RhostMUSH,  Next: Customtize the textfiles for your game,  Prev: Creating RHostMUSH with a Provided DB,  Up: Installing RhostMUSH

1.7 Basic Instructions for starting a new RhostMUSH
===================================================

* Menu:

* Manual configuration of source code::
* Loading a database for your MUSH::
* Option; Things to do once you have connected if you did NOT use a provided database: Option Things to do once you have connected if you did NOT use a provided database.


File: rhostmushhandbook.info,  Node: Manual configuration of source code,  Next: Loading a database for your MUSH,  Up: Basic Instructions for starting a new RhostMUSH

1.7.1 Manual configuration of source code
-----------------------------------------

To do manual configuration (skip if the previous step worked for you)
And yes, this is a bit of a pain in the bottom, hopefully you will not
need this.

You need the following definitions defined to make this work:

  1. TINY_U, USE_SIDEEFFECTS, MUX_INCDEC, ATTR_HACK

  2. (u()/u2() switched)

  3. (sideeffects)

  4. (inc()/xinc() switched)

  5. (support for _/~ attribs)

You only need to do this if you received the RhostMUSH src.  If you
received a binary, continue on to the next part.

To compile the code, just type ‘make confsource’.  It will prompt you
with settings on what you need to do.  If you just want to quickly hand
edit the Makefile, it is in the directory src (full path src/Makefile).
Then you may just run ‘make source’, if you so choose to hand-edit the
Makefile.

After the compile process is done, type ‘make links’!


File: rhostmushhandbook.info,  Node: Loading a database for your MUSH,  Next: Option Things to do once you have connected if you did NOT use a provided database,  Prev: Manual configuration of source code,  Up: Basic Instructions for starting a new RhostMUSH

1.7.2 Loading a database for your MUSH
--------------------------------------

You now have a choice of optionally starting at a provided database or
starting from scratch.

* Menu:

* Option; Only perform these steps if using a provided database: Option Only perform these steps if using a provided database.


File: rhostmushhandbook.info,  Node: Option Only perform these steps if using a provided database,  Up: Loading a database for your MUSH

1.7.2.1 Option: Only perform these steps if using a provided database
.....................................................................

Copy an existing flatfile and corresponding netrhost.conf file Default
provied example:

     cp game/netrhost.conf game/netrhost.conf.backup
     cp -f minimal-DBs/minimal_db/netrhost.conf game/netrhost.conf
     cd game
     ./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new


File: rhostmushhandbook.info,  Node: Option Things to do once you have connected if you did NOT use a provided database,  Prev: Loading a database for your MUSH,  Up: Basic Instructions for starting a new RhostMUSH

1.7.3 Option: Things to do once you have connected if you did NOT use a provided database
-----------------------------------------------------------------------------------------

  1. @dig your master room and in your netrhost.conf file define
     master_room to this dbref (without the #.  So like master_room 2)

  2. Create an immortal holder charater (@pcreate then @set immortal)
     Feel free to set up holder characters for all the bittypes which
     are: GUILDMASTER, ARCHITECT, COUNCILOR, WIZARD, IMMORTAL

  3. @chown/preserve the master room and #0 to the immortal holder
     character.

  4. Log into the immortal character

  5. @pcreate all your guest characters and set them up properly.  My
     suggestion:

          @dolist lnum(1,10)={@pcreate Guest##=guest;@set *Guest##=guest;@desc *Guest##=A guest player.;@adisconnect *Guest##=home;@lock *Guest##=*Guest##}

          @list guest will show your guest characters and if they're set up properly.

  6. Any master room code you load in from your immholder character (or
     @chown/preserve to it) The readme directory has
     softfunctions.minmax that has MUX/Penn compatability functions and
     comsys.  All other softcode (like mail wrappers) can be found on
     ‘https://github.com/RhostMUSH/trunk’ in Mushcode.

  7. Setup new character, staff, and take tasks that can only be
     accomplished by #1

  8. Set up any other characters you want.  Anyone immortal can issue
     @function, @admin, or anything #1 can do.


File: rhostmushhandbook.info,  Node: Customtize the textfiles for your game,  Next: Three Options for Starting a MUSH,  Prev: Basic Instructions for starting a new RhostMUSH,  Up: Installing RhostMUSH

1.8 Customtize the textfiles for your game
==========================================

     All connect.txt and customized files can be found in the
     ~/Server/game/txt directory.  There is a README file there that
     explains their purposes in more detail.  You can see more
     information on all files and how they inter-relate with ‘wizhelp
     file’.


File: rhostmushhandbook.info,  Node: Three Options for Starting a MUSH,  Prev: Customtize the textfiles for your game,  Up: Installing RhostMUSH

1.9 Three Options for Starting a MUSH
=====================================

The RhostMUSH Git Repository comes with three options for starting your
Mush.

* Menu:

* Option 1; Creating a new game with a blank database: Option 1 Creating a new game with a blank database.
* Options 2; Creating a new game with Ambrosia’s default database: Options 2 Creating a new game with Ambrosia’s default database.
* Option 3; Creating a new game with the generic default database: Option 3 Creating a new game with the generic default database.


File: rhostmushhandbook.info,  Node: Option 1 Creating a new game with a blank database,  Next: Options 2 Creating a new game with Ambrosia’s default database,  Up: Three Options for Starting a MUSH

1.9.1 Option 1: Creating a new game with a blank database
---------------------------------------------------------

     Modify your ./game/netrhost.conf file or what settings you want.
     Don’t feel overwhelmed, it’s all very well documented.


File: rhostmushhandbook.info,  Node: Options 2 Creating a new game with Ambrosia’s default database,  Next: Option 3 Creating a new game with the generic default database,  Prev: Option 1 Creating a new game with a blank database,  Up: Three Options for Starting a MUSH

1.9.2 Options 2: Creating a new game with Ambrosia’s default database
---------------------------------------------------------------------

Follow minimal-DBs/Amb-MinimalRhost/IMPORTANT_README

The netrhost.conf file you will copy is in
minimal-DBs/Amb-MinimalRhost/game Copy this netrhost.conf file into your
‘game’ directory.

You will want the custom txt files under Amb-MinimalRhost/txt in your
game/txt directory and to mkindx all the txt files.  You can run
./Startmush -i to index.

When ./Startmush prompts you to load a flatfile, say ‘yes’ and hit
<RETURN> to have it search for flatfiles, then select netrhost.db.flat
from under the minimal-DBs/Amb-MinimalRhost directory.

The main steps to make sure you do for
~/Server/minimal-DBs/Amb-MinimalRhost/netrhost.db.flat – Ambrosia’s
secure and featured minimal db

  1. Use the matching netrhost.conf file under the Amb-MinimalRhost/game
     directory

  2. Load in the settings specified in the Amb-MinimalRhost/bin
     directory.

       1. Copy this file into your ~/Server/bin directory

       2. From ‘Server’ directory type: make clean

       3. From ‘Server’ directory type: make confsource and ‘l’oad
          option 0

       4. Specify any -additional- options you want at this point.

       5. Recompile your code

  3. Copy the files in Amb-MinimalRhost/game/txt into your
     ~/Server/game/txt directory

  4. from your ~/Server/game txt file run on each of the txt files:

          ../mkindx <txtfile>.txt <txtfile>.indx

     Note: Where <txtfile> is the name of the file (minus the .txt
     extension)

  1. If running, @reboot your game.


File: rhostmushhandbook.info,  Node: Option 3 Creating a new game with the generic default database,  Prev: Options 2 Creating a new game with Ambrosia’s default database,  Up: Three Options for Starting a MUSH

1.9.3 Option 3: Creating a new game with the generic default database
---------------------------------------------------------------------

     Copy the netrhost.conf from minimal-DBs/minimal_db to your game
     directory.

     When ./Startmush prompts you to load a flatfile, say ‘yes’ and hit
     <RETURN> to have it search for flatfiles, then select
     netrhost.db.flat from under the minimal-DBs/minimal_db directory.


File: rhostmushhandbook.info,  Node: What RhostMUSH is about and what’s so great about RhostMUSH,  Next: Comparison of modern MUSH servers,  Prev: Installing RhostMUSH,  Up: Top

2 What RhostMUSH is about and what’s so great about RhostMUSH
*************************************************************

RhostMUSH was founded in 1989, originally by Natasha Davis (Nyctasia)
and as a branch from the original release of TinyMUD code.  It was her
desire to make a game that was flexible, with multiple levels of
progression and highly customizeable.  She lost time and interest and
passed the game to Steve Shivers (Seawolf), Mike McDermott (Thorin), and
Jace Hoppel (Ashen-Shugar)

Through their work, the stability improved, we fixed it to be
multi-platform and as bug free as we could possibly make it.  We
introduced several methods both in game and in source that allowed
consistent memory bounds checking and various alerts for any mischievous
naughtyness in-game or possibilities of any hacks, patches, or
alterations in the code causing leaks or issues.

While not perfect, it has allowed us to have an absolutely outstanding
turn around for any bugs sent our way, which anyone who uses RhostMUSH
will attest to.

Over the years, others have joined the RhostMUSH team, including
Ambrosia (who is the current dev lead), Lensman, Kage (who kindly
provided the UTF8/unicode port), Jeff/Loki, Rook, Noltar, and Odin.

We also have had hundreds of people who have offered (and provided)
help, patches, suggestions, bug fixes, and alternations all on their own
and every single one will have had their name mentioned in the
RHOST.CHANGES file in the readme directory.  It’s far too large to have
in the online help files.

RhostMUSH today provides an amazing tool that allows nearly entire
customization in-game of every single feature available in Rhost without
having the requirement to modify the hardcode.  This includes but is not
limited to:

* Menu:

* Recycle bin::
* @snapshot::
* Wizard and Immortals by default::
* Titles and Captions to a player’s name::
* Have an alternate name with locks for NPC obfuscation::
* Have multiple player aliases::
* Actively control how dark works both game-wide and individually::
* Make config file changes in-game without having to reboot or have shell access::
* Execute any binary or script as a localized function::
* Customized percent substitutions (like %n, %#, etc): Customized percent substitutions like %n %# etc.
* Redefine percent substitutions (like %n, %#, etc): Redefine percent substitutions like %n %# etc.
* Localize command and function overrides in a sandbox::
* Multiple Zones::
* Optionally control, enable, or disable sideeffects: Optionally control enable or disable sideeffects.
* Have 31 cross-interactive realities for locations::
* Override any command with softcode::
* The abilility to raise or lower permissions on the various::
* Customize new commands on the connect screen::
* Softcode any txt file (like connect.txt): Softcode any txt file like connect txt.
* Advanced tracing methods for debugging your code including labels!::
* Built in pretty-printing of attributes with the parenmatch() function: Built in pretty-printing of attributes with the parenmatch function.
* Plenty more not mentioned!::
* Advanced features of RhostMUSH::
* Random notes and things to know about RhostMUSH::


File: rhostmushhandbook.info,  Node: Recycle bin,  Next: @snapshot,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.1 Recycle bin
===============

     Yup, you guessed it.  RhostMUSH has a windows like recycle bin.
     This means the objects you @nuke and @destroy become ‘destroyed’
     but not recycled until they are @purged.  If you use the Myrddin
     CRON in the Mushcode directory, it by default sets up a job to
     purge anything over 30 days old, which should be more than
     sufficient for any needs.  The goodness of this?  You can recover
     nuked things from any period of time, as long as they were not
     @purged first.

     Commands: @purge, @nuke, @destroy, @recover, @reclist


File: rhostmushhandbook.info,  Node: @snapshot,  Next: Wizard and Immortals by default,  Prev: Recycle bin,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.2 @snapshot
=============

     Live image snapshots to unload or load to and from disk.  As many
     snapshots as you want, as often as you want.  It essentially does a
     flatfile dump of a dbref#.  Great for backups or cross-Rhost
     portability.

     Command: @snapshot


File: rhostmushhandbook.info,  Node: Wizard and Immortals by default,  Next: Titles and Captions to a player’s name,  Prev: @snapshot,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.3 Wizard and Immortals by default
===================================

        * are spoofable.  Meaning all their @pemits by default will not
          trigger NOSPOOF. If you do not wish this, set the SPOOF flag
          this applies to anyone below their level.

        * override all locks.  There’s two flags to disable this.
          NO_OVERRIDE to stop overriding all locks (including attribs)
          and NO_USELOCK to just stop overriding uselocks.  This applies
          to anything their level and lower.

        * optionally cloak from all non-immortals/God player.  This can
          be highly abused if not careful and there is a @depower to
          disable cloaking and/or dark that will disable this.

        * immortals can optionally supercloak from even wizards.  this
          can not be disabled, and you must consider that immortals
          should be treated as the God player (#1) since they are
          effectively #1 in nearly every way.


File: rhostmushhandbook.info,  Node: Titles and Captions to a player’s name,  Next: Have an alternate name with locks for NPC obfuscation,  Prev: Wizard and Immortals by default,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.4 Titles and Captions to a player’s name
==========================================

     @caption and @titlecaption


File: rhostmushhandbook.info,  Node: Have an alternate name with locks for NPC obfuscation,  Next: Have multiple player aliases,  Prev: Titles and Captions to a player’s name,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.5 Have an alternate name with locks for NPC obfuscation
=========================================================

     @altname @lock/altname


File: rhostmushhandbook.info,  Node: Have multiple player aliases,  Next: Actively control how dark works both game-wide and individually,  Prev: Have an alternate name with locks for NPC obfuscation,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.6 Have multiple player aliases
================================

     As well as a method to reserve player names per player w/o
     revealing who has what name.

     @protect


File: rhostmushhandbook.info,  Node: Actively control how dark works both game-wide and individually,  Next: Make config file changes in-game without having to reboot or have shell access,  Prev: Have multiple player aliases,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.7 Actively control how dark works both game-wide and individually
===================================================================

     @depower dark

     @admin allow_whodark, sweep_dark, command_dark, lcon_checks_dark,
     secure_dark, see_owned_dark, idle_wiz_dark, player_dark

     @toggle snuffdark

     @flagdef to redefine who and what can set the DARK flag


File: rhostmushhandbook.info,  Node: Make config file changes in-game without having to reboot or have shell access,  Next: Execute any binary or script as a localized function,  Prev: Actively control how dark works both game-wide and individually,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.8 Make config file changes in-game without having to reboot or have shell access
==================================================================================

     @admin admin_object


File: rhostmushhandbook.info,  Node: Execute any binary or script as a localized function,  Next: Customized percent substitutions like %n %# etc,  Prev: Make config file changes in-game without having to reboot or have shell access,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.9 Execute any binary or script as a localized function
========================================================

     EXECSCRIPT (power), SIDEFX (flag)


File: rhostmushhandbook.info,  Node: Customized percent substitutions like %n %# etc,  Next: Redefine percent substitutions like %n %# etc,  Prev: Execute any binary or script as a localized function,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.10 Customized percent substitutions (like %n, %#, etc)
========================================================

     @admin sub_include, @hook


File: rhostmushhandbook.info,  Node: Redefine percent substitutions like %n %# etc,  Next: Localize command and function overrides in a sandbox,  Prev: Customized percent substitutions like %n %# etc,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.11 Redefine percent substitutions (like %n, %#, etc)
======================================================

     @admin sub_override, @hook


File: rhostmushhandbook.info,  Node: Localize command and function overrides in a sandbox,  Next: Multiple Zones,  Prev: Redefine percent substitutions like %n %# etc,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.12 Localize command and function overrides in a sandbox
=========================================================

     @icmd, @lfunction, subeval(), sandbox()


File: rhostmushhandbook.info,  Node: Multiple Zones,  Next: Optionally control enable or disable sideeffects,  Prev: Localize command and function overrides in a sandbox,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.13 Multiple Zones
===================

     Have multiple zones which can optionally belong to multiple targets
     (multiple zones per target allowable!)

     @zone, zones, lzone(), zonecmd()


File: rhostmushhandbook.info,  Node: Optionally control enable or disable sideeffects,  Next: Have 31 cross-interactive realities for locations,  Prev: Multiple Zones,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.14 Optionally control, enable, or disable sideeffects
=======================================================

     @admin sideeffects, SIDEFX (flag)


File: rhostmushhandbook.info,  Node: Have 31 cross-interactive realities for locations,  Next: Override any command with softcode,  Prev: Optionally control enable or disable sideeffects,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.15 Have 31 cross-interactive realities for locations
======================================================

     This works as a truly independant and self-contained environment.
     A room can have 31 ‘layers’, each ‘layer’ is a reality in the same
     physical space.  These layers can work independently or allow
     interaction with other layers for vast customization.  This affects
     all methods within the game including all matching, looking,
     $commands, listens, movement, interaction, pretty much every single
     aspect of mushing.

     REALITY LEVELS


File: rhostmushhandbook.info,  Node: Override any command with softcode,  Next: The abilility to raise or lower permissions on the various,  Prev: Have 31 cross-interactive realities for locations,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.16 Override any command with softcode
=======================================

     @admin access (check ignore)

     Master room $commands to then override the hardcode


File: rhostmushhandbook.info,  Node: The abilility to raise or lower permissions on the various,  Next: Customize new commands on the connect screen,  Prev: Override any command with softcode,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.17 The abilility to raise or lower permissions on the various
===============================================================

     staff bitlevels for each player.

     @power, @depower, TOGGLES, FLAGS


File: rhostmushhandbook.info,  Node: Customize new commands on the connect screen,  Next: Softcode any txt file like connect txt,  Prev: The abilility to raise or lower permissions on the various,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.18 Customize new commands on the connect screen
=================================================

     @admin file_object2


File: rhostmushhandbook.info,  Node: Softcode any txt file like connect txt,  Next: Advanced tracing methods for debugging your code including labels!,  Prev: Customize new commands on the connect screen,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.19 Softcode any txt file (like connect.txt)
=============================================

     and have it evaluate in-game.  It evaluates as the object it is on.

     @admin file_object


File: rhostmushhandbook.info,  Node: Advanced tracing methods for debugging your code including labels!,  Next: Built in pretty-printing of attributes with the parenmatch function,  Prev: Softcode any txt file like connect txt,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.20 Advanced tracing methods for debugging your code including labels!
=======================================================================

     Commands: @label

     Functions: parenmatch(), trace()

     Toggles: CPUTIME

     Flags: TRACE

     Attributes: TRACE_GREP, TRACE, TRACE_COLOR, TRACE_COLOR_<attr>

     Substitutions: %_


File: rhostmushhandbook.info,  Node: Built in pretty-printing of attributes with the parenmatch function,  Next: Plenty more not mentioned!,  Prev: Advanced tracing methods for debugging your code including labels!,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.21 Built in pretty-printing of attributes with the parenmatch() function
==========================================================================

Example Code Output:

     @emit [add(1,sub(2,div(3,4)),5)];@emit [extract(get(me/foo),3,1)

     Example Pretty Print:
     @emit [
        add(
           1,sub(
              2,div(
                 3,4
              )
           ),5
        )
     ];@emit [
        extract(
           get(
              me/foo
           ),3,1
        )
     ]


File: rhostmushhandbook.info,  Node: Plenty more not mentioned!,  Next: Advanced features of RhostMUSH,  Prev: Built in pretty-printing of attributes with the parenmatch function,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.22 Plenty more not mentioned!
===============================

The flexibility to customize RhostMUSH is what is most daunting.  Don’t
fret, you don’t need to do it to run RhostMUSH successfully.  In fact,
the default configuration is mostly compatible with MUSH and will work
correctly out of the box for most needs.  For those wishing to play, of
course the sky is the limit of what you want to do.


File: rhostmushhandbook.info,  Node: Advanced features of RhostMUSH,  Next: Random notes and things to know about RhostMUSH,  Prev: Plenty more not mentioned!,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.23 Advanced features of RhostMUSH
===================================

* Menu:

* Debugging/Tracing::
* Zoning::
* Reality Levels::
* Function and Command Overriding::
* The Recycle Bin::
* Percent Substitution Adding/Overriding::
* Hooking::
* Command based uselocks::
* Differentating between command and listen locks::
* Wizard auto-overiding and how to disable it::
* Advanced FLAG and TOGGLE control::
* Advanced site control::
* Auto-Registration::
* Which bit level is best?::
* What are the limits for size/growth for RhostMUSH?::
* Sqlite and MySQL/Maria setup and why use it?::
* Executing outside scripts and binaries within RhostMUSH::
* Pulling external data into RhostMUSH::
* Integrating a unix cron right into RhostMUSH::
* Signal handling, how it works, and when and why use it: Signal handling how it works and when and why use it.
* Setting up global parents, global @parents, global attribute formatting, and other global setups: Setting up global parents global @parents global attribute formatting and other global setups.
* RhostMUSH limitations and how to get around them::
* Things other mushes can do that Rhost can not and how to emulate it::
* Advanced guest setup::
* Attribute permission masking and the joys of the power behind it::
* The amazing @cluster and what it can do for you::
* What we plan for the future::
* Additional features not covered otherwise::


File: rhostmushhandbook.info,  Node: Debugging/Tracing,  Next: Zoning,  Up: Advanced features of RhostMUSH

2.23.1 Debugging/Tracing
------------------------

        * Debugging in Rhost allows for advanced features like
          expressing where and when to do debugging via a trace()
          function, with toggled labels, and the ability to grep content
          from trace output.  There also exists features to color-match
          parenthesis, braces, and brackets in-game as well as pretty
          print the output of commands and functions.

             - help trace

             - help %_

             - help trace()

             - help parenmatch()

             - help parenstr()


File: rhostmushhandbook.info,  Node: Zoning,  Next: Reality Levels,  Prev: Debugging/Tracing,  Up: Advanced features of RhostMUSH

2.23.2 Zoning
-------------

        * Zoning in Rhost allows the same functionality of Penn and MUX,
          though the syntax is different.  It also allows the ability to
          belong to multiple zones at the same time and take advantage
          of mulitple zones at once.  This allows for increased levels
          of complexity.

             - help zones

             - help @zone

             - help zonecmd()

             - help lzone()

             - help @Lock type twink

             - help @lock type zone


File: rhostmushhandbook.info,  Node: Reality Levels,  Next: Function and Command Overriding,  Prev: Zoning,  Up: Advanced features of RhostMUSH

2.23.3 Reality Levels
---------------------

        * Reality levels allows for the ability to have a sandboxed
          ‘existance’ in each physical location across the entirity of
          the mush.  Each reality is its own sandbox and can either
          stand alone or work dependently with other realities.  A
          person can belong to multiple realities at the same time, and
          realities is geared to a method for send and receive.  Each
          ‘method’ requires to be in the given reality to affect it.

             - help reality levels

             - wizhelp chkreality

             - wizhelp reaity level

             - help @Lock type user


File: rhostmushhandbook.info,  Node: Function and Command Overriding,  Next: The Recycle Bin,  Prev: Reality Levels,  Up: Advanced features of RhostMUSH

2.23.4 Function and Command Overriding
--------------------------------------

        * Functions and commands can both be overridden with softcode.
          To override a hardcoded command you first set the command
          ignore.  There are various levels of ignoring so that you
          could have it ignored from mortals but have it executed fine
          for non-mortals.  This allows you to use the actual physical
          command within a softcode override.  You may also use @Hook
          for altering how a command works.  Functions are overridden by
          setting the function in question ignored, then writing a
          softcode alternative that is then executed and fetched
          appropriately.

          Commands:

                  - wizhelp @admin

                  - wizhelp access

                  - wizhelp permissions

                  - wizhelp @Hook

                  - wizhelp hook setup

          Functions:

                  - wizhelp @admin

                  - wizhelp function_access

                  - wizhelp @function

                  - help @lfunction

                  - wizhelp bypass()


File: rhostmushhandbook.info,  Node: The Recycle Bin,  Next: Percent Substitution Adding/Overriding,  Prev: Function and Command Overriding,  Up: Advanced features of RhostMUSH

2.23.5 The Recycle Bin
----------------------

        * Rhost has a recycle bin that works a bit like a windows
          recycle bin.  Whenever you destroy something within the mush,
          it is stacked onto the recycle bin and marked unavailable
          within the mush.  This marks the dbref# as garbage in any
          sense of the word.  However, the object is not able to be
          reused until purged.  Once purged, it is put onto a free list
          that can then be reassigned to a new object.

             - wizhelp @nuke

             - wizhelp @destroy

             - wizhelp @toad

             - wizhelp @turtle

             - wizhelp @purge

             - wizhelp @recover

             - wizhelp @reclist


File: rhostmushhandbook.info,  Node: Percent Substitution Adding/Overriding,  Next: Hooking,  Prev: The Recycle Bin,  Up: Advanced features of RhostMUSH

2.23.6 Percent Substitution Adding/Overriding
---------------------------------------------

        * Rhost allows the ability to both override percent
          substitutions as well as creating new ones.  This is done with
          @Hook and admin params and issues softcode overriding.  Due to
          how it is evaluated there is no risk of recursion.

             - wizhelp @hook

             - wizhelp hook_cmd

             - wizhelp sub_include

             - wizhelp sub_override


File: rhostmushhandbook.info,  Node: Hooking,  Next: Command based uselocks,  Prev: Percent Substitution Adding/Overriding,  Up: Advanced features of RhostMUSH

2.23.7 Hooking
--------------

        * Hooking allows you to have advanced methods to manipulate
          commands including adding customized switches to them via
          softcode.

             - wizhelp @hook

             - wizhelp hook_cmd

             - wizhelp hook_obj

             - wizhelp hook setup


File: rhostmushhandbook.info,  Node: Command based uselocks,  Next: Differentating between command and listen locks,  Prev: Hooking,  Up: Advanced features of RhostMUSH

2.23.8 Command based uselocks
-----------------------------

        * This allows you to have unique uselocks per $command.  This is
          done through the use of the USELOCK attribute flag, then you
          set up a matching attribute name with a prefix of a ~ to
          specify how the lock is to be evaluated.  This works in the
          same manner as an evaluation lock.  To be able to use the
          USELOCK attribute flag you must be empowered to do so with the
          ‘ATRUSE’ @toggle.  You may also use the secure_atruselock
          config parameter to globally enable this and not require the
          toggle to be set.

             - wizhelp atruse toggle

             - help attribute uselocks


File: rhostmushhandbook.info,  Node: Differentating between command and listen locks,  Next: Wizard auto-overiding and how to disable it,  Prev: Command based uselocks,  Up: Advanced features of RhostMUSH

2.23.9 Differentating between command and listen locks
------------------------------------------------------

        * We distinguish between commands and listens with uselocks by
          passing an optional argument to all locks that are uselocks.
          This optional argument is 0 for a default lock, 1 for a
          command lock and 2 for a listen lock.

             - help @lock type uselock


File: rhostmushhandbook.info,  Node: Wizard auto-overiding and how to disable it,  Next: Advanced FLAG and TOGGLE control,  Prev: Differentating between command and listen locks,  Up: Advanced features of RhostMUSH

2.23.10 Wizard auto-overiding and how to disable it
---------------------------------------------------

        * By default wizards override all locks, including attribute
          locks, can see all dark exits, and bypass pagelocks.  This can
          be troublesome, and even abusive, so there’s ways to disable
          this.

             - wizhelp @depower (for those abusing it)

             - wizhelp no_override (disable overiding locks)

             - wizhelp no_uselock (disable just uselock overriding)

             - wizhelp pagelock toggle (disable pagelock overriding)


File: rhostmushhandbook.info,  Node: Advanced FLAG and TOGGLE control,  Next: Advanced site control,  Prev: Wizard auto-overiding and how to disable it,  Up: Advanced features of RhostMUSH

2.23.11 Advanced FLAG and TOGGLE control
----------------------------------------

        * Flags and toggles can be controlled to have multiple
          permissions and enable/disable targets of how the flags are
          allowed to be set.  This is done through commands in-game or
          you can use conf file options to do so.

             - wizhelp @flagdef

             - wizhelp @toggledef

             - @admin @flagdef alternatives

                  - wizhelp flag_access_set

                  - wizhelp flag_access_unset

                  - wizhelp flag_access_see

                  - wizhelp flag_access_type

             - @admin @toggledef alternatives

                  - wizhelp toggle_access_set

                  - wizhelp toggle_access_unset

                  - wizhelp toggle_access_see

                  - wizhelp toggle_access_type


File: rhostmushhandbook.info,  Node: Advanced site control,  Next: Auto-Registration,  Prev: Advanced FLAG and TOGGLE control,  Up: Advanced features of RhostMUSH

2.23.12 Advanced site control
-----------------------------

        * We allow advanced site control by not only blocking various
          sites but we can specify how many times a player can be
          connected at the same time as well as how many times sites are
          able to connect at the same time.  This is done through normal
          site manipulation.

             - wizhelp forbid_host

             - wizhelp register_host

             - wizhelp noguest_host

             - wizhelp @list (site option)


File: rhostmushhandbook.info,  Node: Auto-Registration,  Next: Which bit level is best?,  Prev: Advanced site control,  Up: Advanced features of RhostMUSH

2.23.13 Auto-Registration
-------------------------

        * Autoregistration is the method that a player can auto-register
          by providing their email on the connect screen.  It will email
          them a password and an optional document that the
          administrator provides.  This is well described in the
          wizhelp.

             - wizhelp autoregistration


File: rhostmushhandbook.info,  Node: Which bit level is best?,  Next: What are the limits for size/growth for RhostMUSH?,  Prev: Auto-Registration,  Up: Advanced features of RhostMUSH

2.23.14 Which bit level is best?
--------------------------------

        * This is something that should be discussed by you and the
          staff of your game.  As a good rule of thumb, only provide the
          bitlevel that is required to do the job.  Too much power is
          always risky.  In essence, each tier of bit can do everything
          the previous bitlevel can do, and then additional stuff on top
          of it.  The highest bitlevel is #1 itself, being bitlevel 7.
          Then immortal, which should be considered the #1 character in
          most cases and is bitlevel 6.  Then the royalty character,
          which is equal to wizard on penn, mux, or other codebases.
          For most things, this is the bitlevel you want to assign
          players.  The exception will likely be game owners or people
          who control the master room code.

          There’s a bunch of readme files and online wizhelp that goes
          into detail of the various bitlevels and what each can do.

             - wizhelp control


File: rhostmushhandbook.info,  Node: What are the limits for size/growth for RhostMUSH?,  Next: Sqlite and MySQL/Maria setup and why use it?,  Prev: Which bit level is best?,  Up: Advanced features of RhostMUSH

2.23.15 What are the limits for size/growth for RhostMUSH?
----------------------------------------------------------

        * While using QDBM, there’s really no set limits for most
          things.  The limits that we have are as followed:

          LBUF - 64K. It is recommended to only use 32K as there is some
          issues with networking with 64K lbufs.

                       - Compile time option with the menu configurator

               SBUF - 64 characters (if configured – it’s suggested you
               do).

                       - Compile time option with the menu configurator

               MBUF - 200 characters.  Not able to be changed.

               MAX CONNECTIONS - Limited by the total number of open
               sockets and descriptors on the account and server running
               on.  There are various tools to limit connection DoS
               attemps and other such nastiness.  This is well
               documented in the netrhost.conf file.

                       - wizhelp max_players

                       - ~/game/netrhost.conf

               MEMORY - no limit.  Generally runs between 8-50M
               depending on the size of the mush and the LBUF size
               specified.

               CPU - no limit, but has built in cpu abort in code.  The
               netrhost.conf file documents this well for customizing.
               the default values are usually good enough.

                       - wizhelp max_cpu_cycles

                       - wizhelp cpuintervalchk

                       - wizhelp cputimechk

                       - wizhelp cpu_secure_lvl

                       - wizhelp heavy_cpu_max

                       - ~/game/netrhost.conf

               DISK - no limit.  Generally will be 75-200M depending on
               size, number of backups and if you leave your compiled
               object files in.

               DB Size - (20000 default) There is no limit on the number
               of objects the db can have.  By default it’s soft limited
               to 20K objects, which can be changed by a netrhost.conf
               file change.  We have had this up past 1.5 million
               objects, and other than a second or two of lag for
               complex searches we had no real problem.

                       - wizhelp maximum_size

                       - help @quota

                       - wizhelp @quota

                       - wizhelp @limit

               Attribute Size - 10K as a hard limit.  750 as a soft
               limit.  You can increase this but it can’t exceed 10000
               attributes.  This is to avoid DoS style attacks.

                       - wizhelp vlimit

                       - wizhelp @limit


File: rhostmushhandbook.info,  Node: Sqlite and MySQL/Maria setup and why use it?,  Next: Executing outside scripts and binaries within RhostMUSH,  Prev: What are the limits for size/growth for RhostMUSH?,  Up: Advanced features of RhostMUSH

2.23.16 Sqlite and MySQL/Maria setup and why use it?
----------------------------------------------------

        * Both of these can be configured separately or conjointly to
          run in parallel.  This can be done through the RhostMUSH
          configuration utility.  You generally want to use SQL for
          external data storage or accessing a central repository of
          data to share between multiple projects.  Like, for example
          between a wiki, a forum, and the mush.


File: rhostmushhandbook.info,  Node: Executing outside scripts and binaries within RhostMUSH,  Next: Pulling external data into RhostMUSH,  Prev: Sqlite and MySQL/Maria setup and why use it?,  Up: Advanced features of RhostMUSH

2.23.17 Executing outside scripts and binaries within RhostMUSH
---------------------------------------------------------------

        * Rhost has execscript() which allows executing outside binaries
          or scripts as a native function.  All effort has been done to
          avoid any type of DoS based issue or hang by doing this,
          however the guidelines presented should be followed before
          doing so.

             - wizhelp execscript

             - wizhelp power execscript

             - help sidefx

             - wizhelp writing scripts


File: rhostmushhandbook.info,  Node: Pulling external data into RhostMUSH,  Next: Integrating a unix cron right into RhostMUSH,  Prev: Executing outside scripts and binaries within RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.18 Pulling external data into RhostMUSH
--------------------------------------------

        * You are capable of pulling external data in to RhostMUSH using
          several methods.  These are by using:

                  - SQL (mysql or sqlite)

                  - execscript

                  - cron (wizhelp signal)


File: rhostmushhandbook.info,  Node: Integrating a unix cron right into RhostMUSH,  Next: Signal handling how it works and when and why use it,  Prev: Pulling external data into RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.19 Integrating a unix cron right into RhostMUSH
----------------------------------------------------

        * The unix cron can be used to integrate with Rhost fairly
          easilly by use of signals.  By using SIGUSR1 you can specify
          Rhost to execute code in-game, which part of that could be to
          pick up a pre-designed list of commands that the unix cron has
          set up.

             - wizhelp signal

             - wizhelp signal_cron


File: rhostmushhandbook.info,  Node: Signal handling how it works and when and why use it,  Next: Setting up global parents global @parents global attribute formatting and other global setups,  Prev: Integrating a unix cron right into RhostMUSH,  Up: Advanced features of RhostMUSH

2.23.20 Signal handling, how it works, and when and why use it
--------------------------------------------------------------

        * Signals are used to do different things for the mush.  By
          default, the following signals are recognized by the mush and
          will do the following as defaults.

             - SIGUSR1 - will do a reboot of the mush.  This is also
               customizable so that you can have it execute code in-mush
               if you want.

             - SIGUSR2 - will do a clean shutdown of the mush.

             - SIGTERM - will immediately scram the mush as cleanly and
               fast as possible.  It will avoid dumping anything to the
               database to speed up scramming, but write a TERM flat
               file to be loaded in if corruption.


File: rhostmushhandbook.info,  Node: Setting up global parents global @parents global attribute formatting and other global setups,  Next: RhostMUSH limitations and how to get around them,  Prev: Signal handling how it works and when and why use it,  Up: Advanced features of RhostMUSH

2.23.21 Setting up global parents, global @parents, global attribute formatting, and other global setups
--------------------------------------------------------------------------------------------------------

        * Global parents are useful when you want to have a global
          ‘parent’ without actually having a defined ‘@parent
          <'@parent>’.  It always will be the highest tier in a lookup.
          The way lookups will go will be:

               self->@parent(s)->@zone(s)->GlobalParent

          The type of the parent does not have to match the target.

          These global parents can be defined either by using a global
          generic parent or by using the type.  If a type is specified
          it overrides the generic.  The following parameters are used:

                  - global_parent_obj - The generic global parent (if
                    defined)

                  - global_parent_room - The room global parent

                  - global_parent_exit - The exit global parent

                  - global_parent_thing - The thing global parent

                  - global_parent_player - The player global parent

        * Global @parents are different than global parents in that any
          new item of similar type that is created is automatically
          assigned this physical @parent.  It’s obviously more limiting
          since it sets the literal physical parent defined.

          The type of the parent does not have to match the target.

          The following parameters are used:

                  - room_parent - The target that new rooms are
                    @parented

                  - exit_parent - The target that new exits are
                    @parented

                  - thing_parent - The target that new things are
                    @parented

                  - player_parent - The target that new players are
                    @parented

        * Global attribute formatting is a method define a wrapper, of
          sorts, where attributes like @desc, @odesc, @succ, and
          anything similar can be processed through this.  All
          attributes will be either &FORMAT<attribute> or
          &<attribute>FORMAT based on the current configuration.
          Example: &FORMATDESC or &DESCFORMAT localy, or use the
          following global objects for global formatting.  Local
          formatting has priority.

          The type of the parent does not have to match the target.

                  - room_attr_default - Target for room formatting

                  - exit_attr_default - Target for exit formatting

                  - thing_attr_default - Target for thing formatting

                  - player_attr_default - Target for player formatting


File: rhostmushhandbook.info,  Node: RhostMUSH limitations and how to get around them,  Next: Things other mushes can do that Rhost can not and how to emulate it,  Prev: Setting up global parents global @parents global attribute formatting and other global setups,  Up: Advanced features of RhostMUSH

2.23.22 RhostMUSH limitations and how to get around them
--------------------------------------------------------

     While Rhost is insanely configurable and quite powerful, there are
     limitations that exist within it.

        * Function invocations.  Sometimes you will hit a ceiling on
          evaluation.  You may want to tweak values to allow more
          functions or commands to execute.  The following controls
          that:

                  - function_invocation_limit [25000 default] -
                    specifies the total functions you can execute per
                    command.

                  - function_recursion_limit [50] - specifies the total
                    times a function can call itself over and over.
                    Rarely should this be increased and doing so can
                    effect your stack depth.

        * Command queue limits.  Sometimes you want more to be queued up
          for players or wizards.

                  - player_queue_limit - Max number of entries a player
                    can queue

                  - wizard_queue_limit - Max number of entries a wizard
                    can queue

        * @limit is a wonderful way to lock down limitations per player
          or global.  Lots of power is available here.

                  - @limit

                  - vattr_limit_checkwiz - Enable @limit checks for
                    wizards

                  - wizmax_vattr_limit - Set wizard global VATTR limits

                  - wizmax_dest_limit - Set wizard global @destroy
                    limits

                  - max_vattr_limit - Set player global VATTR limits

                  - max_dest_limit - Set player global @destroy limits

        * Lots of trace output can be cut off.  You can modify this
          with:

                  - trace_output_limit - Set lines of trace output shown

        * To define how many commands a minute a player set SPAMMONITOR
          can use

             - spam_limit – default 120

        * If you examine things and see ‘Output cut off’ messages, you
          may want to increase your output limit, funny enough, the name
          of this is similar

                  - output_limit - You should set this no less than 4
                    times the current size of your LBUF.

        * Attributes names can not exceed 64 characters.  Sorry, it’s a
          hard limit

        * Sometime you may find a single may not work for an escape.
          You can in most cases use a % instead or double escape the to
          make it work.  Also look at lit() as a solution.


File: rhostmushhandbook.info,  Node: Things other mushes can do that Rhost can not and how to emulate it,  Next: Advanced guest setup,  Prev: RhostMUSH limitations and how to get around them,  Up: Advanced features of RhostMUSH

2.23.23 Things other mushes can do that Rhost can not and how to emulate it
---------------------------------------------------------------------------

* Menu:

* PennMUSH::
* MUX::


File: rhostmushhandbook.info,  Node: PennMUSH,  Next: MUX,  Up: Things other mushes can do that Rhost can not and how to emulate it

2.23.23.1 PennMUSH
..................

        - Attribute trees.  These are emulated as a base set and can be
          duplicated enough to at least port code.

        - lsearch() will have to be recoded to search()

        - align() will have to be recoded to printf()

        - Penn allows empty attributes.  Rhost does not.  Work will have
          to be done to take this into consideration.

        - All *val() functions in Penn that are used will have to be
          remapped to a non-*val() function.  It should be as simple as
          function_alias to the non-*val.  Example:

               @admin function_alias=hasattrval hasattr

        - Penn’s hardcoded comsystem is emulated with the softcode
          comsys

        - Penn’s @mail system is workable with mail wrappers

        - Pueblo is not supported.

        - json is not supported.

        - ssl is not natively supported (yet), see section XIV

        - This uses @shutdown/restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: MUX,  Prev: PennMUSH,  Up: Things other mushes can do that Rhost can not and how to emulate it

2.23.23.2 MUX
.............

        - Mux has an async mysql database engine.  This is not possible
          with Rhost.  You’ll have to use the sync method instead.

        - UTF8 is supported but internally passed differently.

        - Mux’s hardcoded comsystem is emulated with the softcode comsys

        - MUX’s @mail system is workable with mail wrappers

        - Pueblo is not supported.

        - This uses @restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: Advanced guest setup,  Next: Attribute permission masking and the joys of the power behind it,  Prev: Things other mushes can do that Rhost can not and how to emulate it,  Up: Advanced features of RhostMUSH

2.23.24 Advanced guest setup
----------------------------

        * After you set up your guests, you can set unique names to each
          guest if you so want after defining the dbref#’s your guests
          use.  This is done by defining them in the guest_namelist
          parameter.  You can also increase guests (or decrease them)
          between 0-31 guests.

                  - wizhelp guest_namelist

                  - wizhelp num_guests


File: rhostmushhandbook.info,  Node: Attribute permission masking and the joys of the power behind it,  Next: The amazing @cluster and what it can do for you,  Prev: Advanced guest setup,  Up: Advanced features of RhostMUSH

2.23.25 Attribute permission masking and the joys of the power behind it
------------------------------------------------------------------------

        * Attribute contentlocks can be set up so you can lock the
          actual content that you can set (or even unset!)  into an
          attribute.  The beauty of this is that you can specify case
          sensitive information, lock different ways contents in
          attributes are set based on who is setting it, or even on
          where it’s being set.  The sky’s the limit.

                  - global_attrdefault - Target for defining content
                    locks


File: rhostmushhandbook.info,  Node: The amazing @cluster and what it can do for you,  Next: What we plan for the future,  Prev: Attribute permission masking and the joys of the power behind it,  Up: Advanced features of RhostMUSH

2.23.26 The amazing @cluster and what it can do for you
-------------------------------------------------------

        * Clusters is the way to virtually assign multiple objects into
          a single physical object.  It essentially chains together two
          or more objects to share attributes between them, so that any
          attribute set on any object in that cluster can be set or
          fetched as if it was a singular entity.  This allows some
          amazing ability to distribute attribute content or even have a
          farm of a massive amount of attributes without paying a hefty
          penalty on object bloat.

                  - help cluster – Gives a fantastic overview of how
                    clusters work.


File: rhostmushhandbook.info,  Node: What we plan for the future,  Next: Additional features not covered otherwise,  Prev: The amazing @cluster and what it can do for you,  Up: Advanced features of RhostMUSH

2.23.27 What we plan for the future
-----------------------------------

        * Things to look forward to the future with RhostMUSH.

             - Full Unicode/UTF8 in Rhost 4.0

             - A fully featured tag system in Rhost 4.0

             - Built in Python API handler in Rhost 4.0

             - Hopefully a built in Ruby and Perl API in Rhost 4.0/4.1

             - Cross-Mush execution between mushes in Rhost 4.1

             - More as we think about it :)


File: rhostmushhandbook.info,  Node: Additional features not covered otherwise,  Prev: What we plan for the future,  Up: Advanced features of RhostMUSH

2.23.28 Additional features not covered otherwise
-------------------------------------------------

        * +/- 5.4 million years can be utilized with the built in time
          functions which includes timefmt(), secs(), convtime(),
          convsecs(), and moon().  Party on!

        * Changing permission levels in the middle of execution for
          evaluation.

                  - see help on the streval and ueval function’

        * Full features in-game customization of near every aspect of
          the game.


File: rhostmushhandbook.info,  Node: Random notes and things to know about RhostMUSH,  Prev: Advanced features of RhostMUSH,  Up: What RhostMUSH is about and what’s so great about RhostMUSH

2.24 Random notes and things to know about RhostMUSH
====================================================

Here are some things to know about RhostMUSH and what you may or may not
want to do.  Things here are not covered in other documents:

Admin toggles to configure the WHO, various things you’re used to, etc
is in the ‘netrhost.conf’ file.  descriptions Notes in the autoconf.h
file is in the README.AUTOCONF file.

* Menu:

* Note on bits, their levels, and things they do: Note on bits their levels and things they do.
* You need to @pcreate your guest characters and set them GUEST::
* @powers are INHERITED::
* @depowers are automatically checked first before anything else::
* Zones are unique::
* The db auto-repares itself when it can::
* You can get your connect.txt to parse ansi: You can get your connect txt to parse ansi.
* Re-compiled binaries do not require an @shutdown::
* Softcode emulations of functions from other servers are included::


File: rhostmushhandbook.info,  Node: Note on bits their levels and things they do,  Next: You need to @pcreate your guest characters and set them GUEST,  Up: Random notes and things to know about RhostMUSH

2.24.1 Note on bits, their levels, and things they do
-----------------------------------------------------

     IMMORTAL - They can do anything.  Treat this as #1 and only give to
     people you trust.  Period.  You don’t have to use this bit if you
     do not want to and just assume #1.

     ROYALTY - Unlike PENN/MUX, this is `not' a sub-wizard, this is a
     FULL wizard.  Plus, they can do a bit more.

     COUNCILOR - Like royalty on PENN/MUX but they can modify.

     ARCHITECT - Can’t do as much as councilor, but lot more than
     BUILDER.

     GUILDMASTER - Very limited.  Sees dbrief#’s, can ex things their
     level and lower and @quota players.


File: rhostmushhandbook.info,  Node: You need to @pcreate your guest characters and set them GUEST,  Next: @powers are INHERITED,  Prev: Note on bits their levels and things they do,  Up: Random notes and things to know about RhostMUSH

2.24.2 You need to @pcreate your guest characters and set them GUEST
--------------------------------------------------------------------

     It doesn’t create them on the fly but we considered this better.
     You have 31 total you can have.  It defaults to 10 in the
     netrhost.conf file.  You can rename the guests anything you want,
     but before you do so, you must add the dbref#’s to the param
     guest_namelist


File: rhostmushhandbook.info,  Node: @powers are INHERITED,  Next: @depowers are automatically checked first before anything else,  Prev: You need to @pcreate your guest characters and set them GUEST,  Up: Random notes and things to know about RhostMUSH

2.24.3 @powers are INHERITED
----------------------------

     Therefore, you need power_objects enabled (@admin) to make this
     work properly for non-plauyers.  A power is taken before a bit
     level ONLY if higher than that bit.  Yes, powers are multi-level.


File: rhostmushhandbook.info,  Node: @depowers are automatically checked first before anything else,  Next: Zones are unique,  Prev: @powers are INHERITED,  Up: Random notes and things to know about RhostMUSH

2.24.4 @depowers are automatically checked first before anything else
---------------------------------------------------------------------

     This is also meaningless on objects.


File: rhostmushhandbook.info,  Node: Zones are unique,  Next: The db auto-repares itself when it can,  Prev: @depowers are automatically checked first before anything else,  Up: Random notes and things to know about RhostMUSH

2.24.5 Zones are unique
-----------------------

     You can have things in multiple zones.


File: rhostmushhandbook.info,  Node: The db auto-repares itself when it can,  Next: You can get your connect txt to parse ansi,  Prev: Zones are unique,  Up: Random notes and things to know about RhostMUSH

2.24.6 The db auto-repares itself when it can
---------------------------------------------

     It does this by purging anything it can’t identify.  Dataloss is
     better than unrecoverable data.  Yes, any such ‘repairing’ is
     logged so you know if something is up.


File: rhostmushhandbook.info,  Node: You can get your connect txt to parse ansi,  Next: Re-compiled binaries do not require an @shutdown,  Prev: The db auto-repares itself when it can,  Up: Random notes and things to know about RhostMUSH

2.24.7 You can get your connect.txt to parse ansi
-------------------------------------------------

     See ansi_txtfiles in wizhelp.

     You can also override it with softcode if you so wanted.

     See file_object in wizhelp for more information on this.


File: rhostmushhandbook.info,  Node: Re-compiled binaries do not require an @shutdown,  Next: Softcode emulations of functions from other servers are included,  Prev: You can get your connect txt to parse ansi,  Up: Random notes and things to know about RhostMUSH

2.24.8 Re-compiled binaries do not require an @shutdown
-------------------------------------------------------

     When re-compiling the binaries, all you have to remember is when
     done, issue

     @reboot on the game and @readcache.

     You do not need to @shutdown.


File: rhostmushhandbook.info,  Node: Softcode emulations of functions from other servers are included,  Prev: Re-compiled binaries do not require an @shutdown,  Up: Random notes and things to know about RhostMUSH

2.24.9 Softcode emulations of functions from other servers are included
-----------------------------------------------------------------------

     Load the file softfunctions into the mush once it’s set up.  This
     are @functions that will alias the functions that PENN, MUX, and
     TinyMUSH have that is either named differently or we don’t have for
     one reason or another.


File: rhostmushhandbook.info,  Node: Comparison of modern MUSH servers,  Next: Database,  Prev: What RhostMUSH is about and what’s so great about RhostMUSH,  Up: Top

3 Comparison of modern MUSH servers
***********************************

* Menu:

* Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH: Differences to expect to the end user between PennMUSH MUX and RhostMUSH.
* Comparison of features between RhostMUSH, PennMUSH, and MUX2: Comparison of features between RhostMUSH PennMUSH and MUX2.
* Organization of help and wizhelp::
* Mail, comsystem, guests, master rooms, etc..: Mail comsystem guests master rooms etc.
* Comparisons of features::
* @commands with equivalents::
* @commands unique to RhostMUSH::
* @lock equivalents::
* @locks that only exist in RhostMUSH::
* Flag and toggle equivalents::
* Flags and toggles that only exist in RhostMUSH::
* @power equivalents::
* Functions equivalents::
* What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost.
* Things other mushes can do that Rhost can not and how to emulate it: Things other mushes can do that Rhost can not and how to emulate it<2>.


File: rhostmushhandbook.info,  Node: Differences to expect to the end user between PennMUSH MUX and RhostMUSH,  Next: Comparison of features between RhostMUSH PennMUSH and MUX2,  Up: Comparison of modern MUSH servers

3.1 Differences to expect to the end user between PennMUSH, MUX, and RhostMUSH
==============================================================================

The largest end user experience will mostly resolve around some look and
feel.  The general look and feel of how to set attributes, work with
commands and functions, and getting around a grid will be identical
between the mush flavors.  @nuke and @destroy will work somewhat
differently between the three codebases and some effort should be looked
at on how different it behaves.

* Menu:

* PennMUSH: PennMUSH<2>.
* MUX: MUX<2>.
* RhostMUSH::


File: rhostmushhandbook.info,  Node: PennMUSH<2>,  Next: MUX<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.1 PennMUSH
--------------

   - The way the comsystem (hardcode) works with the latest PennMUSH has
     some compatibility now with MUX’s comsystem.

   - The @mail system is different to MUX and Rhost.

   - Debugging code uses DEBUG and has an indented format.

   - The parser for code doesn’t require nested escaping like other
     codebases, but has issues with the pre-parser and nesting.

   - All standard movement, attribute setting, other should be similar

   - Penn allows empty attributes.

   - Penn supports attribute trees.

   - Penn has the standard set of bitlevel flags with on/off @powers


File: rhostmushhandbook.info,  Node: MUX<2>,  Next: RhostMUSH,  Prev: PennMUSH<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.2 MUX
---------

   - The comsystem (hardcode) is unique to MUX/TinyMUSH3 and is not
     compatible with Penn.

   - The @mail system is unique to MUX/TinyMUSH3 and is not compatible
     with Penn.

   - Debugging uses TRACE and is the old standard for debugging.

   - The parser requires extra escaping for nested escaping but handles
     pre-parsing and nesting fine.

   - MUX does not allow empty attributes.

   - MUX does not support attribute trees.

   - MUX has the standard set of bitlevel flags with on/off @powers


File: rhostmushhandbook.info,  Node: RhostMUSH,  Prev: MUX<2>,  Up: Differences to expect to the end user between PennMUSH MUX and RhostMUSH

3.1.3 RhostMUSH
---------------

   - The comsystem (softcode) is in the Mushcode directory and is
     compatible to both PennMUSH and MUX.

   - The mail system is unique to Rhost but there exists mail wrappers
     that allow MUX and Penn compatibility.

   - Debugging uses TRACE and is the old standard for debugging.  It
     allows advanced features like labeling and grepping for content.

   - The parser requires extra escaping for nested escaping but handles
     pre-parsing and nesting fine.

   - Rhost does not allow empty attributes.

   - Rhost marginally supports attribute trees.

   - Rhost has a multi-level set of bitlevel flags with multi-tier
     @powers, @depowers, and varying other tools for permissions.


File: rhostmushhandbook.info,  Node: Comparison of features between RhostMUSH PennMUSH and MUX2,  Next: Organization of help and wizhelp,  Prev: Differences to expect to the end user between PennMUSH MUX and RhostMUSH,  Up: Comparison of modern MUSH servers

3.2 Comparison of features between RhostMUSH, PennMUSH, and MUX2
================================================================

There are differences in the initial set up from Rhost to PennMUSH (and
MUX2).

A lot of people use PennMUSH and if you are one of them, this may help
you.  Some people use MUX2, hopefully this will help you as well.

NOTE: If you plan to use sideeffects, you must set the SIDEFX flag to allow

     the target to use it

NOTE: Rhost does support UNICODE/UTF8, but it’s currently not part of the main

     branch as of this writing.  Please talk to Kage on the dev site for
     more information on when it’ll be released.


File: rhostmushhandbook.info,  Node: Organization of help and wizhelp,  Next: Mail comsystem guests master rooms etc,  Prev: Comparison of features between RhostMUSH PennMUSH and MUX2,  Up: Comparison of modern MUSH servers

3.3 Organization of help and wizhelp
====================================

First, on PennMUSH, help is separated into ‘help’ and ‘wizhelp’.  This
can be confusing.  If you want to ‘combine’ them, you may use the
following snippit:

$ahelp*:@pemit
%#=[switch([!!words(%0)][match(/search,%0*)],0?,[setq(0,help)][setq(1,0)],11,[setq(0,rest(%0))][setq(1,2)],setq(0,trim(%0)))][setq(a,textfile(help,%q0,%q1))][setq(b,textfile(wizhelp,%q0,%q1))][setq(2,)][ifelse(!strmatch(%qa,No
entry*),%qa[setq(2,%r)])][ifelse(!strmatch(%qb,No
entry*),%q2%qb[setq(2,%r)])][ifelse(!$r(2),No topics found for ‘%q0’.)]

This will display help from help and wizhelp for any matching topic.  It
should make life easier for you.  This also honors the /search switch.


File: rhostmushhandbook.info,  Node: Mail comsystem guests master rooms etc,  Next: Comparisons of features,  Prev: Organization of help and wizhelp,  Up: Comparison of modern MUSH servers

3.4 Mail, comsystem, guests, master rooms, etc..
================================================

The comsystem is softcode and included in the readme directory.
(comsys).  Just load it in.  The mail wrappers can be gotten from:

     The Mushcode directory in the Rhost Distribution.

Please see the other readme files on setting other things up like
guests, master rooms, and so forth.


File: rhostmushhandbook.info,  Node: Comparisons of features,  Next: @commands with equivalents,  Prev: Mail comsystem guests master rooms etc,  Up: Comparison of modern MUSH servers

3.5 Comparisons of features
===========================

Comparisons were done based on the following: RhostMUSH 3.9.5p2 MUX
2.12.0.2 PennMUSH 1.8.6p0


File: rhostmushhandbook.info,  Node: @commands with equivalents,  Next: @commands unique to RhostMUSH,  Prev: Comparisons of features,  Up: Comparison of modern MUSH servers

3.6 @commands with equivalents
==============================

The following are used for compatibility to keep in mind:

@commands Pennmush—————-RhostMUSH———————-MUX2

     @@ @@ @@ @ALLHALT @halt/all @HALT/ALL @ALLQUOTA @quota/all
     @QUOTA/ALL @ALIAS @alias/@protect @ALIAS N/A @apply_marked
     @APPLY_MARKED @ASSERT @assert @ASSERT @ATRCHOWN @chown @CHOWN
     @ATRLOCK @lock @LOCK @ATTRIBUTE @attribute @ATTRIBUTE N/A (see
     backup_flat.sh) @BACKUP @BOOT @boot @BOOT @BREAK @break @BREAK N/A
     N/A @CCHARGE N/A N/A @CCHOWN @CEMIT (softcode) @CEMIT @CHANNEL N/A
     N/A @CHAT N/A N/A @CHOWNALL @chownall @CHOWNALL @CHZONE @zone
     @CHZONE @CHZONEALL @zone N/A @CLOCK N/A N/A @CLONE @clone @CLONE
     N/A N/A @CCREATE N/A N/A @CDESTROY N/A N/A @CWHO @COMMAND N/A N/A
     @CONFIG @admin @ADMIN N/A N/A @COFLAGS N/A N/A @CPFLAGS N/A N/A
     @CSET @CPATTR @cpattr @CPATTR @CREATE @create @CREATE N/A @cut @CUT
     @DBCK @dbck @DBCK @DECOMPILE @decompile @DECOMPILE @DESTROY
     @destroy @DESTROY @DIG @dig @DIG @DISABLE @disable @DISABLE @DOING
     @doing @DOING @DOLIST @dolist @DOLIST @DRAIN @drain @DRAIN @DUMP
     @dump @DUMP @EDIT @edit @EDIT @ELOCK @lock/enter @LOCK/ENTER @EMIT
     @emit @EMIT N/A N/A @EMAIL @ENABLE @enable @ENABLE @ENTRANCES
     @entrances @ENTRANCES @EUNLOCK @unlock/enter @UNLOCK/ENTER N/A
     @eval @EVAL N/A @femit @FEMIT N/A @fpose @FPOSE N/A @fsay @FSAY
     @FIND @find @FIND @FIRSTEXIT N/A N/A @FLAG @flag @FLAG @FORCE
     @force @FORCE N/A folder @FOLDER @FUNCTION @function/@lfunction
     @FUNCTION @GREP @grep N/A @HALT @halt @HALT @HIDE @hide N/A @HOOK
     @hook @HOOK @INCLUDE @include N/A N/A @skip/ifelse @IF @KICK @kick
     @KICK N/A @last @LAST @LEMIT @lemit @LEMIT @LINK @link @LINK @LIST
     @list @LIST N/A @list_file @LIST_FILE @LISTMOTD @listmotd @LISTMOTD
     @LOCK @lock @LOCK @LOG @log @LOG @LOGWIPE N/A N/A @LSET @set @SET
     N/A @mark @MARK N/A @mark_all @MARK_ALL @MAIL mail @MAIL @MALIAS
     wmail/alias @MALIAS @MAPSQL N/A N/A @MESSAGE @pemit/@remit +
     parsestr() N/A @MONIKER @extansi @MONIKER @MOTD @motd @MOTD @MVATTR
     @mvattr @MVATTR @NAME @name @NAME N/A @emit/noeval @NEMIT N/A
     @pemit/noeval @NPEMIT @NEWPASSWORD @newpassword @NEWPASSWORD
     @NOTIFY @notify @NOTIFY @NSCEMIT N/A N/A @NSEMIT @emit @emit
     @NSLEMIT @lemit @LEMIT @NSOEMIT @oemit @OEMIT @NSPEMIT @pemit
     @PEMIT @NSPROMPT N/A N/A @NSREMIT @remit @REMIT @NSZEMIT @zemit N/A
     @NUKE @destroy/@nuke @DESTROY/@NUKE @OEMIT @oemit @OEMIT @OPEN
     @open @OPEN @PARENT @parent @PARENT @PASSWORD @password @PASSWORD
     @PCREATE @pcreate @PCREATE @PEMIT @pemit @PEMIT @POLL @doing/header
     @POLL @POOR @poor @POOR @POWER @power @POWER @PROMPT N/A
     (@program?)  N/A (@program?)  N/A @program @PROGRAM @PS @ps @PS
     @PURGE @timewarp/dump 1 @TIMEWARP/DUMP 1 N/A @quitprogram
     @QUITPROGRAM @QUOTA @quota @QUOTA N/A N/A @QUERY @READCACHE
     @readcache @READCACHE @RECYCLE @purge N/A N/A N/A @REFERENCE N/A
     @robot @ROBOT @REJECTMOTD @rejectmotd @REJECTMOTD @REMIT @remit
     @REMIT @RESTART @reboot @RESTART @RETRY N/A N/A @RWALL @wall/wiz
     @WALL/WIZ @SCAN (see softcode) N/A @SEARCH @search @SEARCH @SELECT
     @switch/first @SWITCH/FIRST @SET @set @SET @SHUTDOWN @shutdown
     @SHUTDOWN @SITELOCK @admin forbid_host/forbid_site @admin
     forbid_site @SLAVE N/A @STARTSLAVE @SOCKSET N/A N/A @SQL (only if
     MySQL enabled) @QUERY @SQUOTA @quota N/A @STATS @stats @STATS
     @SWEEP @sweep @SWEEP @SWITCH @switch @SWITCH N/A @timewarp
     @TIMEWARP @TELEPORT @teleport @TELEPORT N/A @timecheck @TIMECHECK
     N/A @toad @TOAD @TRIGGER @trigger @TRIGGER @ULOCK @lock/use
     @LOCK/USE @UNDESTROY @recover N/A @UNLINK @unlink @UNLINK @UNLOCK
     @unlock @UNLOCK @UNRECYCLE @recover N/A @UPTIME @uptime @UPTIME
     @UUNLOCK @unlock/use @UNLOCK/USE @VERB @verb @VERB @VERSION
     @version VERSION @WAIT @wait @WAIT @WALL @wall @WALL @WARNINGS N/A
     N/A @WCHECK N/A N/A @WEBPASSWD N/A N/A @WHEREIS @whereis N/A @WIPE
     @wipe @WIPE @WIZMOTD @wizmotd @WIZMOTD @WIZWALL @wall/wiz @WALL/WIZ
     @ZEMIT @zemit N/A N/A (softcode) ALLCOM N/A (softcode) COMLIST N/A
     (softcode) DELCOM N/A (softcode) ADDCOM N/A (softcode) COMTITLE
     ANEWS @dynhelp N/A ATTRIB_SET (@hook on S) (@hook on S) BRIEF
     ex/brief EX/BRIEF BUY N/A N/A N/A N/A CLEARCOM DESERT (see follow
     softcode) N/A DISMISS (see follow softcode) N/A DOING doing DOING
     DROP drop DROP EMPTY @tel/list lcon(target)=me @tel/list
     lcon(target)=me ENTER enter ENTER EXAMINE examine EXAMINE FOLLOW
     (see follow softcode) N/A GET get GET GIVE give GIVE GOTO goto GOTO
     HELP help/wizhelp HELP/WIZHELP HOME home HOME HUH_COMMAND @admin
     global_error_obj @admin global_error_obj INFO INFO INFO INVENTORY
     inventory INVENTORY KILL kill KILL LEAVE leave LEAVE LOGOUT logout
     LOGOUT LOOK look LOOK NEWS news NEWS N/A outputprefix OUTPUTPREFIX
     N/A outputsuffix OUTPUTSUFFIX PAGE page/lpage/rpage/mrpage PAGE
     POSE pose POSE N/A N/A PUEBLOCLIENT QUIT quit QUIT N/A N/A REPORT
     SAY say SAY SCORE score SCORE SEMIPOSE pose/nospace POSE/NOSPACE
     SESSION session SESSION SLAY slay SLAY TEACH train TRAIN THINK
     think THINK UNFOLLOW (see follow softcode) N/A
     UNIMPLEMENTED_COMMAND @admin global_error_obj @admin
     global_error_obj USE use USE WARN_ON_MISSING N/A N/A WHISPER
     whisper WHISPER WHO who WHO WITH N/A N/A


File: rhostmushhandbook.info,  Node: @commands unique to RhostMUSH,  Next: @lock equivalents,  Prev: @commands with equivalents,  Up: Comparison of modern MUSH servers

3.7 @commands unique to RhostMUSH
=================================

Commands that exist in Rhost that have no PennMUSH equivelant: @aflags
@apply_marked @areg @blacklist @cluster @conncheck @convert @cut
@dbclean @depower @dynhelp @eval @femit @fixdb @fpose @freeze @fsay
@icmd @last @lfunction @limit @logrotate @mark @mark_all @money @pipe
@program @progreset @protect @quitprogram @reclist @recover @register
@remote @robot @rxlevel @skip @snapshot @snoop @thaw @timewarp @toad
@toggle @toggledef @tor @turtle @txlevel @whereall grab join listen
mrpage newsdb rpage smell taste touch wielded worn +players


File: rhostmushhandbook.info,  Node: @lock equivalents,  Next: @locks that only exist in RhostMUSH,  Prev: @commands unique to RhostMUSH,  Up: Comparison of modern MUSH servers

3.8 @lock equivalents
=====================

@locks PennMUSH—————RhostMUSH———————————–MUX2

     BASIC BASIC/DEFAULT DEFAULT ENTER ENTER ENTER TELEPORT TPORT TPORT
     USE USE USE PAGE PAGE PAGE ZONE ZONEWIZLOCK/ZONETOLOCK/TWINKLOCK
     N/A PARENT PARENT PARENT LINK LINK LINK OPEN OPEN OPEN MAIL
     mail/lock MAIL USER USER USER USER:<dynamicname>
     lockencode()/lockdecode()/lockcheck() N/A SPEECH SPEECH SPEECH
     LISTEN USE (see listen argument) N/A COMMAND USE (commands are
     default) N/A LEAVE LEAVE LEAVE DROP DROP DROP DROPIN DROPTO N/A
     GIVE GIVE GIVE FROM GIVETO N/A PAY N/A N/A RECEIVE RECEIVE RECEIVE
     FOLLOW (See softcoded follow code) N/A EXAMINE See
     NO_MODIFY/NO_EXAMINE/TWINKLOCK N/A CHZONE
     ZONETOLOCK/ZONEWIZLOCK/TWINKLOCK N/A FORWARD N/A N/A FILTER N/A N/A
     INFILTER N/A N/A CONTROL CONTROL N/A DROPTO DROPTO N/A DESTROY See:
     @recover/@purge/INDESTRUCTIBLE/SAFE N/A INTERACT N/A (See: Reality
     Levels) N/A (See: Reality Levels) TAKE GETFROM GETFROM MAILFORWARD
     mail/lock, mail/autofor N/A N/A TELOUT TELOUT N/A DARK VISIBLE


File: rhostmushhandbook.info,  Node: @locks that only exist in RhostMUSH,  Next: Flag and toggle equivalents,  Prev: @lock equivalents,  Up: Comparison of modern MUSH servers

3.9 @locks that only exist in RhostMUSH
=======================================

@locks that exist in Rhost that have no PennMUSH equivelant: TELOUTLOCK
TWINKLOCK DARKLOCK ALTNAME CHOWN


File: rhostmushhandbook.info,  Node: Flag and toggle equivalents,  Next: Flags and toggles that only exist in RhostMUSH,  Prev: @locks that only exist in RhostMUSH,  Up: Comparison of modern MUSH servers

3.10 Flag and toggle equivalents
================================

FLAGS Pennmush—————-RhostMUSH——————————MUX2

     ABODE ABODE ABODE N/A N/A ASCII ANSI ANSI ANSI AUDIBLE AUDIBLE
     AUDIBLE (Not Needed) (Not Needed) BLEED N/A AUDITORIUM AUDITORIUM
     N/A BLIND BLIND N/A COMMANDS COMMANDS CHAN_USEFIRSTMATCH N/A N/A
     CHOWN_OK CHOWN_OK CHOWN_OK CLOUDY N/A N/A COLOR ANSICOLOR N/A
     CONNECTED CONNECTED CONNECTED DARK DARK DARK DEBUG TRACE TRACE
     DESTROY_OK DESTROY_OK DESTROY_OK ENTER_OK ENTER_OK ENTER_OK FIXED
     NO_TEL FIXED FLOATING FLOATING FLOATING GAGGED FUBAR GAGGED GOING
     GOING GOING HALT HALT HALT HAVEN HAVEN HAVEN (see @flag)
     (marker0-marker9) HEAD HEAR_CONNECT MONITOR (@toggle) SITECON HEAVY
     <NO_TEL/@lock-teleport> N/A N/A N/A HTML N/A FREE IMMORTAL N/A
     INHERIT INHERIT JUMP_OK JUMP_OK JUMP_OK KEEPALIVE KEEPALIVE
     (@toggle) KEEPALIVE N/A KEY KEY LIGHT LIGHT LIGHT LINK_OK LINK_OK
     LINK_OK LISTEN_PARENT (@admin listen_parents) N/A LOUD
     NO_OVERRIDE/NO_USELOCK N/A (see @flag) MARKER0-MARKER9
     MARKER0-MARKER9 MISTRUST GUILDOBJ/NO_GOBJ/BACKSTAGE/NOBACKSTAGE N/A
     MONIKER EXTANSI (@toggle) N/A MONITOR MONITOR MONITOR MYOPIC MYOPIC
     MYOPIC NOACCENTS ACCENTS (@toggle) ACCENTS (Not Needed) (Not
     Needed) NO_BLEED NOSPOOF NOSPOOF NOSPOOF (See @ns-commands)
     Auto-Enabled for Wiz+ SPOOF NO_COMMAND NO_COMMAND NO_COMMAND
     NO_LEAVE @icmd <leave/@lock-leave> @icmd <leave/@lock-leave> NO_TEL
     NO_TEL N/A ON-VACATION MARKER0-MARKER9 VACATION OPAQUE OPAQUE
     OPAQUE OPEN_OK @lock-openfrom OPEN_OK ORPHAN NOGLOBPARENT (@toggle)
     N/A N/A PARENT_OK PARENT_OK PUPPET PUPPET PUPPET QUIET QUIET QUIET
     N/A ROBOT ROBOT ROYALTY GUILDMASTER/ARCHITECT/COUNCILOR ROYALTY
     (@see @flag) MARKER0-9 STAFF SAFE SAFE SAFE N/A SLAVE SLAVE N/A
     MONITOR (@toggle) SITEMON STICKY STICKY STICKY N/A SUSPECT SUSPECT
     TERSE TERSE TERSE TRANSPARENT TRANSPARENT TRANSPARENT UNFINDABLE
     UNFINDABLE UNFINDABLE N/A N/A UNICODE (See @flag) WANDERER
     UNINSPECTED VERBOSE VERBOSE VERBOSE VISUAL VISUAL VISUAL WIZARD
     WIZARD/IMMORTAL WIZARD XTERM256 XTERMCOLOR COLOR256


File: rhostmushhandbook.info,  Node: Flags and toggles that only exist in RhostMUSH,  Next: @power equivalents,  Prev: Flag and toggle equivalents,  Up: Comparison of modern MUSH servers

3.11 Flags and toggles that only exist in RhostMUSH
===================================================

* Menu:

* Flags::
* Toggles::


File: rhostmushhandbook.info,  Node: Flags,  Next: Toggles,  Up: Flags and toggles that only exist in RhostMUSH

3.11.1 Flags
------------

ALTQUOTA ANONYMOUS ARCHITECT AUDITORIUM BLIND BOUNCE CLOAK COUNCILOR
FUBAR GUILDMASTER GUILDOBJ IMMORTAL INDESTRUCTABLE NO_ANSINAME
NO_BACKSTAGE NO_CODE NO_CONNECT NO_EXAMINE NO_FLASH NO_GOBJ NO_MODIFY
NO_MOVE NO_NAME NO_OVERRIDE NO_PESTER NO_POSSESS NO_STOP NO_UNDERLINE
NO_USELOCK NO_WALLS NO_YELL PRIVATE ROBOT SCLOAK SEE_OEMIT SHOWFAILCMD
SIDEFX SPAMMONITOR SPOOF STOP WANDERER ZONECONTENTS ZONEPARENT


File: rhostmushhandbook.info,  Node: Toggles,  Prev: Flags,  Up: Flags and toggles that only exist in RhostMUSH

3.11.2 Toggles
--------------

ATRUSE CHKREALITY CPUTIME EXFULLWIZATTR FORCEHALTED HIDEIDLE IGNOREZONE
IMMPROG LOGROOM MAILVALIDATE MAIL_LOCKDOWN MAIL_NOPARSE MAIL_STRIPRETURN
MONITOR_AREG MONITOR_BAD MONITOR_CONN MONITOR_CPU MONITOR_DISREASON
MONITOR_FAIL MONITOR_SITE MONITOR_STATS MONITOR_TIME MONITOR_USERID
MONITOR_VLIMIT MORTALREALITY NODEFAULT NOSHPROG NOZONEPARENT NO_ANSI_EX
NO_ANSI_EXIT NO_ANSI_PLAYER NO_ANSI_ROOM NO_ANSI_THING NO_FORMAT
NO_TIMESTAMP PAGELOCK PROG PROG_ON_CONNECT SAFELOG SEE_SUSPECT
SILENTEFFECT SNUFFDARK ZONECMDCHK ZONE_AUTOADD ZONE_AUTOADDALL


File: rhostmushhandbook.info,  Node: @power equivalents,  Next: Functions equivalents,  Prev: Flags and toggles that only exist in RhostMUSH,  Up: Comparison of modern MUSH servers

3.12 @power equivalents
=======================

@powers Pennmush—————-RhostMUSH——————————————MUX2

     Announce FREE_WALL Announce Boot BOOT Boot Builder @quota !WANDERER
     (flag) Builder CAN_DARK @admin <player_dark/@depower> dark N/A
     Can_spoof N/A - Wizard+ auto-spoof N/A Cemit N/A N/A N/A
     CHOWN_OTHER chown_anything N/A @lock/twink control_all N/A WIZ_WHO
     expanded_who Chat_Privs N/A comm_all DEBIT STEAL Steal_money
     Functions (See @lfunctions) Wizard+ only Guest GUEST (flag) Guest
     HOOK Wizard+ only Wizard+ only Halt HALT_QUEUE/HALT_QUEUE_ALL Halt
     Hide NOWHO Hide Idle @timeout player to -1 Idle N/A NO_MODIFY
     (flag) Immutable Link_Anywhere N/A (security risk) N/A Login LOGIN
     (flag) LOGIN (flag) Long_Fingers LONG_FINGERS Long_fingers
     MANY_ATTRIBS (@admin vlimit) N/A N/A MONITOR (@toggle) Monitor
     No_Pay FREE (flag) Free_money No_Quota FREE_QUOTA Free_quota
     Open_Anywhere N/A (security risk) N/A N/A (Wiz+ Automatic)
     Pass_locks PICK_DBREFS Wizard+ only N/A PUEBLO_SEND N/A N/A
     Pemit_All LONG_FINGERS N/A Player_Create PCREATE N/A Poll N/A –
     Softcode @doing/header Poll N/A PROG (@toggle) Prog Queue
     SEE_QUEUE/SEE_QUEUE_ALL/HALT_QUEUE/HALT_QUEUE_ALL N/A Quotas
     CHANGE_QUOTAS N/A SQL_OK N/A N/A Search SEARCH_ANY Search See_All
     EXAMINE_FULL See_all N/A WHO_UNFIND See_hidden N/A SHUTDOWN
     Siteadmin See_Queue SEE_QUEUE/SEE_QUEUE_ALL N/A N/A STAT_ANY
     Stat_any Tport_Anything TEL_ANYTHING Tel_anything Tport_Anywhere
     TEL_ANYWHERE Tel_anywhere Unkillable NOKILL Unkillable

* Menu:

* @power unique to RhostMUSH::


File: rhostmushhandbook.info,  Node: @power unique to RhostMUSH,  Up: @power equivalents

3.12.1 @power unique to RhostMUSH
---------------------------------

Depowers are unique in Rhost and PennMUSH has no equivelant.

Powers that exist in RhostMUSH that have no match in PennMUSH: CHOWN_ME
WIZ_WHO NOFORCE FREE_QUOTA JOIN_PLAYER NO_BOOT STAT_ANY WHO_UNFIND
SHUTDOWN PURGE CHOWN_ANYWHERE CHOWN_OTHER GRAB_PLAYER SECURITY WRAITH
HIDEBIT


File: rhostmushhandbook.info,  Node: Functions equivalents,  Next: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Prev: @power equivalents,  Up: Comparison of modern MUSH servers

3.13 Functions equivalents
==========================

Functions Pennmush—————-RhostMUSH——————–MUX

     @@ @@ @@ ABS ABS ABS/IABS ACCENT ACCENT ACCENT ACCNAME CNAME
     MONIKER ACOS ACOS ACOS ADD ADD ADD AFTER AFTER AFTER ALIAS
     get(#db/alias)/LISTPROTECT get(#db/alias) ALIGN PRINTF N/A ALLOF
     OFPARSE N/A ALPHAMAX ALPHAMAX ALPHAMAX ALPHAMIN ALPHAMIN ALPHAMIN
     AND AND AND/ANDBOOL ANDFLAGS ANDFLAGS ANDFLAGS ANDLFLAGS ANDFLAG
     N/A ANDLPOWERS @function (softfunctions) N/A ANSI ANSI ANSI APOSS
     APOSS APOSS ART ART ART ASIN ASIN ASIN ATAN ATAN ATAN ATAN2 ATAN2
     ATAN2 N/A ATTRCNT ATTRCNT ATRLOCK HASFLAG(#obj/attr,LOCK)
     HASFLAG(#obj/attr,LOCK) ATTRIB_SET SET SET BAND MASK BAND BASECONV
     PACK/UNPACK BASECONV BEEP BEEP BEEP BEFORE BEFORE BEFORE N/A
     BITTYPE BITTYPE BENCHMARK CPUTIME (@toggle) N/A BNAND MASK BNAND
     BNOT MASK N/A BOR BOR BOR BOUND BOUND/FBOUND N/A BRACKETS BRACKETS
     N/A BXOR MASK BXOR CAND CAND CAND/CANDBOOL CAPSTR CAPSTR CAPSTR
     CASE CASE CASE CASEALL CASEALL N/A CAT CAT CAT CBUFFER N/A N/A
     CBUFFERADD N/A N/A CDESC N/A N/A CEIL CEIL CEIL CEMIT N/A CEMIT
     CENTER CENTER CENTER CFLAGS N/A N/A CHANNELS N/A CHANNELS CHECKPASS
     CHECKPASS N/A CHILDREN CHILDREN CHILDREN N/A N/A CHOOSE CHR CHR CHR
     CLFLAGS N/A N/A CLOCK N/A N/A CLONE CLONE N/A CMDS CMDS CMDS
     CMOGRIFIER N/A N/A CMSGS N/A N/A COLORS COLORS N/A N/A N/A
     COLORDEPTH N/A @function (softfunctions) COLUMNNS N/A N/A COMALIAS
     COMP COMP COMP N/A N/A COMTITLE CON CON CON COND @function
     (softfunctions) N/A CONDALL @function (softfunctions) N/A CONFIG
     CONFIG CONFIG CONN CONN CONN convsecs(get(#db/last))
     convsecs(get(#db/last)) CONNLAST N/A N/A CONNLEFT N/A N/A CONNMAX
     N/A N/A CONNNUM N/A N/A CONNRECORD N/A N/A CONNTOTAL CONTROLS
     CONTROLS CONTROLS CONVSECS CONVSECS CONVSECS CONVTIME CONVTIME
     CONVTIME CONVUTCSECS CONVSECS CONVSECS CONVUTCTIME CONVTIME
     CONVTIME COR COR COR/CORBOOL COS COS COS ALIGN PRINTF CPAD N/A
     CRC32 CRC32 COWNER N/A N/A CREATE CREATE CREATE CRECALL N/A N/A
     CSECS N/A N/A CSTATUS N/A N/A CTIME N/A CTIME CTITLE N/A N/A CTU
     CTU CTU CUSERS N/A N/A CWHO N/A CWHO DEC DEC/XDEC DEC DECODE64
     DECODE64 N/A DECOMPOSE TRANSLATE TRANSLATE DECRYPT DECRYPT DECRYPT
     DEFAULT DEFAULT DEFAULT N/A DESTROY DESTROY DIE DICE DIE DIG DIG
     CREATE(with ‘r’) DIGEST DIGEST DIGEST N/A TIMEFMT DIGITTIME DIST2D
     DIST2D DIST2D DIST3D DIST3D DIST3D @function @function DISTRIBUTE
     DIV DIV IDIV DOING DOING DOING N/A N/A DUMPING E E E EDEFAULT
     EDEFAULT EDEFAULT EDIT PEDIT/EDIT EDIT ELEMENT MATCH MATCH ELEMENTS
     ELEMENTSMUX/ELEMENTS ELEMENTS ELIST ELIST ITEMIZE ELOCK ELOCK ELOCK
     EMIT EMIT EMIT ENCODE64 ENCODE64 N/A ENCRYPT ENCRYPT ENCRYPT ENDTAG
     N/A N/A ENTRANCES ENTRANCES ENTRANCES EQ EQ EQ N/A ERROR ERROR
     ESCAPE ESCAPE ESCAPE ETIME @function (softfunctions) N/A ETIMEFMT
     TIMEFMT ETIMEFMT EVAL EVAL EVAL EXIT EXIT EXIT N/A EXP EXP EXTRACT
     EXTRACT EXTRACT %+ %+ FCOUNT %+ %+ FDEPTH FDIV FDIV FDIV FILTER
     FILTER FILTER FILTERBOOL FILTER FILTERBOOL FINDABLE FINDABLE
     FINDABLE FIRST FIRST FIRST FIRSTOF OFPARSE N/A FLAGS FLAGS FLAGS
     FLIP REVERSE REVERSE FLOOR FLOOR FLOOR FLOORDIV FLOORDIV FLOORDIV
     FMOD FMOD FMOD FN BYPASS N/A FOLD FOLD FOLD FOLDERSTATS FOLDERLIST
     N/A FOLLOWERS N/A (softcode available) N/A FOLLOWING N/A (softcode
     available) N/A FOREACH FOREACH FOREACH FRACTION N/A N/A FULLALIAS
     ALIAS + LISTPROTECT N/A FULLNAME FULLNAME FULLNAME FUNCTIONS
     LISTFUNCTIONS N/A GET GET GET GETPIDS PIDS N/A GET_EVAL GET_EVAL
     GET_EVAL GRAB GRAB GRAB GRABALL GRABALL GRABALL GREP GREP GREP
     GREPI GREP GREPI GT GT GT GTE GTE GTE HASATTR HASATTR HASATTR
     HASATTRP HASATTRP HASATTRP HASATTRPVAL HASATTRP HASATTRP HASATTRVAL
     HASATTR HASATTR HASFLAG HASFLAG HASFLAG HASPOWER HASPOWER HASPOWER
     N/A HASQUOTA HASQUOTA HASTYPE HASTYPE HASTYPE HEIGHT @function
     (softfunctions) HEIGHT HIDDEN HIDDEN N/A HOME HOME HOME HOST
     LOOKUP_SITE HOST HTML N/A N/A IBREAK IBREAK N/A IDLE IDLE IDLE IF
     IFELSE IF IFELSE IFELSE IFELSE ILEV ILEV ILEV INAME NAME NAME INC
     INC/XINC INC INDEX INDEX INDEX INUM INUM/INUM2 INUM N/A INZONE
     INZONE IPADDR LOOKUP_SITE N/A ISDAYLIGHT TIMEFMT N/A ISDBREF
     ISDBREF ISDBREF ISINT ISINT ISINT ISNUM ISNUM ISNUM N/A N/A ISRAT
     ISOBJID N/A N/A ISREGEXP N/A N/A ISWORD ISWORD ISWORD ITEMIZE ELIST
     ITEMIZE ITEMS WORDS WORDS ITER ITER ITER ITEXT ITEXT ITEXT LALIGN
     PRINTF N/A STRMATH LADD LADD N/A LAND LAND LAST LAST LAST N/A
     LASTCREATE LASTCREATE LATTR LATTR LATTR N/A LATTR LATTRCMDS LATTRP
     LATTRP LATTRP N/A LCMDS LCMDS LCON LCON LCON LCSTR LCSTR LCSTR
     LDELETE LDELETE LDELETE LEFT LEFT STRTRUNC LEMIT LEMIT N/A LETQ
     @function (softfunctions) N/A LEXITS LEXITS LEXITS LFLAGS LFLAGS
     LFLAGS LINK LINK LINK N/A LIST (like iter()) LIST (like iter())
     LINSERT INSERT INSERT LIST LISTPOWERS, FLAGS, etc N/A LISTQ N/A N/A
     LIT LIT LIT LJUST LJUST LJUST LLOCKFLAGS N/A N/A LLOCKS LOCKS LOCKS
     LMATH STRFUNC N/A LN LN LN LNUM LNUM/LNUM2 LNUM LOC LOC LOC
     LOCALIZE LOCALIZE LOCALIZE LOCATE LOCATE LOCATE LOCK LOCK LOCK N/A
     LOG2FILE LOG LOCKFILTER LOCKCHECK N/A LOCKFLAGS FLAGS FLAGS
     LOCKOWNER OWNER OWNER LOCKS LOCK LOCK LOG LOG LOG LPARENT PARENTS
     LPARENT LPIDS PIDS N/A LPLAYERS LCON LCON N/A LOR LOR LPORTS PORT
     PORTS ALIGN PRINTF LPAD LPOS LPOS LPOS DIE DICE LRAND N/A LROOMS
     LROOMS LREPLACE REPLACE REPLACE LSEARCH SEARCH/SEARCHNG SEARCH
     LSEARCHR revwords(search()) revwords(search()) LSET SET SET LSTATS
     STATS STATS LT LT LT LTE LTE LTE LTHINGS LCON LCON LVCON LCON +
     STREVAL at mortal N/A LVEXITS LCON + STREVAL at mortal N/A
     LVPLAYERS LCON + STREVAL at mortal N/A LVTHINGS LCON + STREVAL at
     mortal N/A LWHO LWHO LWHO LWHOID N/A N/A MAIL MAILREAD/MAILSEND
     MAIL MAILDSTATS MAILSIZE/MAILQUOTA MAILSIZE MAILFROM MAILREAD
     MAILFROM MAILFSTATS FOLDERLIST/FOLDERCURRENT N/A MAILLIST MAILREAD
     N/A MAILSEND MAILSEND N/A MAILSTATS MAILSIZE/MAILQUOTA MAILSIZE
     MAILSTATUS MAILSIZE/MAILQUOTA MAILSIZE MAILSUBJECT MAILREAD
     MAILSUBJ MAILTIME MAILREAD N/A MALIAS MAILREAD N/A MAP MAP MAP
     MAPSQL N/A N/A MATCH MATCH MATCH MATCHALL MATCHALL MATCHALL MAX MAX
     MAX MEAN AVG AVG MEDIAN AVG AVG MEMBER MEMBER MEMBER MERGE MERGE
     MERGE MESSAGE PARSESTR + PEMIT/REMIT N/A MID MID MID MIN MIN MIN
     MIX MIX MIX MODULO MOD MOD MONEY MONEY MONEY MONIKER CNAME MONIKER
     N/A N/A MOTD MSECS MODIFYTIME + CONVTIME MTIME + CONVTIME MTIME
     MODIFYTIME MTIME MUDNAME MUDNAME MUDNAME MUDURL N/A N/A MUL MUL MUL
     MUNGE MUNGE MUNGE MWHO LWHO + STREVAL at mortal N/A MWHOID N/A N/A
     NAME NAME NAME NAMEGRAB @function (softfunctions) N/A NAMEGRABALL
     @function (softfunctions) N/A NAMELIST @function (softfunctions)
     N/A NAND NAND N/A NATTR ATTRCNT ATTRCNT NATTRP ATTRCNT ATTRCNT
     NCAND !CAND NOT(CAND()) NCHILDREN CHILDREN CHILDREN NCON WORDS +
     LCON WORDS + LCON NCOND @function (softfunctions) N/A NCONDALL
     @function (softfunctions) N/A NCOR !COR NOT(COR()) NEARBY NEARBY
     NEARBY NEQ NEQ NEQ NEXITS WORDS + LEXITS WORDS + LEXITS NEXT NEXT
     NEXT NEXTDBREF N/A N/A NLSEARCH WORDS + SEARCH WORDS + SEARCH NMWHO
     WORDS+LWHO+STREVAL at mort N/A NOR NOR N/A NOT NOT or !  NOT
     NPLAYERS WORDS + LCON WORDS + LCON NSCEMIT N/A N/A NSEARCH WORDS +
     SEARCH WORDS + SEARCH NSEMIT EMIT EMIT NSLEMIT LEMIT N/A NSOEMIT
     OEMIT N/A NSPEMIT PEMIT N/A NSPROMPT N/A (@program?)  N/A
     (@program?)  NSREMIT REMIT N/A NSZEMIT ZEMIT N/A NTHINGS WORDS +
     LCON WORDS + LCON NULL NULL NULL NUM NUM NUM NUMVERSION N/A N/A
     NVCON WORDS+LCON+STREVAL at mort N/A NVEXITS WORDS+LEXITS+STREVAL
     at mo N/A NVPLAYERS WORDS+LCON+STREVAL at mort N/A NVTHINGS
     WORDS+LCON+STREVAL at mort N/A NWHO WORDS + LWHO WORDS + LWHO OBJ
     OBJ OBJ OBJEVAL OBJEVAL OBJEVAL OBJID N/A N/A OBJMEM SIZE OBJMEM
     OEMIT OEMIT OEMIT OPEN OPEN N/A OR OR OR/ORBOOL ORD ASC ORD ORDINAL
     N/A N/A ORFLAGS ORFLAGS ORFLAGS ORLFLAGS ORFLAG N/A ORLPOWERS N/A
     (easy to @function) N/A OWNER OWNER OWNER PARENT PARENT PARENT
     PCREATE CREATE CREATE PEMIT PEMIT PEMIT PFUN U + PARENT U + PARENT
     PI PI PI PIDINFO PID N/A PLAYER before(grab(lwho(1),*:%0),:) N/A
     PLAYERMEM SIZE PLAYMEM PMATCH PMATCH PMATCH POLL DOING POLL PORTS
     PORT PORTS POS POS POS POSS POSS POSS POWER POWER POWER POWERS
     LPOWERS POWERS PROMPT N/A (@program?)  N/A (@program?)  PUEBLO N/A
     N/A QUOTA QUOTA N/A R R R RAND RAND RAND RANDWORD PICKRAND PICKRAND
     RECV CHARIN N/A REGEDIT REGEDIT N/A REGEDITALL REGEDITALL N/A
     REGEDITALLI REGEDITALLI N/A REGEDITI REGEDITI N/A REGISTERS N/A N/A
     REGLATTR LATTR N/A REGLATTRP LATTRP N/A REGLMATCH REGLMATCH N/A
     REGLMATCHALL REGLMATCHALL N/A REGLMATCHALLI REGLMATCHALLI N/A
     REGLMATCHI REGLMATCHI N/A REGMATCH REGMATCH REGMATCH REGMATCHI
     REGMATCHI REGMATCHI REGNATTR WORDS + ATTR N/A REGNATTRP WORDS +
     ATTRP N/A REGRAB REGRAB REGRAB REGRABALL REGRABALL REGRABALL
     REGRABALLI REGRABALLI REGRABALLI REGRABI REGRABI REGRABI REGREP
     REGREP N/A REGREPI REGREPI N/A REGXATTR ATTR N/A REGXATTRP ATTRP
     N/A REMAINDER REMAINDER REMAINDER REMIT REMIT REMIT REMOVE REMOVE
     REMOVE RENDER N/A N/A REPEAT REPEAT REPEAT REST REST REST RESTARTS
     N/A RESTARTS RESTARTTIME REBOOTTIME RESTARTTIME
     CONVTIME(RESTARTTIME)) CONVTIME(REBOOTTIME()) RESTARTSECS RESWITCH
     RESWITCH N/A RESWITCHALL RESWITCHALL N/A RESWITCHALLI RESWITCHALLI
     N/A RESWITCHI RESWITCHI N/A REVWORDS REVWORDS REVWORDS RIGHT RIGHT
     RIGHT RJUST RJUST RJUST RLOC RLOC RLOC N/A ROMAN ROMAN RNUM RNUM
     N/A ROOM ROOM ROOM ROOT N/A N/A ROUND ROUND ROUND ALIGN PRINTF RPAD
     S S S SCAN N/A N/A SCRAMBLE SCRAMBLE SCRAMBLE SECS SECS SECS SECURE
     SECURE/SECUREX SECURE SENT CHAROUT N/A SET SET SET SETDIFF SETDIFF
     SETDIFF SETINTER SETINTER SETINTER SETQ SETQ SETQ SETR SETR SETR
     SETUNION SETUNION SETUNION SHA0 DIGEST DIGEST DIGEST DIGEST SHA1
     SHL SHL SHL SHR SHR SHR SHUFFLE SHUFFLE SHUFFLE SIGN NCOMP(%0,0)
     SIGN SIN SIN SIN SLEV N/A N/A @function @function SITEINFO SORT
     SORT SORT SORTBY SORTBY SORTBY SORTKEY @function (softfunctions)
     N/A SOUNDEX SOUNDEX N/A SOUNDSLIKE SOUNDXLIKE N/A SPACE SPACE SPACE
     SPEAK PARSESTR N/A SPEAKPENN PARSESTR N/A SPELLNUM SPELLNUM
     SPELLNUM SPLICE SPLICE SPLICE SQL (if MYSQL enabled) N/A (ASYNC db)
     SQLESCAPE (if MYSQL enabled) N/A (ASYNC db) SQRT SQRT SQRT SQUISH
     SQUISH SQUISH SSL N/A N/A STARTTIME STARTTIME STARTTIME
     CONVTIME(STARTTIME)) CONVTIME(STARTTIME()) STARTSECS N/A STATS
     STATS STDDEV AVG AVG STEP STEP STEP STEXT N/A N/A STRALLOF OFPARSE
     N/A STRCAT STRCAT STRCAT N/A STRIP STRIP STRDELETE CREPLACE/DELETE
     DELETE STRFIRSTOF OFPARSE N/A STRINGSECS @function (softfunctions)
     N/A STRINSERT CREPLACE N/A STRIPACCENTS STRIPACCENTS STRIPACCENTS
     STRIPANSI STRIPANSI STRIPANSI STRLEN STRLEN STRLEN STRMATCH
     STRMATCH STRMATCH N/A STRLENRAW STRMEM STRREPLACE CREPLACE/REPLACE
     REPLACE SUB SUB SUB N/A ESCAPEX SUBEVAL SUBJ SUBJ SUBJ N/A N/A
     SUCCESSES SWITCH SWITCH SWITCH SWITCHALL SWITCHALL N/A T T T TABLE
     @function (softfunctions) TABLE TAG N/A N/A TAGWRAP N/A N/A TAN TAN
     TAN TEL TEL TEL TERMINFO N/A TERMINFO TESTLOCK LOCKCHECK N/A
     TEXTENTRIES WORDS + TEXTFILE WORDS + TEXTFILE TEXTFILE TEXTFILE
     TEXTFILE TIME TIME TIME TIMEFMT PTIMEFMT TIMEFMT TIMESTRING
     SINGLETIME/TIMEFMT SINGLETIME TR TR TR TRIM TRIM TRIM TRIMPENN TRIM
     TRIM TRIMTINY TRIM TRIM N/A N/A TRIGGER TRUNC TRUNC TRUNC TYPE TYPE
     TYPE UCSTR UCSTR UCSTR UDEFAULT UDEFAULT UDEFAULT UFUN U U ULAMBDA
     U + #lambda N/A ULDEFAULT ULDEFAULT N/A ULOCAL ULOCAL ULOCAL UNIQUE
     LISTDIFF/LISTUNION/LISTINTER N/A UNSETQ N/A N/A UPTIME N/A N/A
     UTCTIME TIME TIME V V V VADD VADD VADD VALID VALID VALID VCROSS
     VCROSS VCROSS VDIM VDIM VDIM VDOT VDOT VDOT VERSION VERSION VERSION
     VISIBLE VISIBLE VISIBLE VMAG VMAG VMAG VMAX SORTLIST N/A VMIN
     SORTLIST N/A VMUL VMUL VMUL VSUB VSUB VSUB VUNIT VUNIT VUNIT WHERE
     WHERE WHERE WIDTH @function (softfunctions) WIDTH WILDGREP GREP N/A
     WILDGREPI GREPI N/A WIPE WIPE WIPE WORDPOS WORDPOS WORDPOS WORDS
     WORDS/MWORDS WORDS WRAP WRAP WRAP N/A MODIFYTIME WRITETIME XATTR
     ATTR N/A XATTRP ATTRP N/A XCON XCON N/A XEXITS LEXITS + EXTRACT N/A
     XGET XGET XGET XMWHO LWHO+EXTRACT+STREVAL at mor N/A XMWHOID N/A
     N/A XOR XOR XOR XPLAYERS XCON N/A XTHINGS XCON N/A XVCON XCON +
     STREVAL at mortal N/A XVEXITS LEXITS + STREVAL at mortal N/A
     XVPLAYERS XCON + STREVAL at mortal N/A XVTHINGS XCON + STREVAL at
     mortal N/A XWHO LWHO + EXTRACT LWHO + EXTRACT XWHOID N/A N/A ZEMIT
     ZEMIT N/A ZFUN ZFUN ZFUN ZMWHO ZWHO + STREVAL at mortal N/A ZONE
     LZONE ZONE ZWHO ZWHO ZWHO

* Menu:

* Functions that only exist in RhostMUSH::


File: rhostmushhandbook.info,  Node: Functions that only exist in RhostMUSH,  Up: Functions equivalents

3.13.1 Functions that only exist in RhostMUSH
---------------------------------------------

Functions that exist in Rhost that do not have a match in PennMUSH:
AIINDEX AINDEX ANDCHR ARRAY ATTRCNT BETWEEN BITTYPE CANSEE CAPLIST
CHKGARBAGE CHKREALITY CHKTRACE CHOMP CITER CLOAK CLUSTER_ADD
CLUSTER_ATTRCNT CLUSTER_DEFAULT CLUSTER_EDEFAULT CLUSTER_FLAGS
CLUSTER_GET CLUSTER_GET_EVAL CLUSTER_GREP CLUSTER_HASATTR
CLUSTER_HASFLAG CLUSTER_LATTR CLUSTER_REGREP CLUSTER_REGREPI CLUSTER_SET
CLUSTER_STATS CLUSTER_U CLUSTER_U2 CLUSTER_U2DEFAULT CLUSTER_U2LDEFAULT
CLUSTER_U2LOCAL CLUSTER_UDEFAULT CLUSTER_UEVAL CLUSTER_ULDEFAULT
CLUSTER_ULOCAL CLUSTER_VATTRCNT CLUSTER_WIPE CLUSTER_XGET COLUMNS COSH
COUNTSPECIAL CRC32 DELEXTRACT DESTROY EDITANSI EE ERROR EXP FBETWEEN
FBOUND GARBLE GLOBALROOM GUILD HASDEPOWER HASQUOTA HASRXLEVEL HASTOGGLE
HASTXLEVEL INPROGRAM INZONE ISALNUM ISALPHA ISCLUSTER ISDIGIT ISHIDDEN
ISLOWER ISPUNCT ISSPACE ISUPPER ISXDIGIT KEEPFLAGS KEEPTYPE LAND LAVG
LCMDS LDEPOWERS LISTMATCH LISTNEWSGROUPS LISTRLEVELS LISTTOGGLES LLOC
LMAX LMIN LMUL LNOR LOCALFUNC LOCKDECODE LOCKENCODE LOGSTATUS LOGTOFILE
LOR LRAND LROOMS LTOGGLES LXNOR LXOR MONEYNAME MOON MOVE NAMEQ NOSTR
NOTCHR NSLOOKUP ORCHR PARENMATCH PFIND PGREP POWER10 PRIVATIZE
PROGRAMMER PUSHREGS RACE RANDMATCH RANDPOS REGEDITALLILIT REGEDITALLLIT
REGEDITILIT REGEDITLIT REGNUMMATCH REGNUMMATCHI REMFLAGS REMTYPE ROMAN
ROTL ROTR RSET RXLEVEL SAFEBUFF SEES SETQMATCH SHIFT SINH SORTLISAT STR
STRDISTANCE STREQ STREVAL STRFUNC STRIP STRLENRAW STRLENVIS STRMATH
SUBNETMATCH TANH TOGGLE TOTCMDS TRACE TXLEVEL UEVAL WHILE WILDMATCH
WRAPCOLUMNS WRITABLE XNOR XORCHR XORFLAG ZFUNDEFAULT ZFUNEVAL
ZFUNLDEFAULT ZFUNLOCAL


File: rhostmushhandbook.info,  Node: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Next: Things other mushes can do that Rhost can not and how to emulate it<2>,  Prev: Functions equivalents,  Up: Comparison of modern MUSH servers

3.14 What may need to be modified to get softcode from PennMUSH, TinyMUSH2, TinyMUSH3, or MUX2 to work on Rhost
===============================================================================================================

RhostMUSH, for the most part, will work out of the box with most
softcode gotten from other codebases.  There are, however, exceptions.
Most of these exceptions will be minor code differences between how ANSI
is processed, the variences of arguments or switches to commands or
functions, or required flags.

Most changes will revolve around the ones listed in this document.

* Menu:

* Problematic functions between codebases::
* Problematic features between codebases::
* Problematic commands::
* SIDEFX flag::
* Variable exits::
* Zones::
* @powers::
* Attribute length::
* Attribute contents::
* 256 color::
* Unicode/UTF8::
* Attributes per object::
* Destroying::
* object id’s::
* lsearch() and search(): lsearch and search.
* @locks can be different::
* Customer user-locks::
* Attribute trees::
* Prefix permission locking::
* align() and printf(): align and printf.
* MySQL::
* Mail System::
* Comsystem::
* Various Functions::
* Empty Attributes::
* Player Stats::
* Percent Substitutions::
* Switches::
* Flags: Flags<2>.
* Aliases::


File: rhostmushhandbook.info,  Node: Problematic functions between codebases,  Next: Problematic features between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.1 Problematic functions between codebases
----------------------------------------------

lsearch()/search(), align()/printf(), *attrval()


File: rhostmushhandbook.info,  Node: Problematic features between codebases,  Next: Problematic commands,  Prev: Problematic functions between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.2 Problematic features between codebases
---------------------------------------------

named variables for regexp patterns in $commands are not supported.
@aliases on non-players are not supported.  Frankly I find them
redundant.


File: rhostmushhandbook.info,  Node: Problematic commands,  Next: SIDEFX flag,  Prev: Problematic features between codebases,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.3 Problematic commands
---------------------------

@mapsql, hardcoded required comssytem commands (some are redundant)


File: rhostmushhandbook.info,  Node: SIDEFX flag,  Next: Variable exits,  Prev: Problematic commands,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.4 SIDEFX flag
------------------

     Anything that uses sideeffects –DIRECTLY– requires this flag.
     Sideeffects are like set(), pemit(), and so forth.  list(), while a
     side-effect, does not require this flag as it is considered passive
     and safe.


File: rhostmushhandbook.info,  Node: Variable exits,  Next: Zones,  Prev: SIDEFX flag,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.5 Variable exits
---------------------

     Rhost handles them slightly different.  You do not link exits to
     #-4.  That’s an invalid destination.  I always found it, frankly,
     stupid to save any data in the database that was literally invalid.
     So, you link the exit as you normally would, then @toggle the exit
     variable.  At that point you use @exitto like you would any other
     codebase.


File: rhostmushhandbook.info,  Node: Zones,  Next: @powers,  Prev: Variable exits,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.6 Zones
------------

     Zones actually can work near exactly as you would expect them to
     work on TinyMUSH, MUX, or Penn.  Either at once or at different
     times.  We recognize multiple zones, zone masters, zone
     inheritance, zone parenting, zone command processing, and the
     ability to bypass zones entirely.  There’s a ton of flexbility with
     this.  However, the syntax for adding/removing zones is different
     so the commands will have to be ported to Rhost.


File: rhostmushhandbook.info,  Node: @powers,  Next: Attribute length,  Prev: Zones,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.7 @powers
--------------

     Powers work a bit differently in Rhost and they’re named
     differently, which should not be that big a surprise as they’re
     different between all the codebases anyway.  The big difference is
     our powers are tiered, meaning the can be limited or grown to a
     given bitlevel and are not just toggle powers like the other
     codebases.  We also have @depower that is the anti-thesis of @power


File: rhostmushhandbook.info,  Node: Attribute length,  Next: Attribute contents,  Prev: @powers,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.8 Attribute length
-----------------------

     While we have 64 character attribute capabilities like most other
     codebases, PennMUSH allows 1024 attribute length attributes.  Why
     you need one that long boggles the mind, but if you do use attribs
     that long you need to make sure they are cut down to the proper
     length.


File: rhostmushhandbook.info,  Node: Attribute contents,  Next: 256 color,  Prev: Attribute length,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.9 Attribute contents
-------------------------

     You’ll be happy to know that Rhost allows upwards to 64,000 bytes
     of data to be assigned an LBUF. We strongly recommand to cap at
     32,000 however as the various TCP socket protocols play nicer with
     that value.


File: rhostmushhandbook.info,  Node: 256 color,  Next: Unicode/UTF8,  Prev: Attribute contents,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.10 256 color
-----------------

Yup!  We got it.


File: rhostmushhandbook.info,  Node: Unicode/UTF8,  Next: Attributes per object,  Prev: 256 color,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.11 Unicode/UTF8
--------------------

     Yup!  We got this too.  Not quiet yet in the main branch, but
     download Kage’s branch, you won’t be dissapointed.  We will have
     UTF8 in Rhost 4.0 when released.


File: rhostmushhandbook.info,  Node: Attributes per object,  Next: Destroying,  Prev: Unicode/UTF8,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.12 Attributes per object
-----------------------------

     This is configurable with the VLIMIT @admin command, however, it is
     absolutely hard-limited at 10000 maximum.  This is to avoid any DoS
     type situation and because frankly there should never be a reason
     to exceed that.  If you need more, use @clusters.


File: rhostmushhandbook.info,  Node: Destroying,  Next: object id’s,  Prev: Attributes per object,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.13 Destroying
------------------

     @nuke only works on players.  @destroy works on non-players.  Never
     the two will meet.  We also have a built in recycle bin meaning
     anything destroyed will not be automatically recycled.  If you want
     it recycled, you have to @purge it.  Yes, if you use Myrddin’s
     CRON, it has a built in entry to auto-purge anything older than 30
     days.  This also means you can on-line recover anything destroyed
     before that 30 days.  Groovy, eh?


File: rhostmushhandbook.info,  Node: object id’s,  Next: lsearch and search,  Prev: Destroying,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.14 object id’s
-------------------

Yup, we got them.  Even in searches, and, well, everything.


File: rhostmushhandbook.info,  Node: lsearch and search,  Next: @locks can be different,  Prev: object id’s,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.15 lsearch() and search()
------------------------------

     lsearch() in Penn is not syntacically similar to non-Penn search().
     This will have to be altered.  In addition, search() in non-penn
     games have to have special consideration for escaping out the
     evaled args.


File: rhostmushhandbook.info,  Node: @locks can be different,  Next: Customer user-locks,  Prev: lsearch and search,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.16 @locks can be different
-------------------------------

     We have many more lock capabilities and options so this should be a
     non-issue.


File: rhostmushhandbook.info,  Node: Customer user-locks,  Next: Attribute trees,  Prev: @locks can be different,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.17 Customer user-locks
---------------------------

     We do not have custom user-locks like Penn.  We do, however, have
     the way to set encapsulated lock data into an attribute to fetch
     and compare against which I find more useful and far more flexible.
     See: lockencode(), lockdecode(), and lockcheck()


File: rhostmushhandbook.info,  Node: Attribute trees,  Next: Prefix permission locking,  Prev: Customer user-locks,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.18 Attribute trees
-----------------------

     Unlike Penn, we don’t really have attribute trees.  We do support
     the basic capabilities of it for compatibility if you load in
     softcode that uses it, but it doesn’t have the advanced features of
     attribute trees.  Please see ‘help attribute tree’ for more
     information.


File: rhostmushhandbook.info,  Node: Prefix permission locking,  Next: align and printf,  Prev: Attribute trees,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.19 Prefix permission locking
---------------------------------

     We do allow prefix permission locking, and some very advanced
     abilities of it.  Please see wizhelp on @aflags for more
     information.  - wizhelp @aflags - wizhelp atrperms_max - wizhelp
     atrlock - wizhelp atrperms


File: rhostmushhandbook.info,  Node: align and printf,  Next: MySQL,  Prev: Prefix permission locking,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.20 align() and printf()
----------------------------

     We do not have align().  Most of the code that uses align() will
     have to be converted to our printf() (which is compatible but has
     different syntax)


File: rhostmushhandbook.info,  Node: MySQL,  Next: Mail System,  Prev: align and printf,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.21 MySQL
-------------

     While we support MySQL, we do not have an async method like MUX2.
     This is just not possible, sorry.


File: rhostmushhandbook.info,  Node: Mail System,  Next: Comsystem,  Prev: MySQL,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.22 Mail System
-------------------

     There are mail wrappers to mimic MUX/TM3 and Penn mail systems.


File: rhostmushhandbook.info,  Node: Comsystem,  Next: Various Functions,  Prev: Mail System,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.23 Comsystem
-----------------

     The softcoded comsystem mimics MUX/TM3 and Penn’s comsystem.


File: rhostmushhandbook.info,  Node: Various Functions,  Next: Empty Attributes,  Prev: Comsystem,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.24 Various Functions
-------------------------

     There is a ‘softcode.minmax’ in the Mushcode directory that loads
     up a slew of @function wrappers that will emulate various functions
     that MUX, Penn, or TM3 has.  We have the functionality for nearly
     all of them, but either our functions have different syntax, or we
     have different named functions that duplicate the functionality.
     It would be far better to recode it to use the native functions,
     but the @function wrappers are there for lazyness :)


File: rhostmushhandbook.info,  Node: Empty Attributes,  Next: Player Stats,  Prev: Various Functions,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.25 Empty Attributes
------------------------

     Penn allows you to have empty attributes.  Non-penn codebases do
     not.  Thus, hasattrval and the like are not needed and should
     likely just point to hasattr instead.


File: rhostmushhandbook.info,  Node: Player Stats,  Next: Percent Substitutions,  Prev: Empty Attributes,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.26 Player Stats
--------------------

     MUX has some built in ways for player stats.  We do as well but
     they’re either done via functions or attribute contents.  Code that
     requires this will have to be recoded.


File: rhostmushhandbook.info,  Node: Percent Substitutions,  Next: Switches,  Prev: Player Stats,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.27 Percent Substitutions
-----------------------------

     Some percent substitutions may differ between codebases.  Luckily,
     Rhost allows the ability to remap or creaete new ones if this is a
     problem.


File: rhostmushhandbook.info,  Node: Switches,  Next: Flags<2>,  Prev: Percent Substitutions,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.28 Switches
----------------

     Some switches may not exist in Rhost that do in other codebases, in
     such a case, Rhost does allow the ability to @hook a command to
     define your own softcoded switch to a hardcoded command and work
     around the limitation.


File: rhostmushhandbook.info,  Node: Flags<2>,  Next: Aliases,  Prev: Switches,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.29 Flags
-------------

     Some flags may be missing.  If it’s a dummy flag, feel free to use
     the marker flags MARKER0 to MARKER9 to set them.  If it’s an
     existing flag that does similar features, feel free to flag_alias
     it or just flag_name it to the other name if you want.


File: rhostmushhandbook.info,  Node: Aliases,  Prev: Flags<2>,  Up: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost

3.14.30 Aliases
---------------

     Multiple aliases are supported via @protect.


File: rhostmushhandbook.info,  Node: Things other mushes can do that Rhost can not and how to emulate it<2>,  Prev: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost,  Up: Comparison of modern MUSH servers

3.15 Things other mushes can do that Rhost can not and how to emulate it
========================================================================

* Menu:

* PennMUSH: PennMUSH<3>.
* MUX: MUX<3>.


File: rhostmushhandbook.info,  Node: PennMUSH<3>,  Next: MUX<3>,  Up: Things other mushes can do that Rhost can not and how to emulate it<2>

3.15.1 PennMUSH
---------------

   - Attribute trees.  These are emulated as a base set and can be
     duplicated enough to at least port code.

   - lsearch() will have to be recoded to search()

   - align() will have to be recoded to printf()

   - Penn allows empty attributes.  Rhost does not.  Work will have to
     be done to take this into consideration.

   - All *val() functions in Penn that are used will have to be remapped
     to a non-*val() function.  It should be as simple as function_alias
     to the non-*val.  Example:

          @admin function_alias=hasattrval hasattr

   - Penn’s hardcoded comsystem is emulated with the softcode comsys

   - Penn’s @mail system is workable with mail wrappers

   - Pueblo is not supported.

   - json is not supported.

   - ssl is not natively supported (yet).

   - This uses @shutdown/restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: MUX<3>,  Prev: PennMUSH<3>,  Up: Things other mushes can do that Rhost can not and how to emulate it<2>

3.15.2 MUX
----------

   - Mux has an async mysql database engine.  This is not possible with
     Rhost.  You’ll have to use the sync method instead.

   - UTF8 is supported but internally passed differently.

   - Mux’s hardcoded comsystem is emulated with the softcode comsys

   - MUX’s @mail system is workable with mail wrappers

   - Pueblo is not supported.

   - This uses @restart, Rhost uses @reboot


File: rhostmushhandbook.info,  Node: Database,  Next: Gettin Started,  Prev: Comparison of modern MUSH servers,  Up: Top

4 Database
**********

* Menu:

* Loading an existing Database::
* Converting a flatfile database for use in RhostMUSH::
* Note about Compiling::


File: rhostmushhandbook.info,  Node: Loading an existing Database,  Next: Converting a flatfile database for use in RhostMUSH,  Up: Database

4.1 Loading an existing Database
================================

To load in a previous database, you run the db_load script.

From the game directory you would type:

     ./db_load data/netrhost.gdbm yourflatfilehere data/netrhost.db.new

     Note: You may also do: ./Startmush Then you just follow the prompts
     to load in your flatfile there.

If you wish to have #1’s password reset to ‘Nyctasia’ please add this to
the bottom of your netrhost.conf file:

     newpass_god 777

The caveat is that you must not have any netrhost.db* or netrhost.gdbm*
files in your data directory prior to loading it in.  It’ll error out if
previous files exist.  So you will need to move all files that start
with netrhost.db* and all files that start with netrhost.gdbm* to
another directory.

Your flatfile tends to be named ‘netrhost.db.flat’ which is in your data
directory.  You can, however, name your flatfile anything you want and
have it in any directory you want.

To make a flatfile in game, you just issue @dump/flat.  You can specify
a filename after it, otherwise it assumes the name ‘netrhost.db.flat’.


File: rhostmushhandbook.info,  Node: Converting a flatfile database for use in RhostMUSH,  Next: Note about Compiling,  Prev: Loading an existing Database,  Up: Database

4.2 Converting a flatfile database for use in RhostMUSH
=======================================================

In the ~/Server/convert directory there is a script called
‘doconvert.sh’

This script will convert most flatfiles from existing mush engines to
RhostMUSH. The exception is PennMUSH 1.8.0 and later.  For this there is
a BETA converter penn18x_converter.tgz.  This is proven to work, most of
the time, with codebases between 1.8.0 and 1.8.2.  It has not been fully
vetted with the latest PennMUSH databases.  Our apologies.

To convert a non-pennmush game (or a pennmush 1.7.4 or earlier), you
first need a valid flatfile of the game you’re wanting to convert.
Please refer to the documentatation of the mush engine in question (MUX,
Penn 1.7, TM2/3) on how to do this.  Once you have it type::

     ./doconvert.sh FLATFILETOCONVERT FLATFILEOUTPUT

In this instance, FLATFILETOCONVERT will be the filename (with full
path) to the flatfile you are wishing to convert.

The FLATFILEOUTPUT is anyfilename you wish to name the RhostMUSH
converted flatfile.  I suggest netrhost_converted.db.flat so you know by
the name what it is.

Follow what it asks for and just let it do its thing.


File: rhostmushhandbook.info,  Node: Note about Compiling,  Prev: Converting a flatfile database for use in RhostMUSH,  Up: Database

4.3 Note about Compiling
========================

If you are importing a MUX2 flatfile, make ABSOLUTELY SURE that you
select mux passwords as a compatibility option, or you will NOT BE ABLE
to log in to players as the password will not be recognizeable.

Make sure to keep QDBM selected as it’s a much more stable database
engine that does not have attribute limit restrictions like GDBM does.

If you are converting from a Penn, TinyMUSH, or MUX database, make sure
you drill down into the LBUF section and select, at minimum, 8K lbufs.
You likely want that anyway as it gives you far more room for attribute
content storage.

You can go up to 32K safely.  While 64k is safe and does work, there are
issues with networking and older routers that use a 32K TCP buffer size
that can at times cut off the data as overflow resulting in output to
the end-point players not receiving their data.  So it is strongly
recommended not to go above 32K in lbuffer size.

Go ahead and select 64 char attributes.  It allows you to have 64
characters for attribute names.  It’s handy to have.

If you wish at this point to set up mysql and/or sqlite, you may do so.
Yes, you can use them in parallel without any issue.


File: rhostmushhandbook.info,  Node: Gettin Started,  Next: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Prev: Database,  Up: Top

5 Gettin Started
****************

* Menu:

* What to ype to get the basics running if you did not choose a pre-existing flatfile::
* Minimal DB instructions::
* Ambrosia’s Minimal Rhost DB::


File: rhostmushhandbook.info,  Node: What to ype to get the basics running if you did not choose a pre-existing flatfile,  Next: Minimal DB instructions,  Up: Gettin Started

5.1 What to ype to get the basics running if you did not choose a pre-existing flatfile
=======================================================================================

If you decided to get a bare-bone configuration, you will find your mush
has just two things.  The #1 (God) player and the starting room #0.
That’s it.

* Menu:

* Login to #1 from the connect screen::
* Change #1’s password to something you’ll remember but is hard to guess::
* Master Room::
* Flag and protect Master Room::
* Player Holder Characters::
* Chown #0 (The starting room) and #2 (The Master room) to immholder: Chown #0 The starting room and #2 The Master room to immholder.
* Create yourself your own immortal player then log off #1 and into this immortal player::
* Log out of #1 and log into your immortal player::
* Create your guest characters::
* Dig a closet to store important objects but non-master room::
* Set the flags on the closet and ownership of it::
* Create an Admin object for future ease of customization::
* Set the flags on the admin object and ownership and location::
* Add admin object to configuration::
* Reboot your mush to load up the change for the admin object::
* Do @admin/list to see if it shows the admin object::
* Load in all the various softcode that you want::


File: rhostmushhandbook.info,  Node: Login to #1 from the connect screen,  Next: Change #1’s password to something you’ll remember but is hard to guess,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.1 Login to #1 from the connect screen
-----------------------------------------

Nyctasia is the default password:

     co #1 Nyctasia


File: rhostmushhandbook.info,  Node: Change #1’s password to something you’ll remember but is hard to guess,  Next: Master Room,  Prev: Login to #1 from the connect screen,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.2 Change #1’s password to something you’ll remember but is hard to guess
----------------------------------------------------------------------------

Note: yourpasswordgoeshere can be any password you choose.  Choose well:

     @password Nyctasia=YOURPASSWORDGOESHERE


File: rhostmushhandbook.info,  Node: Master Room,  Next: Flag and protect Master Room,  Prev: Change #1’s password to something you’ll remember but is hard to guess,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.3 Master Room
-----------------

At this point you should create your master room:

     @dig Master Room

     Note: Reason: You need a master room to contain global $commands
     for players ^listens are not global for intentional reasons.  It’s
     far too much overhead for far too minimal gains that few people
     need or use.


File: rhostmushhandbook.info,  Node: Flag and protect Master Room,  Next: Player Holder Characters,  Prev: Master Room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.4 Flag and protect Master Room
----------------------------------

It will return a dbref#, it should be #2 if you’ve not created anything
else:

     @set #2=safe ind halt float


File: rhostmushhandbook.info,  Node: Player Holder Characters,  Next: Chown #0 The starting room and #2 The Master room to immholder,  Prev: Flag and protect Master Room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.5 Player Holder Characters
------------------------------

Feel free to change the password to what you want

     Note: Reason: You will want to chown global room or global areas to
     a given bitlevel and a method to keep organized.  Note: wizhelp
     control will give you a complete breakdown of what each bit can do.

* Menu:

* Immortal Holder::
* Royalty/Wizard Holder::
* Councilor/Admin Holder::
* Architect/Staff Holder::
* Guildmaster/Lead Holder::


File: rhostmushhandbook.info,  Node: Immortal Holder,  Next: Royalty/Wizard Holder,  Up: Player Holder Characters

5.1.5.1 Immortal Holder
.......................

     @pcreate ImmHolder=abc123
     @set *Immholder=no_connect !wanderer immortal
     @badsite *immholder=*


File: rhostmushhandbook.info,  Node: Royalty/Wizard Holder,  Next: Councilor/Admin Holder,  Prev: Immortal Holder,  Up: Player Holder Characters

5.1.5.2 Royalty/Wizard Holder
.............................

     @pcreate WizHolder=abc123
     @set *wizholder=no_connect !wanderer royalty
     @badsite *wizholder=*


File: rhostmushhandbook.info,  Node: Councilor/Admin Holder,  Next: Architect/Staff Holder,  Prev: Royalty/Wizard Holder,  Up: Player Holder Characters

5.1.5.3 Councilor/Admin Holder
..............................

     @pcreate AdminHolder=abc123
     @set *adminholder=no_connect !wanderer councilor
     @badsite *adminholder=*


File: rhostmushhandbook.info,  Node: Architect/Staff Holder,  Next: Guildmaster/Lead Holder,  Prev: Councilor/Admin Holder,  Up: Player Holder Characters

5.1.5.4 Architect/Staff Holder
..............................

     @pcreate StaffHolder=abc123
     @set *staffholder=no_connect !wanderer architect
     @badsite *staffholder=*


File: rhostmushhandbook.info,  Node: Guildmaster/Lead Holder,  Prev: Architect/Staff Holder,  Up: Player Holder Characters

5.1.5.5 Guildmaster/Lead Holder
...............................

     @pcreate GuildHolder=abc123
     @set *guildholder=no_connect !wanderer guildmaster
     @badsite *guildholder=*


File: rhostmushhandbook.info,  Node: Chown #0 The starting room and #2 The Master room to immholder,  Next: Create yourself your own immortal player then log off #1 and into this immortal player,  Prev: Player Holder Characters,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.6 Chown #0 (The starting room) and #2 (The Master room) to immholder
------------------------------------------------------------------------

     Note: #0 you can chown to a different bitlevel if you want, but the
     master room should always be owned by an immortal

     @chown/preserve #0=*immholder
     @chown/preserve #2=*immholder


File: rhostmushhandbook.info,  Node: Create yourself your own immortal player then log off #1 and into this immortal player,  Next: Log out of #1 and log into your immortal player,  Prev: Chown #0 The starting room and #2 The Master room to immholder,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.7 Create yourself your own immortal player then log off #1 and into this immortal player
--------------------------------------------------------------------------------------------

     Note: Pick what you want for playername and playerpassword

     @pcreate PLAYERNAME=PLAYERPASSWORD
     @set *playername=!wanderer immortal


File: rhostmushhandbook.info,  Node: Log out of #1 and log into your immortal player,  Next: Create your guest characters,  Prev: Create yourself your own immortal player then log off #1 and into this immortal player,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.8 Log out of #1 and log into your immortal player
-----------------------------------------------------

     Note: Use the playername and password you created in the step
     before

     LOGOUT
     co PLAYERNAME PLAYERPASSWORD


File: rhostmushhandbook.info,  Node: Create your guest characters,  Next: Dig a closet to store important objects but non-master room,  Prev: Log out of #1 and log into your immortal player,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.9 Create your guest characters
----------------------------------

     Note: Feel free to change the description if you want

     @dolist lnum(1,10)={@pcreate Guest##=guest;@set *Guest##=guest;@adisconnect *Guest##=home;@lock *Guest##=*Guest##;@desc *Guest##=A Stranger in a strange land.}


File: rhostmushhandbook.info,  Node: Dig a closet to store important objects but non-master room,  Next: Set the flags on the closet and ownership of it,  Prev: Create your guest characters,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.10 Dig a closet to store important objects but non-master room
------------------------------------------------------------------

     Note: name it anything you want, just remember it.

     @dig Closet


File: rhostmushhandbook.info,  Node: Set the flags on the closet and ownership of it,  Next: Create an Admin object for future ease of customization,  Prev: Dig a closet to store important objects but non-master room,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.11 Set the flags on the closet and ownership of it
------------------------------------------------------

     Note: Use the dbref# that it returned when digging the closet and
     not #123

     @set #123=inh safe ind float
     @chown/pres #123=*immholder


File: rhostmushhandbook.info,  Node: Create an Admin object for future ease of customization,  Next: Set the flags on the admin object and ownership and location,  Prev: Set the flags on the closet and ownership of it,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.12 Create an Admin object for future ease of customization
--------------------------------------------------------------

     @create AdminObject


File: rhostmushhandbook.info,  Node: Set the flags on the admin object and ownership and location,  Next: Add admin object to configuration,  Prev: Create an Admin object for future ease of customization,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.13 Set the flags on the admin object and ownership and location
-------------------------------------------------------------------

     Note: this object must be immortal owned.  Use the dbref# returned
     previously instead of #123

     Note: Use the closet dbref# instead of #234

     @set AdminObject=halt safe ind
     @chown/pres #123=*immholder
     @tel adminobject=#234


File: rhostmushhandbook.info,  Node: Add admin object to configuration,  Next: Reboot your mush to load up the change for the admin object,  Prev: Set the flags on the admin object and ownership and location,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.14 Add admin object to configuration
----------------------------------------

Modify the netrhost.conf file with the following line at the bottom
after the line ‘# define local alises here’ where you replace 123 with
the dbref# of the admin object that you made:

     admin_object 123


File: rhostmushhandbook.info,  Node: Reboot your mush to load up the change for the admin object,  Next: Do @admin/list to see if it shows the admin object,  Prev: Add admin object to configuration,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.15 Reboot your mush to load up the change for the admin object
------------------------------------------------------------------

     @reboot


File: rhostmushhandbook.info,  Node: Do @admin/list to see if it shows the admin object,  Next: Load in all the various softcode that you want,  Prev: Reboot your mush to load up the change for the admin object,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.16 Do @admin/list to see if it shows the admin object
---------------------------------------------------------

     Note: do wizhelp @admin for more information on how to use this

     @admin/list


File: rhostmushhandbook.info,  Node: Load in all the various softcode that you want,  Prev: Do @admin/list to see if it shows the admin object,  Up: What to ype to get the basics running if you did not choose a pre-existing flatfile

5.1.17 Load in all the various softcode that you want
-----------------------------------------------------

This is client dependant based on whatever method it uses to load
softcode.

* Menu:

* Myrddin MushCron::
* AshCom::
* Mail Wrappers::
* Myrddin BBS::
* Other Mushcode::


File: rhostmushhandbook.info,  Node: Myrddin MushCron,  Next: AshCom,  Up: Load in all the various softcode that you want

5.1.17.1 Myrddin MushCron
.........................

Load in the Myrddin Mush Cron.  It’s a very handy piece of software and
strongly suggested to do so.  You can find this in the ‘Mushcode’
directory off the main Rhost directory.  Filename:

     ~/Rhost/Mushcode/MyrddinCRON

     Note: The globalroom() function returns the dbref# of the master
     room.  Handy!

     @chown/preserve the myrddin mush cron to immholder, then move to maste room.
     @chown/pres Myrddin=*Immholder
     @tel Myrddin=#234 (where #234 is the dbref# of your code closet)


File: rhostmushhandbook.info,  Node: AshCom,  Next: Mail Wrappers,  Prev: Myrddin MushCron,  Up: Load in all the various softcode that you want

5.1.17.2 AshCom
...............

Load in default softcoded comsystem.  This is PennMUSH and MUX/TM3
compatible.  Filename:

     ~/Rhost/Mushcode/comsys

Chown the Comsystem and everything inside it to immholder:

     @chown/pres ChanSys=*Immholder
     @dolist lcon(chansys)=@chown/pres ##=*immholder
     @tel Chansys=globalroom()


File: rhostmushhandbook.info,  Node: Mail Wrappers,  Next: Myrddin BBS,  Prev: AshCom,  Up: Load in all the various softcode that you want

5.1.17.3 Mail Wrappers
......................

Load in mail wrappers if you want MUX/TM3 and/or Penn mail wrapping.
Filename (MUX/TM3):

     ~/Rhost/Mushcode/mailwrappers/muxmail.wrap

Filename (Penn):

     ~/Rhost/Mushcode/mailwrappers/pennmail.wrap

Chown to immholder:

     @chown/pres MUX=*Immholder
     @chown/pres Penn=*Immholder
     @tel/list mux penn=globalroom()


File: rhostmushhandbook.info,  Node: Myrddin BBS,  Next: Other Mushcode,  Prev: Mail Wrappers,  Up: Load in all the various softcode that you want

5.1.17.4 Myrddin BBS
....................

Load in Myrddin’s BBS Filename:

     ~/Rhost/Mushcode/MyrddinBBS

Chown to immholder and the contents of it as well:

     @chown/pres Myrddin=*Immholder
     @dolist lcon(myrddin)=@chown/pres ##=*immholder
     @tel myrddin=globalroom()


File: rhostmushhandbook.info,  Node: Other Mushcode,  Prev: Myrddin BBS,  Up: Load in all the various softcode that you want

5.1.17.5 Other Mushcode
.......................

There’s other code in the Mushcode directory that you are welcome to
install.  You would follow similar procedures for loading it in,
chowning it, and moving to the master room as you did above.

Likewise, any softcode you find on the internet or on other mushes
should be portable to RhostMUSH with little to no changes depending on
the complexity of the code in question.


File: rhostmushhandbook.info,  Node: Minimal DB instructions,  Next: Ambrosia’s Minimal Rhost DB,  Prev: What to ype to get the basics running if you did not choose a pre-existing flatfile,  Up: Gettin Started

5.2 Minimal DB instructions
===========================

The ‘retired’ directory has older image files if you’re interested

Please use the netrhost.conf file with the database as they’re linked.

The flatfile must be loaded in as a new db

This is a minimal db with basic ‘features’ built in.

Copy the txt files into the Rhost’s txt directory off game:

     cp txt/* ~/Rhost/Server/game/txt

mkindx the files (substitute FILENAME with the filename):

     cd ~/Rhost/Server/game/txt
     ../mkindx FILENAME.txt FILENAME.indx

* Menu:

* Startup Steps::


File: rhostmushhandbook.info,  Node: Startup Steps,  Up: Minimal DB instructions

5.2.1 Startup Steps
-------------------

  1. Using the Startmush utility for the first time, select the load db
     method

— or —

  1. copy the netrhost.conf file into the games directory

  2. make any relevant changes you wish

  3. db_load the flatfile

       1. go into the game directory

       2. type:

               ./db_load data/netrhost.gdbm ../minimal-DBs/minimal_db/netrhost.db.flat data/netrhost.db.new

  4. Startmush as expected


File: rhostmushhandbook.info,  Node: Ambrosia’s Minimal Rhost DB,  Prev: Minimal DB instructions,  Up: Gettin Started

5.3 Ambrosia’s Minimal Rhost DB
===============================

* Menu:

* Version; 1.0.5 2020-01-31: Version 1 0 5 2020-01-31.
* Introduction::
* Features::
* Bitlevels::
* Quota::
* Functions: Functions<2>.
* Compiling::


File: rhostmushhandbook.info,  Node: Version 1 0 5 2020-01-31,  Next: Introduction,  Up: Ambrosia’s Minimal Rhost DB

5.3.1 Version: 1.0.5 2020-01-31
-------------------------------

Version history:

     1.0.0

             - Initial database setup.

     1.0.1

             - Small fixes of objid(), isstaff() and bccheck()
               permissions and handling.

             - bittype() access lowered to Architect level

             - NO_CODE flag made visual to Architect

     1.0.2

             - Several convenience changes and fixes: _ Attributes moved
               to @aflags system, allowing Architects to set,
               Guildmasters to see them.

             - @flagdef lowered to Royalty level.  @quota/max,
               @quota/unlock and @convert moved to Architect level.

             - NO_CODE flag made settable/unsettable by Architects.

             - Fixed typo in conf file: ifselse -> ifelse

             - Switched _Attributes to use the @aflags system See:
               Guildmaster Set: Architect

     1.0.3

             - Removed @flagdefs from in-game softcode, converted to
               flag_access_* config options

             - Lowered mailstatus() access to architect.

     1.0.4

             - Changed softcoded objid() to tag(), due to Rhost’s new
               hardcoded objid() which does perform a different
               functionality.

             - Added more staff recommendations to this file.

             - Added Reality TXLevel ‘Admin’ to all objects in the db
               except #1

     1.0.5

             - Replaced softcoded tag() system with Rhost’s new
               hardcoded @tag/tag() system.  All previous tags are set
               on the database.  The Tag Object was removed.

             - @function startup on BC-Admin-Royalty fixed - @wait 1
               workaround for Tags in place.

             - Places System @startup integrated into BC-Admin-Royalty’s
               @startup

             - Made @dump and @dump/flat available to Councilors in
               netrhost.conf

     1.0.6

             - A small typo fix in netrhost.conf.  float_preciiosn ->
               precision and functions_max -> function_max.  Thanks to
               <Bobbi@COH>


File: rhostmushhandbook.info,  Node: Introduction,  Next: Features,  Prev: Version 1 0 5 2020-01-31,  Up: Ambrosia’s Minimal Rhost DB

5.3.2 Introduction
------------------

     Note: READ THIS DOCUMENT CAREFULLY!

Greetings,

This minimal Rhost DB was made with a secure setup, and as a good base
to start a new game off in mind.


File: rhostmushhandbook.info,  Node: Features,  Next: Bitlevels,  Prev: Introduction,  Up: Ambrosia’s Minimal Rhost DB

5.3.3 Features
--------------

* Menu:

* Configuration::
* Softcode::
* Functions::


File: rhostmushhandbook.info,  Node: Configuration,  Next: Softcode,  Up: Features

5.3.3.1 Configuration
.....................

   * Limbo, Master Room and Auxiliary room.

   * BC-Admin-<bitlevel> characters set up for each bitlevel to own
     global and data objects, and inherit to.

   * BC-Admin-Mortal is @powered EXAMINE_ALL(Guildmaster),
     NOFORCE(Architect) and LONG_FINGERS.

   * @startup on BC-Admin-Immortal lowers DARK flag access to Councilor
     level, and NO_CODE visual access to Architect level.

   * Global Command objects inheriting from each bitlevel, with a
     separate staff-only object for each level.

   * Global Function objects inheriting from each bitlevel.

   * local Function objects inheriting from each bitlevel.

   * @function and @hook access lowered to Royalty level to remove
     immediate need for Immortals or actual Immortal code.

   * @rxlevel, @txlevel, bittype() access lowered to Architect level to
     remove immediate need for Royalty in many cases.

   * @startup on BC-Admin-Royalty to automatically load @hooks and
     @functions from the Global Function objects, based on attribute
     naming.

   * Misc Data object to hold general data, like Staff lists etc.

   * Reality levels ‘Real’ and ‘Admin’.

     Note: All created items and players by default are in Recieve-Level
     ‘Real’ and Transmit-Levels ‘Real’ and ‘Admin’.

   * All globals, Master Room, BCs-*, and other staff/code-related
     objects currently have only ‘Admin’ as their Transmit-Level.  This
     does not prevent them fromi working properly.  The only exception
     is #1, who has empty reality levels.

   * The supplied netrhost.conf offers a secure setup of options, allows
     Royalty to use @hook and @function, and also sets the
     function_access of several functions to !no_code, which allows
     NO_CODE players to use the comsys properly.

     Note: IT IS HIGHLY RECOMMENDED to use this .conf as a base for this
     DB. The ‘Port’ configuration parameter is XXXX’d out.  Set it first
     before starting your game.

   * All existing objects have been @set SAFE and INDESTRUCTABLE.

   * All existing objects have a paranoid series of @locks set on
     themselves.

   * The +supersafe command is provided on #1 as an example of what was
     used to easily set this on objects.

   * Players are @set NO_CODE and WANDERER by default.  They get 40
     credits on creation, and a 1-credit-per-day paycheck.

   * All *mit sideeffects, as well as set(), create() and list() are
     enabled.  The latter three are necessary for the Comsystem.  The
     rest of sideeffects are disabled completely.

   * Flashing ansi is disabled.

   * _Attributes are settable by Architects, and seeable by
     Guildmasters.  Read: Still invisible and unsettable by mortals.

   * Architects can set up, unlock, and change alternate @quota on
     players.

   * Architects can set/unset the NO_CODE flag.

   * Guildmasters can see _Attributes

   * Architects can set _Attributes


File: rhostmushhandbook.info,  Node: Softcode,  Next: Functions,  Prev: Configuration,  Up: Features

5.3.3.2 Softcode
................

   * Set-up compatibility SoftFunctions and @hook object.

   * Set up Comsys 1.0.9b at Architect level.  (+bbhelp command)

   * Set up Myrddin +bboard at Architect level.

   * Set up Myrddon Cron at Architect level.

   * Anomaly Jobs (+jhelp)

   * SGP Places & Mutter

   * Set up Penn-style follow.

   * Set up @scan (Up to architect-level items).

   * Set up Penn- and Mux compatibility Mailwrappers.  (phelp and mhelp
     commands)

   * help .txt files and .indx files for the above.

   * @dynhelp access lowered to architect to call above helpfiles.


File: rhostmushhandbook.info,  Node: Functions,  Prev: Softcode,  Up: Features

5.3.3.3 Functions
.................

   * isstaff() - Softcoded function that returns ‘1’ if its argument
     matches a #dbref in the ‘isstaff’ attribute on the Misc Data
     object.

   * bccheck() - Softcoded function that returns ‘1’ if its argument
     matches a #dbref in the ‘bcs’ attribute on the Misc Data object.

   * width() - Softcoded function that returns 78 for now.  For
     cross-MU* compatibility.

   * pass() - Softcoded function that takes a number as its parameter,
     and return a random string of that length.  Perfect for setting
     random passwords.

   * cmdmessage() - Softcoded function that takes two strings as its
     parameters.  Returns ‘<< STRING1 >> String2’.  The <<>> part is
     highlighted red.  Good for all kinds of messages sent by game
     commands.

   * header() - Highly versatile, and a buffer-saving alternative to
     using printf() for centering with ansi borders.  HIGHLY recommended
     to use instead of printf() for such things.

     header(text,width,filler,fillercolor,outerpadding,paddingcolor,
            leftinnerpadding,leftinnercolor,rightinnerpadding,rightinnercolor)
       text - Text to center
       width - Width of the header, defaults to width()
       filler - Character(s) to draw the line with. Default: =
       fillercolor - ansicode to color the line with
       outerpadding - Characters to frame the outer ends of the line with.
       paddingcolor - ansicode to color the outer characters with
       leftinnerpadding - characters to put at the left side of <text>
       leftinnercolor - ansicode to color the leftside characters with
       rightinnerpadding - characters to put at the right side of <text>
       rightinnercolor - ansicode to color the rightside characters with

     Note: ALL of header()’s parameters are optional.  By default,
     header() simply draws a 78-char wide line of =’s.  Simply leave
     parameters empty if you want to set one of the latter parameters.


File: rhostmushhandbook.info,  Node: Bitlevels,  Next: Quota,  Prev: Features,  Up: Ambrosia’s Minimal Rhost DB

5.3.4 Bitlevels
---------------

The whole DB is highly geared for a low-bitlevel setup.  I am a strong
believer in least-privileges-needed to do the job.  Bittypes and powers
are tools to do that job, not badges of friendship or trust that get
tossed about.

     Note: Here is my suggested list of powers and bittypes for
     staffers.

* Menu:

* Storytellers::
* Builder-BCs::
* Building Head::
* Enforcers::
* Coders::
* Head Coder::
* MU* Head(s): MU* Head s.
* Site Admins::
* Globals::


File: rhostmushhandbook.info,  Node: Storytellers,  Next: Builder-BCs,  Up: Bitlevels

5.3.4.1 Storytellers
....................

@powered TEL_ANYWHERE, JOIN_PLAYER and GRAB_PLAYER on Guildmaster level.


File: rhostmushhandbook.info,  Node: Builder-BCs,  Next: Building Head,  Prev: Storytellers,  Up: Bitlevels

5.3.4.2 Builder-BCs
...................

Mortal, with @quota and money for their job.  There should be one shared
BC for each area of the game, like BC-Houston.  Special Rooms, items or
exits that require privilegs to examine or @tel a player should belong
to a BC-Houston-Powered that is @powered EXAMINE_ALL, LONG_FINGERS And
TEL_ANYTHING on Guildmaster level.  If the object actually needs to
modify a player directly, have it use a restricted staff Global, or if
you absolutely must, make a BC-Houston-Admin and @set it Architect.  Do
not give normal builders access to it, only @chown things to it and @set
them inherit after review.

Both the -powered and -admin BCs can have random passwords and be @set
NO_CONNECT.


File: rhostmushhandbook.info,  Node: Building Head,  Next: Enforcers,  Prev: Builder-BCs,  Up: Bitlevels

5.3.4.3 Building Head
.....................

@set Guildmaster, powered TEL_ANYWHERE, TEL_ANYTHING and optionally
CHOWN_OTHER on Guildmaster level.  Mind that the latter technically
allows them to @chown anything guildmaster- and lower-owned in the
master and auxiliary rooms.  However, it allows the Building Head to
@chown items between BCs- and to the BC-<location>-powered.


File: rhostmushhandbook.info,  Node: Enforcers,  Next: Coders,  Prev: Building Head,  Up: Bitlevels

5.3.4.4 Enforcers
.................

As Storyteller above, plus being @powered Security at Guildmaster level,
in order to handle problem players.

Optionally always given to Storytellers.


File: rhostmushhandbook.info,  Node: Coders,  Next: Head Coder,  Prev: Enforcers,  Up: Bitlevels

5.3.4.5 Coders
..............

@set Architect


File: rhostmushhandbook.info,  Node: Head Coder,  Next: MU* Head s,  Prev: Coders,  Up: Bitlevels

5.3.4.6 Head Coder
..................

Always trust your head coder.  @set Architect for the everyday bit.
Give access to a maintenance Councilor bit for special code projects.
Finished code along those lines should get @chowned to the
bc-admin-councilor.

If you as the MU* Head(s) don’t know Softcode well, or want to leave
anything Code to your Head Coder, also give them optional access to a
maintenance Royalty bit in order to properly code banning/blacklisting
+commands and other rare code that requires Royalty powers.  Again,
chown finished code to bc-admin-royalty.


File: rhostmushhandbook.info,  Node: MU* Head s,  Next: Site Admins,  Prev: Head Coder,  Up: Bitlevels

5.3.4.7 MU* Head(s)
...................

You’re the boss(es).  But please use an Architect bit for your everyday
things.  Keep Immortal to yourself.  Keep #1 to yourself.  And seriously
avoid using either of them except for creating a Royalty bit or doing
intricate DB maintenance.


File: rhostmushhandbook.info,  Node: Site Admins,  Next: Globals,  Prev: MU* Head s,  Up: Bitlevels

5.3.4.8 Site Admins
...................

They already have more powers than any in-game bit can ever have ;)

Depending on actual involvement with your game, their abilities in-game
can range from merely being @powered free_wall for notifying players of
downtimes and/or being @powered shutdown in order to shut down the game
for maintenance, up to being the only person with actual access to #1.


File: rhostmushhandbook.info,  Node: Globals,  Prev: Site Admins,  Up: Bitlevels

5.3.4.9 Globals
...............

Handle necessary functionality for adminning through the admin-only
globals and softcode.

The setup I personally suggest is to have ALL staffers be AT MAX
Architect-level for everyday work and communication, with special coders
that -really- require it having Councilor-characters available to log
into for maintenance or special code setup.  Technically if everything
is done right, the Coder(s) of the game do not require higher privileges
than Architect for the vast majority of things.  Royalty-level code
should be a rare exception, if at all necessary.  The MU* Head(s) or
site-admin should be the only one having access to #1, Immortals or
perhaps even Royalty.  The BC’s, Global Function objects and Function
objects at level Royalty and higher have simply been provided as a
if-necessary convenience.

Current objects are only @chowned to certain bitlevels if it is really
required for them to function.  Whenever possible, they have been
@chowned to the mortal BC-Admin-Mortal.  All custom global functions
listed above are on the semi- -mortal Global Functions object.  The
Master Room and Auxiliary Room have been @chowned to BC-Admin-Architect.

The Comsystem and +bboard are owned by BC-Admin-Architect, which means
that higher bitlevels might not be able to use those systems if they
hide and set themselves DARK. This is intentional.  The Architect
bitlevel is enough to freely set attributes on players, so these systems
did not need anything higher, and it prioritizes Councilor+ as mere
mainenance-duty bitlevels.  Even the MU* Head should log on as an
Architect for everyday things.

The Comsystem and BBOARD have been modified to be configurable by
Architect and higher.  Both systems have a CANUSE attribute with the
according code on them.  Note that if you want both systems to be only
configurable by Councilor+, that instead of @chowning them to a
Councilor after changing those attribute for Councilor or higher, I
suggest to simply @set the bboard and comsystem core objects NO_MODIFY
instead, keeping them at Architect-power but making them unmodifyable by
Architects.


File: rhostmushhandbook.info,  Node: Quota,  Next: Functions<2>,  Prev: Bitlevels,  Up: Ambrosia’s Minimal Rhost DB

5.3.5 Quota
-----------

I highly recommend the use of the alternative @quota system.
BC-Admin-Mortal and BC-Admin-Guildmaster both have this @quota system
set up on themselves.  Both of them have a high amount of money for
everyday operations.  You should not give them free quota or money.


File: rhostmushhandbook.info,  Node: Functions<2>,  Next: Compiling,  Prev: Quota,  Up: Ambrosia’s Minimal Rhost DB

5.3.6 Functions
---------------

I also recommend to setup most global functions with /Privileged even if
they are mortal-powered, to make them work even when players are set
NO_CODE and WANDERER by default.

Enjoy!


File: rhostmushhandbook.info,  Node: Compiling,  Prev: Functions<2>,  Up: Ambrosia’s Minimal Rhost DB

5.3.7 Compiling
---------------

P.S. the ‘bin/asksource.save0’ file has been supplied for loading in the
‘make config’ or ‘make confsource’ step of Rhost installation.  It
provides the settings I have used when creating this database.  Some
settings, like the ANSI substitution, are used in the DB.

–Ambrosia@RhostMUSH <--Ambrosia@RhostMUSH>


File: rhostmushhandbook.info,  Node: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Next: Security,  Prev: Gettin Started,  Up: Top

6 What FLAGS, TOGGLES, POWERS, DEPOWERS, and BITLEVELS mean in RhostMUSH
************************************************************************

* Menu:

* Flags: Flags<3>.
* Toggles: Toggles<2>.
* @power::
* @depower::
* Multi-tiered bitlevel systems::
* Altering bitlevels::


File: rhostmushhandbook.info,  Node: Flags<3>,  Next: Toggles<2>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.1 Flags
=========

Flags are pretty much exactly the same as any other mush.  It’s a flag
that you set or unset on a target which then enables/disables or alters
something that target can do.  There’s help on all the flags in help and
wizhelp.


File: rhostmushhandbook.info,  Node: Toggles<2>,  Next: @power,  Prev: Flags<3>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.2 Toggles
===========

Toggles were designed as a single point flag that immediately enables or
disables a set ability or condition, thus a ‘toggle’.  It works exactly
like a flag and was originally designed for two reasons.  To distinguish
from the multi-meaning of a ‘flag’, and because frankly we ran out of
flag space :)


File: rhostmushhandbook.info,  Node: @power,  Next: @depower,  Prev: Toggles<2>,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.3 @power
==========

A power is similar to a power on other mushes, but unlike them, our
powers are multi-tier.  This means that they can be customized to
empower something at a given bitlevel.  You may empower something from
guildmaster up to councilor level.  There are some powers with a power
level of N/A meaning they are a toggle power granting an absolute power
level as specified in the help for that power.  This requires the
INHERIT flag for non-players to inherit powers, however, a specific
object can be granted a power as well.


File: rhostmushhandbook.info,  Node: @depower,  Next: Multi-tiered bitlevel systems,  Prev: @power,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.4 @depower
============

This is the anti-thesis of @power.  Also, depowers do not require
inheritance.  They also have priority over flags, toggles, and powers.
You can use depower to remove or lower abilities and control from a
target, even a full wizard (royalty) can be depowered.


File: rhostmushhandbook.info,  Node: Multi-tiered bitlevel systems,  Next: Altering bitlevels,  Prev: @depower,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.5 Multi-tiered bitlevel systems
=================================

RhostMUSH offers a multi-tier bitlevel system.  They go in order of
presidence You do not have to use all these bits, only use what you
want.

* Menu:

* ghod (#1) <bitlevel 7>: ghod #1 <bitlevel 7>.
* Immortal(i) <Level 6> - Basically #1: Immortal i <Level 6> - Basically #1.
* Royalty(W) <Level 5> - FULL wizbit level: Royalty W <Level 5> - FULL wizbit level.
* Councilor(a) <Level 4> - High wizbit level: Councilor a <Level 4> - High wizbit level.
* Architect(B) <Level 3> - Middle wizbit level: Architect B <Level 3> - Middle wizbit level.
* Guildmaster(g) <Level 2> - Lowest wizbit level: Guildmaster g <Level 2> - Lowest wizbit level.
* Wanderer <bitlevel 0>::
* Guest <bitlevel 0 as well>::


File: rhostmushhandbook.info,  Node: ghod #1 <bitlevel 7>,  Next: Immortal i <Level 6> - Basically #1,  Up: Multi-tiered bitlevel systems

6.5.1 ghod (#1) <bitlevel 7>
----------------------------

This bitlevel can do everything.  Only those who you trust with absolute
power should have this.  Period.


File: rhostmushhandbook.info,  Node: Immortal i <Level 6> - Basically #1,  Next: Royalty W <Level 5> - FULL wizbit level,  Prev: ghod #1 <bitlevel 7>,  Up: Multi-tiered bitlevel systems

6.5.2 Immortal(i) <Level 6> - Basically #1
------------------------------------------

The only thing this bitlevel can not do is directly effect #1, set/unset
some internal flags/attributes, and set/unset the immortal flag.  These
players can do EVERYTHING else.  Treat this bit as you would treat #1.
Only give it to those you know without a doubt you can trust.

   * Can do everything except set some internal flags, effect #1, and
     set/remove the immortal flag.


File: rhostmushhandbook.info,  Node: Royalty W <Level 5> - FULL wizbit level,  Next: Councilor a <Level 4> - High wizbit level,  Prev: Immortal i <Level 6> - Basically #1,  Up: Multi-tiered bitlevel systems

6.5.3 Royalty(W) <Level 5> - FULL wizbit level
----------------------------------------------

This is your standard wizard.  They can do everything you’re used to on
other mushes that wizards can do.  In addition, they also override all
locks by default (this can be disabled), and they have an enhanced
wizcloaking ability (which also can be disabled).  They can also set all
the lower bitlevels.

   * All things of Level 4 and lower

   * Ability to set more flags: STOP, NOSTOP, FUBAR

   * Ability to @attribute,

   * Ability to WIZCLOAK


File: rhostmushhandbook.info,  Node: Councilor a <Level 4> - High wizbit level,  Next: Architect B <Level 3> - Middle wizbit level,  Prev: Royalty W <Level 5> - FULL wizbit level,  Up: Multi-tiered bitlevel systems

6.5.4 Councilor(a) <Level 4> - High wizbit level
------------------------------------------------

This is your almost-but-not-quite wizard.  They have access to about 80%
of the wizard commands.  This includes @nuke, @toad, @newpassword and
the like.  The only things they can’t do that wizards can is cloak,
override locks, and use some of the database manipulation tools in
wizhelp.

   * All things of Level 3 and lower

   * Ability to set more flags: NOCONNECT, WANDERER, FREE

   * Ability to @nuke, @toad, @boot, @chownall, @dbck, @poor,
     @newpassword, @pcreate, slay


File: rhostmushhandbook.info,  Node: Architect B <Level 3> - Middle wizbit level,  Next: Guildmaster g <Level 2> - Lowest wizbit level,  Prev: Councilor a <Level 4> - High wizbit level,  Up: Multi-tiered bitlevel systems

6.5.5 Architect(B) <Level 3> - Middle wizbit level
--------------------------------------------------

This is your sub-wizard.  They still have the ability to control
anything their bitlevel and lower (including @chown, @destroy, etc) but
do not have any control of other players (like @nuke, @toad, etc) but
they can set the slave flag.  Otherwise, all things their level and
lower they can treat as if they owned it.

   * All things of Level 2

   * Ability to fully control and modify anything their level and lower
     (including @cloning, @destroying, etc)

   * Ability to use @tel on anything their level and lower.

   * Ability to bypass jump_ok rooms on anything their level & lower.

   * Ability to set some restricted flags: SLAVE, NO_YELL

   * Has infinite quota and money

   * Able to give negative money (Steal)

   * Able to @toggle the MONITOR


File: rhostmushhandbook.info,  Node: Guildmaster g <Level 2> - Lowest wizbit level,  Next: Wanderer <bitlevel 0>,  Prev: Architect B <Level 3> - Middle wizbit level,  Up: Multi-tiered bitlevel systems

6.5.6 Guildmaster(g) <Level 2> - Lowest wizbit level
----------------------------------------------------

This is the lowest wiz bit.  They only have moderate abilities.  They
can examine/decompile anything their level and lower, they can
@guild/@quota people, and they have a few other minor abilities.  They
don’t have free money however.

   * Ability to access things remotely (long_fingers)

   * Things are FREE for them in the queue.

   * Can see dbref#’s of things their level and lower

   * Can examine/decompile things their level and lower.

   * Can set @quota/@guild on their level and lower.


File: rhostmushhandbook.info,  Node: Wanderer <bitlevel 0>,  Next: Guest <bitlevel 0 as well>,  Prev: Guildmaster g <Level 2> - Lowest wizbit level,  Up: Multi-tiered bitlevel systems

6.5.7 Wanderer <bitlevel 0>
---------------------------

This is a hinderance flag.  This flag is automatically set on new
players that are created (which can be disabled).  This flag stops the
player from creating/destroying any database information.  In effect it
stops them from any type of building type commands.  They still are
allowed to set/unset locks/attributes/etc though without hinderance.


File: rhostmushhandbook.info,  Node: Guest <bitlevel 0 as well>,  Prev: Wanderer <bitlevel 0>,  Up: Multi-tiered bitlevel systems

6.5.8 Guest <bitlevel 0 as well>
--------------------------------

This is a bigger hinderance flag.  By default all guests should be set
this.  This flag stops the player from ANY database manipulation along
with @teleporting, and many other advanced commands.  It’s extreamly
dehibilatating.


File: rhostmushhandbook.info,  Node: Altering bitlevels,  Prev: Multi-tiered bitlevel systems,  Up: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH

6.6 Altering bitlevels
======================

Please keep in mind each of these bitlevels can be tweeked with the
@admin parameters and with the @powers (accessable by royalty) or
@depowers (only by immortal and higher).


File: rhostmushhandbook.info,  Node: Security,  Next: Maintenance,  Prev: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH,  Up: Top

7 Security
**********

* Menu:

* Considerations to locking down restrictions in RhostMUSH::
* Extended lockdown of the mush and considerations::
* Methods to block anonymous connections and the pros and cons of doing so::
* Setting up an SSL tunnel for secure connection options::


File: rhostmushhandbook.info,  Node: Considerations to locking down restrictions in RhostMUSH,  Next: Extended lockdown of the mush and considerations,  Up: Security

7.1 Considerations to locking down restrictions in RhostMUSH
============================================================

Sometimes, you want to have things run at various privilage levels and
do not want to have things with too much access.  Weither that is online
objects or players you want to block from connecting to your mush.
Here’s things you can do.

One thing to keep in mind is that RhostMUSH, unlike PennMUSH is not flag
dependant on permission level, it’s ownership based.  While setting a
wizard flag on an object would work, it’s not recommended and it is
instead recommended to chown the object in question to a wizard (like
your wizard holder character) Then the object must be set inherit to
actually inherit the wizard.

Note: inherit is required to inherit anything from the player. Flags, powers,

     toggles.  The only thing that is inherited automatically is
     depowers.

* Menu:

* Online; Blocking object abilities: Online Blocking object abilities.
* Offline; Blocking twinks from being abusive on your game: Offline Blocking twinks from being abusive on your game.


File: rhostmushhandbook.info,  Node: Online Blocking object abilities,  Next: Offline Blocking twinks from being abusive on your game,  Up: Considerations to locking down restrictions in RhostMUSH

7.1.1 Online: Blocking object abilities
---------------------------------------

We have various flag levels.  It is strongly recommanded you check
wizhelp on ‘control’ for a detailed overview of what each bitlevel can
or can not do prior to giving the ownership to the object.  Things
useful for tweaking control on players and objects:

* Menu:

* FLAGS (access with @set): FLAGS access with @set.
* TOGGLES (@toggle): TOGGLES @toggle.
* @powers, @depowers, and @locks: @powers @depowers and @locks.


File: rhostmushhandbook.info,  Node: FLAGS access with @set,  Next: TOGGLES @toggle,  Up: Online Blocking object abilities

7.1.1.1 FLAGS (access with @set)
................................

     IMMORTAL, ROYALTY, COUNCILOR, ARCHITECT, GUILDMASTER, FUBAR, SLAVE,
     SIDEFX, NO_CONNECT, WANDERER, SAFE, AUDITORIUM, BACKSTAGE,
     NOBACKSTAGE, INDESTRUCTIBLE, INHERIT, JUMP_OK, NO_TEL, NO_WALL,
     NO_EXAMINE, NO_MODIFY, NO_CONNECT, NO_POSSESS, NO_PESTER,
     NO_OVERRIDE, NO_USELOCK, NO_MOVE, NO_YELL, CLOAK, SCLOAK, DARK,
     UNFINDABLE, SEE_OEMIT, TELOK, SUSPECT, SPAMMONITOR


File: rhostmushhandbook.info,  Node: TOGGLES @toggle,  Next: @powers @depowers and @locks,  Prev: FLAGS access with @set,  Up: Online Blocking object abilities

7.1.1.2 TOGGLES (@toggle)
.........................

     BRANDY_MAIL, PENN_MAIL, MUXPAGE, VPAGE, NOISY, MONITOR* (all
     monitor toggles), MORTALREALITY, NODEFAULT, NO_FORMAT, PAGELOCK,
     SNUFFDARK, VARIABLE


File: rhostmushhandbook.info,  Node: @powers @depowers and @locks,  Prev: TOGGLES @toggle,  Up: Online Blocking object abilities

7.1.1.3 @powers, @depowers, and @locks
......................................

Please review help (and wizhelp) for each of these items on how it can
affect a player, thing, exit, or room.  The help is quite verbose.


File: rhostmushhandbook.info,  Node: Offline Blocking twinks from being abusive on your game,  Prev: Online Blocking object abilities,  Up: Considerations to locking down restrictions in RhostMUSH

7.1.2 Offline: Blocking twinks from being abusive on your game
--------------------------------------------------------------

FLAGS : FUBAR, SLAVE, NO_CONNECT Commands: : @boot, @nuke, @toad,
@turtle Sitelocks: (@admin) : forbid_host, forbid_site, register_host,
register_site, noguest_host, noguest_site Sitelock by player : @badsite,
@goodsite, NO_CONNECT (flag) Monitoring player : SUSPECT (flag), @snoop
TOR/Proxy blocking: : @blacklist (see shell’s tor_pull.sh), @admin
proxy_checker (see wizhelp), @tor (see wizhelp)


File: rhostmushhandbook.info,  Node: Extended lockdown of the mush and considerations,  Next: Methods to block anonymous connections and the pros and cons of doing so,  Prev: Considerations to locking down restrictions in RhostMUSH,  Up: Security

7.2 Extended lockdown of the mush and considerations
====================================================

These are flags, powers, toggles, and various conditions for
consideration when you decide to use some of the advanced features of
RhostMUSH. These are not all that is availble, but tend to be the
juicier ones to consider.

* Menu:

* Attribute Restriction::
* Command Restriction::
* Flag/Toggle Restriction::
* Config restrictions::
* Function Restrictions::
* Flags: Flags<4>.
* Toggles: Toggles<3>.
* @powers: @powers<2>.
* @depowers::
* Site Restrictions::


File: rhostmushhandbook.info,  Node: Attribute Restriction,  Next: Command Restriction,  Up: Extended lockdown of the mush and considerations

7.2.1 Attribute Restriction
---------------------------

     @attribute – Used for user-defined attributes @admin attr_access –
     used for built in attributes (like desc) @aflags – Used to set up
     lovely delicious attribute permission masks


File: rhostmushhandbook.info,  Node: Command Restriction,  Next: Flag/Toggle Restriction,  Prev: Attribute Restriction,  Up: Extended lockdown of the mush and considerations

7.2.2 Command Restriction
-------------------------

     @icmd - Very useful.  Please see wizhelp on it.  It disallows
     commands from executing including overriding them with softcode
     alternatives @admin access - Changes permissions, disables, or sets
     to be overridden a command.  Useful when you plan to override
     commands with softcode.


File: rhostmushhandbook.info,  Node: Flag/Toggle Restriction,  Next: Config restrictions,  Prev: Command Restriction,  Up: Extended lockdown of the mush and considerations

7.2.3 Flag/Toggle Restriction
-----------------------------

     @flagdef - Again, see wizhelp on this.  There are also
     netrhost.conf options so you can have them loaded at start.  This
     allows tweaking flags and toggles to who can set/unset/see as well
     as what type can use it or wha type it can be used on.


File: rhostmushhandbook.info,  Node: Config restrictions,  Next: Function Restrictions,  Prev: Flag/Toggle Restriction,  Up: Extended lockdown of the mush and considerations

7.2.4 Config restrictions
-------------------------

     @admin config_access - Changes permission of who can set a config
     param


File: rhostmushhandbook.info,  Node: Function Restrictions,  Next: Flags<4>,  Prev: Config restrictions,  Up: Extended lockdown of the mush and considerations

7.2.5 Function Restrictions
---------------------------

     @function/@lfunction – Allows softcoded functions that you can
     optionally lock down at your leasure @admin function_access – You
     can use this even on softcoded functions if you so desired.


File: rhostmushhandbook.info,  Node: Flags<4>,  Next: Toggles<3>,  Prev: Function Restrictions,  Up: Extended lockdown of the mush and considerations

7.2.6 Flags
-----------

     GUEST - This is your guest flag, it should only be set on guests
     WANDERER - the WANDERER flag is default on new players.  This flag
     disables all building abilitites of the player.  NO_COMMAND - You
     can use this to stop a player from being able to connect without
     worrying about changing their password FUBAR - As the flag states,
     it f*’s them up beind all recognition.  It essentially stops them
     from doing absolutely anything in the mush but pose and say.  Yes,
     it even disables the quit command.  SLAVE - Funny enough, slave
     allows anything but say and pose.  To ruin a troll’s life, set both
     FUBAR and SLAVE and sit back and smile.  NO_TEL - The target can’t
     teleport or be teleported NO_MOVE - The target is locked at their
     location unable to move at all NO_WALL - They do not see any @wall
     except a wizard @wall/no_prefix.  This has the bonus of snuffing db
     save messages.  NO_POSSESS - Sometimes it’s useful to grant a
     builder character to multiple players.  The NO_POSSESS flag makes
     it so that player can not be logged in more than 2 times.
     NO_MODIFY - The target can not be modified (except by immortal/#1)
     NO_EXAMINE - The target can not be examined/decompiled (except by
     immortal/#1) STOP - Once a matching $command is found on an object
     set STOP, it ‘stops’ trying to find other $command matches.  NOSTOP
     - If a target that is set STOP is also set NOSTOP, it will check
     the master room for a command and execute that as well if found.
     NO_PESTER - Stops target from @pemit or whisper.  You may use @icmd
     as well.  NO_OVERRIDE - Useful for immortals.  By default they
     override all locks, including attribute locks.  This makes it so an
     immortal’s passing of locks will behave like a mortals NO_USELOCK -
     This is like NO_OVERRIDE but only effects uselocks.  You likely
     want to set this on your immortal and wizard.  NO_ANSINAME - stops
     a target from having an ansified name NO_CODE - lock down advanced
     coding from a target SPAMMONITOR - stop a target from issuing more
     than 60 commands a minute.  FREE - Stop costing money for day to
     day processing of commands/building


File: rhostmushhandbook.info,  Node: Toggles<3>,  Next: @powers<2>,  Prev: Flags<4>,  Up: Extended lockdown of the mush and considerations

7.2.7 Toggles
-------------

     MONITOR - Enables site monitoring.  This is the main toggle
     MONITOR_SITE - Adds site information to site monitoring
     MONITOR_USERID - Adds the userid to site monitoring MONITOR_STATS -
     Adds connection stats to site monitoring MONITOR_FAIL - Adds
     showing failed connections to site monitoring MONITOR_CONN - Adds
     connection monitoring to site monitoring MONITOR_DISREASON - Adds
     disconnect reasons to site monitoring MONITOR_TIME - Adds time
     stamps to site monitoring MONITOR_BAD - Shows all bad creation
     attempts to site monitoring MONITOR_VLIMIT - Shows attempts to
     bypass MAX ATTRIBUTES MONITOR_AREG - Shows all auto registration
     attempts MONITOR_CPU - Shows all CPU warnings and/or alerts on the
     mush NO_FORMAT - Bypasses @conformat, @exitformat, and other
     formats SEE_SUSPECT - Allows you to see suspect info in the
     WHO/DOING FORCEHALTED - Allows you to @force/@sudo a HALTED target
     NOSHPROG - Disallows using ‘|’ to execute commands outside @program
     PROG - Allows the target to use @program IMMPROG - Disables the
     ability to use @quitprogram from a @program PROG_ON_CONNECT -
     Allows a @program to resume if someone reconnects IGNOREZONE -
     Enables a zone to process @icmd’s PAGELOCK - Enforces target to
     require passing pagelocks MAIL_LOCKDOWN - Blocks the ability of a
     wizard to check another player’s mail ATRUSE - Enables the
     attribute to use attribute content locking NOGLOBPARENT - Disables
     the target from inheriting global parenting LOGROOM - Enables
     system logs on the room EXFULLWIZATTR - Allows target to examine
     all wizard attributes NODEFAULT - Disables attribute
     formatting/handling on the target CHKREALITY - Enables the use of
     reality locks on the target HIDEIDLE - Disables deidling when you
     execute any command MORTALREALITY - Enforces a wizard to pass
     realities as a mortal SNUFFDARK - Hides dark exits from a wizard


File: rhostmushhandbook.info,  Node: @powers<2>,  Next: @depowers,  Prev: Toggles<3>,  Up: Extended lockdown of the mush and considerations

7.2.8 @powers
-------------

     WIZ_WHO - Allows target to see sites ala wizard who NOFORCE -
     target an not be forced (except by immortal/#1) FREE_QUOTA - Allow
     target to have unlimited quota JOIN_PLAYER - Allow to ‘join’ a
     player’s location NO_BOOT - Player can not be booted except by
     immortal/#1 STEAL - Player can give negative money TEL_ANYWHERE -
     Player can teleport anywhere STAT_ANY - Player can @search, @stat,
     or @find things HALT_QUEUE_ALL - Player can halt the queue
     SEARCH_ANY - Player can search for anything WHO_UNFIND - Player can
     see hidden player on WHO SHUTDOWN - Player can @shutdown the mush
     PURGE - Player can use /purge to @destroy and @nuke EXAMINE_FULL -
     Player can examine anything (not set NO_EXAMINE or cloaked)
     FORMATTING - @*formats allow passing what a person sees as %0, %1,
     etc CHOWN_ANYWHERE - Chown anything anywhere to yourself
     CHOWN_OTHER - Chown something you don’t own to yourself EXAMINE_ALL
     - Examine other things (tiered) SEE_QUEUE_ALL - Player can see the
     full queue GRAB_PLAYER - Player can grab a remote player and pull
     them to location LONG_FINGERS - Player is granted remote control of
     things they own BOOT - Player can @boot SEE_QUEUE - Player can see
     advanced queue features TEL_ANYTHING - Player can @teleport
     anything PCREATE - Player can @pcreate players NOWHO - Allows the
     use of @hide HALT_QUEUE - Allows halting queue by specified
     bitlevel SECURITY - Allows setting NOMOVE NO_TEL SLAVE NO_YELL
     WRAITH - Allows bypassing exit locks HIDEBIT - Hides your admin
     level from lower levels FULLTEL - Allows full immortal level
     teleportation EXECSCRIPT - Allows executing external scripts in
     ~/game/scripts


File: rhostmushhandbook.info,  Node: @depowers,  Next: Site Restrictions,  Prev: @powers<2>,  Up: Extended lockdown of the mush and considerations

7.2.9 @depowers
---------------

     WALL - Disables the ability to @wall LONG_FINGERS - Disables remote
     access to things STEAL - Can not steal money CREATE - Can not
     create anything WIZ_WHO - Can not access wizard who CLOAK - Can not
     wizard cloak BOOT - Can not boot PAGE - Can not page FORCE - Can
     not @force/@sudo LOCKS - Can not pass locks COMMAND - Can not
     execute any $command (including master room) MASTER - Can not use
     any master room $command EXAMINE - Lowers or disables the ability
     to examine/decompile NUKE - Can not nuke, toad, or turtle FREE - No
     longer has free money for anything OVERRIDE - No longer can
     override anything TEL_ANYWHERE - No longer can teleport anywhere
     TEL_ANYTHING - No longer can teleport anything other than
     themselves POWER - Can no longer use @power MODIFY - Can not modify
     things CHOWN_ME - Can not chown anything to themselves CHOWN_OTHER
     - Can not chown anything to others ABUSE - Can not use $commands on
     anything they do not own UNL_QUOTA - No longer has infinite quota
     SEARCH_ANY - Disables the ability to @search/@find things GIVE -
     Disables ability to give things/money RECEIVE - Disables the
     ability to recieve things/money NOGOLD - Limits (or disables) how
     much gold someone can give NOSTEAL - Can not give negative gold
     PASSWORD - Can not change password MORTAL_EXAMINE - drops examine
     and all fetching to mortal only PERSONAL_COMMAND - Disables all
     $commands on anything they own


File: rhostmushhandbook.info,  Node: Site Restrictions,  Prev: @depowers,  Up: Extended lockdown of the mush and considerations

7.2.10 Site Restrictions
------------------------

     These are accessable via the @admin command, and the following
     options are allowable.

     You may see all site information at any time with: @list sites

* Menu:

* IP based restrictions::
* DNS based restrictions::


File: rhostmushhandbook.info,  Node: IP based restrictions,  Next: DNS based restrictions,  Up: Site Restrictions

7.2.10.1 IP based restrictions
..............................

     You may use CIDR notation such as /32 instead of 255.255.255.255.
     Config file: (see section on forbid_site as it describes and gives
     examples) Online Syntax: MASK:

                             @admin forbid_site=123.123.123.0 255.255.255.0
                             @admin forbid_site=123.123.123.123 255.255.255.255

             CIDR::

                             @admin forbid_site=123.123.123.0 /24
                             @admin forbid_site=123.123.123.123 /32

             REMOVING: MASK::

                             @site/all 123.123.123.123=255.255.255.255
                             @site/forbid 123.123.123.0=254.255.255.0

                       CIDR::

                             @site/all 123.123.123.123=/32
                             @site/forbid 123.123.123.0=/24

          forbid_site      - Set the specified site forbid only
          register_site    - Set the specified site register only
          noguest_site     - Set the specified site unable to connect to guests
          suspect_site     - Set the specified site suspect on connect
          noautoreg_site   - Set the specified site to not allow autoregistration
          trust_site       - Allow site to bypass suspect site restrictions
          permit_site      - Allow site to bypass sitelock restrictions
          nodns_site       - Site will no longer do reverse DNS lookups
          noauth_site      - Site will no longer do AUTH ident lookups


File: rhostmushhandbook.info,  Node: DNS based restrictions,  Prev: IP based restrictions,  Up: Site Restrictions

7.2.10.2 DNS based restrictions
...............................

     These allow globbing wildcard matches.  The advanced feature is you
     can specify filtering on when the condition is matched, such as
     allowing 2 players from a site to be connected before disallowing
     anyone else to connect.  Config File: (see section on forbid_host
     as it describes and gives examples) Online Syntax:

                  ADD:      @admin forbid_host=*.dsl*.comcast.net *.aol.com *another.site
                  DEL:      @admin forbid_host=!*.aol.com
                  ADVANCED: @admin forbid_host=mudconnect.com|3 (allow 3 at once only)

          forbid_host     - Set the specified site(s) forbid only
          register_host   - Set the specified site(s) register only
          noguest_host    - Set the specified site(s) unable to connect to guests
          suspect_host    - Set the specified site(s) suspect on connect
          noautoreg_host  - Set the specified site(s) to not allow autoregistration
          validate_host   - Do not allow any autoregistration from emails matching site
          goodmail_host   - Always allow autoregistration from emails matching site
          nobroadcast_host - Snuff online site broadcasts via MONITOR for specified site


File: rhostmushhandbook.info,  Node: Methods to block anonymous connections and the pros and cons of doing so,  Next: Setting up an SSL tunnel for secure connection options,  Prev: Extended lockdown of the mush and considerations,  Up: Security

7.3 Methods to block anonymous connections and the pros and cons of doing so
============================================================================

     Now let’s assume you have some troll attempting to use proxies to
     connect.  There’s multiple ways to stop this.

* Menu:

* Blacklisting through external tor_pull.sh script: Blacklisting through external tor_pull sh script.
* Blacklisting through internal @blacklist command::
* Blacklisting through internal @tor command::
* Blacklisting through internal @admin command::


File: rhostmushhandbook.info,  Node: Blacklisting through external tor_pull sh script,  Next: Blacklisting through internal @blacklist command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.1 Blacklisting through external tor_pull.sh script
------------------------------------------------------

     In ~/Rhost/Server/game you will see a script called tor_pull.sh
     Execute this by running (from the game directory) ./tor_pull.sh
     This populates the blacklist with registered proxies from various
     sites on the internet.  If you want specified ip’s added, feel free
     to add them at the end of this file.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @blacklist command,  Next: Blacklisting through internal @tor command,  Prev: Blacklisting through external tor_pull sh script,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.2 Blacklisting through internal @blacklist command
------------------------------------------------------

     On the mush, have as part of your startup @blacklist/load This will
     load in the generated blacklist file for automatic forbid sites
     based on the ip.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @tor command,  Next: Blacklisting through internal @admin command,  Prev: Blacklisting through internal @blacklist command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.3 Blacklisting through internal @tor command
------------------------------------------------

     @tor.  Please see ‘wizhelp tor’ on how to set this up.  It in
     effect will actively block all known exit nodes for TOR’s
     annonymous proxy service.  It self-updates and will actively block
     TOR connections.


File: rhostmushhandbook.info,  Node: Blacklisting through internal @admin command,  Prev: Blacklisting through internal @tor command,  Up: Methods to block anonymous connections and the pros and cons of doing so

7.3.4 Blacklisting through internal @admin command
--------------------------------------------------

     @admin proxy_checker (please see wizhelp) This little doodad uses
     MTU checking against packet size which will detect most methods of
     proxies.  Sadly, this also has false positives because some
     situations require a differentating MTU value such as briged
     network connect with things like cloud services, docker, or similar
     encapsulated network services.  However, this option has several
     settings from just monitoring/alerting of possible proxies to
     downright forbidding them.  If you’re being actively attacked, it
     may be worth considering adding this to add additional protection.


File: rhostmushhandbook.info,  Node: Setting up an SSL tunnel for secure connection options,  Prev: Methods to block anonymous connections and the pros and cons of doing so,  Up: Security

7.4 Setting up an SSL tunnel for secure connection options
==========================================================

* Menu:

* Quickstart for SSL setup with stunnel::
* Detailed SSL setup with stunnel::


File: rhostmushhandbook.info,  Node: Quickstart for SSL setup with stunnel,  Next: Detailed SSL setup with stunnel,  Up: Setting up an SSL tunnel for secure connection options

7.4.1 Quickstart for SSL setup with stunnel
-------------------------------------------

  1. Modify your netrhost.conf file and add/change the following
     parameters:

       1. sconnect_reip 1

       2. sconnect_cmd SECRET-MAGIC-COOKIE

                 1. SECRET-MAGIC-COOKIE is a case sensitive single word
                    phrase.  Any printable character other than the ‘#’
                    character is allowable.  You may use up to 30
                    characters.

                 2. Make sure the secret is a hard to guess phrase.
                    This is used by stunnel to forward on the
                    originating IP address.

       3. stunnel_host localhost 127.0.0.1 othersite.goes.here

                 1. This is optional.

                 2. If you do not specify it it defaults to ‘localhost
                    127.0.0.1’.  If your domain has a unique name like
                    ‘localhost.localdomain’ like some ubuntu
                    distributions, then you should customize your
                    stunnel_host.

  2. go into the stunnel directory

  3. ./stunnel_setup.sh

       1. Choose the defaults or alter them based on preferences

       2. Make sure to choose the warpbubble conf file

  4. ./stunnel_start.sh

  5. Use ./stunnel_stop.sh to stop the SSL tunnel at any time

You do not need to shutdown the ssl handler if you shutdown the mush.
They are entirely separate processes.


File: rhostmushhandbook.info,  Node: Detailed SSL setup with stunnel,  Prev: Quickstart for SSL setup with stunnel,  Up: Setting up an SSL tunnel for secure connection options

7.4.2 Detailed SSL setup with stunnel
-------------------------------------

To setup SSL connectivity, we use the STUNNEL application to tunnel SSL
to the mush.  This acts a bit like a man in the middle but remains
controlled by the game owner which would have access to the end point
anyway.

Note: it is assumed you will have already initially set up your
netrhost.conf.

* Menu:

* stunnel directory::
* Modifying netrhost.conf: Modifying netrhost conf.
* Running the stunnel setup program::
* Starting the stunnel proxy::
* Shutting down the stunnel proxy::
* Configuring firewall on the host::


File: rhostmushhandbook.info,  Node: stunnel directory,  Next: Modifying netrhost conf,  Up: Detailed SSL setup with stunnel

7.4.2.1 stunnel directory
.........................

You would set up the stunnel from the ‘stunnel’ directory.  There the
following files are of relevance:

README – a readme explaining the points of stunnel stunnel.conf.example
– The example stunnel.conf file.  If you wish to create this manually
you’re welcome to.  Just make sure the end file is stunnel.conf
stunnel_setup.sh – the script to build a stunnel.conf file for you which
will be dropped at your specified location.  stunnel_kill.sh –
Stop/terminate the stunnel process.  stunnel_start.sh – Start the
stunnel process.  warpbubble.pl – the perl script that handles stunnel
to mush connectivity.  stunnel_src – If you do not have stunnel, this
directory will allow you to download, compile and locally install.


File: rhostmushhandbook.info,  Node: Modifying netrhost conf,  Next: Running the stunnel setup program,  Prev: stunnel directory,  Up: Detailed SSL setup with stunnel

7.4.2.2 Modifying netrhost.conf
...............................

To be able to utilize SSL, you first must set your netrhost.conf file
with the relevant information to enable SSL connectiions.  These three
config options must be set to be able to use SSL, however, sconnect_host
if not set will default to ‘localhost 127.0.0.1’.

sconnect_reip 1 – This enables the SSL tunnel layer handler within
rhost.  sconnect_cmd XYZZY – this will set the secret SSL command
handshake command to XYZZY. This is case sensitive and can be up to 31
characters.  Please make sure to only use printable non-whitespace
characters.  Ergo: one word sconnect_host wildcards – This allows
wildcarded sites (one or more) to allow to access the sconnect/stunnel
handler.  This defaults to ‘localhost’ and ‘127.0.0.1’ so if you have
‘localhost.localdomain’ instead then you must set this to whatever is
seen as ‘localhost’ to you.  You can verify this by checking your
/etc/hosts file.

Note: the sconnect_host is optional.  If you do not specify it, it will
default to two values: ‘localhost’ and ‘127.0.0.1’.


File: rhostmushhandbook.info,  Node: Running the stunnel setup program,  Next: Starting the stunnel proxy,  Prev: Modifying netrhost conf,  Up: Detailed SSL setup with stunnel

7.4.2.3 Running the stunnel setup program
.........................................

At this point you’re ready to run the stunnel setup program.  So at this
point type the following:

     ./stunnel_setup.sh

This will prompt you through settings.  Most you can select the defaults
to.  The SSL port you may need to change based on your administrative
requirements.  It will prompt you with whatever you set for your mush
name.  If you have not selected a mush name at this point, you can
select the defaults.

You will want to use the config file for warpbubble as this hides the
secret.

Be aware that if you have DNS host lookups disabled on your mush, you
MUST have 127.0.0.1 as an entry for your sconnect_host file.


File: rhostmushhandbook.info,  Node: Starting the stunnel proxy,  Next: Shutting down the stunnel proxy,  Prev: Running the stunnel setup program,  Up: Detailed SSL setup with stunnel

7.4.2.4 Starting the stunnel proxy
..................................

When you have your stunnel.conf file to the way you want, you then issue
the following command to run your SSL layer:

     ./stunnel_start.sh


File: rhostmushhandbook.info,  Node: Shutting down the stunnel proxy,  Next: Configuring firewall on the host,  Prev: Starting the stunnel proxy,  Up: Detailed SSL setup with stunnel

7.4.2.5 Shutting down the stunnel proxy
.......................................

If ever you need to bring down the SSL layer, you may kill it with the
command:

     ./stunnel_stop.sh


File: rhostmushhandbook.info,  Node: Configuring firewall on the host,  Prev: Shutting down the stunnel proxy,  Up: Detailed SSL setup with stunnel

7.4.2.6 Configuring firewall on the host
........................................

Please be aware that the port that the SSL layer is on must be opened in
any firewall rule you specified to allow the connectivity.  This also
must not be the port the mush is running on and requires a separate
port.


File: rhostmushhandbook.info,  Node: Maintenance,  Next: Troubleshooting,  Prev: Security,  Up: Top

8 Maintenance
*************

* Menu:

* Note about Patching::
* Daily Backups for RhostMUSH::
* Signals and why you need them for control::
* Shutting down gracefully::
* Autoshutdown script::
* Network Port redirector::
* Using the built-in cron system for periodically running commands::
* The following scripts are used in the game directory::
* Textfiles for RhostMUSH::


File: rhostmushhandbook.info,  Node: Note about Patching,  Next: Daily Backups for RhostMUSH,  Up: Maintenance

8.1 Note about Patching
=======================

There’s two ways you can look to patch the source.  If you plan to run
the RhostMUSH source from a git repository, then please use the git repo
to constantly update your code.  If you knew enough to want to set up a
git repo then we expect knowledge on how to keep source trees updated in
the git repo to be used the same as any other source distribution.

If, however, you have no idea what a git repo even is, or have no
inclination of using git to manage your RhostMUSH source, or just don’t
care one way or another, then you can use the included patch.sh routine
(from under the Server directory) to patch your source at any time.

From the server directory just type:

     ./patch.sh

That will auto-compile your source, auto make all your header files and
essentially keep everything up to date to the latest source.  Once
that’s done, all you do from within the game is two commands:

     @reboot (or @reboot/silent)  -- This will load in the new binary
     @readcache  -- This will read in all the .txt file changes


File: rhostmushhandbook.info,  Node: Daily Backups for RhostMUSH,  Next: Signals and why you need them for control,  Prev: Note about Patching,  Up: Maintenance

8.2 Daily Backups for RhostMUSH
===============================

Make SURE YOU RUN DAILY Backups.  Rhost is very stable, but things
outside the mush can damage the game.  paranoia is fine, especially when
they really are out to get you.  TO make the backups, do the following:

      @dump/flat      -- This makes a flatfile dump of the main database.  You want to run this daily.
      wmail/unload    -- This makes a flatfile dump of the mail database.  You want to run this daily.
      @areg/unload    -- Only worry about this if you are using auto-registration emailing.  Few do.
      newsdb/unload   -- Only worry if you use the hardcoded bbs system.  Most don't use it.


     Backups are already handled and integrated with a script 'backup_flat.sh'.
     If you wish to customize this, feel free.  Again, it is well documented and
     just require changing settings at the top of this script.

     By default, it does 7 contiguous backups.  You may increase or decrease
     this value to any value you want.

     It will, by default, backup all your txt/\*.txt files, your netrhost.conf
     file, your netrhost.db.flat (mush db) file, your RhostMUSH.dump.\*
     (mail db) files, your RhostMUSH.news.\* (internal news/bbs db -- if used),
     your RhostMUSH.areg.\* (the autoregistration db -- if used), and any sqlite
     database you currently may be using which are OPTIONALLY backed up if you
     remove the '#' from before it.

     The backup script also will optionally rcp/scp, ftp, or mail any backups
     you want to a remote destination.  Be forewarned, the backup files can
     potentially get rather large for larger games, even compressed.  The
     average size for these files will be 1-5MB.  It could potentially get
     over 10-20MB in size for excessively large games, so plan accordingly.

     Be aware that the backup system will NOT make successful backups if you
     run out of disk space.  This includes actually running out of disk space
     or running out of disk quota.  There is a mechanism inside the backup
     script to specify an email address that you wish to get alerts from
     in these instances.  I recommend using it.

     If you make changes to your backup_flat.sh script with an already
     active and running mush and wish to just restart the backup procedure
     just issue::

        ./backup_restart.sh


File: rhostmushhandbook.info,  Node: Signals and why you need them for control,  Next: Shutting down gracefully,  Prev: Daily Backups for RhostMUSH,  Up: Maintenance

8.3 Signals and why you need them for control
=============================================

Rhost by default allows signals at the shell to handle various processes
in-game.

The following signals are useful.

* Menu:

* TERM (kill -TERM or kill -15): TERM kill -TERM or kill -15.
* USR1 (kill -USR1): USR1 kill -USR1.
* USR2 (kill -USR2): USR2 kill -USR2.
* KILL (kill -KILL or kill -9): KILL kill -KILL or kill -9.


File: rhostmushhandbook.info,  Node: TERM kill -TERM or kill -15,  Next: USR1 kill -USR1,  Up: Signals and why you need them for control

8.3.1 TERM (kill -TERM or kill -15)
-----------------------------------

        - This will immediately terminate the mush, dumping a special
          flatfile called netrhost.db.TERM and scramming the db in
          question by force-closing it without any writes.  A TERM is
          the effort for the mush to shut down the mush as fast as
          possible to avoid any db corruption if possible since a TERM
          signal is common during a server shutdown, so time is
          paramount.


File: rhostmushhandbook.info,  Node: USR1 kill -USR1,  Next: USR2 kill -USR2,  Prev: TERM kill -TERM or kill -15,  Up: Signals and why you need them for control

8.3.2 USR1 (kill -USR1)
-----------------------

        - This by default issues a reboot on the server.  This is a
          special parameter because this can actually be changed in-game
          to do any number of other things.  Please refer to the
          RhostMUSH running in question if this is the default behavior
          or if the method for USR1 is doing something else.


File: rhostmushhandbook.info,  Node: USR2 kill -USR2,  Next: KILL kill -KILL or kill -9,  Prev: USR1 kill -USR1,  Up: Signals and why you need them for control

8.3.3 USR2 (kill -USR2)
-----------------------

        - This will shutdown (cleanly) the mush.  This behaves as if you
          issued a @shutdown from within the game, and follows all
          proper procedure in bringing the game down cleanly and safely.
          This shoudl be used when doing maintenance on the game or if
          you need to bring it down from the shell.


File: rhostmushhandbook.info,  Node: KILL kill -KILL or kill -9,  Prev: USR2 kill -USR2,  Up: Signals and why you need them for control

8.3.4 KILL (kill -KILL or kill -9)
----------------------------------

        - This signal can not be caught and will immediately terminate
          the game without any safty to the database at all.  Short of
          something horribly wrong going on, this should never be used
          to bring down your mush.  Doing so will almost certainly
          corrupt your databases (ALL OF THEM) that are open, including
          but not limited to your main database, your mail database,
          your autoregistration database, and so forth.  So if you do
          this, plan to do some database recovery from your flat files.
          Also, when you bring down a mush in this manner, you need to
          issue Startmush -f to bring it back up.


File: rhostmushhandbook.info,  Node: Shutting down gracefully,  Next: Autoshutdown script,  Prev: Signals and why you need them for control,  Up: Maintenance

8.4 Shutting down gracefully
============================

* Menu:

* Rhostmush has many ways to shut down the game cleanly::
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost.


File: rhostmushhandbook.info,  Node: Rhostmush has many ways to shut down the game cleanly,  Next: WARNING Never kill -9 Rhost,  Up: Shutting down gracefully

8.4.1 Rhostmush has many ways to shut down the game cleanly
-----------------------------------------------------------

  1. Log into the mush and issue @shutdown

  2. Issue a kill -USR2 to the mush which issues an emergency @shutdown

  3. Issue a kill -TERM to the mush which issues an emergency abort and
     clean shutdown.


File: rhostmushhandbook.info,  Node: WARNING Never kill -9 Rhost,  Prev: Rhostmush has many ways to shut down the game cleanly,  Up: Shutting down gracefully

8.4.2 WARNING: Never kill -9 Rhost
----------------------------------

Under NO CIRCUMSTANCES should you kill -9 your mush unless you don’t
care for the database.  The reason is if the mush happens to be saving,
in any method, to the database, especially a QDBM database, you will
likely have just corrupted your database, so pull out a flatfile to
recover.

Sadly, this also may occur if the server hosting you takes a nose-dive
in the middle of a db write.  Rhost can recover corruption in-game while
up, but if it bombs in the middle of a write, all bets are off.  :)


File: rhostmushhandbook.info,  Node: Autoshutdown script,  Next: Network Port redirector,  Prev: Shutting down gracefully,  Up: Maintenance

8.5 Autoshutdown script
=======================

The makefile will ‘make’ the program that will STOP the mush.  Please
tweek ‘autolog.h’ with the proper parameters.

The ‘startup.sh’ will START the mush.

Both of these are intended to be used for automations (automated
processes) like your rc.local file and/or startup scripts when you bring
your server up.


File: rhostmushhandbook.info,  Node: Network Port redirector,  Next: Using the built-in cron system for periodically running commands,  Prev: Autoshutdown script,  Up: Maintenance

8.6 Network Port redirector
===========================

This is a port redirector incase you decide to move your mush to a new
site/port.  To use, first, compile the code.  To do this you would type
the following:

     cc portmsg.c -o portmsg

if ‘cc’ is not defined, try the following:

     gcc portmsg.c -o portmsg

Once compiled, you would then modify the file ‘file’ to describe the
mush, what was done, where it’s moved to, then specify the IP address
and the PORT where specified.

To launch the application, you would then type:

     ./portmsg file <port>

Where <port> is the port where the mush used to run at.


File: rhostmushhandbook.info,  Node: Using the built-in cron system for periodically running commands,  Next: The following scripts are used in the game directory,  Prev: Network Port redirector,  Up: Maintenance

8.7 Using the built-in cron system for periodically running commands
====================================================================

* Menu:

* Syntax for rhost.cron: Syntax for rhost cron.


File: rhostmushhandbook.info,  Node: Syntax for rhost cron,  Up: Using the built-in cron system for periodically running commands

8.7.1 Syntax for rhost.cron
---------------------------

The rhost.cron file will be in the syntax as follows:

     username (or dbref#)
     command1;command2;command3;...;commandN
     command
     command
     command1;command2;command3;...;commandN

You can have commands strung together with a semicolon on the same line.
This counts as a single line of input.  You can have at most 20 lines of
commands after the target you wish to execute the commands as.  The
target may be a player name OR a dbref# of any valid dbref# within the
game.  Invalid targets will abort the cron process.  Non-printable
characters in the cron file will abort the process.  Any aborts or
warnings will be logged in the netrhost.gamelog.

Here is a working example of the code cron file.  This example will
perform dumps of the mush.

* Menu:

* Example syntaxt for rhost.cron: Example syntaxt for rhost cron.


File: rhostmushhandbook.info,  Node: Example syntaxt for rhost cron,  Up: Syntax for rhost cron

8.7.1.1 Example syntaxt for rhost.cron
......................................

     #1
     @dump/flat; @@ dump the main game database to flatfile
     wmail/unload; @@ dump the mail database to flatfile
     @areg/unload; @@ dump the registration database to flatfile
     newsdb/unload; @@ dump the news bbs database to flatfile


File: rhostmushhandbook.info,  Node: The following scripts are used in the game directory,  Next: Textfiles for RhostMUSH,  Prev: Using the built-in cron system for periodically running commands,  Up: Maintenance

8.8 The following scripts are used in the game directory
========================================================

Startmush – used to Start up the mush backup_flat.sh – Used to run
backups with @dump/flat within the game (Started with Startmush
automatically) backup_restart.sh – Restart the backup_flat.sh if changes
are done compress_logs.sh – Compress logs in ‘oldlogs’.  Ran with
Startmush findit.sh – Internal script used to check for flatfile
validity mailhide.sh – Wrapper to hide from address using the ‘mail’
progam minimal.sh – Auto-load the minimal db into the mush
proxysnarf.sha – Internal script for the tor_pull.sh tor proxy blacklist
tor_pullit.sh – Internal script for the tor_pull.sh for proxy blacklist
recovery.sh – If your db is corrupt, run this to auto-revert to an
earlier flatfile tor_pull.sh – Create a blacklist.txt file that can be
loaded via the internal @blacklist command for proxy handling


File: rhostmushhandbook.info,  Node: Textfiles for RhostMUSH,  Prev: The following scripts are used in the game directory,  Up: Maintenance

8.9 Textfiles for RhostMUSH
===========================

areghost.txt - file player gets when autoregistration on registered
host.  autoreg.txt - file player gets when autoregistration on
non-registered host.  autoreg_include.txt - file player receives in
email when they autoregister attached to login/passwd badsite.txt - file
player gets when site is not allowed.  connect.txt - file player gets
when connect create_reg.txt - file player gets when their site is
register and they can’t create.  doorconf.txt - file that is searched
for information regarding @door.

     Note: Need to mkindx doorconf.txt doorconf.indx for this file

down.txt - file player gets when the mush has logins disabled (@disable
login) error.txt - the ‘Huh?  (type help for help)’ messages.

     Note: Need to mkindx error.txt error.indx for this file

full.txt - file player gets when the mush can’t have any more players.
guest.txt - file player gets when they connect as a guest.  help.txt -
your help file

     Note: Need to mkindx help.txt help.indx for this file

motd.txt - your motd file news.txt - your news file

     Note: Need to mkindx news.txt news.indx for this file

newuser.txt - file newly created players get when they connect for the
first time.  noguest.txt - file player gets when they are not allowed to
connect to a guest.  plushelp.txt - optional +help file.  (needs compile
time option)

     Note: Need to mkindx plushelp.txt plushelp.indx for this file

quit.txt - file player gets when they disconnect.  register.txt - file
player gets when the site is locked down for registration.  wizhelp.txt
- your wizhelp file

     Note: Need to mkindx wizhelp.txt wizhelp.indx for this file

wizmotd.txt - your wiz motd file

* Menu:

* Textfile Frequently Asked Questions::


File: rhostmushhandbook.info,  Node: Textfile Frequently Asked Questions,  Up: Textfiles for RhostMUSH

8.9.1 Textfile Frequently Asked Questions
-----------------------------------------

Q: How do I put color in these files?  A1: Look at ansi.h and you need
to put the literal ASCII codes.  They will look like: ^[[0m (for
ANSI_NORMAL). That’s <ESC>[ A2: You can enable ansi_txtfiles then use %c
(or %x/%m) encoding for ansi, however you compiled your Rhost.

Q: I want to design my own txt files to read in the mush.  A: Easy.
Design them like help.txt would be set up, mkindx the file, then you can
access it via @dynhelp online.

Q: Do I have to mkindx these files whenever I make changes?  A: Only the
ones that have ‘& ‘ index.  (help.txt, wizhelp.txt, news.txt, etc)

Q: Do I have to @readcache in the game whenever I make a change?  A:
Only when you modify any of the files listed in README.TXTFILES. Not the
ones you use with @dynhelp.

Q: Can’t I just make code in the mush that then is used for these silly
txt files?  A: Absolutely.  Check ‘wizhelp file_object’.


File: rhostmushhandbook.info,  Node: Troubleshooting,  Next: Advanced Features,  Prev: Maintenance,  Up: Top

9 Troubleshooting
*****************

* Menu:

* Reporting bugs or getting help::
* Stack limit and debugging::
* How to reset the password for #1::
* Troubleshooting difficulties compiling RhostMUSH::
* Dealing with DB Corruption::
* Dealing with a corrupt mail database::


File: rhostmushhandbook.info,  Node: Reporting bugs or getting help,  Next: Stack limit and debugging,  Up: Troubleshooting

9.1 Reporting bugs or getting help
==================================

If you find any bugs or problems, notify one of the developers of
RhostMUSH and a patch or workaround will be made available as soon as
possible.  Current developers are: Seawolf, Thorin, Ashen-Shugar,
Lensman, Kale, Mac, Zenty, Ambrosia, Amos, and Morgan.  They can be
found around the net.

* Menu:

* Troubleshooting issues with starting up::


File: rhostmushhandbook.info,  Node: Troubleshooting issues with starting up,  Up: Reporting bugs or getting help

9.1.1 Troubleshooting issues with starting up
---------------------------------------------

* Menu:

* Problem; If it says the shared ID is already in use: Problem If it says the shared ID is already in use.
* Problem; Your log file is massive and your mush is running: Problem Your log file is massive and your mush is running.
* Problem; The database flatfile you’re loading can’t load because a db is already defined: Problem The database flatfile you’re loading can’t load because a db is already defined.
* Problem; The mail database won’t load and mail shows ‘offline’: Problem The mail database won’t load and mail shows ‘offline’.


File: rhostmushhandbook.info,  Node: Problem If it says the shared ID is already in use,  Next: Problem Your log file is massive and your mush is running,  Up: Troubleshooting issues with starting up

9.1.1.1 Problem: If it says the shared ID is already in use
...........................................................

A1: please verify that it is the right shared debug_id in your
netrhost.conf file

A2: Force a start by running:

     ./Startmush -f


File: rhostmushhandbook.info,  Node: Problem Your log file is massive and your mush is running,  Next: Problem The database flatfile you’re loading can’t load because a db is already defined,  Prev: Problem If it says the shared ID is already in use,  Up: Troubleshooting issues with starting up

9.1.1.2 Problem: Your log file is massive and your mush is running
..................................................................

A1: To rotate this use the @logrotate command.  See wizhelp on
@logrotate


File: rhostmushhandbook.info,  Node: Problem The database flatfile you’re loading can’t load because a db is already defined,  Next: Problem The mail database won’t load and mail shows ‘offline’,  Prev: Problem Your log file is massive and your mush is running,  Up: Troubleshooting issues with starting up

9.1.1.3 Problem: The database flatfile you’re loading can’t load because a db is already defined
................................................................................................

A1: remove netrhost.db* and netrhost.gdbm* from your data directory


File: rhostmushhandbook.info,  Node: Problem The mail database won’t load and mail shows ‘offline’,  Prev: Problem The database flatfile you’re loading can’t load because a db is already defined,  Up: Troubleshooting issues with starting up

9.1.1.4 Problem: The mail database won’t load and mail shows ‘offline’
......................................................................

A1: from within the MUSH run:

     wmail/load


File: rhostmushhandbook.info,  Node: Stack limit and debugging,  Next: How to reset the password for #1,  Prev: Reporting bugs or getting help,  Up: Troubleshooting

9.2 Stack limit and debugging
=============================

Rhost uses a stack limit in the debug monitor.

This stack limit is set to a reasonable amount of 1000.  This is defined
in the debug.h file in the hdrs directory.

This will directly impact the function_recursion_limit from being set
above 100.  If, for whatever reason, you really must have a ridiculously
high recursion limit, then it is a suggestion to manually modify the
stack limit in debug.h to a higher number.

We have reasonably set it to 10000 without too much issue, but keep in
mind, the overhead is higher for every stack you throw on the process
table.  Higher stack means more memory used.

Also be aware that your shell stack limit directly is affected to this
value.

Type:

     ulimit -a

This will show you your shell stack limits.  Do NOT set the STACKMAX
value higher than your shell’s stack value.

The value in ~/Rhost/Server/hdrs/debug.h is currently set as:

     #define STACKMAX 1000

Feel free to change this to a higher value if you wish.

The caveat.  This effects the debug stack daemon.  Meaning, the only way
for this to be updated is through @shutdown and then a fresh
./Startmush.

A @reboot WILL NOT LOAD IN A NEW DEBUG MONITOR!!!!

You can issue @list stack to see the current stack ceiling ingame.


File: rhostmushhandbook.info,  Node: How to reset the password for #1,  Next: Troubleshooting difficulties compiling RhostMUSH,  Prev: Stack limit and debugging,  Up: Troubleshooting

9.3 How to reset the password for #1
====================================

     Warning: You can only use one of these options at a time.  Make
     sure to change back your nerhost.conf and then reboot after making
     the changes.

* Menu:

* Method 1; Reset to Default Password: Method 1 Reset to Default Password.
* Method 2; Increase Permissions of Immortals: Method 2 Increase Permissions of Immortals.


File: rhostmushhandbook.info,  Node: Method 1 Reset to Default Password,  Next: Method 2 Increase Permissions of Immortals,  Up: How to reset the password for #1

9.3.1 Method 1: Reset to Default Password
-----------------------------------------

in your netrhost.conf file add:

     newpass_god 777

This will reset #1’s password to the default ‘Nyctasia’.


File: rhostmushhandbook.info,  Node: Method 2 Increase Permissions of Immortals,  Prev: Method 1 Reset to Default Password,  Up: How to reset the password for #1

9.3.2 Method 2: Increase Permissions of Immortals
-------------------------------------------------

in your netrhost.conf file add:

     newpass_god 1

This will allow IMMORTAL players to @newpassword #1 upon reboot.


File: rhostmushhandbook.info,  Node: Troubleshooting difficulties compiling RhostMUSH,  Next: Dealing with DB Corruption,  Prev: How to reset the password for #1,  Up: Troubleshooting

9.4 Troubleshooting difficulties compiling RhostMUSH
====================================================

* Menu:

* Changes to conf for high-bit CPUs::
* Changes to autconf for certain systems::


File: rhostmushhandbook.info,  Node: Changes to conf for high-bit CPUs,  Next: Changes to autconf for certain systems,  Up: Troubleshooting difficulties compiling RhostMUSH

9.4.1 Changes to conf for high-bit CPUs
---------------------------------------

RhostMUSH automatically detects 64-bit platforms, and should compile
cleanly on these.

In case you are trying to compile Rhost on some other crazy-wide CPUs
such as the PS2, PS3 or other 128 or 256 bit CPUs, you can easily do so
by changing a few lines of code in conf.c.

change:

     typedef unsigned int    pmath1;
     typedef int             pmath2;
     #define ALLIGN1 4

to:

     typedef unsigned long   pmath1;
     typedef long            pmath2;
     #define ALLIGN1 8

     Note: Replace 8 with the size of your CPU’s long integer.  (4 for
     32-bit, 8 for 64-bit, 16 for 128-bit, etc etc)

RhostMUSH has only been tested to work on the AMD64, but there is no
reason to believe the same will not hold true for IA64.


File: rhostmushhandbook.info,  Node: Changes to autconf for certain systems,  Prev: Changes to conf for high-bit CPUs,  Up: Troubleshooting difficulties compiling RhostMUSH

9.4.2 Changes to autconf for certain systems
--------------------------------------------

You should not have to worry about this, but incase something really
weird occurs, you may need to look into these changes…

The autoconfig.h file needs to have modifications to it by hand.

There are three manual entries:

This one sets how it defines the int to character pointer.  It’s safe to
keep it as ‘unsigned int’ for 32 bit platforms.  For non 32-bit, define
it to how an int is defined on that system:

     typedef unsigned int    pmath1;

This one sets how it defines the signed int to character pointer.  Same
restrictions apply as above for unsigned int:

     typedef int     pmath2;

This sets the allignment for the given platform.  4 represents a 32 bit
platform.  8 would represent a 64 bit platform, etc.  Change
accordingly:

     #define ALLIGN1 4

     Warning: Make sure these three entries are defined in your
     autoconf.h file else the mush will not compile.


File: rhostmushhandbook.info,  Node: Dealing with DB Corruption,  Next: Dealing with a corrupt mail database,  Prev: Troubleshooting difficulties compiling RhostMUSH,  Up: Troubleshooting

9.5 Dealing with DB Corruption
==============================

Ok.  Your database won’t come up.

If you are reading this, then likely the scenerio is one of the
following:

  1. The mush says it can’t find your database files.

  2. The mush says it can’t read or load your database files.

  3. The mush seems to load fine but I can’t log in anyone and when I do
     all the names and attributes of things seem to be gone!

  4. Bringing up your mail database

First thing is first.  Don’t have a panic attack.

* Menu:

* If the mush says it can’t find your database files::
* If the mush says it can’t read or load your database files::
* If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!::
* Bringing up your mail database::


File: rhostmushhandbook.info,  Node: If the mush says it can’t find your database files,  Next: If the mush says it can’t read or load your database files,  Up: Dealing with DB Corruption

9.5.1 If the mush says it can’t find your database files
--------------------------------------------------------

* Menu:

* Check the names of the database files in your ‘data’ directory::
* Check your netrhost.conf file: Check your netrhost conf file.
* Check your mush.config file: Check your mush config file.


File: rhostmushhandbook.info,  Node: Check the names of the database files in your ‘data’ directory,  Next: Check your netrhost conf file,  Up: If the mush says it can’t find your database files

9.5.1.1 Check the names of the database files in your ‘data’ directory
......................................................................

They should be named something like:

     netrhost.db
     netrhost.db.old
     netrhost.db.old.prev
     netrhost.gdbm.dir
     netrhost.gdbm.pag

And you may see a netrhost.db.flat


File: rhostmushhandbook.info,  Node: Check your netrhost conf file,  Next: Check your mush config file,  Prev: Check the names of the database files in your ‘data’ directory,  Up: If the mush says it can’t find your database files

9.5.1.2 Check your netrhost.conf file
.....................................

If you never touched the *database or muddb_name params, you should be
good.

Verify your *database params (and muddb_name) are still set to
‘netrhost’ as part of the name.  Ergo, the default values and you didn’t
change them.  These should match up with the filenames in your data
directory.

If these names do not match up, it can’t find the database files to
load.  So you shouldn’t have to change these names, ever.  :)


File: rhostmushhandbook.info,  Node: Check your mush config file,  Prev: Check your netrhost conf file,  Up: If the mush says it can’t find your database files

9.5.1.3 Check your mush.config file
...................................

If you never modified this file, you should be good.

The gamename should be ‘netrhost’ for this file.  This does NOT control
the name of your game.  This controls the name of all the files as
associated to the mush.  So changing this means the netrhost.conf file,
all your database files, and so forth.  Please don’t change this :)


File: rhostmushhandbook.info,  Node: If the mush says it can’t read or load your database files,  Next: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Prev: If the mush says it can’t find your database files,  Up: Dealing with DB Corruption

9.5.2 If the mush says it can’t read or load your database files
----------------------------------------------------------------

Double check everything for the previous issue.  Make sure everything is
named properly.

* Menu:

* Verify you have enough disk space. (quota): Verify you have enough disk space quota.
* Verify you have enough disk space. (system): Verify you have enough disk space system.


File: rhostmushhandbook.info,  Node: Verify you have enough disk space quota,  Next: Verify you have enough disk space system,  Up: If the mush says it can’t read or load your database files

9.5.2.1 Verify you have enough disk space. (quota)
..................................................

Some account have a limited quota to run in.  If you reached or exceed
your disk quota, you can have a corrupted database.  So always keep your
eye on the size.  quota -s to see a human readable format to see how
much quota you have left.  You want to make sure current in use is below
the ‘grace’ and soft/hard limits shown.  If not, you’re out of space.

You will need to remove some files before you repair and bring up your
mush again.  Try to keep your quota at least 200 megs free to allow
plenty of wonderful growth space for the mush.


File: rhostmushhandbook.info,  Node: Verify you have enough disk space system,  Prev: Verify you have enough disk space quota,  Up: If the mush says it can’t read or load your database files

9.5.2.2 Verify you have enough disk space. (system)
...................................................

The second way you can run out of disk space is by the filesystem
itself.  do a df -h .  in your ‘game’ directory’.  That is df -h
<period>.  This will return how much disk space is being used and how
much remains.  If it shows 100% used, you’re out of disk space and the
db is corrupt.

At this point, you’re pretty screwed.  You can see if anything exists in
your system to free up some space, but if the filesystem itself is
filled, reach out to the owner of the server and let them know.  It’s a
much bigger deal than just your mush if that’s the case.

Until this issue is resolved, you can not repair and bring up your mush.
No disk to run the game.


File: rhostmushhandbook.info,  Node: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Next: Bringing up your mail database,  Prev: If the mush says it can’t read or load your database files,  Up: Dealing with DB Corruption

9.5.3 If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!
------------------------------------------------------------------------------------------------------------------------------------

Ok, at this point you likely had your mush up when the physical server
went down hard.  Weither through an emergency shutdown or a physical
power outage, your db likely was brought down hard during a write, so it
left it in a corrupt state.  These things happen.  This is why we always
strongly request you make daily flatfile dumps.

So, to recover your database.

* Menu:

* The bad news::
* The good news::
* Now, to restore your database?: Now to restore your database?.


File: rhostmushhandbook.info,  Node: The bad news,  Next: The good news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.1 The bad news
....................

If you have no flatfile backup or never bothered with backups?  I’m
sorry, at this point you’re SOA. There’s no easy way to recover a
corrupted binary database.  If you absolutely need data out of it we may
be able to help you to piece meal things out of it, but otherwise it’s a
lost cause.  You’ll have to start over from scratch.  I’m sorry.


File: rhostmushhandbook.info,  Node: The good news,  Next: Now to restore your database?,  Prev: The bad news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.2 The good news
.....................

If you made backups, or if the server had a normal shutdown, you likely
have a flatfile backup.  You will see a netrhost.db.flat in either the
‘data’ directory or ‘prevflat’ directory.  That is your manual flatfile
backup.

If the server had a normal shutdown, you will see a file called
netrhost.db.TERMFLAT. This is a scram-emergency db flatfile.  It
attempts to write this at the time of server shutdown to hopefully keep
a clean backup in the case of issues since it identifies the server is
coming down hard.  Make sure if you plan to use the TERMFLAT as your
recovery flatfile that the very last line shows something like ** END OF
DUMP **.  That shows you had a successful backup.


File: rhostmushhandbook.info,  Node: Now to restore your database?,  Prev: The good news,  Up: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!

9.5.3.3 Now, to restore your database?
......................................

Please refer to the file ‘README.DBLOADING’.


File: rhostmushhandbook.info,  Node: Bringing up your mail database,  Prev: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!,  Up: Dealing with DB Corruption

9.5.4 Bringing up your mail database
------------------------------------

Your mail db may or may not come up at this point.

* Menu:

* If after restoring main database your mail database works::
* If after restoring main database your mail database does not work::


File: rhostmushhandbook.info,  Node: If after restoring main database your mail database works,  Next: If after restoring main database your mail database does not work,  Up: Bringing up your mail database

9.5.4.1 If after restoring main database your mail database works
.................................................................

If your mail database came up and does not show ‘Mail: mail is currently
off’ then you should be good to go.

Please issue on the MUSH:

     wmail/fix
     wmail/lfix

This will put your mail system in sync with your current database and
fix up any errors that may exist.

wmail/fix fixes the mail.

wmail/lfix loads in the fixes.


File: rhostmushhandbook.info,  Node: If after restoring main database your mail database does not work,  Prev: If after restoring main database your mail database works,  Up: Bringing up your mail database

9.5.4.2 If after restoring main database your mail database does not work
.........................................................................

If your mail database is not up and shows ‘Mail: mail is currently off’
then your mail db is currupt.


File: rhostmushhandbook.info,  Node: Dealing with a corrupt mail database,  Prev: Dealing with DB Corruption,  Up: Troubleshooting

9.6 Dealing with a corrupt mail database
========================================

It says when you try to access mail that mail is disabled and/or off.

Nothing you do can bring it on line.  Well, this is bad, but not
horrible.

The mail db is totally separate from the main game database.  This means
that it in no way damaged or corrupted your main mush database.

The bad news?  Yes.  Your mail database is corrupt.  To bring it back,
is it hopes that you read ahead of time about how to backup your mush,
which would include the mail database.

* Menu:

* Backing up your mail database::
* Automatically recovering your mail database::
* Manually recovering your mail database::


File: rhostmushhandbook.info,  Node: Backing up your mail database,  Next: Automatically recovering your mail database,  Up: Dealing with a corrupt mail database

9.6.1 Backing up your mail database
-----------------------------------

You should be making a flatifile dump of mail db daily by running on the
MUSH:

     wmail/unload

To recover your mail, it assumes you have a mail flatfile in either the
~/Server/game/data directory or the ~/Server/game/prevflat directory.
The latter directory is used in junction to the backup_flat.sh and will
always house the latest flatfile if not one recently dumped in your data
directory.


File: rhostmushhandbook.info,  Node: Automatically recovering your mail database,  Next: Manually recovering your mail database,  Prev: Backing up your mail database,  Up: Dealing with a corrupt mail database

9.6.2 Automatically recovering your mail database
-------------------------------------------------

If you have a flatfile dump of your mail db, run this command on the
MUSH:

     wmail/load

Yup, that’s it.  It’ll take care of everything else.  Isn’t automation
grand?

Doesn’t even require a reboot :)

     Note: You may at this point wish to run the following: wmail/fix –
     this fixes the mail database and sync’s it to the mush db.
     wmail/lfix – this loads in the fixed mail database

If you have a very old mail database, this is likely going to be
required to sync against nuked players and other changes to the game
since the flatfile.

If this is a new db that you have, you can skip the fixing.


File: rhostmushhandbook.info,  Node: Manually recovering your mail database,  Prev: Automatically recovering your mail database,  Up: Dealing with a corrupt mail database

9.6.3 Manually recovering your mail database
--------------------------------------------

To recover your mail manually, you need to delete your mail databases,
reboot, then reload your mail flatfiles.  If you have no mail flatfiles,
well, you’re going to have to start over with the mail database.  Sorry.

First, go into the ‘game’ subdirectory.  Inside that directory is a
‘data’ directory.

You will be deleting all the files with the following names:

     RhostMUSH.mail.*                (like RhostMUSH.mail.dir/RhostMUSH.mail.pag)
     RhostMUSH.folder.*              (like RhostMUSH.folder.dir/RhostMUSH.folder.pag)

     Warning: DO NOT DELETE OTHER NAMED FILES!!!

Once these files are deleted, you may issue a @reboot to restart the
mush.  This will unlock the mail system and load in a fresh db.

Now, if you have flatfiles of the old mail database, you will see in
either the ‘data’ directory or the ‘prevflat’ directory files that are
called:

     RhostMUSH.dump.folder
     RhostMUSH.dump.mail

Make sure these two files are in the ‘data’ subdirectory.  Copy them in
if they exist in your ‘prevflat’ directory.

Once they are in the ‘data’ directory, within the mush type: wmail/load

This loads in the flatfile and recover the mail database.

Now, at this point the mail db may not be 100% in-sync with the game db.

So let’s fix it.

wmail/fix – this will run a fix on the mail db and repair any issues.

wmail/lfix – this will load the fixed flatfile back into the mush.

At this point you should be good to go.


File: rhostmushhandbook.info,  Node: Advanced Features,  Next: Format for image files,  Prev: Troubleshooting,  Up: Top

10 Advanced Features
********************

* Menu:

* Installing using an ansible playbook::
* Adding hardcoded modules::
* Shutting down gracefully: Shutting down gracefully<2>.
* Reality levels::
* Execscript and external programs and scripts::
* Using printf() for advanced text output: Using printf for advanced text output.


File: rhostmushhandbook.info,  Node: Installing using an ansible playbook,  Next: Adding hardcoded modules,  Up: Advanced Features

10.1 Installing using an ansible playbook
=========================================

To begin, you will run the following command in a directory that will
house your game:

     git clone https://github.com/RhostMUSH/trunk Rhost

You may also just run the yml file and ansible (ansible-playbook) to
install your RhostMUSH engine:

     wget https://raw.githubusercontent.com/RhostMUSH/trunk/master/rhostinstall.yml
     ansible-playbook rhostinstall.yml

This downloads the latest stable version of the code, bringing with it
all patches and scripts, documentation and support tools that you will
need.


File: rhostmushhandbook.info,  Node: Adding hardcoded modules,  Next: Shutting down gracefully<2>,  Prev: Installing using an ansible playbook,  Up: Advanced Features

10.2 Adding hardcoded modules
=============================

RhostMUSH does support module writing.

* Menu:

* Modifying sourcode to add a module::
* Adding an @startup to make use of modules::
* Contributing your module back to Rhost::


File: rhostmushhandbook.info,  Node: Modifying sourcode to add a module,  Next: Adding an @startup to make use of modules,  Up: Adding hardcoded modules

10.2.1 Modifying sourcode to add a module
-----------------------------------------

This requires hooking your changes into local.c, then modifying the
Makefile (in the src directory) for any new source files that you wish
to add.

Something to be aware of is that all localized data is ran after the
system cache subroutine.


File: rhostmushhandbook.info,  Node: Adding an @startup to make use of modules,  Next: Contributing your module back to Rhost,  Prev: Modifying sourcode to add a module,  Up: Adding hardcoded modules

10.2.2 Adding an @startup to make use of modules
------------------------------------------------

This means that if your code is depending on @startups, you need to put
a delay in the @startup so that your local code can be loaded in as
modules prior to the @startup execution.

Something that will not work:

     @startup me=@superhappyfuncommand loadmeup=now

A small alteration that will likely make this work fine:

     @startup me=@wait 1=@superhappyfuncommand loadmeup=now

That 1 second delay for the queue will give the game engine time to load
in your module code.


File: rhostmushhandbook.info,  Node: Contributing your module back to Rhost,  Prev: Adding an @startup to make use of modules,  Up: Adding hardcoded modules

10.2.3 Contributing your module back to Rhost
---------------------------------------------

If you wish your modules to be part of the main Rhost distribution you
have two options:

  1. Attempt to hack the bin/asksource.sh and bin/asksource.blank files.

  2. Ask one of the Rhost devs to do it for you :)


File: rhostmushhandbook.info,  Node: Shutting down gracefully<2>,  Next: Reality levels,  Prev: Adding hardcoded modules,  Up: Advanced Features

10.3 Shutting down gracefully
=============================

* Menu:

* Rhostmush has many ways to shut down the game cleanly: Rhostmush has many ways to shut down the game cleanly<2>.
* WARNING; Never kill -9 Rhost: WARNING Never kill -9 Rhost<2>.


File: rhostmushhandbook.info,  Node: Rhostmush has many ways to shut down the game cleanly<2>,  Next: WARNING Never kill -9 Rhost<2>,  Up: Shutting down gracefully<2>

10.3.1 Rhostmush has many ways to shut down the game cleanly
------------------------------------------------------------

  1. Log into the mush and issue @shutdown

  2. Issue a kill -USR2 to the mush which issues an emergency @shutdown

  3. Issue a kill -TERM to the mush which issues an emergency abort and
     clean shutdown.


File: rhostmushhandbook.info,  Node: WARNING Never kill -9 Rhost<2>,  Prev: Rhostmush has many ways to shut down the game cleanly<2>,  Up: Shutting down gracefully<2>

10.3.2 WARNING: Never kill -9 Rhost
-----------------------------------

Under NO CIRCUMSTANCES should you kill -9 your mush unless you don’t
care for the database.  The reason is if the mush happens to be saving,
in any method, to the database, especially a QDBM database, you will
likely have just corrupted your database, so pull out a flatfile to
recover.

Sadly, this also may occur if the server hosting you takes a nose-dive
in the middle of a db write.  Rhost can recover corruption in-game while
up, but if it bombs in the middle of a write, all bets are off.  :)


File: rhostmushhandbook.info,  Node: Reality levels,  Next: Execscript and external programs and scripts,  Prev: Shutting down gracefully<2>,  Up: Advanced Features

10.4 Reality levels
===================

Reality levels are a means to forbid (or allow) interaction between
objects in the same location.

* Menu:

* Visibility::
* Descriptions::
* Configuration parameters::
* Example mush.conf: Example mush conf.
* Commands::
* Functions: Functions<3>.
* Example 1; A simplified Witchcraft setup: Example 1 A simplified Witchcraft setup.
* Example 2; A WoD setup: Example 2 A WoD setup.
* Example 3; Softcode: Example 3 Softcode.


File: rhostmushhandbook.info,  Node: Visibility,  Next: Descriptions,  Up: Reality levels

10.4.1 Visibility
-----------------

Each object (player, room, exit, thing) has two lists of reality levels.
An Rx list, which describe what it can see and a Tx list, which describe
where it can be seen.  Those are bitfields.  In order for X to see Y a
bitwise ‘and’ is performed between X’s RxLevel and Y’s TxLevel.  If the
result is not 0, then X sees Y. If the result is 0, as far as X is
concerned, Y doesn’t exist.  This affects contents lists, exit lists,
look, say, pose, @emit, @verb, connect/disconnect, has arrived/has left
messages, exit and object matching.  ‘here’ and ‘me’ match always.

It doesn’t affect @remit, @pemit, page, WHO or channels.  By default,
all new objects are created with an RxLevel of 1 and TxLevel of 1.
Rooms are an exception, created with an RxLevel of 1 and a TxLevel of
0xFFFFFFFF. Those default levels can be changed with configuration
parameters.  An object is always visible to itself, even if its Rx and
Tx levels don’t match.  (See examples below)


File: rhostmushhandbook.info,  Node: Descriptions,  Next: Configuration parameters,  Prev: Visibility,  Up: Reality levels

10.4.2 Descriptions
-------------------

For every reality level defined, you can define an attribute that serves
as description.  If you look at something and match more than one of its
TxLevels, you’ll see all the corresponding descriptions on the target
object.  If the object doesn’t have any descriptions for the matching
levels, you’ll see the regular @desc.

The @adesc attribute on the target is only triggered if the target can
see the looker in turn.  It’s only triggered once, no matter how many
descs the looker sees.  The @odesc is shown only to those people that
see /both/ the looker and the target.

Through extension, @afail/@ofail and similar pairs (@adrop/@odrop,
@asucc/@osucc etc) work in the same way.  @verb commands are similary
affected.

Softcoded commands are only matched on the objects that can see the
player.  The player doesn’t have to see the object.  This includes
commands in the Master Room.

Exits are treated specially.  In order to be able to use an exit name
(or to use the ‘move <exit>’ command) the exit must be visible to the
enactor.  In order to pass through the exit, the exit must see the
enactor in turn.  There are reasons for this, which will become evident
in the examples below.


File: rhostmushhandbook.info,  Node: Configuration parameters,  Next: Example mush conf,  Prev: Descriptions,  Up: Reality levels

10.4.3 Configuration parameters
-------------------------------

A few configuration parameters have been introduced to deal with the
reality levels:

     reality_level <name> <value> [<desc attribute name>]

This directive can only be used in the config file (not with the @admin
command) and should be repeated for each reality level you want to
define.  It defines a new level named <name> with a bitvalue of <value>
and an optional desc attribute.  There is a limit of 8 characters on
<name>, a 32-bit value on <value> (basically an unsigned long) and 32
characters on the attribute name.  A maximum of 32 reality levels can be
defined:

     def_exit_tx <value>
     def_exit_rx <value>
     def_room_tx <value>
     def_room_rx <value>
     def_player_rx <value>
     def_player_tx <value>
     def_thing_rx <value>
     def_thing_tx <value>

These 8 directives define the default reality levels of newly created
objects.  They can be set in the config file or with the @admin command.
Like above, <value> must be a decimal number:

     wiz_always_real <0|1>

If this parameter is set to 1 then wizards (and immortals on Rhost) will
see everything and will be visible to everyone.  Their effective Rx and
Tx levels will always be 0xFFFFFFFF. Also settable in the config file
and with the @admin command.

Compile with -DREALITY_LEVELS compile time option to enable ‘Real’ needs
to be ‘1’ This is an example file only to be added to the mush.conf file
Format:

     reality_level <8 char name> <hex-byte-mask> <optional-desc: DESC default>


File: rhostmushhandbook.info,  Node: Example mush conf,  Next: Commands,  Prev: Configuration parameters,  Up: Reality levels

10.4.4 Example mush.conf
------------------------

reality_level Real 1 reality_level Obf1 2 reality_level Obf2 4
reality_level Obf3 8 OBFDESC reality_level Obf4 16 OBFDESC reality_level
Obf5 32 OBFDESC reality_level Obf6 64 OBFDESC reality_level Obf7 128
OBFDESC reality_level Obf8 256 OBFDESC reality_level Obf9 512 OBFDESC
reality_level Obf10 1024 OBFDESC reality_level Umbra 2048 UMBRADESC
reality_level Fae 4096 FAEDESC reality_level Shadow 8192 SHADOWDESC
reality_level Spy 16384 reality_level Death 32768 DEATHDESC
reality_level All 4294967295


File: rhostmushhandbook.info,  Node: Commands,  Next: Functions<3>,  Prev: Example mush conf,  Up: Reality levels

10.4.5 Commands
---------------

Two wiz-only commands are used to set the reality levels of an object:

     @rxlevel <object>=<list>
     @txlevel <object>=<list>

<list> is a space-separated list of level names that have to be set on
the object.  If a level name is prefixed with an exclamation mark (!)
that level will be cleared from the object.

     Warning: Changing the Tx levels of an object might make it
     invisible to you.  In this case, you can still manipulate it by
     using his #dbref (or *player for players).


File: rhostmushhandbook.info,  Node: Functions<3>,  Next: Example 1 A simplified Witchcraft setup,  Prev: Commands,  Up: Reality levels

10.4.6 Functions
----------------

There are five functions that deal with reality levels:

     hasrxlevel(<object>,<level>)
     hastxlevel(<object>,<level>)

These two functions check if an object has the specified Rx or Tx level.
You must control <object>.  They return 0 or 1 and #-1 in case the
object does not exist or you don’t have permissions:

     rxlevel(<object>)
     txlevel(<object>)

These two functions return a space-separated list of the object’s Rx or
Tx levels.  Again, you must control the object:

     cansee(<obj1>,<obj2>)

A wiz-only function, returns 1 of <obj1> can see <obj2> from a reality
levels point of view.  It doesn’t check if the objects are in the same
location, the DARK/CLOAKED flags and so on.  Just <obj1>’s Rx level
against <obj2>’s Tx level.

     Warning: If you are using it on MUX2.0 with /both/ reality levels
     and Wod Realms enabled, the function will perform both checks and
     the Wod Realms version checks against the DARK flag.


File: rhostmushhandbook.info,  Node: Example 1 A simplified Witchcraft setup,  Next: Example 2 A WoD setup,  Prev: Functions<3>,  Up: Reality levels

10.4.7 Example 1: A simplified Witchcraft setup
-----------------------------------------------

In Witchcraft, besides the various Gifted classes, characters can be
spirits There are spirit realms to which the mundane can not travel.
Therefore we will use 2 reality levels: Real and Ghost.  Since some
spirits can become solid for a limited period of time, we will also use
an additional desc for the Ghost level, called GHOSTDESC. Therefore in
the config file we will have:

     reality_level Real 1
     reality_level Ghost 2 GHOSTDESC

Ghosts can pass through most mundane locks, so the exists should allows
the ghosts to pass:

     def_exit_rx 3

Note that def_exit_tx isn’t set.  Why?  Because ghosts see the mundane
world anyway, so a spirit character will have:

     @txlevel <player>=!Real Ghost
     @rxlevel <player>=Real Ghost

Let’s assume 3 players: John is a Mundane.  He won’t see spirits.
John’s Rx: Real John’s Tx: Real John’s @desc: This is John.  John’s
&GHOSTDESC: (Not important, since it’s never visible) Johh’s @adesc: %N
has looked at you.  John’s @odesc: has looked at John.

Jack is a Gifted.  He will sense spirits, but is still made from flesh
and blood so visible to mundanes.  Jack’s Rx: Real Ghost Jack’s Tx: Real
Jack’s @desc: This is Jack.  Jack’s &GHOSTDESC: (Not important, since
it’s never visible) Jack’s @adesc: %N has looked at you.  Jack’s @odesc:
has looked at Jack.

Frank is a ghost.  He will see other spirits as well as mundanes, but
won’t be visible to mundanes.  He can also become visible to everybody.
Frank’s Rx: Real Ghost Frank’s Tx: Ghost Frank’s @desc: This is Frank,
looking human.  Frank’s &GHOSTDESC: This is Frank’s ghostly shape.
Frank’s @adesc: %N has looked at you.  Frank’s @odesc: has looked at
Frank.

Following are commands that each of the players enter and what they see.
I’ll assume the +materialize command is defined like: &CMD_MATERIALIZE
<cmdobject>=$+materialize:@txlevel %#=Real; @pemit %#=You are now
material.

     John | Jack | Frank

               >>|<< 

> l | | A room | | This is a bare room.  | | Contents: | | Jack | |
Obvious exits: | | Out <O> | |

     >>|<<> l | >>|<<A room | >>|<<This is a bare room.  |
     >>|<<Contents: | >>|<<John Frank | >>|<<Obvious exits: | >>|<<Out
     <O> | | >>|<<> l | >>|<<A room | >>|<<This is a bare room.  |
     >>|<<Contents: | >>|<<John Jack | >>|<<Obvious exits: | >>|<<Out
     <O>

>l Jack | | Jack >>|<<John has looked at you.|John has looked at Jack.
This is Jack.  | | >l Frank | | I don’t see that here.  | |

     >>|>l Frank | |Frank |Jack has looked at you.  |This is Frank’s
     ghostly|<< >>|<<shape.  | | >>|<<>l John >>|<<Frank has looked at
     >>|<<John >>|<<John.  >>|<<This is John.  | >>|<<>+materialize |
     >>|<<You are now material.

>l Frank | | Frank >>|<<John has looked at >>|<<Frank has looked at you.
This is Frank, looking >>|<<Frank.  | human.  | |

     >>|<<>l Frank |

Jack has looked at >>|<<Frank >>|<<John has looked at you.  Frank.
>>|<<This is Frank, looking |

     >>|human.  | |This is Frank’s ghostly|<< >>|<<shape.  |


File: rhostmushhandbook.info,  Node: Example 2 A WoD setup,  Next: Example 3 Softcode,  Prev: Example 1 A simplified Witchcraft setup,  Up: Reality levels

10.4.8 Example 2: A WoD setup
-----------------------------

The reality levels will be defined like this: reality_level Real 1
reality_level Obf1 2 reality_level Obf2 4 reality_level Obf3 8 OBFDESC
reality_level Obf4 16 OBFDESC reality_level Obf5 32 OBFDESC
reality_level Umbra 64 UMBRADESC reality_level Fae 128 FAEDESC
reality_level Shadow 256 SHADOWDESC reality_level All 511

5 levels of Obfuscation, Umbra, Dreaming, Wraiths.  ‘All’ is a handy
replacement for all levels, useful for wizards and wizobjects that
should be visible on all levels.  Also useful when you want to set an
object’s levels to something without knowing what he had before.

@rxlevel #276=!All Real

!All will clear all levels, then the object will gain the Real level.
There is more than one Obfuscation level because of the relation between
Auspex and Obfuscation.

A vampire with Obfuscate 2, should not be visible by one with Auspex 1.
However one with Auspex 3 should see another vampire with Obfuscate 1, 2
/or/ 3.

Obfuscated players can move if they have Obf > 1.  Umbral and Shadow
players should also be able to see most of the exits.  So the exits at
creation should have default levels of Real + Obf2 + Obf3 + Obf4 + Obf5
+ Umbra + Shadow = 1 + 4 + 8 + 16 + 32 + 64 + 256 = 381:

     def_exit_rx 381
     def_exit_tx 381

Obf1 is not included since an Obfuscated vampire should not be able to
move if it only has Obf1.  Therefore they won’t see the exits.  If you
want them to be able to see the exits, but not to use them, change the
default Tx of the exits:

     def_exit_rx 381
     def_exit_tx 383

Joe the Mortal will have an RxLevel: Real and a TxLevel: Real Jack the
Malk, who likes to walk around Obfuscated and has Obfuscate 2 will have
an RxLevel: Real (he sees what the mortals see) but a TxLevel: Obf2
Jimmy the Nossie, who is using the Mask and has Obfuscate 4, but doesn’t
try to make himself invisible will have an RxLevel: Real (as Jack) and a
TxLevel: Real Obf4.  He will also set his @desc to what the mortals see
and &OBFDESC to his real slimy desc.  Simply put, he will be visible to
mortals, but not with his real desc.

Aldrin the Gangrel, has Auspex 4 and activates it.  Therefore, his
TxLevel will still be Real, but RxLevel: Real Obf1 Obf2 Obf3 Obf4 (all
of them).  So he can see Joe, Jack and Jimmy’s both descs.  Joe, on the
other hand, won’t see Jack at all.  He will still see Jimmy, but only
Jimmy’s @desc, not the OBFDESC

Frida the Fae… will have RxLevel: Real Fae and TxLevel: Real Fae.  @desc
set to the mundane desc, &FAEDESC set to the Chimerical desc.  Emily the
Enchanted will have an RxLevel: Real Fae, but the TxLevel: Real.  No
&FAEDESC on her, although she’ll be able to see it the one on Frida.
Gil the Garou, while travelling through the Umbra, will have RxLevel:
Umbra and TxLevel: Umbra.  &UMBRADESC is his friend.  He won’t see
mortals or other characters who are not in the Umbra.

Barbie the Bastet, who’s only peeking in the Umbra, without going there,
will have RxLevel: Umbra, TxLevel: Real.  Dangerous position since she
can’t see the things that see her.

Deanna the Drake, who activates her spirit vision, will have RxLevel:
Real Umbra and TxLevel: Real.  She will see characters in Umbra and real
world at the same time and perceive the desc appropiate to the realm the
ohter character is in.

Wanda the Wraith: RxLevel: Real Shadow, TxLevel: Shadow.  Her @desc
would be empty, but the &SHADOWDESC should be set.  Marie the Mortal+
Medium: RxLevel: Real Shadow, TxLevel: Real

Global code objects that all characters should be able to use: RxLevel:
All, TxLevel: All


File: rhostmushhandbook.info,  Node: Example 3 Softcode,  Prev: Example 2 A WoD setup,  Up: Reality levels

10.4.9 Example 3: Softcode
--------------------------

Considering the config directives from example 2 and assuming a function
getstat(<dbref>,<stat>) that will return the value of a player’s stat
from the sheet here are softcode examples that implement some of the WoD
powers.  In a real game you would have to use some more checks, of
course.

@create Reality Levels Commands (RLS) &CMD_OBFON rls=$+obf/on:@switch
[setr(0, getstat(%#,Obfuscate))]=0, @pemit %#=You don’t have Obfuscate!,
{@txlevel %#=!All Obf%q0; @pemit %#=You are now invisible.} &CMD_OBFOFF
rls=$+obf/off:@txlevel %#=Real; @pemit %#=You are now visible.  @@ Note:
+obf/on clears all TxLevels before setting the appropiate Obf @@ This is
necesary, because a character might advance from Obf2 to @@ Obf3 and he
should be visible /only/ on the Obf3 level.  @@ +obf/off simply sets the
Real Tx level, without clearing the Obf.  The @@ reason is the Mask.
Players with Obf3 or higher who use the Mask should @@ +obf/on, then
+obf/off after approval and everything is set.  &CMD_AUSPEXON
rls=$+auspex/on:@switch [setr(0, getstat(%#, Auspex))]=0, @pemit %#=You
don’t have Auspex!, {@rxlevel %#=[iter(lnum(1, %q0), Obf##)]; @pemit
%#=Auspex enabled.} &CMD_AUSPEXOFF rls=$+auspex/off:@switch
[hasrxlevel(%#, Obf1)]=0, @pemit %#= You don’t have Auspex enabled!,
{@rxlevel %#=[iter(lnum(1, 5), !Obf##)]; @pemit %#=Auspex disabled.}
&CMD_UMBRAENTER rls=$+umbra/enter:@rxlevel %#=!Real Umbra; @txlevel %#=
!Real Umbra; @pemit %#=You are now in the Umbra.  &CMD_UMBRALEAVE
rls=$+umbra/leave:@rxlevel %#=Real !Umbra; @txlevel %#= Real !Umbra;
@pemit %#=You left the Umbra.  &CMD_PEEKON rls=$+peek/on:@switch
hastxlevel(%#,Umbra)=1, {@rxlevel %#=Real !Umbra; @pemit %#=You are now
peeking in the real world}, {@rxlevel %#=!Real Umbra; @pemit %#=You are
now peeking into the Umbra} &CMD_PEEKOFF rls=$+peek/off:@rxlevel
%#=!Real !Umbra [setinter(Real Umbra, txlevel(%#))]; @pemit %#=You are
no longer peeking.


File: rhostmushhandbook.info,  Node: Execscript and external programs and scripts,  Next: Using printf for advanced text output,  Prev: Reality levels,  Up: Advanced Features

10.5 Execscript and external programs and scripts
=================================================

* Menu:

* Mush variables::
* set object::
* Example bash script::
* Notes and warnings::
* Scripts to be used with execscript::


File: rhostmushhandbook.info,  Node: Mush variables,  Next: set object,  Up: Execscript and external programs and scripts

10.5.1 Mush variables
---------------------

* Menu:

* Built in variables::
* Dynamic variables::
* Register variables::


File: rhostmushhandbook.info,  Node: Built in variables,  Next: Dynamic variables,  Up: Mush variables

10.5.1.1 Built in variables
...........................

Variable Description MUSH_PLAYER player dbref# MUSH_CAUSE cause dbref#
MUSH_CALLER caller dbref# MUSH_OWNER owner of player dbref# MUSH_FLAGS
space delimited list of flags on player MUSH_TOGGLES space delimited
list of toggles on player MUSH_OFLAGS space delimited list of flags of
player owner MUSH_OTOGGLES space delimited list of toggles of player
owner MUSHL_VARS space delimited list of MUSH attributes from player

     This is passed from the mush’s EXECSCRIPT_VARS attr


File: rhostmushhandbook.info,  Node: Dynamic variables,  Next: Register variables,  Prev: Built in variables,  Up: Mush variables

10.5.1.2 Dynamic variables
..........................

MUSHV_<arg> <arg> variable passed from MUSHL_VARS

     These are the attributes from EXECSCRIPT_VARS


File: rhostmushhandbook.info,  Node: Register variables,  Prev: Dynamic variables,  Up: Mush variables

10.5.1.3 Register variables
...........................

MUSHQ_<arg> setq registers 0-9 and a-z MUSHQN_<arg> labels that are
assigned the setq vars MUSHN_<arg> The labels that were defined by any
register

     Note: they must be ASCII-7 clean and contain no white spaces


File: rhostmushhandbook.info,  Node: set object,  Next: Example bash script,  Prev: Mush variables,  Up: Execscript and external programs and scripts

10.5.2 set object
-----------------

The script executed with execscript() will read in a file with the same
name as the script ending in ‘.set’.  This is a loader object that will
set attributes and registers back into the mush that you wish to pass
from the script.  The fields are SPACE SEPARATED. The values are NOT
evaluated.

* Menu:

* The format of the fields are::


File: rhostmushhandbook.info,  Node: The format of the fields are,  Up: set object

10.5.2.1 The format of the fields are
.....................................

* Menu:

* Dynamic variables: Dynamic variables<2>.
* Register variables: Register variables<2>.


File: rhostmushhandbook.info,  Node: Dynamic variables<2>,  Next: Register variables<2>,  Up: The format of the fields are

10.5.2.2 Dynamic variables
..........................

VARNAME OWNER CONTENTS (or leave null to clear)

* Menu:

* Examples::


File: rhostmushhandbook.info,  Node: Examples,  Up: Dynamic variables<2>

10.5.2.3 Examples
.................

SEX #123 Male DESC #123 %r%tThis is a willow tree of unique
description%r%rIt sways in the wind.  RED #123 This is the color
%ch%crred%cn.  WIPETHISATTR #123 MULTILINE #123 This is a line that
continues on because of the line feed (a control-M) on each line on the
lines above


File: rhostmushhandbook.info,  Node: Register variables<2>,  Prev: Dynamic variables<2>,  Up: The format of the fields are

10.5.2.4 Register variables
...........................

REGISTER Q CONTENTS (or leave null to clear)

* Menu:

* Examples (The last example clears register 0): Examples The last example clears register 0.


File: rhostmushhandbook.info,  Node: Examples The last example clears register 0,  Up: Register variables<2>

10.5.2.5 Examples (The last example clears register 0)
......................................................

W Q This is stored in register W 1 Q This is stored in register 1 0 Q
foo QN this sets register with label ‘foo’


File: rhostmushhandbook.info,  Node: Example bash script,  Next: Notes and warnings,  Prev: set object,  Up: Execscript and external programs and scripts

10.5.3 Example bash script
--------------------------

#!/bin/bash echo “This was called by player ${MUSH_PLAYER} that is owned
by ${MUSH_OWNER}” echo “Displaying Registers:” regs=”0 1 2 3 4 5 6 7 8 9
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z” for list in ${regs}
do

     eval echo “Register ${list}: ${MUSHQ_${list}}”

done echo “Displaying variables:” for vars in ${MUSHL_VARS} do

     eval echo “Variable ${vars}: ${MUSHV_${vars}}”

done


File: rhostmushhandbook.info,  Node: Notes and warnings,  Next: Scripts to be used with execscript,  Prev: Example bash script,  Up: Execscript and external programs and scripts

10.5.4 Notes and warnings
-------------------------

While MUSHL_VARS are sanitized on what is allowable as a mush variable,
this is not necessarilly sanitized on what the calling script can fetch
as a valid variable.  Of note, you can not set environment variables
that contain an equals sign.  Be aware of this limitation.

Remember, MUSHL_VARS is the environment variable seen by the script.
This is EXECSCRIPT_VARS on the mush itself, that is the attribute set on
the target that contains the execscript() that is being executed.


File: rhostmushhandbook.info,  Node: Scripts to be used with execscript,  Prev: Notes and warnings,  Up: Execscript and external programs and scripts

10.5.5 Scripts to be used with execscript
-----------------------------------------

account/ – Directory for execscripts relating to account creation
compile39.sh – Script for patching and compiling RhostMUSH 3.9
compile.sh – Script for patching and compiling RhostMUSH config.sh –
Script for setting compile time options for RhostMUSH debug.sh – Script
for debugging RhostMUSH dict.sh – Script for querying a dictionary
diff.sh – Script for querying differences between two arguments
fortune.sh – Script for querying fortune program fullweather.sh – Script
for querying a graphical weather forecast (alternative) git.sh – Script
for querying git version of RhostMUSH hello.sh – Script for teaching
execscript for ‘Hello World’ iostat.sh – Script for querying server
stats of RhostMUSH jsonvalidate.sh – Python Script for validating JSON
logsearch.sh – Script for searching throgh logfiles for RhostMUSH
math_example.sh – Examples of math operations to be used with math.sh
math.sh – Script for mathematical operations memory.sh – Script for
querying memory usage of RhostMUSH mkindx.sh – Script for indexing
RhostMSH helpfiles pastebinread.sh – Script for reading data from a
pastebin URL pastebinwrite.sh – Script for writing data to a pastebin
qspell.sh – Script for checking spelling (alternative) quota.sh – Script
for checking disk quote and usage random.sh – Script for getting a
random number roomlog.sh – Script for viewing logs in roomlog directory
spell.sh – Script for checking spelling stats.sh – Script for querying
server and process stats for RhostMUSH thes.sh – Script for adding a
word to the dictionary for spell scripts tinyurl.sh – Script for
shortening a URL weather.sh – Script for querying a graphical weather
forecast web.sh – Script for querying an arbitary website


File: rhostmushhandbook.info,  Node: Using printf for advanced text output,  Prev: Execscript and external programs and scripts,  Up: Advanced Features

10.6 Using printf() for advanced text output
============================================

The function printf() in Rhost can be used to greatly reduce coding in
efforts for outputs, screens and data display.  It can automatically
center, justify and wrap the text parameters given to it.

* Menu:

* Example one::
* Example two::
* Example three::


File: rhostmushhandbook.info,  Node: Example one,  Next: Example two,  Up: Using printf for advanced text output

10.6.1 Example one
------------------

     @emit printf(|$-12s|$12s|$^12s$&14s$_12s|,a b c, d e f, g h i, wrap(lnum(20),12, l, |, |), j k l)

     |a b c       |       d e f|   g h i    |0 1 2 3 4 5 |j     k    l|
                                            |6 7 8 9 10  |
                                            |11 12 13 14 |
                                            |15 16 17 18 |
                                            |19          |


File: rhostmushhandbook.info,  Node: Example two,  Next: Example three,  Prev: Example one,  Up: Using printf for advanced text output

10.6.2 Example two
------------------

       @emit printf($14&s $^4&s $-3&s $15&s,
       iter(Bruised|Hurt|Injured|Wounded|Mauled|Crippled|Incapacitated,##,|,%R),
       iter(|-1|-1|-2|-2|-5|,##,|,%r),iter(lnum(1,7),%[[if(gte(get(%#/damage),##),X,%b)]%],,%r),
       * Aggravated%RX Lethal%R/ Bashing)

           Bruised      [ ]    * Aggravated
              Hurt  -1  [ ]        X Lethal
           Injured  -1  [ ]       / Bashing
           Wounded  -2  [ ]
            Mauled  -2  [ ]
          Crippled  -5  [ ]
     Incapacitated      [ ]


File: rhostmushhandbook.info,  Node: Example three,  Prev: Example two,  Up: Using printf for advanced text output

10.6.3 Example three
--------------------

     @emit [printf($-10|"'s$-60|"s,a b c d e f g h i j k l m n o p q r s t u v w x y z,
     this is a test a groovy test blah blah blah [repeat(blah%b,100)])]END!

     a b c d e this is a test a groovy test blah blah blah blah blah blah
     f g h i j blah blah blah blah blah blah blah blah blah blah blah blah
     k l m n o blah blah blah blah blah blah blah blah blah blah blah blah
     p q r s t blah blah blah blah blah blah blah blah blah blah blah blah
     u v w x y blah blah blah blah blah blah blah blah blah blah blah blah
     z         blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
     blah blah blah blah blah blah blah                                    END!


File: rhostmushhandbook.info,  Node: Format for image files,  Next: Requirements if Using Windows,  Prev: Advanced Features,  Up: Top

11 Format for image files
*************************

The image format goes like this:

Data Type Example Description ——— ——- ———————————————————- INT 3 TYPE:
room 0, thing 1, exit 2, player 3, zone 4, garbage 5 STRING Wizard NAME:
of the target.  Verbatum, no quotes surround it >>*<<INT 123 LOCATION:
dbref# of the target.  No prepending ‘#’ used.  >>*<<INT 234 CONTENTS:
The first content in a linked list content table (-1 if none) >>*<<INT
345 EXITS: The first exit in a linked list exit table (-1 if none)
>>*<<INT 0 LINK: This is the ‘home’ of the object or what it’s linked to
(-1 for none) >>*<<INT 123 NEXT: The next thing after this item for a
content holder STRING #123 LOCK: The boolean string lock if it exists.
(empty if no lock) >>*<<INT 1 OWNER: The dbref# owner of the target.
For players same dbref as player.  INT 789 PARENT: The parent of the
target.  (-1 if none) >>*<<INT 99999 MONEY: The int value of the money
the players has.  INT 194592 FLAGS1: The first word of flags (@set
flags) on a player (see FLAGS) INT 194222 FLAGS2: The second word of
flags (@set flags) on a player (see FLAGS) INT 199999 FLAGS3: The third
word of flags (@set flags []) on a player (see FLAGS) INT 1582958
FLAGS4: The forth word of flags (@set flags []) on a player (see FLAGS)
INT 159955 TOGGLES1: The first word of toggles (@toggle) on a player
(see TOGGLES) INT 159958 TOGGLES2: The second word of toggles (@toggle)
on a player (see TOGGLES) INT 159958 POWER1: The first word of powers
(@power) on a player (see POWERS) INT 159958 POWER2: The second word of
powers (@power) on a player (see POWERS) INT 159958 POWER3: The third
word of powers (@power) on a player (see POWERS) INT 159958 DEPOWER1:
The first word of depowers (@depower) on a player (see DEPOWERS) INT
159958 DEPOWER2: The second word of depowers (@depower) on a player (see
DEPOWERS) INT 159958 DEPOWER3: The third word of depowers (@depower) on
a player (see DEPOWERS) INT -1 ZONE(S): The list of zones starting here
and ending with ‘-1’.  (see ZONES) >STRING >VA ATTRIBUTENAME: Attribute
name to store, starts with > identifier STRING Wheee ATTRIBUTECONTENTS:
Contents of attribute.  Multi-lines seperate with ^M (control-M) >STRING
>Desc ATTRIBUTENAME: Another attribute to chain in STRING Ugly
ATTRIBUTECONTENTS: Contents of the next attribute >STRING >>*<<Password
PASSWORDATTRIB: Special password attribute.  Attribute name is
‘>>*<<Password’ STRING $6$xy$xy PASSWORDCONTENTS: The SHA512 password
(if glibc 2.7+ supported on system) (see PASS) < < This is the marker to
specify the end of the attribute contents.  This is always the last line

     Note: Any Data type starting with ‘*’ is ignored when
     @snapshot/loading.

The structure above with the examples would look like this in the file:

3 Wizard 123 234 345 0 123 #123 1 789 99999 194592 194222 199999 1582958
159955 159958 159958 159958 159958 159958 159958 159958 -1 >VA Wheee
>Desc Ugly >*Password $6$xy$xy <

* Menu:

* HELP key indexes for the values;: HELP key indexes for the values.


File: rhostmushhandbook.info,  Node: HELP key indexes for the values,  Up: Format for image files

11.1 HELP key indexes for the values:
=====================================

FLAGS: The following flags are to be used. They are BITWISE masks that you

     need to add together for the values tghat you apply

/* First word of flags `/ #define SEETHRU 0x00000008 /' Can see through
to the other side `/ #define WIZARD 0x00000010 /' gets automatic control
`/ #define LINK_OK 0x00000020 /' anybody can link to this room `/
#define DARK 0x00000040 /' Don’t show contents or presence `/ #define
JUMP_OK 0x00000080 /' Others may @tel here `/ #define STICKY 0x00000100
/' Object goes home when dropped `/ #define DESTROY_OK 0x00000200 /'
Others may @destroy `/ #define HAVEN 0x00000400 /' No killing here, or
no pages `/ #define QUIET 0x00000800 /' Prevent ‘feelgood’ messages `/
#define HALT 0x00001000 /' object cannot perform actions `/ #define
TRACE 0x00002000 /' Generate evaluation trace output `/ #define GOING
0x00004000 /' object is available for recycling `/ #define MONITOR
0x00008000 /' Process ^x:action listens on obj?  `/ #define MYOPIC
0x00010000 /' See things as nonowner/nonwizard `/ #define PUPPET
0x00020000 /' Relays ALL messages to owner `/ #define CHOWN_OK
0x00040000 /' Object may be @chowned freely `/ #define ENTER_OK
0x00080000 /' Object may be ENTERed `/ #define VISUAL 0x00100000 /'
Everyone can see properties `/ #define IMMORTAL 0x00200000 /' Object
can’t be killed `/ #define HAS_STARTUP 0x00400000 /' Load some attrs at
startup `/ #define OPAQUE 0x00800000 /' Can’t see inside `/ #define
VERBOSE 0x01000000 /' Tells owner everything it does.  `/ #define
INHERIT 0x02000000 /' Gets owner’s privs.  (i.e.  Wiz) `/ #define
NOSPOOF 0x04000000 /' Report originator of all actions.  `/ #define
ROBOT 0x08000000 /' Player is a ROBOT `/ #define SAFE 0x10000000 /' Need
/override to @destroy `/ #define CONTROL_OK 0x20000000 /' ControlLk
specifies who ctrls me `/ #define HEARTHRU 0x40000000 /' Can hear out of
this obj or exit `/ #define TERSE 0x80000000 /' Only show room name on
look >>*<</

/* Second word of flags `/ #define KEY 0x00000001 /' No puppets `/
#define ABODE 0x00000002 /' May @set home here `/ #define FLOATING
0x00000004 /' Inhibit Floating room..  msgs `/ #define UNFINDABLE
0x00000008 /' Cant loc() from afar `/ #define PARENT_OK 0x00000010 /'
Others may @parent to me `/ #define LIGHT 0x00000020 /' Visible in dark
places `/ #define HAS_LISTEN 0x00000040 /' Internal: LISTEN attr set `/
#define HAS_FWDLIST 0x00000080 /' Internal: FORWARDLIST attr set `/
#define ADMIN 0x00000100 /' Player has admin privs `/ #define GUILDOBJ
0x00000200 #define GUILDMASTER 0x00000400 /' Player has gm privs `/
#define NO_WALLS 0x00000800 /' So to stop normal walls `/ #define
REQUIRE_TREES 0x00001000 /' Trees are required on this target for attrib
sets `/ /' —-FREE—- 0x00002000 `/ /' #define OLD_NOROBOT 0x00002000 `/
#define SCLOAK 0x00004000 #define CLOAK 0x00008000 #define FUBAR
0x00010000 #define INDESTRUCTABLE 0x00020000 /' object can’t be nuked `/
#define NO_YELL 0x00040000 /' player can’t @wall `/ #define NO_TEL
0x00080000 /' player can’t @tel or be @tel’d `/ #define FREE 0x00100000
/' object/player has unlim money `/ #define GUEST_FLAG 0x00200000
#define RECOVER 0x00400000 #define BYEROOM 0x00800000 #define WANDERER
0x01000000 #define ANSI 0x02000000 #define ANSICOLOR 0x04000000 #define
NOFLASH 0x08000000 #define SUSPECT 0x10000000 /' Report some activities
to wizards `/ #define BUILDER 0x20000000 /' Player has architect privs
`/ #define CONNECTED 0x40000000 /' Player is connected `/ #define SLAVE
0x80000000 /' Disallow most commands >>*<</

/* Third word of flags - Thorin 3/95 `/ #define NOCONNECT 0x00000001
#define DPSHIFT 0x00000002 #define NOPOSSESS 0x00000004 #define COMBAT
0x00000008 #define IC 0x00000010 #define ZONEMASTER 0x00000020 #define
ALTQUOTA 0x00000040 #define NOEXAMINE 0x00000080 #define NOMODIFY
0x00000100 #define CMDCHECK 0x00000200 #define DOORRED 0x00000400
#define PRIVATE 0x00000800 /' For exits only `/ #define NOMOVE
0x00001000 #define STOP 0x00002000 #define NOSTOP 0x00004000 #define
NOCOMMAND 0x00008000 #define AUDIT 0x00010000 #define SEE_OEMIT
0x00020000 #define NO_GOBJ 0x00040000 #define NO_PESTER 0x00080000
#define LRFLAG 0x00100000 #define TELOK 0x00200000 #define NO_OVERRIDE
0x00400000 #define NO_USELOCK 0x00800000 #define DR_PURGE 0x01000000 /'
For rooms only…internal `/ #define NO_ANSINAME 0x02000000 /' Remove the
ability to set @ansiname `/ #define SPOOF 0x04000000 #define SIDEFX
0x08000000 /' Allow enactor to use side-effects `/ #define ZONECONTENTS
0x10000000 /' Search contents of zonemaster for $commands `/ #define
NOWHO 0x20000000 /' Player in WHO doesn’t show up - use with @hide `/
#define ANONYMOUS 0x40000000 /' Player set shows up as ‘Someone’ when
talking `/ #define BACKSTAGE 0x80000000 /' Immortal toggle for items on
control >>*<</

/* Forth word of flags - Thorin 3/95 `/ #define NOBACKSTAGE 0x00000001
/' Immortal toggle to control no-backstage `/ #define LOGIN 0x00000002
/' Enable player to login past @disable logins `/ #define INPROGRAM
0x00000004 /' Player is inside a program `/ #define COMMANDS 0x00000008
/' Optional define for $commands `/ #define MARKER0 0x00000010 /' TM 3.0
marker flags `/ #define MARKER1 0x00000020 #define MARKER2 0x00000040
#define MARKER3 0x00000080 #define MARKER4 0x00000100 #define MARKER5
0x00000200 #define MARKER6 0x00000400 #define MARKER7 0x00000800 #define
MARKER8 0x00001000 #define MARKER9 0x00002000 #define BOUNCE 0x00004000
/' That lovly TM 3.0 Bouncey thingy `/ #define SHOWFAILCMD 0x00008000 /'
Show failed $commands defauilt error `/ #define NOUNDERLINE 0x00010000
/' Strip UNDERLINE character from ANSI `/ #define NONAME 0x00020000 /'
Target does not display name with look `/ #define ZONEPARENT 0x00040000
/' Target zone allows inheritance of attribs `/ #define SPAMMONITOR
0x00080000 /' Monitor the target for spam `/ #define BLIND 0x00100000 /'
Exits and locations snuff arrived/left `/ #define NOCODE 0x00200000 /'
Players may not code `/ #define HAS_PROTECT 0x00400000 /' Player target
has protect name data `/ #define XTERMCOLOR 0x00800000 /' Extended AnSI
Xterm colors `/ #define HAS_ATTRPIPE 0x01000000 /' Attribute piping via
@pipe `/ /' 0x02000000 free `/ /' 0x04000000 free `/ /' 0x08000000 free
`/ /' 0x10000000 free `/ /' 0x20000000 free `/ /' 0x40000000 free `/ /'
0x80000000 free >>*<</

__________________________________________________________________

TOGGLES: Toggles are BITWISE masks taht need to be applied for each word like

     the flags above.  They are added together for each word type

/* First word of toggles - Thorin 3/95 `/ #define TOG_MONITOR 0x00000001
/' Active monitor on player `/ #define TOG_MONITOR_USERID 0x00000002 /'
show userid `/ #define TOG_MONITOR_SITE 0x00000004 /' show site `/
#define TOG_MONITOR_STATS 0x00000008 /' show stats `/ #define
TOG_MONITOR_FAIL 0x00000010 /' show fails `/ #define TOG_MONITOR_CONN
0x00000020 #define TOG_VANILLA_ERRORS 0x00000040 /' show normal error
msg `/ #define TOG_NO_ANSI_EX 0x00000080 /' supress ansi stuff in ex `/
#define TOG_CPUTIME 0x00000100 /' show cpu time for cmds `/ #define
TOG_MONITOR_DISREASON 0x00000200 #define TOG_MONITOR_VLIMIT 0x00000400
#define TOG_NOTIFY_LINK 0x00000800 #define TOG_MONITOR_AREG 0x00001000
#define TOG_MONITOR_TIME 0x00002000 #define TOG_CLUSTER 0x00004000 /'
Object is part of a cluster `/ #define TOG_SNUFFDARK 0x00008000 /' Snuff
Dark Exit Viewing `/ #define TOG_NOANSI_PLAYER 0x00010000 /' Do not show
ansi player names `/ #define TOG_NOANSI_THING 0x00020000 /' … things `/
#define TOG_NOANSI_ROOM 0x00040000 /' … rooms `/ #define TOG_NOANSI_EXIT
0x00080000 /' … exits `/ #define TOG_NO_TIMESTAMP 0x00100000 /' Do not
modify timestamps on target `/ #define TOG_NO_FORMAT 0x00200000 /'
Override @conformat/@exitformat `/ #define TOG_ZONE_AUTOADD 0x00400000
/' Automatically add FIRST zone in list `/ #define TOG_ZONE_AUTOADDALL
0x00800000 /' Automatically add ALL zones in list `/ #define
TOG_WIELDABLE 0x01000000 /' Marker to specify if object is wieldable `/
#define TOG_WEARABLE 0x02000000 /' Marker to specify if object is
wearable `/ #define TOG_SEE_SUSPECT 0x04000000 /' Specify who sees
suspect in WHO/MONITOR `/ #define TOG_MONITOR_CPU 0x08000000 /' Specify
who sees CPU overflow allerts `/ #define TOG_BRANDY_MAIL 0x10000000 /'
Define brandy like mail interface `/ #define TOG_FORCEHALTED 0x20000000
/' The item toggled can @force halted things `/ #define TOG_PROG
0x40000000 /' Can use @program on other people/things `/ #define
TOG_NOSHELLPROG 0x80000000 /' Target can not issue commands inside a
prog >>*<</

/* Second word of toggles – Ash `/ #define TOG_EXTANSI 0x00000001 /'
Specify if target can used extended ansi naming `/ #define TOG_IMMPROG
0x00000002 /' Only an immortal can @quitprogram them `/ #define
TOG_MONITOR_BFAIL 0x00000004 /' Monitor if a failed connect on bad
character `/ #define TOG_PROG_ON_CONNECT 0x00000008 /' Reverse logic of
program on connect `/ #define TOG_MAIL_STRIPRETURN 0x00000010 /' Strip
carrage return in mail combining `/ #define TOG_PENN_MAIL 0x00000020 /'
Use PENN style syntax `/ #define TOG_SILENTEFFECTS 0x00000040 /' Silents
did_it() functionality on target `/ #define TOG_IGNOREZONE 0x00000080 /'
Target is set to @icmd zones `/ #define TOG_VPAGE 0x00000100 /' Target
sees alias in pages `/ #define TOG_PAGELOCK 0x00000200 /' Target issues
pagelocks as normal `/ #define TOG_MAIL_NOPARSE 0x00000400 /' Don’t
parse %t/%b/%r in mail `/ #define TOG_MAIL_LOCKDOWN 0x00000800 /'
Mortal-accessed mail/number and mail/check `/ #define TOG_MUXPAGE
0x00001000 /' Have ‘page’ work like MUX `/ #define TOG_NOZONEPARENT
0x00002000 /' Zone Child does NOT inherit parent attribs `/ #define
TOG_ATRUSE 0x00004000 /' Enactor can use Attribute based USELOCKS `/
#define TOG_VARIABLE 0x00008000 /' Set exit to be variable `/ #define
TOG_KEEPALIVE 0x00010000 /' Send ‘keepalives’ to the target player `/
#define TOG_CHKREALITY 0x00020000 /' Target checks @lock/user for
Reality passes `/ #define TOG_NOISY 0x00040000 /' Always do noisy sets
`/ #define TOG_ZONECMDCHK 0x00080000 /' Zone commands checked on target
like @parent `/ #define TOG_HIDEIDLE 0x00100000 /' Allow
wizards/immortals to hide their idle time `/ #define TOG_MORTALREALITY
0x00200000 /' Override the wiz_always_real setting `/ #define
TOG_ACCENTS 0x00400000 /' Accents being displayed `/ #define
TOG_PREMAILVALIDATE 0x00800000 /' Pre-Validate the mail send list before
sending mail `/ #define TOG_SAFELOG 0x01000000 /' Allow ‘clean logging’
by the player `/ #define TOG_UTF8 0x02000000 /' UTF8 being displayed `/
/' 0x04000000 free `/ #define TOG_NODEFAULT 0x08000000 /' Allow target
to inherit default attribs `/ #define TOG_EXFULLWIZATTR 0x10000000 /'
Examine Wiz attribs `/ #ifdef ENH_LOGROOM #define TOG_LOGROOMENH
0x20000000 /' Enhanced Room Logging `/ #endif #define TOG_LOGROOM
0x40000000 /' Log Room’s location/contents `/ #define TOG_NOGLOBPARENT
0x80000000 /' Target does not inherit global attributes >>*<</

__________________________________________________________________

POWERS: Powers are handled a bit differently. They’re used as BITWISE shift

     markers that you would have to compute the shift then add it after
     the fact.

/* First word of power positions. Each position is 2 bits so the

     number here is how far over to shift the 2 bit pattern >>*<</

#define POWER_CHANGE_QUOTAS 0 #define POWER_CHOWN_ME 2 #define
POWER_CHOWN_ANYWHERE 4 #define POWER_CHOWN_OTHER 6 #define POWER_WIZ_WHO
8 #define POWER_EX_ALL 10 #define POWER_NOFORCE 12 #define
POWER_SEE_QUEUE_ALL 14 #define POWER_FREE_QUOTA 16 #define
POWER_GRAB_PLAYER 18 #define POWER_JOIN_PLAYER 20 #define
POWER_LONG_FINGERS 22 #define POWER_NO_BOOT 24 #define POWER_BOOT 26
#define POWER_STEAL 28 #define POWER_SEE_QUEUE 30

/* Second word of power positions.  >>*<</ #define POWER_SHUTDOWN 0
#define POWER_TEL_ANYWHERE 2 #define POWER_TEL_ANYTHING 4 #define
POWER_PCREATE 6 #define POWER_STAT_ANY 8 #define POWER_FREE_WALL 10
#define POWER_EXECSCRIPT 12 #define POWER_FREE_PAGE 14 #define
POWER_HALT_QUEUE 16 #define POWER_HALT_QUEUE_ALL 18 #define
POWER_FORMATTING 20 #define POWER_NOKILL 22 #define POWER_SEARCH_ANY 24
#define POWER_SECURITY 26 #define POWER_WHO_UNFIND 28

/* Third word of power positions.  `/ #define POWER_OPURGE 0 #define
POWER_HIDEBIT 2 #define POWER_NOWHO 4 #define POWER_FULLTEL_ANYWHERE 6
#define POWER_EX_FULL 8 #define POWER_API 10 #define POWER_MONITORAPI 12
#define POWER_WIZ_IDLE 14 #define POWER_WIZ_SPOOF 16 /' 18 free `/ /' 20
free `/ /' 22 free `/ /' 24 free `/ /' 26 free `/ /' 28 free `/ /' 30
free >>*<</

__________________________________________________________________

DEPOWERS: like @powers they are handled with a BITWISE offshift that you

     will have to calculate then add

/* First word >>*<</ #define DP_WALL 0 #define DP_LONG_FINGERS 2 #define
DP_STEAL 4 #define DP_CREATE 6 #define DP_WIZ_WHO 8 #define DP_CLOAK 10
#define DP_BOOT 12 #define DP_PAGE 14 #define DP_FORCE 16 #define
DP_LOCKS 18 #define DP_COM 20 #define DP_COMMAND 22 #define DP_MASTER 24
#define DP_EXAMINE 26 #define DP_NUKE 28 #define DP_FREE 30

/* Second word `/ #define DP_OVERRIDE 0 #define DP_TEL_ANYWHERE 2
#define DP_TEL_ANYTHING 4 #define DP_PCREATE 6 #define DP_POWER 8
#define DP_QUOTA 10 #define DP_MODIFY 12 #define DP_CHOWN_ME 14 #define
DP_CHOWN_OTHER 16 #define DP_ABUSE 18 #define DP_UNL_QUOTA 20 #define
DP_SEARCH_ANY 22 #define DP_GIVE 24 #define DP_RECEIVE 26 #define
DP_NOGOLD 28 #define DP_NOSTEAL 30 /' Third word…and there was much
rejoicing `/ #define DP_PASSWORD 0 #define DP_MORTAL_EXAMINE 2 #define
DP_PERSONAL_COMMANDS 4 /' 6 free `/ #define DP_DARK 8 /' 10 free `/ /'
12 free `/ /' 14 free `/ /' 16 free `/ /' 18 free `/ /' 20 free `/ /' 22
free `/ /' 24 free `/ /' 26 free `/ /' 28 free `/ /' 30 free >>*<</

__________________________________________________________________

     Note: ZONES: Zones are special.  If there are no zones, the value
     will be ‘-1’.

So entering zones if there are no zones: -1

Entering zones if it has three zones (#123, #456, and #789) 123 456 789
-1

As you see, the last value of the zone `MUST' be -1.  This tells it that
there are no more zones to add.


File: rhostmushhandbook.info,  Node: Requirements if Using Windows,  Next: Upgrading a Legacy RhostMUSH Installation,  Prev: Format for image files,  Up: Top

12 Requirements if Using Windows
********************************

   * (BETA ONLY) cygwin under Windows.  It requires the entire base
     development set and Requirements below.

* Menu:

* Installing on Windows 10 with BASH::
* Installing on Windows with Cygwin::
* Startig RhostMUSH on Windows::


File: rhostmushhandbook.info,  Node: Installing on Windows 10 with BASH,  Next: Installing on Windows with Cygwin,  Up: Requirements if Using Windows

12.1 Installing on Windows 10 with BASH
=======================================

Rhost can be compiled and run under the new Bash on Ubuntu on Windows.
This has been tested with the Preview build 14342.

  1. After installing Bash you will need to install the following
     packages:

        - gcc

        - git

        - make

        - libpcre3 (optional)

        - libpcre3-dev (optional)

        - openssl (optional)

2.  When configuring rhost (using confsource) select the Disable
Debugmon option.


File: rhostmushhandbook.info,  Node: Installing on Windows with Cygwin,  Next: Startig RhostMUSH on Windows,  Prev: Installing on Windows 10 with BASH,  Up: Requirements if Using Windows

12.2 Installing on Windows with Cygwin
======================================

Rhost does work under windows using the cygwin package.

  1. When you do install cygwin, the following packages must be added:

        - bash

        - crypt

        - gcc

        - gdbm

        - git

        - make

        - openssl (optional)

  2. The src/Makefile has to manually have the CYGWIN line uncommented.


File: rhostmushhandbook.info,  Node: Startig RhostMUSH on Windows,  Prev: Installing on Windows with Cygwin,  Up: Requirements if Using Windows

12.3 Startig RhostMUSH on Windows
=================================

When you issue Startmush, you must pass it the -cyg option.


File: rhostmushhandbook.info,  Node: Upgrading a Legacy RhostMUSH Installation,  Next: Comparison of Flags,  Prev: Requirements if Using Windows,  Up: Top

13 Upgrading a Legacy RhostMUSH Installation
********************************************

* Menu:

* Converting database betwen GDBM and QDBM::
* Updating RhostMUSH prior to 3.9.5p2: Updating RhostMUSH prior to 3 9 5p2.
* Adding MySQL to RhostMUSH older than 3.9.5p2: Adding MySQL to RhostMUSH older than 3 9 5p2.


File: rhostmushhandbook.info,  Node: Converting database betwen GDBM and QDBM,  Next: Updating RhostMUSH prior to 3 9 5p2,  Up: Upgrading a Legacy RhostMUSH Installation

13.1 Converting database betwen GDBM and QDBM
=============================================

Ok, if you plan to recompile your game that is using GDBM to QDBM, or
visa versa some bad news.

The databases are NOT COMPATIBLE to each other, at least in the binary
form.

* Menu:

* Downgrading QDBM to GDBM::
* Upgradging GDBM to QDBM::


File: rhostmushhandbook.info,  Node: Downgrading QDBM to GDBM,  Next: Upgradging GDBM to QDBM,  Up: Converting database betwen GDBM and QDBM

13.1.1 Downgrading QDBM to GDBM
-------------------------------

     Warning: I would NEVER change from QDBM back to GDBM, but if you’re
     set on it these steps:

     You would use the same steps if you plan to move QDBM to GDBM. I
     however would not do this.  Moving from QDBM to GDBM is a huge step
     backwards.  Seriously, don’t do it unless you have absolutely no
     other recourse.

     IF you plan (for whatever reason) to move from QDBM to GDBM, you
     should verify the following

  1. You have on a 64 bit system, no object that has more than 400
     attributes on it.

  2. You have on a 32 bit system, no object that has more than 750
     attributes on it.

  3. Any CONTENT of any attribute must be below 4000 characters in
     length.

  4. Once you have that done, you may follow the procedures below on
     converting (upgrade) from GDBM to QDBM. This works the same as
     converting (downgrading) QDBM back down to GDBM


File: rhostmushhandbook.info,  Node: Upgradging GDBM to QDBM,  Prev: Downgrading QDBM to GDBM,  Up: Converting database betwen GDBM and QDBM

13.1.2 Upgradging GDBM to QDBM
------------------------------

Now, if you’ve kept reading and plan to convert your GDBM database to
QDBM great news!  It’s more stable, it’s faster, and lets you have far
more flexibility.

So, BEFORE YOU RECOMPILE YOUR CODE. This is what you have to do.

* Menu:

* While logged in to your mush, issue the following commands: While logged in to your mush issue the following commands.
* Verify the files exist::
* Shutdown the MUSH::
* From the Server directory::
* From the Server/game directory::
* While logged into the mush issue the following commands::
* Verify that you have QDBM running and your valid values::


File: rhostmushhandbook.info,  Node: While logged in to your mush issue the following commands,  Next: Verify the files exist,  Up: Upgradging GDBM to QDBM

13.1.2.1 While logged in to your mush, issue the following commands
...................................................................

       A. @dump/flat – This will make a flatfile dump of your MUSH
          database

       B. wmail/unload – This will make a flatfile dump of your MAIL
          database

       C. @areg/unload – If you use the AutoRegistration engine, this
          dumps it

       D. newsdb/unload – If you use the hardcoded news/bbs engine.
          This dumps it


File: rhostmushhandbook.info,  Node: Verify the files exist,  Next: Shutdown the MUSH,  Prev: While logged in to your mush issue the following commands,  Up: Upgradging GDBM to QDBM

13.1.2.2 Verify the files exist
...............................

       A. Server/game/data/netrhost.db.flat

       B. Server/game/data/RhostMUSH.dump.folder

       C. Server/game/data/RhostMUSH.dump.mail

       D. (Optional) Server/game/data/RhostMUSH.areg.dump

       E. (Optional) Server/game/data/RhostMUSH.news.flat


File: rhostmushhandbook.info,  Node: Shutdown the MUSH,  Next: From the Server directory,  Prev: Verify the files exist,  Up: Upgradging GDBM to QDBM

13.1.2.3 Shutdown the MUSH
..........................

@shutdown your mush


File: rhostmushhandbook.info,  Node: From the Server directory,  Next: From the Server/game directory,  Prev: Shutdown the MUSH,  Up: Upgradging GDBM to QDBM

13.1.2.4 From the Server directory
..................................

       A. make clean

       B. make confsource 1.  Select QDBM and if you wish at this time
          increase your LBUF size 2.  Select any other options you may
          want

       C. (r)un and let it compile.

       D. Main DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               netrhost.gdbm*
               netrhost.db
               netrhost.db.new
               netrhost.db.new.prev

       E. Mail DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.folder.dir
               RhostMUSH.folder.pag
               RhostMUSH.mail.dir
               RhostMUSH.mail.pag

       F. (Optional) AutoReg DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.areg.dir
               RhostMUSH.areg.pag

       G. (Optional) News/BBS DB: Delete (rm) the following files (from
          Rhost/Server/game/data):

               RhostMUSH.news.dir
               RhostMUSH.news.pag


File: rhostmushhandbook.info,  Node: From the Server/game directory,  Next: While logged into the mush issue the following commands,  Prev: From the Server directory,  Up: Upgradging GDBM to QDBM

13.1.2.5 From the Server/game directory
.......................................

       A. Load the database:

               ./db_load data/netrhost.gdbm data/netrhost.db.flat data/netrhost.db.new

       B. Start the MUSH back:

               ./Startmush


File: rhostmushhandbook.info,  Node: While logged into the mush issue the following commands,  Next: Verify that you have QDBM running and your valid values,  Prev: From the Server/game directory,  Up: Upgradging GDBM to QDBM

13.1.2.6 While logged into the mush issue the following commands
................................................................

       A. Load in the mail database:

               wmail/load

       B. (optional) Load in the autoreg database:

               @areg/load

       C. (optional) Load in the news/bbs database:

               newsdb/load


File: rhostmushhandbook.info,  Node: Verify that you have QDBM running and your valid values,  Prev: While logged into the mush issue the following commands,  Up: Upgradging GDBM to QDBM

13.1.2.7 Verify that you have QDBM running and your valid values
................................................................

       A. @list options system

       B. @list options (spammy)


File: rhostmushhandbook.info,  Node: Updating RhostMUSH prior to 3 9 5p2,  Next: Adding MySQL to RhostMUSH older than 3 9 5p2,  Prev: Converting database betwen GDBM and QDBM,  Up: Upgrading a Legacy RhostMUSH Installation

13.2 Updating RhostMUSH prior to 3.9.5p2
========================================

Ok.

So you’re running an old RhostMUSH.

One prior to 3.9.5p2 and want to take advantage of the new format of the
Makefile and the automated mysql stuff and all the other goodies that
isn’t really (easilly) done with just patch.sh.

Well, you’re in luck.  It is actually fairly easy to do.

This is what you have to do.

First thing’s first.

  1. Log into your existing mush.  Let’s make current backups of all
     your flatfiles.  Issue:

          @dump/flat
          wmail/unload
          @areg/unload
          newsdb/unload

  2. Shutdown your game:

          @shutdown

  3. Make an image of all your current backed up files.  From The
     Server/game directory you would type:

          ./backup_flat.sh -s

     Note: Please remember the ‘-s’ to the ./backup_flat.sh.

  4. Make note of the most recently created file in the directory
     Server/game/oldflat.  It’s usually named something like:

          RhostMUSH.dbflat1.tar.gz

     Note: You will need this file later.

  5. Rename your ‘Rhost’ directory to something else.  This is the
     directory that you have containing the ‘Server’ directory.  Name it
     anything you want other than ‘Rhost’.  For those not used to unix
     you would type:

          mv Rhost Rhost_old

  6. Pull in the latest Rhost.  You would type:

          git clone https://github.com/RhostMUSH/trunk Rhost

     Note: You would type this in the same directory you have renamed
     your old ‘Rhost’ directory

  7. go into the Rhost/Server directory.  Type:

          make confsource

     Select what options you want (including the mysql and other
     goodies) then compile it (also within the menu, it’s the ‘r’
     option).

  8. Once your game is compiled and ready to go you need to copy in the
     data from your old game.  Copy the RhostMUSH.dbflat1.tar.gz we
     mentioned in step #4 to the Server/game directory of your NEW GAME
     DIRECTORY. From within the ‘game’ directory of your current game
     you should be able to issue (if you named the old one Rhost_old).
     Again this needs to be done FROM YOUR Server/game directory!!!

       A. cp netrhost.conf netrhost.conf.orig

       B. cp ../../Rhost_old/Server/game/RhostMUSH.dbflat1.tar.gz .

       C. tar -zxvf RhostMUSH.dbflat1.tar.gz

       D. Compare your current netrhost.conf to the default one that
          came with the source (that you renamed to netrhost.conf.orig).
          Likely the only sections you have to add to your current
          netrhost.conf (that came with your RhostMUSH.dbflat1.tar.gz
          archive), will be toward the end, with the include
          rhost_ingame.conf and rhost_mysql.conf.  Depending on how old
          your game is coming from you may need to add more options.
          Any config option that is the same between the netrhost.conf
          files do not have to be copied over, and you want to keep your
          custom settings (like don’t port or other stuff you have
          already customized).

       E. Load in your flatfile information:

               ./db_load data/netrhost.gdbm data/netrhost.db.flat data/netrhost.db.new

       F. Your ./Startmush should re-index all your txt files you
          originally made:

               ./Startmush

       G. In your game type the following as an immortal or as #1.

            1. Load in your mail flatfile:

                    wmail/load

            2. Load in your autoregistration flatfile (if available):

                    @areg/load

            3. Load in your hardcoded bbs flatfile (if available):

                    newsdb/load

  9. You should be good to go on a current directory structure for
     Rhost.  Enjoy!


File: rhostmushhandbook.info,  Node: Adding MySQL to RhostMUSH older than 3 9 5p2,  Prev: Updating RhostMUSH prior to 3 9 5p2,  Up: Upgrading a Legacy RhostMUSH Installation

13.3 Adding MySQL to RhostMUSH older than 3.9.5p2
=================================================

MySQL is now native in RhostMUSH as of 3.9.5p2.

     Warning: To autodetect it, YOU MUST HAVE mysql_config installed and
     running on your server.  Without this, even if you have mysql db
     installed it won’t be able to recognize the parameters you will
     need for it and will thus fail.  Please check your linux
     distribution to see what packages are needed to install
     mysql_config.

Download the git repository to a seperate directory so that you can copy
over the files that it requires you to.

Suggestion:

     git clone https://github.com/RhostMUSH/trunk ~/tmprho

If you are patching UP from an older version, you need to update the
following files:

  1. update your src/Makefile to the one in the 3.9.5p2+ repo ( cp
     ~/tmprho/Server/src/Makefile ~/Rhost/Server/src/Makefile )

  2. update your bin/asksource.* files to the one in the 3.9.5p2+ repo (
     cp ~/tmprho/Server/bin/asksource.* ~/Rhost/Server/bin/ )

  3. append ‘include rhost_mysql.conf’ BEFORE the rhost_ingame.conf file
     and before the section that says ‘define local aliases’ toward the
     end of your netrhost.conf file.  ( edit your
     ~/Rhost/Server/game/netrhost.conf file )

  4. copy the game/rhost_mysql.conf file from the 3.9.5p2+ repo ( cp
     ~/tmprho/Server/game/rhost_mysql.conf ~/Rhost/Server/game/ )

  5. The following lines have to be REPLACED/CHANGED in local.c ( toward
     the top ): ( you may edit this or copy the one from the other
     distro ) ( do either: edit ~/Rhost/Server/src/local.c ) ( or: cp
     ~/tmprho/Server/src/local.c ~/Rhost/Server/src/local.c )

     Note: IF REPLACING/CHANGING local.c COPY BELOW

     /* Called when the mush starts up, immediatly prior to the main game
      * loop being entered. By this point all databases are loaded and
      * all variables configured.
      */
     #ifdef MYSQL_VERSION
        extern void local_mysql_init(void);
        extern int sql_shutdown(dbref player);
     #endif

     #ifdef SQLITE
        extern void local_sqlite_init(void);
     #endif /* SQLITE */

     void local_startup(void) {
     #ifdef SQLITE
        local_sqlite_init();
     #endif /* SQLITE */
     #ifdef MYSQL_VERSION
        local_mysql_init();
     #endif
        load_regexp_functions();
     }

     /* Called immediatly after the main game loop exits. At this point
      * all databases and variables are still configured
      */
     void local_shutdown(void) {
     #ifdef MYSQL_VERSION
        sql_shutdown(-1);
     #endif
     }

  6. Issue ‘make clean’ then make confsource to rebuild using the latest
     builder script to build in the mysql changes.


File: rhostmushhandbook.info,  Node: Comparison of Flags,  Next: Comparison of powers,  Prev: Upgrading a Legacy RhostMUSH Installation,  Up: Top

14 Comparison of Flags
**********************

PENN/MUX Flag       RhostMUSH Flag          Commentary on Difference Between Flags
                                            
----------------------------------------------------------------------------------------------
                                            
ABODE               ABODE
                    
                                            
BLIND               BLIND
                    
                                            
CHOWN_OK            CHOWN_OK
                    
                                            
DARK                DARK
                    
                                            
FREE                FREE
                    
                                            
GOING               GOING/BYEROOM
                    
                                            
HAVEN               HAVEN
                    
                                            
INHERIT             INHERIT
                    
                                            
JUMP_OK             JUMP_OK
                    
                                            
KEY                 KEY
                    
                                            
LINK_OK             LINK_OK
                    
                                            
MONITOR             MONITOR
                    
                                            
NOSPOOF             NOSPOOF
                    
                                            
OPAQUE              OPAQUE
                    
                                            
QUIET               QUIET
                    
                                            
STICKY              STICKY
                    
                                            
TRACE               TRACE
                    
                                            
UNFINDABLE          UNFINDABLE
                    
                                            
VISUAL              VISUAL
                    
                                            
WIZARD              ROYALTY
                    
                                            
ANSI                ANSI/ANSICOLOR
                    
                                            
PARENT_OK           PARENT_OK
                    
                                            
ROYALTY             COUNCILOR/ARCHITECT
                    
                                            
AUDIBLE             AUDIBLE
                    
                                            
BOUNCE              BOUNCE
                    
                                            
CONNECTED           CONNECTED
                    
                                            
DESTROY_OK          DESTROY_OK
                    
                                            
ENTER_OK            ENTER_OK
                    
                                            
FIXED               NO_TEL
                    
                                            
UNINSPECTED         Not Available           Just a marker flag
                                            
                                            
HALTED              HALTED
                    
                                            
IMMORTAL            GUILDMASTER             You don’t want IMMORTAL
                                            
                                            
GAGGED              FUBAR
                    
                                            
CONSTANT            NO_MODIFY
                    
                                            
LIGHT               LIGHT
                    
                                            
MYOPIC              MYOPIC
                    
                                            
AUDITORIUM          AUDITORIUM
                    
                                            
ZONE                Use @zone
                    
                                            
PUPPET              PUPPET
                    
                                            
TERSE               TERSE
                    
                                            
ROBOT               ROBOT
                    
                                            
SAFE                SAFE
                    
                                            
TRANSPARENT         TRANSPARENT
                    
                                            
SUSPECT             SUSPECT
                    
                                            
VERBOSE             VERBOSE
                    
                                            
STAFF               Not Available           Just a marker flag
                                            
                                            
SLAVE               SLAVE
                    
                                            
ORPHAN              Not Available           @lock/use the parent instead
                                            
                                            
CONTROL_OK          Not Available           Use @lock/ZoneWizLock
                                            
                                            
STOP                STOP                    See also NOSTOP
                                            
                                            
COMMANDS            COMMANDS
                    
                                            
PRESENCE            Not Available           See: Reality Levels
                                            
                                            
NOBLEED             Not Needed              Rhost doesn’t bleed ANSI
                                            
                                            
VACATION            Not Available           Just a marker flag
                                            
                                            
HEAD                Not Available           Just a marker flag
                                            
                                            
WATCHER             Not Available           @toggle MONITOR
                                            
                                            
HTML                Not Available           Rhost doesn’t support Pueblo
                                            
                                            
REDIR_OK            Not Available           Rhost doesn’t support @redirect
                                            
                                            
SPEECHMOD           Not Available           Rhost doesn’t support @speechmod - use @icmd
                                            
                                            
MARKER0-MARKER9     MARKER0-MARKER9
                    


File: rhostmushhandbook.info,  Node: Comparison of powers,  Next: RhostMUSH Internal Help Files,  Prev: Comparison of Flags,  Up: Top

15 Comparison of powers
***********************

announce Can use the @wall command.  Rhost Equiv: - FREE_WALL (@power)

boot Can use the @boot command.  Rhost Equiv: BOOT (@power)

builder Can build, if the builder power is enabled.  Rhost Equiv:
ARCHITECT (flag)

chown_anything Can @chown anything to anyone.  Rhost Equiv: CHOWN_OTHER
(@power)

comm_all Like a wizard with respect to channels.  Rhost has no hardcoded
comsystem.  You can tweek the softcode.

control_all Can modify any object in the database.  (God-set only.)
Rhost Equiv: TwinkLock (@lock)

expanded_who Sees the wizard WHO, and SESSION commands.  Rhost Equiv:
WIZ_WHO (@power)

find_unfindable Can locate unfindable people.  see_hidden Can see hidden
(DARK) players on WHO, etc.  Rhost Equiv: WHO_UNFIND (@power)

free_money Unlimited money.  Rhost Equiv: FREE (flag)

free_quota Unlimited quota.  Rhost Equiv: FREE_QUOTA (@power)

guest Is this a guest character?  Rhost Equiv: GUEST (flag)

halt Can @halt anything, and @halt/all.  Rhost Equiv: HALT_QUEUE
(@power) or HALT_QUEUE_ALL (@power)

hide Can set themselves DARK. Rhost Equiv: NOWHO (@power)

idle No idle timeout.  Rhost Equiv: @timeout *player=-1

link_variable Can @link an exit to “variable”.  Rhost Equiv: Anyone can
do this.  VARIABLE (@toggle)

link_to_anything Can @link an exit to any (non-variable) destination.
Rhost Equiv: @lock/link (@lock)

long_fingers Can get, look, whisper, etc from a distance.  Rhost Equiv:
LONG_FINGERS (@power)

no_destroy Cannot be @toad’ed.  Rhost Equiv: INDESTRUCTABLE (flag)

open_anywhere Can @open an exit from any location.  Rhost Equiv:
@lock/open (@lock)

poll Can set the @poll.  Rhost has nothing equivelant.  Just softcode a
+poll, or @hook it for permissions.

prog Can use @program on players other than themself.  Rhost Equiv: PROG
(@toggle)

search Can @search anyone.  Rhost Equiv: SEARCH_ANY (@power)

see_all Can examine and see attributes like a wizard.  Rhost Equiv:
EXAMINE_FULL (@power) (and EXFULLWIZATTR (@toggle) for wiz only attribs)

see_queue Can @ps/all or @ps any player.  Rhost Equiv: SEE_QUEUE
(@power) or SEE_QUEUE_ALL (@power)

stat_any Can @stat any player.  Rhost Equiv: STAT_ANY (@power)

steal_money Can give negative money.  Rhost Equiv: STEAL (@power)

tel_anywhere Can teleport anywhere.  Rhost Equiv: TEL_ANYWHERE (@power)
or FULL_TEL (@power)

tel_anything Can teleport anything (includes tel_anywhere) Rhost Equiv:
TEL_ANYTHING (@power)

unkillable Cannot be killed with the ‘kill’ command.  Rhost Equiv:
NOKILL (@power)

use_sql Can call the SQL() function.  (God-set only.)  Rhost Equiv: SQL
is a 3rd party patch.

watch_logins Can set or reset the WATCHER flag on themselves.  Rhost
Equiv: MONITOR (@toggle)


File: rhostmushhandbook.info,  Node: RhostMUSH Internal Help Files,  Next: RhostMUSH Internal Wizhelp Files,  Prev: Comparison of powers,  Up: Top

16 RhostMUSH Internal Help Files
********************************


File: rhostmushhandbook.info,  Node: RhostMUSH Internal Wizhelp Files,  Next: Changelog,  Prev: RhostMUSH Internal Help Files,  Up: Top

17 RhostMUSH Internal Wizhelp Files
***********************************


File: rhostmushhandbook.info,  Node: Changelog,  Next: Historical Non-Disclosure Agreement,  Prev: RhostMUSH Internal Wizhelp Files,  Up: Top

18 Changelog
************

* Menu:

* RhostMUSH 4.0: RhostMUSH 4 0.
* RhostMUSH 3.9.5: RhostMUSH 3 9 5.
* RhostMUSH 3.9.4: RhostMUSH 3 9 4.
* RhostMUSH 3.9.3: RhostMUSH 3 9 3.
* RhostMUSH 3.9.2: RhostMUSH 3 9 2.
* RhostMUSH 3.9.1: RhostMUSH 3 9 1.
* RhostMUSH 3.9.0 p00: RhostMUSH 3 9 0 p00.
* RhostMUSH 3.2.4 p18: RhostMUSH 3 2 4 p18.
* RhostMUSH 3.2.4 p17: RhostMUSH 3 2 4 p17.
* RhostMUSH 3.2.4 p16: RhostMUSH 3 2 4 p16.
* RhostMUSH 3.2.4 p15: RhostMUSH 3 2 4 p15.
* RhostMUSH 3.2.4 p14: RhostMUSH 3 2 4 p14.
* RhostMUSH 3.2.4 p13: RhostMUSH 3 2 4 p13.
* RhostMUSH 3.2.4 p12: RhostMUSH 3 2 4 p12.
* RhostMUSH 3.2.4 p11: RhostMUSH 3 2 4 p11.
* RhostMUSH 3.2.4 p10: RhostMUSH 3 2 4 p10.
* RhostMUSH 3.2.4 p9: RhostMUSH 3 2 4 p9.
* RhostMUSH 3.2.4 p8: RhostMUSH 3 2 4 p8.
* RhostMUSH 3.2.4 p7: RhostMUSH 3 2 4 p7.
* RhostMUSH 3.2.4 p6: RhostMUSH 3 2 4 p6.
* RhostMUSH 3.2.4 p5: RhostMUSH 3 2 4 p5.
* RhostMUSH 3.2.4 p4: RhostMUSH 3 2 4 p4.
* RhostMUSH 3.2.4 p3: RhostMUSH 3 2 4 p3.


File: rhostmushhandbook.info,  Node: RhostMUSH 4 0,  Next: RhostMUSH 3 9 5,  Up: Changelog

18.1 RhostMUSH 4.0
==================

MUX passwords didn’t work properly because of a memcmp() bug.

        - Thanks Locke

@nuke didn’t properly wipe mail if issued from a non-player.

        - Thanks Benzaiten & Rockpath

@protect set/unset the wrong flags.

        - Thanks Rockpath

Help file typos fixed

        - Thanks Rockpath

Bug in EVAL could overwrite static pointer to attribute fetches

        - Thanks Ixokai

Bug in printf that could cause a SIGSEGV

        - Thanks Ixokai

Bug in AUTH and API handling where AUTH lookups happened with internal checks

        - Thanks Neil “Polk” Stevens

@set and set() now allow optionally setting contents starting with ‘_’.

        - Thanks <Gallifrey@BrazilMUX>

Added better user error handling to the build script.

        - Thanks qa’toq

Due to an insanely old bug in singleuser mode with attribute caps, flatfiles would cut off attributes at 750 on dbloading.

        - Thanks <Aqua@MuxNexus>

@recover/detail to show attributes and details of recoverable item

        - Thanks Ixokai

Suggestions in help files inspired from PennMUSH.

        - Thanks PennMUSH (Raevnos)

@door/push could crash with non-players

        - Thanks Xperta/Paige

Startmush had a confusing message for Nyctasia as #1’s password

        - Thanks Ixokai

@rxlevel/@txlevel handle bits as well as tabs

        - Thanks Myrddin

@fpose/nospace didn’t work because of wrong bitwise flags

        - Thanks Myrddin

Potential crash with freeing unitialized buffering in trace stack in eval.c

        - Thanks Myrddin

Crash with trace located as a 32 byte SBUF if compiled for that

        - Thanks Myrddin

idle_timeout included in the netrhost.conf by default as highly utilized

        - Thanks skew

all l*() math functions allowed empty args for backward compatibility

        - Thanks skew

Found bug in lattr() with command matching.

        - Thanks Damascus

Bug in final sorting for setunion/setdiff/setinter.

        - Thanks Aqua

Duplicate entries possible with help suggestions.

        - Thanks Alley

Global parents (ancestors) should inherit from its own parents.

        - Thanks Matrix

parsestr() was missing a prefix handler for the | option.

        - Thanks Aqua

conf files didn’t ignore spaces/blank lines

        - Thanks ELpH

Erraneous warning when vattr_cmds not defined

        - Thanks ELpH

Added ability to specify subdirectories in a controlled method via @admin for execscript()

        - Thanks Kumakun

Added optional target sender for mailsend()

        - Thanks Rockpath

Mysql would abort on sub-results if one of the results were NULL

        - Thanks Myrddin

libxcrypt broke SHA512 passwords. (Ubuntu 20+)

        - Thanks Darren

Typo in speech.c with a variable.

        - Thanks Oleo

SIDEFX permissions were borked for normal players.

        - Thanks jan6

#lambda wasn’t case insensitive

        - Thanks Alley


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 5,  Next: RhostMUSH 3 9 4,  Prev: RhostMUSH 4 0,  Up: Changelog

18.2 RhostMUSH 3.9.5
====================

Softcode overrides for connect files

        - Thanks Matrix

Bug in the milisecond timers with regards to dumps

        - Thanks Matrix

Ansi auto-recognized in connect.txt (optionally)

        - Thanks Rook

floating point can dynamically be increased for precision.

        - Thanks Stephen

Ansi compression and optimization encoding

        - Thanks Exaurdon

Fix for timers with milisecond and alarms

        - Thanks Ol’Sarge

Fix for Mysql.c issue in a sigfault

        - Thanks Ol’Sarge

@depower didn’t work right for inheritance on power_objects

        - Thanks Sunder

Buffer overrun in ansi_txtfile because of non-null termination.

        - Thanks Rook

mail/mark/save would not alert you if you hit MAX SAVED messages.

        - Thanks Mercutio

old_setq had an issue with ‘!’ parameter not reusing registers.

        - Thanks Ixokai

missing test case for scandir() function fixed.

        - Thanks Maighdlin

suggestion to make textfile() more useful in functions.

        - Thanks qa’toq

alteration of new Makefile build procedure rebuilt based on <Ternary@Dark> Metal’s suggestions.

        - Thanks Ternary/Ol’Sarge

fix to the src/Makefile to redefine default SHELL since latest Debian horked it with dash.

        - Thanks Mercutio

Make ‘.’ as first char allowable in attribute names.

        - Thanks Ixokai

@limit with unlimited values for @destroy and vlimit was broke.

        - Thanks Ixokai

@decompile didn’t show @toggles

        - Thanks Tesagk

xinc() and xdec() didn’t properly handle labels for registers.

        - Thanks UnRegistered Guest (Wanted to be Anonymous)

columns() bug with left justification if fed null for field.

        - Thanks Merit

@dynhelp/noindex to snuff the hilight index in @dynhelp.

        - Thanks Darren

ltoggles()/hastoggle() didn’t mirror lflags()/hasflag() for permissions.

        - Thanks Polk

dark permission makes on-connect screen command ignored to be overridden.

        - Thanks Ixokai

crashbug on random error messages if error.txt was empty

        - Thanks Darren

compile issue when you do not have sideeffects enabled at comiletime

        - Thanks benzaiten

Idea for /quiet for @pipe

        - Thanks Ixokai

Missing showing PARIS mode enabled in WHO/DOING for @list options

        - Thanks Myrddin

El Capitan 10.11.5 would not compile cleanly out of the box due to sudden header file location changes.

        - Thanks Darren

Main Makefile no longer worked on latest FreeBSD because of their change from gmake.

        - Thanks Oleo

Added RPAD and LPAD softcode wrappers

        - Thanks Darren

Dark exits were broken with sees()

        - Thanks Mercutio

objid’s were based on localtime and not gmtime

        - Thanks Fantom

Bug in safer_ufun with setting attributes on self and permissions with u().

        - Thanks Mike/Talvo

Improvement of help entries for @label and various documentation fixes.

        - Thanks Mike/Talvo

Added additional spacing to parenmatch() to help with pretty printing.

        - Suggestion from Thenomain (thanks!)

&pageformat and &outpageformat idea from PennMUSH

        - Thanks Mike and the PennMUSH folk :)

Added help entry for a suggestion on special characters.

        - Thanks Tesagk

Added ‘d’ and ‘D’ options for wildcarding on editansi.

        - Thanks Anixy

Removed attribute flags from @decompile/tf

        - Thanks Darren

Potential crash bug with flag-handling with NONAME in use.

        - Thanks Polk & Aqua

Missing free on an sbuf in sqlite.c

        - Thanks Darren

Added %_<-> to pop last label used.

        - Suggestion – Ixokai

Nested /notrace on @function/@lfunction was broke.

        - Thanks Ixokai

Idea and general code for NO_CONNECT message – Kage

        - Thanks Kage

Alternate date formats for convtime()

        - Thanks Ixokai

Typos in help.txt

        - Thanks Kilmoran

all localization didn’t save state for register names.

        - Thanks Myrddin

All locatization with CLEAR didn’t wipe and reset register names.

        - Thanks Myrddin

&SPEECH_PREFIX/&SPEECH_SUFFIX for say/pose pre and post processing.

        - Thanks MuSoapBox (Auspice, Sparks, Seamus, faraday, Thenomain,
          and others)

] for @hook/ignore and @hook/permit was broken.

        - Thanks Ixokai


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 4,  Next: RhostMUSH 3 9 3,  Prev: RhostMUSH 3 9 5,  Up: Changelog

18.3 RhostMUSH 3.9.4
====================

REALITY_LEVELS wouldn’t compile because of undeclared function.

        - Thanks Dahan

HELP spelling fixes

        - Thanks Sketch

compile time issue when enhanced ansi is deselected.

        - Thanks Wisdom

if you have an ssl library that conflicts with openssl dev libs, openssl support is confused

        - Thanks Wisdom

reality_compare – option to alter how descs are seen

        - Thanks Derek (from SVN site)

Crash bug in @blacklist/list fixed

        - Thanks Distraida

Bug in CPU alerting with new player creation on their first connect.

        - Thanks <Darren@Nightlife>

Bug with compiling without BANG support with undeclared variables.

        - Thanks <Darren@Nightlife>

You can now input extended ASCII right into the mush (and it converts to markup)

        - Thanks mindboosternoori

functions.c bombed with the clang compiler because of restrictive type-casting comparisons.

        - Thanks Fraibert

@include didn’t properly null out args if forcefully specified null.

        - Thanks Volund

@skip/@ifelse, @switch, and @sudo didn’t evaluate substitutions properly.

        - Thanks Volund

Compiletime bug in speech.c with REALITY_LEVELS not defined.

        - Thanks psc943


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 3,  Next: RhostMUSH 3 9 2,  Prev: RhostMUSH 3 9 4,  Up: Changelog

18.4 RhostMUSH 3.9.3
====================

@include – Idea Copied from Penn

        - Thanks Jules (and PennMUSH)

Fix for $Z in timefmt()

        - Thanks Chime/Loki (Haunted)


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 2,  Next: RhostMUSH 3 9 1,  Prev: RhostMUSH 3 9 3,  Up: Changelog

18.5 RhostMUSH 3.9.2
====================

@assert/@break didn’t handle {} correctly.

        - Thanks Wyrd

singletime() handles (w)eeks, (M)onths, and (y)ears like MUX.

        - Thanks Chime & MUX2

crash bug in command.c with regards to mail handler

        - Thanks Chime

aliased rjust to rj and ljust to lj and updated help files appropiately.

        - Thanks Montague

glibc for MAX_INT/MIN_INT had issues with math functions - wrapper fixes
this.

parser issue with regexp, parenthesis, and backslashes – Fixed

        - Thanks Chime

Idea for @titlecaption

        - Thanks <Zero@NewJediOrder>

IDLE had a missmatch on r and n parsing – Fixed

        - Thanks <Mike@M*U*S*H>

Discussion/Ideas for strdistance() function.

        - Thanks <Sketch@M*U*S*H>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 1,  Next: RhostMUSH 3 9 0 p00,  Prev: RhostMUSH 3 9 2,  Up: Changelog

18.6 RhostMUSH 3.9.1
====================

cluster_hasattr() bug for #-1 that should be 0 for non-existant attribs.

        - Thanks Ol’Sarge@Cajun <Ol'Sarge@Cajun>

cluster_flags()/cluster_hasflag() added for cluster support

        - Thanks Cody

Fix for log.c C99 compile issues on old compilers.

        - Thanks Sombranox

sees() handles optional third argument for exits

        - Thanks Sombranox

#lambda inherited from parent wrongly - Fixed

        - Thanks Xandar

writable() added for TM3 compatability.

        - Thanks Wyrd

@list user_attrib now does flag based matching

        - Thanks sombranox

cluster_set() didn’t evaluate attributes right

        - Thanks Cody

cluster_regrep*() didn’t select the right proper target object

        - Thanks Cody

flag setting/notifying identifies if target was set/unset before

        - Thanks PennMUSH (Kimiko)

elist() didn’t evaluate properly - Introduced 3.9.1p2

        - Thanks Cary

page alerts you if you’re cloaked from people you page.

        - Thanks Wyrd

Added flatfile stale attribute cleaner and penn 1.8 flatfile converter

        - Thanks Wyrd

Added switch_search @admin param for switching functionality.

        - Thanks Minion

Added @include to Rhost

        - Thanks PennMUSH (Javelin)

@trigger can handle $command/^listen attributes

        - Thanks TinyMUSH3/PennMUSH

error.txt files can evaluate arguments

        - Thanks Camber/Orion

mux_lcon_compat added to allow lcon() to return empty string.

        - Thanks Minion

cluster_wipe added for clusters

        - Thanks Cary

NO_CODE broke global_error_obj as it’s executed by enactor.

        - Thanks Matrix

Help file typos for various cluster commands.

        - Thanks <Mike@M*U*S*H>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 9 0 p00,  Next: RhostMUSH 3 2 4 p18,  Prev: RhostMUSH 3 9 1,  Up: Changelog

18.7 RhostMUSH 3.9.0 p00
========================

     Note: v3.9 is the development branch leading to RhostMUSH v4.0

* Menu:

* Changes::
* Additions::
* Admin Params::
* Bug Fixes::


File: rhostmushhandbook.info,  Node: Changes,  Next: Additions,  Up: RhostMUSH 3 9 0 p00

18.7.1 Changes
--------------

Fixed some mishandled signals which should not cause Rhost to panic
shutdown.

Added a Makefile define IGNORE_SIGNALS to turn off signal handling
entirely.

Changed Makefile to use RFC date (date -R) instead of local datestring.

Updated version() to allow showing build number by supplying an
argument.

Added signal handling of SIGUSR1, SIGTERM, SIGUSR2.

Added user configurable SIGUSR1 handling through signal_object.

Added zones_like_parents for zones to search like @parents.

        - this does require the ZONECMDCHK @toggle set on each
          item/player.

Modify snooplog to show site information.

Added %@ support to parser (caller)

        - Penn/MUX/TM3

Added %+ support to parser (args sent to functions)

        - Penn

Added %? support to parser (invocations)

        - Penn

Added NO_CODE flag for easier control of coding tool avaiability

Added full REGEXP support (based on Penn’s PCRE implementation)

Added some extra bounds checking to internal varabiables (non-issue)

[18-9] Added compatibility with @assert and @break for Penn Compat

        - PennMUSH

Added a QUIET switch to tel()

        - Leona @ Faetopia

[18-9] Modify snooplog to show site information.

[18-10] lattr() modification to handle lock() shows.

[18-11] lattr() modification to handle attribute flag checks.

[18-11] examine/parent now shows dbref#’s of the targetted items

[18-16] 7th argument to wrap() to allow last line to ‘left justify’

[18-18] Added %@ support (for Penn, TM3, and MUX compatibility)

        - Lots and Lots and Lots of people.

Merged all 3.2.4 code to 3.9.0

        - Ashen-Shugar

Added MUX, TM3, Penn, Rhost default options to asksource.sh

Modified valid ‘good characters’ for starting attribs for MUX compat.

Tprintf handler for buffering rewritten to be ‘safe’

        - Lensman

lnum/lnum2 added to allow ‘stepping’ argument.

Reality locktypes 2&3 could be too restrictive, so some lax was given.

Added reality locktypes 4 & 5 to duplicate 2 & 3 but with
‘lock-pass-nonexit’

@log allows writing to subdirectories.  5 depth maximum.

@edit has /check argument to run a ‘simulation’ of an @edit.

        - Penn

@search has a /nogarbage switch to check against GOING/RECOVER items.

moon() takes optional second argument (boolean) to show only percentage
of phase

@grep takes /regexp switch for regexp matching.

Added ] pre-parser command

Rewrite of permission handler to allow a second permission structure (32
more permissions)

@edit has /single argument to allow editing first match only.

edit() has 4th optional argument to specify an edit of single match
only.

Change in WANDERER and GUEST to check owner as well as target.

Added Good_chk() macro to include Good_obj() && !Going() && !Recover()

Added eval/no_eval @admin permissions for function
evaluation/non-evaluation.

list() given 4th argument to handle optional header.

Added /toreality switch to @pemit.  (works only with contents)

Vastly improved TinyMUSH3 converter.

@hook modified to show sub-overrides and sub-includes

Added the ability to pass delim and params to self-made %-subs.

Added a new @admin boolean parameter round_kludge.

        - Loki

Added support of labels for setq(), setr(), r().  (SVN 84, fix in SVN
87)

Added extra protection to garble() on exec() call for CPU (SVN 84)

Added templates (ala SETQ_TEMPLATE) for setq labels.  (SVN 89)

Enhancement to idle timeout to take into account lagging servers (SVN
93)

Center allows NON-ANSI multi-character filler [SVN 94]

Lexits() and Lcon() take optional output seperators [SVN 95->96]

Lexits and Lcon() take arguments to turn #dbrefs into names [SVN
101->102]

Added /notify switch to @switch [SVN 108]

Added additional arguments to dice() [SVN 110]

Made v() allow registers 11 through MAX-ARGS [SVN 111]

Made strfunc() aware of bypass() [SVN 112]

Mail now displays a ‘m’ by any message set for auto-deletion [SVN 117]

map() now allows ArgN arguments to be passed to it as %1-%??  [SVN 118]

Added time skew detection and protection to readjust mush time [SVN 123]

Added some addition protection for network flooding [SVN 123]

Added optional arguments to dig() and open() for location/returns [SVN
123]

Enhanced door code to be useable [SVN 125]

Modified asksource.sh script to handle all new options [SVN 125]

Added MUX2 password compatibility for reading converted databases [SVN
125]

Added beta option support for MySQL, Doors, and 64bit SBUF/attribs [SVN
125]

Added auto-detection of 64 bit platforms [SVN 125]

Added MAILFILTER attribute to change destination of incoming mail [SVN
127]

Fixed some uninitialized variables in view_atr [SVN 129]

        - Loki

Altered case() and caseall() to support #$ substitution like switch() [SVN 130]

        - Loki

Slight mistake in the case()/caseall() fix in 130. Fixed [SVN 136]

        - Loki

QDBM support added as an optional database layer [SVN 131-135]

        - Ambrosia

Error() accepts an optional player argument to base error messages on.

        - Thanks Ratio (and many others)

FIX_AIX obsoleted by a small mail.c/mailfix.c rewrute

        - Ashen [SVN 162]

modified sub_include so that the CHR_<str> value if fed an integer
specifies how many values to take.

Copy/paste error lead to @break behaving like @assert. [SVN 168]

        - Loki

Removed minimal_db from the distro. It can be found on the download site under Contrib. [SVN 171]

        - LOKI

timefmt(), convsecs(), convtime() and moon() now handle 64 bit time.
[SVN 172]

list() has an optional target player for output (must control target)
[SVN 177]

garble() has new optional type value to return character count instead
of string [SVN 177]

remit() has optional key value to specify if it’s a to-reality output or
normal remit() [SVN 177]

/DISPLAY switch for @function to display details on target function.
[SVN 177]

/LIST switch for @function allows wildcarding.  [SVN 177]

@list buffers no longer spams the living crap out of you.  [SVN 177]

Sideeffects: Tidied up the wizhelp entries and added example page Allowed for keyword negation (i.e. sideeffects = PENN !OPEN MOVE). [SVN 178-179]

        - Lensman

strip() takes optional 3rd argument to specify allowing only specified
characters [SVN 180]

accents are now allowed as a markup language via the %f substitution.
Requires ZENTY_ANSI [SVN 180]

printf() modified with ‘&’ identifier for carrage return alignment
processing [SVN 181]

filter() can now take multiple arguments.  [SVN 190]

/STOP and /CONT switches added to @halt.  [SVN 192]

@wait/pid modified to be much nicer on the queue [SVN 192]

chr() allows characters 160 to 255 to be done via markups (%<3digit>)

Cleaned up extension characters by integrating into the accent parser
[SVN 201]

On rooms @toggled LOGROOM, if there is a LOGNAME attribute on the room, it uses that instead [SVN 204]

        - Thanks Ixokai

     Note: Name must be alphanumeric and be under 70 characters in
     length.

%q<variable> added for TM3 compatability with named labels [SVN 205]

setq/setr family now allow !  to asign next available register or
re-assign existing register [SVN 208]

nameq optionally displays register asigned to label [SVN 208]

the PID of the running process now stored to netrhost.pid [SVN 208]

Signal handling improved for USR1 and USR2 [SVN 212]

/oneeval switch to @pemit for single evaluation of a @pemit/list [SVN
213]

lexits() allow page listings [SVN 233]

lrooms() - fix for specific room identification [SVN 233]

@function/display now shows flags of functions [SVN 233]

rework lattr() and lattrp() as well as cluster_lattr() to use
centralized core functionality [SVN 233]

rework of ueval() to handle cluster or non-cluster [SVN 233]

lock() allows optional third argument to set/clear attribute locks [SVN
233]

merging of all cluster_Defaults into single handler [SVN 233]

action lists attached to >, @cluster/set, and cluster_set() [SVN 233]

@wait with +/- values [SVN 233]

        - Thanks Raevnos

BOUNCEFORWARD attribute parser for BOUNCE flag [SVN 233]

VATTRCNT() has optional 2nd argument to reset the vlimit on the dbref#
[SVN 244]

pgrep()/cluster_grep() has additional arguments for outputting matches [SVN 244]

        - Thanks Cary

Updated help for printf() [SVN 253]

Fix for OSX 10.5.2 with regards to more restrictive header include files [SVN 254]

        - Thanks Lyoc

     Note: TO BE DONE: add python interpreter TO BE DONE: @plugin


File: rhostmushhandbook.info,  Node: Additions,  Next: Admin Params,  Prev: Changes,  Up: RhostMUSH 3 9 0 p00

18.7.2 Additions
----------------

* Menu:

* Functions: Functions<4>.
* Commands: Commands<2>.
* Flags: Flags<5>.
* Toggles: Toggles<4>.


File: rhostmushhandbook.info,  Node: Functions<4>,  Next: Commands<2>,  Up: Additions

18.7.2.1 Functions
..................

[18-13] Add isint() for MUX/Penn compatability [18-17] Added fmod() for
Penn compatability.  regmatch() - regexp (penn) regmatchi() - regexp
(penn) regedit() - regexp (penn) regediti() - regexp (penn) regeditall()
- regexp (penn) regeditalli() - regexp (penn) reswitch() - regexp (penn)
reswitchi() - regexp (penn) reswitchall() - regexp (penn) reswitchalli()
- regexp (penn) regrab() - regexp (penn) regrabi() - regexp (penn)
regraball() - regexp (penn) regraballi() - regexp (penn) regrep() -
regexp (penn) regrepi() - regexp (penn) bypass() - used in @functions to
bypass hardcoded limits logtofile() - Function equiv of @log - limit
1/command.  searchng() - Like search() but don’t return GOING/RECOVER.
keepflags() - keep data type based on flags remflags() - remove data
type based on flags foldercurrent) - list current folder or share folder
folderlist() - list all folders of target nameq() - name/rename labels
for setq registers (SVN 84) spellnum() - Penn compatable returns full
name [SVN 125] ibreak() - for iter() and list() [SVN 109] shift() - and
additional arguments to dice() [SVN 110] fbound() - like bound but for
floating point [SVN 137] fbetween() - like between but for floating
point [SVN 137] strdistance() - Levenshtein Distance between two strings
[SVN 146] tr() - Transform string based on find/replace [SVN 156]
digest() - SSL algorithm encryptions.  Yay is life.  [SVN 158] roman() -
Number to Roman Numeral converter [SVN 160] printf() - Printf() moved to
the mush!  Yay is life.  [SVN 177] accent() - Allow accent() markup
characters specified by string [SVN 180] stripaccents() - Strip the
accents on the target string [SVN 180] pid() - Show pid processes of
anything you control [SVN 192] pgrep() - grep for parents [SVN 233]
cluster_u() - cluster u() [SVN 233] cluster_u2() - cluster u2() [SVN
233] cluster_ulocal() - cluster ulocal() [SVN 233] cluster_u2local() -
cluster u2local() [SVN 233] cluster_uldefault() - cluster uldefault()
[SVN 233] cluster_u2ldefault() - cluster u2ldefault() [SVN 233]
cluster_udefault() - cluster udefault() [SVN 233] cluster_u2default() -
cluster u2default() [SVN 233] cluster_grep() - cluster grep() [SVN 233]
cluster_regrep() - cluster regrep() [SVN 233] cluster_regrepi() -
cluster regrepi() [SVN 233] cluster_hasattr() - cluster hasattr() [SVN
233] cluster_lattr() - cluster lattr() [SVN 233] cluster_attrcnt() -
cluster attrcnt() [SVN 233] cluster_vattrcnt() - cluster vattrcnt() [SVN
233] cluster_get() - cluster get() [SVN 233] cluster_xget() - cluster
xget() [SVN 233] cluster_set() - cluster set() [SVN 233] cluster_default
- cluster default() [SVN 233] cluster_edefault - cluster edefault() [SVN
233] cluster_stats() - specifies statistics on cluster [SVN 233]
cluster_get_eval() - cluster get_eval() [SVN 233] cluster_ueval() -
cluster ueval() [SVN 233]


File: rhostmushhandbook.info,  Node: Commands<2>,  Next: Flags<5>,  Prev: Functions<4>,  Up: Additions

18.7.2.2 Commands
.................

@assert - Works like @break but reverse logic [18-9] idle - a ‘nothing’
command that won’t effect idle time.  Wizzes can optionally add command.
> for cluster sets (instead of &) [SVN 233] @cluster/new <dbref> – won’t
work on cluster object [SVN 233] @cluster/add <dbref>=<dbref> – won’t
add a pre-existing cluster object [SVN 233] @cluster/del <dbref> – won’t
delete a non-existing cluster object [SVN 233] @cluster/clear <dbref> –
purges the cluster list [SVN 233] @cluster/list <dbref> – lists objects
in cluster, total attributes, threshold, and action list [SVN 233]
@cluster/threshhold <dbref>=<number> – sets a threshold on the cluster
[SVN 233] @cluster/action <dbref>=<string> – sets action when treshhold
is met [SVN 233] @cluster/edit <dbref>=<string>,<string> – edits the
attribute(s) in a cluster [SVN 233] @cluster/set – @set for clusters
[SVN 233] @cluster/repair – repairs a damaged cluster (or tries to) [SVN
233] @cluster/grep – grep for a string in a cluster [SVN 233]
@cluster/reaction – edit for actions [SVN 233] @cluster/cut – physically
cuts the item from a cluster - only use as last resort [SVN 233]
@cluster/trigger – trigger action on cluster [SVN 233]


File: rhostmushhandbook.info,  Node: Flags<5>,  Next: Toggles<4>,  Prev: Commands<2>,  Up: Additions

18.7.2.3 Flags
..............

NO_CODE - Controls usage of code-commandss/functions.  Uses new second
permission table.


File: rhostmushhandbook.info,  Node: Toggles<4>,  Prev: Flags<5>,  Up: Additions

18.7.2.4 Toggles
................

HIDEIDLE - Stops the ‘idle’ from being updated as well as command count.
Wiz+ only.  MORTALREALITY - disables the inherit ability of wizards for
wiz_always_real [SVN 126]

MAILVALIDATE - validate the user list and abort mail without sending to anyone if invalid.

        - Thanks <Charlotte@Cajun>

CLUSTER - (internal toggle to handle cluster objects)


File: rhostmushhandbook.info,  Node: Admin Params,  Next: Bug Fixes,  Prev: Additions,  Up: RhostMUSH 3 9 0 p00

18.7.3 Admin Params
-------------------

[18-9] Added zones_like_parents for zones to search like @parents.  -
this does require the ZONECMDCHK @toggle set on each item/player.
log_maximum - specify the number of logtofile() calls allowed per
command.  power_objects - enable @power/@depower checks on non-players
rooms_can_open - allow rooms to be able to @open exits inside itself
sub_override - specify what %-subs can be overridden

sub_include - specify what %-subs you want added

        - Ambrosia

signal_object - Object containing signal handling attribute for SIGUSR1.

        - Odin

break_compatibility - @break/@assert allowed/disallowed
double-evaluation (disabled by default) signal_object_type - Type of
execution to do.  Default is ‘0’ (function only)’.  1 is a @trigger
effect.  [SVN 212] log_network_errors - enables (or disables) logging of
network errors on sockets


File: rhostmushhandbook.info,  Node: Bug Fixes,  Prev: Admin Params,  Up: RhostMUSH 3 9 0 p00

18.7.4 Bug Fixes
----------------

SORTBY was mangling the enactor.

        - Melpomine @ Vieux Carre

[18-7] THIS IS AN UNOFFICIAL PATCH. This fixes a Reality Level Lock issue.

        - Thanks Ixokai

[18-8] Fixes a vprintf allocation issue.

[18-9] Fixed a logical error with unfindable and the connect flag.

        - Thanks Xandar

[18-12] Fix double eval to @break/@assert to mimic Penn [18-13] Fixed
the convert scripts to handle irrigular behavior in TM3 flatfile [18-14]
Fix for LBUF free in elist() [18-15] Fix for permission issue with
regards to no_examine and attrib fetches [18-15] Fix for possible array
out-of-bounds with regards to backstage [18-16] Fix in wrap() for
wrap_out code with possible overrun (non-crash)

     Note: this effected both wrap() and wrapcolumns()

[18-17] Fix for moon() on displaying waxing/waning exact matches.

        - Thanks Jeff

[18-17] asksource.sh (make config/make confsource) fixed with (l)oad
issue.

[18-17] Fix for news/verbose switch that broke previous workings - Fixed

        - Thanks Ambrosia

[18-18] Fix for soundex() with a buffering issue (non-crashing) - Fixed

        - Thanks Jeff

Bug in (d)elete option in asksource script - Fixed

Bug in ‘home’ with reality level following - Fixed

        - Thanks Ol’Sarge @ Cajun

Bug in ‘@idesc <'@idesc>’ with reality level if ‘Real’ level not using ‘@desc <'@desc>’ - Fixed

        - Thanks Toby @ Cajun

Bug in ‘@rsrvdesc2 <'@rsrvdesc2>’ if target desc is ‘@idesc <'@idesc>’. - Fixed

        - Thanks Toby @ Cajun

Bug in double-free if default globals enabled - Fixed

        - Thanks Ixokai

Make config/confsource for option 15 and option 9 didn’t escape the ‘$’. - Fixed

        - Thanks Odin

Small issue in mail code where if max-index is reached mail won’t send -
Fixed

Bug in do_dbck with db loading/startup/reboot - small chance of crash. -Fixed

        - Thanks Odin

Feature bug in read_remote_name. Didn’t check examinable - Fixed

        - Ambrosia

Hook ‘fail’ didn’t work in hook_cmd. - Fixed

        - Rook

Bug in mail.c where it could effect @nuking players - fixed

        - Odin

Bug in news.c where it could effect @nuking players - fixed

        - Odin

Bug in @quota where buffer was mistakenly freed prior to display - Fixed

        - Ambrosia/Ashen

Issue with page/port and the MUXPAGE toggle. Resolved, page/port now cannot be used in combination with MUXPAGE

        - Lensman

Several missing helpfile entries added: isupper/islower, brace_compatibility, format_compatibility

     -Ambrosia

Bug in speech.c when compiling on some flavors of BSD fixed. Also cleaned some warnings.

        - Odin

Fixed a bug in cque.c relating to queue accounting on exceeding player_queue_max.

        - Odin, fixed and found by Brazil.

Fixed an issue with certain locks with displaying attribute names in examine. NON-CRITICAL-ISSUE

        - Ixokai

Fixed a strip issue of {}’s with regards to ‘]’. The ] command shouldn’t strip anything.

        - Odin & Ambrosia

Fixed a problem with 8-bit dates being passed to the compiler as build
time.  We now use date -R for RFC time.  Fixed a problem with examine on
targets you didn’t control.  Fixed problem with @kick and the queue.
Fixed buffer clobber issue in lloc() (introduce 3.9) Fixed logic error
of command pathing with ignore on ‘goto’ command.  Fixed ‘N’ command
from showing up.  (for ] alias) Fixed display for percent subs with
regards to @hook.

Fixed wrapcolumns() where it could crash on unique strings.

        - Thanks melkir

Fixed a bug with flag_name and possible duplicated entries Fixed chomp()
to handle %r conditions cleaner.

sub_include had a possible unitialized condition for %0-%9 on rare occurances. (SVN-87)

        - Thanks Loki

crash bug in lcon/lexit additions - fixed (SVN-105) Finally believe the
output snuffing issue is fixed (SVN-105) SIGSYS and some other signals
were mistakenly handled as panic shutdown.

setq()/setr() didn’t evaluate first argument. Introduced SVN 87 [SVN 113]

        - Thanks Melkir

Somehow @list options values got broken by a typo.  Weird.  Fixed.  [SVN
114] Tprintf off by one issue fixed for buffer allocation [SVN 115 - SVN
116] Off by one bug in map() from SVN 118.  Non crash, just argument
list off [SVN 119] Crash bug in ATRLOCK if attribute did not previously
exist in hash lookup [SVN 120] Realities had a logical bug.  Now
previous (broke) behavior available as option [SVN 122-124] Fixed a bug
in Reality level handling and CHKREALITY Toggle [SVN 125] Fixed
uninitalized variable with regards to dig()/@dig.  Introduced SVN 123
[SVN 128] Fix for QDBM compiles on aborting on the ‘rm’ section.
Introduced SVN 136 [SVN 137-138] Critical fix for time skew on AMD’s.
Infinite loop.  Introduced SVN 123 [SVN 139] Fix for sha1.c and
mushcrypt.c for compiling issues.  MUX2 provided code.  [SVN 140] Forgot
to update this bloody file [SVN 141] Fix for null entries deidling a
player.  It was intended behavior, but this could be confusing so was
fixed.  It still will de-cloak an idle-cloaked wiz.  [SVN 142] Fix for
timeskew affecting internal timers, such as database dumping.  [SVN 143]
Fixed a bad define for 64-bit autodetection.  [SVN 143]

Fix for timeskew affecting global timers. Introduced SVN 140. [SVN 144] (Rehash: SVN 151)

        - Thanks Ratio

Clean up code a bit with implicit declarations [SVN 145]

Bug in signal handling. If during a dump, it happened during an alarm() state, alarms would be ignored and as such the timer would be broke from that point on. Fix causes signal restore to re-set the alarm state.

        - Thanks Ratio

spellnum() had a comparision bug with ‘tens’ digit. [SVN 152]

        - Thanks Ratio

signal handling interferred with @reboots randomly (Introduced 3.9 SVN 100) [SVN 153]

        - Thanks Ratio

Crashbug in RANDMATCH() (Introduced 3.9) [SVN 157] Missing free_lbuf()
in caseall() (Introduced SVN 136) [SVN 157] Fix for QDBM and mail if the
mail db can’t load correctly.  [SVN 161]

Fix for @break/@assert to stop double-eval of first argument [SVN 164]

        - Thanks Brazil

Fix for all of the *default() functions evaluating default behavior all the time. It really probably shouldn’t have done that. [SVN 166]

        - Thanks Orion

Wouldn’t you know it, the *default() fix broke some backward
compatability (introduced SVN 166).  Fixed [SVN 167] Yet another fix but
this time to evaluate arguments to all the *u*default() functions (intro
SVN 166) Fixed [SVN 168] Fix for ptimefmt as the structure declaration
was missing an argument.  Bad mojo.  - Fixed [SVN 174] Rhost’s hardcoded
news system failed to free an lbuf on subscribe checks - Fixed [SVN 177]
creplace didn’t evaluate its second arguments and some syntax issues.  -
Fixed [SVN 183] Tweeking of unsafe_tprintf to safe_printf in some
locations where heavy usage is seen [SVN 190] mail/reply with the the
all option wouldn’t work if targets had spaces in names.  [SVN 194]
vsprintf didn’t like the double %% for statically stating % in certain
libraries [SVN 195] translate() didn’t take %0-%9 arguments [SVN 196]
citer() had a double lbuf free on replace_tokens [SVN 198]

@whereis/@whereall didn’t hide the location if user was hidden/dark correctly [SVN 202]

        - thanks Planet X

@mvattr/@cpattr should handle SBUF sized attribute names cleaner.  -
Fixed [SVN 207]

Help topic for @assert reversered - Fixed [SVN 209]

        - Bug ID 0000004 (BlackRook)

%q<label> broke with trace conditions. Introduced SVN 108 - Fixed [SVN 209]

        - Thanks Melpomine

bang support didn’t work for overloaded functions. Fixed [SVN 210]

        - Thanks Melpomine

SIGUSR1 would ignore the signal after use at times.  Fixed [SVN 212]
Possible SIGSEGV with argument preprocessing on certain commands.  Fixed
[SVN 213]

Fix for SIGALRM being ignored when IGNORE_SIGNALS compile time option enabled. fixed [SVN 225]

        - Thanks grump

Fix for map()/filter() for argument list passed. Fixed [SVN 227]

        - Thanks Ratio

Help not documented for fill character in ljc()/rjc() - Fixed [SVN 228]

        - Thanks Cary

OUTPUTPREFIX/OUTPUTSUFFIX stored through reboots - Fixed [SVN 233]

        - Thanks Adrick

Added missing topics for clustering - Fixed [SVN 244]

        - Thanks Cary

Logging network errors could cause heavy logging on really bad networks
- Fixed [SVN 245]

Connect honors @hide/unfindable/dark [SVN 320]

        - Thanks Planet X


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p18,  Next: RhostMUSH 3 2 4 p17,  Prev: RhostMUSH 3 9 0 p00,  Up: Changelog

18.8 RhostMUSH 3.2.4 p18
========================

[06/28/2004]

* Menu:

* Changes: Changes<2>.
* Bug Fixes: Bug Fixes<2>.


File: rhostmushhandbook.info,  Node: Changes<2>,  Next: Bug Fixes<2>,  Up: RhostMUSH 3 2 4 p18

18.8.1 Changes
--------------

@aflags takes /full switch to give count on how many objects have the
attribute.  useful incase you have concerns of attributes dissapearing.

Added queue_compatible config option to allow negative decremental of the semaphore attribute for elsemush compatibility

        - Lyle, Saffron, Dragon @ Paris

Added -DPARIS compile time option for older Penn/MUSH format compatibility

        - Dragon @ Paris

Added -OLD_SETQ compile time option to switch setq/setq_old compatibility

        - Thanks Lyle, Saffron, Dragon @ Paris

In all source, header, help, and readme files, ‘compatable’ renamed to ‘compatible’

        - Ambrosia

Enhanced mail/recall to show more stats (lots of people wanted them)

        - Lots of people

Added percent substitution ceiling for uniquely created DoS attacks.
Heh.  FUBAR flag no longer allows you to execute any functions.

Added config param ‘lcon_checks_dark’ that will enforce dark/unfindable.

        - Thanks Xandar

Beefed up on-line help for reality levels.  Hopefully they make sense
now :) Mail/read recognizes ‘both’ to handle first new/unread message
combination.  mail/anon optionally hides sender KEEPALIVE @toggle added.
- (AuroraMUX/Soruk) chkreality() function to check if victom sees
target’s reality.  CHKREALITY toggle that allows @Lock/user to become a
reality lock

@admin param ‘reality_locks’ to globally enable reality level lock checks.

        - Thanks lots of people.

Added /fail switch to @Hook.

        - Originally Amborsia, modified.  (MUX2 compat)

Added @admin param reality_locktype that optionally chooses how reality
locks are issued.  This should allow much more flexability.

Sideeffects could double eval. This was intended for some backward compatability with muse, but does allow a security risk. Now have an optional compile time option of SECURE_SIDEEFFECT that disables this.

        - Ambrosia

Added LOGGED attribute flag that will log anytime that attribute is
changed, modified, set, or cleared.

NOISY toggle to allow consistant noisy sets

        - Thanks Tam

backup_flat.sh now accept a ‘-s’ option for single-mode for cron entry.


File: rhostmushhandbook.info,  Node: Bug Fixes<2>,  Prev: Changes<2>,  Up: RhostMUSH 3 2 4 p18

18.8.2 Bug Fixes
----------------

WHO/DOING on the connect screen had a broken conditional where if you were NOT unfindable you still wouldn’t show up on WHO/DOING on the connect screen. - Fixed

        - Ambrosia & <Tam@Stargate>: Alpha Site

help files wouldn’t process escape characters right with ZENTY_ANSI - Fixed

        - Thanks Zivilyn/Xandar

mail/recall couldn’t do lookups based by-player on multi-sent messages -
Fixed Wizard objects not inherit hit attr @limits - Fixed

Possible crash bug with mail dynamic aliases via ‘$’. - Fixed

        - Thanks Xandar

@dynhelp/parse wouldn’t display ansi correctly (from previous fix) -
Fixed

CPU Protection not as robust on certain cases - Fixed

Month was off by one in mail/recall (introduced p18)

        - Thanks Mortalis @ Cajun

mail/recall had off-by-one for month (introduced p18)

logf() conflicted with built-in function in newest gcc compilers - Fixed

type cast warning in random function - Fixed

Unused variable cleanup in code.  - Fixed

format_name undocumented - Fixed

IGSWITCH @hook didn’t work with new format of commands in some instances
- Fixed

Trace output issues with CPU protection - Fixed

LBUF failed to be free on examining in rare cases.  (introduced p18) -
Fixed

Cleanup of some initialization variables.  Not a problem.  Just a
cleanup.

asksource broke on solaris systems.  - Fixed

Lots of cleanup for Solaris 2.8/2.9 builds.  Solaris didn’t declare
right.  - Fixed

Security issue with descs clobbering setq regs - Fixed (optional @admin
param)

new backup_flat.sh script broke for remote archives - Fixed

player cache had possible dereferenced pointer call - Fixed

autoreg_include.txt didn’t check txt subdirectory.  - Fixed

reality locks overwrote match state data (introduced p18) - Fixed

[18-1] Fix for IGSWITCH @hook and multiple switches - Fixed

[18-2] Fix for unfindable and loc() and other functions - Fixed

        - Thanks Spatterlight

[18-3] Fix for %l in trace output (same issue as loc() had) - Fixed

        - Thanks Spatterlight

[18-4] Fix for global attribute formatting where ‘what’ should have been
‘owhat’

[18-4] Modification to allow localized formatting with &format<attr>

        - Thanks Kevin

[18-5] Added content searches for all forms of help.

[18-6] Fix LBUF free issue (introduced 18-4)

Fix mail issue with marking and folders

        - Thanks Kevin

Enhanced @break to accept optional argument to ‘branch’


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p17,  Next: RhostMUSH 3 2 4 p16,  Prev: RhostMUSH 3 2 4 p18,  Up: Changelog

18.9 RhostMUSH 3.2.4 p17
========================

[ 06/04/2004]

* Menu:

* Changes: Changes<3>.
* Bug Fixes: Bug Fixes<3>.


File: rhostmushhandbook.info,  Node: Changes<3>,  Next: Bug Fixes<3>,  Up: RhostMUSH 3 2 4 p17

18.9.1 Changes
--------------

Rhost 3.2.4 is a locked version.  only bug fixes from this point on.
The next release will be 3.9 which will be alpha/beta leading to the 4.0
release.  Added sub-patchlevel versioning for pre-release patchlevel
testing.

Sanitizing of help files to correct missing/misdefined config parameters.

        - Ambrosia

An optional .conf file now has all available options to choose from.

        - Ambrosia

LOGROOM toggle now logs to subdirectory ‘roomlogs’.

        - Thanks Xandar

new admin param ‘roomlog_path’ specifies path of above LOGROOM path.
attrcnt() modified to help rebuild wonked attribute tables @aflags
modified to help list attribute information


File: rhostmushhandbook.info,  Node: Bug Fixes<3>,  Prev: Changes<3>,  Up: RhostMUSH 3 2 4 p17

18.9.2 Bug Fixes
----------------

malloc.h wasn’t properly identified in the configure tool - Fixed
ZENTY_ANSI didn’t handle ansi correctly if TINY_SUB was also defined -
Fixed

@admin param garbage_chunk wasn’t used - Removed

        - Ambrosia

@admin param precmd_obj wasn’t used - Removed

        - Ambrosia

sortby() imported for backward compatibility.

updated Rhost minimal_db to handle new conf file parameters.

        - Thanks Cloud

You could alias over hardcoded functionality - Fixed Improved attribute
handling for corrupting attributes.  @attribute/delete now does sanity
checking for attribute existing first @aflag shows the numerical unique
identifer of the attribute

@pcreate/reg would crash if issued by a non-player - fixed

        - Thanks Xandar


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p16,  Next: RhostMUSH 3 2 4 p15,  Prev: RhostMUSH 3 2 4 p17,  Up: Changelog

18.10 RhostMUSH 3.2.4 p16
=========================

[02/24/2004]

* Menu:

* Changes: Changes<4>.
* Additions: Additions<2>.
* Admin Params: Admin Params<2>.
* Bug Fixes: Bug Fixes<4>.


File: rhostmushhandbook.info,  Node: Changes<4>,  Next: Additions<2>,  Up: RhostMUSH 3 2 4 p16

18.10.1 Changes
---------------

+proof in mail now displays text for forwarding/replied messages.

        - Many Many People

@cpattr, @mvattr, and @edit now take attribute content locking into
effect.  inc() and dec() now take strings as ‘0’ values.  @door rewrite
to handle mangled port openings/closings.

@decompile now has /attribs, /flags, and /all switches

        - Thanks <Tam@Stargate>: Alpha Site

@set with the /noisy switch notifies if attributes (cleared)

        - Thanks <Tam@Stargate>: Alpha Site

@dynhelp (dynhelp()/textfile()) now does partial-matching.

- for mail writing will now allow you to insert ‘=’ without escaping.

        - Thanks <Alibi@Cajun>

New bugreport script to handle bug report mailing.

        - Lensman & Ashen-Shugar

New auto configurator scripts for make options.  ZoneWizLock now allows
you to examine any area in the zone as well as modify it.  Royalty and
higher ownership overrides this lock.  Help and Wizhelp have improved
topics.  Third party work on PHP and SQL support - Still in pre-beta,
not included.  contact <lensman@rhostmush.org> for SQL @hook for
security related commands shored up.  Modified credits for MUXPAGE
toggle.  Penn had the feature first :) Wizards now optionally checked
for @limits The non-command alias functionalty has been given a
well-needed overhall Better error handling was added to the functions in
htab.c Unified some of the Makefile defines for OsX, Cygwin, BSD. Added
funceval to @list

@doing and @doing/header expanded in length to full-use.

        - Thanksla Falor

switch(), switchall(), and @switch now optionally take #$ substitutions.
GREATLY updated auto-makefile configurator to handle most common library
checks.

lattr() takes multiple page values

        - Thanks <Sirona@Cajun>


File: rhostmushhandbook.info,  Node: Additions<2>,  Next: Admin Params<2>,  Prev: Changes<4>,  Up: RhostMUSH 3 2 4 p16

18.10.2 Additions
-----------------

* Menu:

* Functions: Functions<5>.


File: rhostmushhandbook.info,  Node: Functions<5>,  Up: Additions<2>

18.10.2.1 Functions
...................

aiindex() - works like iindex() except will append to a null list.
sortby() - Added for MUX2 compatibility


File: rhostmushhandbook.info,  Node: Admin Params<2>,  Next: Bug Fixes<4>,  Prev: Additions<2>,  Up: RhostMUSH 3 2 4 p16

18.10.3 Admin Params
--------------------

wizmax_vattr_limit - Attribute limiter for wizards wizmax_dest_limit -
Destroy limiter for wizards vattr_limit_checkwiz - Enable/Disable wiz
limiters

guild_attrname - Make the GUILD column in WHO read a different attribute. (new players also have this attr set with the default value)

        - Suggested by <Leona@Faetopia>

exits_connect_rooms - This parameter defines if rooms with exits will
never be floating.  This parameter will disregard the need for exits to
always be indirectly linked to the starting room.  switch_substitutions
- If enabled, allows #$ substitutions in switches.  examine_restrictive
- Settable 1-5 (0 disables) to restrict examine based on ‘level’


File: rhostmushhandbook.info,  Node: Bug Fixes<4>,  Prev: Admin Params<2>,  Up: RhostMUSH 3 2 4 p16

18.10.4 Bug Fixes
-----------------

Double free issue with caseall() - Fixed Possible SIGSEGV condition with
nobroadcast_host (introduced p15) - Fixed If memory/system corrupted,
could corrupt room check in command.c - Fixed Possible SIGSEGV with
+proofing mail (introduced p15) - Fixed

Exit movement backward compatibility broke with unlinked exits (introduced p15) - Fixed

        - Thanks Ol’Sarge@Cajun <Ol'Sarge@Cajun>

Possible SIGSEGV legacy bug with flag handling - Fixed

        - Thanks <Tethys@Cajun>

strmath() didn’t work like expected with ‘amt’ argument - Fixed BOUNCE
flag was not cleared on recoverable objects - Fixed

        - Thanks Iuz

debugstack extra free in alias table (introduced p15) - fixed

        - Thanks <Jamie@M*U*S*H>

NDBM in make confsource assumed ndbm.h on server sane.  It’s usually
not.  - Fixed Wizard limits wern’t verified on ownership if not set
INHERIT - Fixed

help/wizhelp didn’t show that you could do topic wildcard searches - Fixed

        - Thanks Falor

help syntax error with regards to null() and @@() - Fixed

        - Thanks Falor

Passing only one attr to @admin logout_cmd_alias caused a crash - Fixed

        - Thanks Ambrosia

BLIND wasn’t consistant for all commands - Fixed

        - Thanks Xandar

The hash tables could appear to loose information where aliases were
used.  (introduced p15) - Fixed The Hash tables are sized too small and
don’t reflect ‘todays Rhost’.  - Fixed @flag/remove wouldn’t return an
error message if no alias existed - Fixed hash with an off-by-one count.
(Introduced p16 beta) - Fixed

Typo with help.txt with regards to terse flag - Fixed

        - Thanks Sasaki <Chie@Fantasy> Moon


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p15,  Next: RhostMUSH 3 2 4 p14,  Prev: RhostMUSH 3 2 4 p16,  Up: Changelog

18.11 RhostMUSH 3.2.4 p15
=========================

[09/09/2003]

* Menu:

* Changes: Changes<5>.
* Additions: Additions<3>.
* Admin Params: Admin Params<3>.
* Bug Fixes: Bug Fixes<5>.


File: rhostmushhandbook.info,  Node: Changes<5>,  Next: Additions<3>,  Up: RhostMUSH 3 2 4 p15

18.11.1 Changes
---------------

MASSIVE internal rewrite of internal flag/command/function structure to prepare for loadable/unloadable module support.

        - Lensman

New Directory Structure for data, txt, src, hdrs.

        - Lensman

Script Rewrites for better resilliancy

        - Lensman, Ambrosia, Ashen-Shugar

local.c plugin support

        - Lensman

Alias system overhauled and rewritten to be more robust

        - Lensman

! and !! patch

        - Written and provided by Jeff

We now run on gdbm 1.8.3

        - Thanks Lensman

wildmatch fix

        - Lensman & Ash

minimal database provided that includes SGP, myrddin bbs, global code
Add method for global (master room) exits to be shown with ‘look’

     Note: PRIVATE and/or FLOATING flags remove this if set on exit.

Add anonymous mail via the /anon switch

        - Thanks Saffron & Lyle @ Paris

mail/recall cleaned up for better display/information.

        - Thanks <Ivory@Mednights>

Timestamps added for original message in forward/reply

        - Thanks <Ivory@Mednights>

lit() can accept commas as part of it’s input string

+bcc in mail/write now gives mail BLINDLY to get target. They won’t see the To: list(s).

        - Thanks Saffron & Lyle @ Paris

modified hastype() to have same permissions as type()

        - Thanks Rynos

fixed mail issue with dynamic mail aliases and permissions.

        - Thanks Erik

Add way for @emit to parse ‘##’ for target it receives. /sub switch.

        - Thanks Jared Leisner @ Ennerseas

Add method to see ‘mail/status’ with mailstatus() function.

        - Thanks Rosalind @ Nevermore

config(sideeffects_txt) return the string of sideeffects enabled.

        - Lensman

Penn conversion script included in distribution.

        - Thanks Mac

/preserve switch to @chown and @chownall. Will keep all flags constant.

        - Lensman

@list stack now shows filenames instead of file pointers.

/pid added to @notify to handle PID processes

        - Thanks Storm

/recpid added to @wait to record PID process to setq-registers specified.

        - Thanks Storm

@function takes /d[elete] switch to delete user-defined functions.
lzones() now take optional arguments for large zone lists.  Improved CPU
protection (yes, even more).  @doors are no longer preserved between
reboots.

13th argument to columns() to allow padding of short columns

        - Thanks Patrick Bogen

inc()/dec() (the hardcoded xinc/xdec) now, like other servers, handle non-numericals for arguments.

        - Thanks Xandar

@pcreate now allows you the /register switch so wizards can email the pwds.

        - Thanks Xandar

@pemit (and all switches) now handle REALITY LEVELS with /reality switch.

        - Thanks <Dervish@Cajun>

@admin alias allows re-aliasing existing aliases or deleting aliases.

        - Lensman


File: rhostmushhandbook.info,  Node: Additions<3>,  Next: Admin Params<3>,  Prev: Changes<5>,  Up: RhostMUSH 3 2 4 p15

18.11.2 Additions
-----------------

* Menu:

* Functions: Functions<6>.
* Flags: Flags<6>.
* Toggles: Toggles<5>.


File: rhostmushhandbook.info,  Node: Functions<6>,  Next: Flags<6>,  Up: Additions<3>

18.11.2.1 Functions
...................

elementsmux() - for MUX elements() compatibility.

        - Thanks <Rook@EnnerSeas>

parsestr() - helps with speech formatting.

chomp() - used to strip returns before, after, or both sides of string.

        - Thanks Storm

escapex() - just like escape() but you can choose what chars to _not_
escape

securex() - just like escapex() but for secure()’s counterpart


File: rhostmushhandbook.info,  Node: Flags<6>,  Next: Toggles<5>,  Prev: Functions<6>,  Up: Additions<3>

18.11.2.2 Flags
...............

BLIND - flag for exits and rooms to make target arrival/leaving ‘snuffed’.

        - Idea from many people (and TM3)

DEFAULT - Attribute flag for handling default global attrib (TM3)
SINGLETHREAD - Attribute flag to handle single-threading $commands
ATRLOCK - Attribute flag to handle global attribute locking


File: rhostmushhandbook.info,  Node: Toggles<5>,  Prev: Flags<6>,  Up: Additions<3>

18.11.2.3 Toggles
.................

MUXPAGE - Toggle to allow mux-like paging for Penn/MUX/TM3 compatibility.

        - Thanks PennMUSH

NOGLOBPARENT - Toggle to disable inheritance of global inheret parents.
NODEFAULT - Toggle to disable global default handling (TM3)


File: rhostmushhandbook.info,  Node: Admin Params<3>,  Next: Bug Fixes<5>,  Prev: Additions<3>,  Up: RhostMUSH 3 2 4 p15

18.11.3 Admin Params
--------------------

mail_verbosity - Add Subj: to sent mail as well as to disconnected players.

        - Thanks Saffron & Lyle @ Paris

mail_anonymous - Default name for anonymous mail (Default: `Anonymous')
sidefx_maxcalls - (1000 default) for max sideffects allowed/command.
oattr_enable_altname - to enable/disable alt name usage in
odrop/ofail/osucc.

oattr_uses_altname - for alt names sent to odrop/ofail/osucc.

        - Thanks Rook @ Ennerseas (default _NPC)

empower_fulltel - Offer two methods for FULLTEL (‘self’ & anything not cloaked)

        - Thanks <Punk@FantasyMoon>

spam_msg - Message sent to spammers

        - Ambrosia

spam_objmsg - Message sent to spammers of objects

        - Ambrosia

room_aconnect - Aconnects on individual rooms work (cloak/dark checked)

        - Lensman

room_adisconnect - Adisconnects on individual rooms work (cloak/dark checked)

        - Lensman

player_attr_default - Sets default @<attrib> handler for did_it()
attribs (TM3) thing_attr_default - Sets default @<attrib> handler for
did_it() attribs (TM3) exit_attr_default - Sets default @<attrib>
handler for did_it() attribs (TM3) room_attr_default - Sets default
@<attrib> handler for did_it() attribs (TM3) global_clone_obj - Sets
default dbref# for cloning attributes global_clone_player - Sets default
debref# for cloning attributes (TM3) global_clone_thing - Sets default
debref# for cloning attributes (TM3) global_clone_room - Sets default
debref# for cloning attributes (TM3) global_clone_exit - Sets default
debref# for cloning attributes (TM3) global_attrdefault - Sets global
locker for attribute sets/clears nobroadcast_host - Define what sites
will be ‘snuffed’ from MONITOR


File: rhostmushhandbook.info,  Node: Bug Fixes<5>,  Prev: Admin Params<3>,  Up: RhostMUSH 3 2 4 p15

18.11.4 Bug Fixes
-----------------

Bug in wizhelp with ‘mail_lockdown’ toggle. - Fixed

        - Thanks Dervish

Multiple help/wizhelp fixes. - Fixed

        - Thanks Dervish

Bug with @mvattr and QUIET flag - Fixed

        - Thanks Xandar

Objects could use the brandy toggle to send mail.  - Fixed Security
issue with autoregistration - Fixed goto didn’t have hooks before/after
right - Fixed

SIGSEGV on autozone add if player didn’t belong to zone - Fixed

        - Thanks Rook & Sylph @ Ennerseas

Bug with teleporting and permissions - Fixed

        - Thanks Mach <Speed@FantasyMoon>

NASTY bug that could corrupt registries with @freeze/@thaw/@wait (RARE) - Fixed

        - Thanks Rook @ Ennerseas

Fix help entry with @convert/@quota cross-matching. - Fixed

        - Thanks Dervish

Fix alloc corruption with ‘page’ from liberal nulls. (p15 introduced) - Fixed

        - Thanks Xandar

Fix issue where if in @program string sent to global_error_obj incorrect - Fixed

        - Thanks Zivilyn

Fix for orflags()/andflags() being broke with flag rewrite. - Fixed

        - Thinks Rosalind & Vulcan @ Nevermore

Fix for @hooks to now successfully work on goto - Fixed Fix for @uptime
to show time up longer than a year - Fixed

Fix for @hook on goto. Did not handle /permit or /ignore right - Fixed

        - Thanks Rook

Fix for legacy bug in @list functions for blowing a buffer if too many user defined functions have been defined. Wow, talk about old.

        - Thanks <Aalita@Ennersea>

Fix for ZENTY_ANSI compiletime with a possible buffer overrun.  - Fixed
Fix for ZENTY_ANSI with handling safebuff() - Fixed.  Fix for two rhosts
running same debugmon debug_id - Fixed.  Fix for mis-matched
DPUSH/RETURN for DPOP in door.c - Fixed

Fix for pemit()/npemit() with argument evaluation - Fixed

        - Thanks <Matthew@Draconis>

Fix for legacy bug with vattr initialization - Fixed

        - Thanks <Matthew@Draconis>

Fix for library overflow issues regarding system call on ptimefmt() - Fixed

        - Thanks Shari

Fix for default() and edefault() returning improperly for invalid dbref# - Fixed

        - Thanks Matthew

lock(), rxlevel(), txlevel(), and parent() didn’t increment the sidefx
counter the correct way.  - Fixed

wizhelp entry with no_move had grammer mistakes. - Fixed

        - Matthew

Possible overrun on the stack with regards to iter() during certain config opts.

        - Thanks <Illithid@Ennersea>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p14,  Next: RhostMUSH 3 2 4 p13,  Prev: RhostMUSH 3 2 4 p15,  Up: Changelog

18.12 RhostMUSH 3.2.4 p14
=========================

[07/10/2002]

* Menu:

* Changes: Changes<6>.
* Additions: Additions<4>.
* Admin Params: Admin Params<4>.
* Bug Fixes: Bug Fixes<6>.


File: rhostmushhandbook.info,  Node: Changes<6>,  Next: Additions<4>,  Up: RhostMUSH 3 2 4 p14

18.12.1 Changes
---------------

round() excepts negative args (60) for rounding values to whole numbers. (MUX2) The SPOOF flag is now inheritable.

        - Thanks Milk & Nyssa

Added /nosub switch to @pemit so ## and #@ arn’t subbed.

Add /preserve to @wipe that wipes all _but_ the match

        - Thanks Mikhail Mikhailov

Force an ANSI_NORMAL at the end of @extansi calls @oxtport/@o<blah> messages don’t show if a null string. This is handy if you want to process sideeffects but don’t want a result to show.

        - Thanks Nyssa

Add to cpu-slamming an optional way to register-site/forbid-site the
person.  set() now handles ansi.  setq()/setr()/r() now handles ansi.
If owner set FLOATING, floating messages not returned.  Improved chksum
methods on @freeze/@thaw

Added /basic switch to @lock for PENN compatibility.

        - Thanks <Trispis@M*U*S*H>

Attributes starting with a ‘~’ are now supported if ATTR_HACK enabled.

        - Thanks <Trispis@M*U*S*H>

Added wildcard matches to @list user_attributes.

        - Thanks <Brazil@MUX2>

Added a-z setq() registers for MUX/TM3 compatibility.  (very MEMORY
intensive) @list alloc now shows additional stack/lbuf information.
iter() and it’s ilk now use Brazil’s replace_token() call for ## and #@
(MUX2) citer() now has an output seperator lwho() takes argument of ‘2’
to list JUST the ports.  Add internal attribute SpamMonitor to store
history of command(s).  Modified MONITOR sitecons so it shows the remote
port they’re connecting from.  Modify sin(), tan(), etc (ala MUX) for
conversions.  Backward compatible (MUX2)

Zenty’s ANSI modifications.

        - Thanks <Zenty@RhostMUSH>

Added way to convert PENN 1.7.5 flatfiles to RhostMUSH native.

        - Thanks Mac

Added SHS password encryption and plantext to crypt/SHS conversion on the fly.

        - Thanks <Azhdeen@RhostMUSH>


File: rhostmushhandbook.info,  Node: Additions<4>,  Next: Admin Params<4>,  Prev: Changes<6>,  Up: RhostMUSH 3 2 4 p14

18.12.2 Additions
-----------------

* Menu:

* Functions: Functions<7>.
* Commands: Commands<3>.
* Flags: Flags<7>.
* Toggles: Toggles<6>.


File: rhostmushhandbook.info,  Node: Functions<7>,  Next: Commands<3>,  Up: Additions<4>

18.12.2.1 Functions
...................

txlevel() - sideeffect that sets @txlevel (or displays)

        - Thanks <accela@AniMUSH>

rxlevel() - sideeffect that sets @rxlevel (or displays)

        - Thanks <accela@AniMUSH>

rset() - sideeffect that sets attribute and returns value.

        - Thanks <Trispis@M*U*S*H>

pedit() - used to mimic Penn’s edit() functionality (Penn)

ptimefmt() - used to mimic Penn/Mux’s timefmt() functionality
(Penn/MUX2)

textfile() - works like dynhelp() but pushes onto buffer (Penn)

        - Thanks Raevnos & PennMUSH

lattrp() - lattr() for parent checks

        - Idea from Jake & MUX2

ctu() - function that does deg/rad/grad conversion visiblemux() - works
like mux’s visible()


File: rhostmushhandbook.info,  Node: Commands<3>,  Next: Flags<7>,  Prev: Functions<7>,  Up: Additions<4>

18.12.2.2 Commands
..................

@hook to show/display/change individual hooks.  Switches are:

              /permit    - Return 'Permission denied.' if fail lock (1/0 boolean)
              /ignore    - Fall through command check if fail lock (1/0 boolean)
              /before    - Process functionality before command execution.
              /after     - Process functionality after command execution.
              /igswitch  - Mark command to ignore failed /switch matches.

     - Thanks Moe@BrazilMUX (/igswitch idea)


File: rhostmushhandbook.info,  Node: Flags<7>,  Next: Toggles<6>,  Prev: Commands<3>,  Up: Additions<4>

18.12.2.3 Flags
...............

ATTRIBUTE FLAG: uselock - when set on an attribute with a $command, will
look for a matching ~<attribute> to eval the lock.  This does BOOLEAN
evaluation.  1 pass, 0 fail.

SPAMMONITOR - mark if player and/or target item check for spam (60
cmds/sec)


File: rhostmushhandbook.info,  Node: Toggles<6>,  Prev: Flags<7>,  Up: Additions<4>

18.12.2.4 Toggles
.................

ZONEINHERIT - Allows zonemasters to have attributes inherited to
children.


File: rhostmushhandbook.info,  Node: Admin Params<4>,  Next: Bug Fixes<6>,  Prev: Additions<4>,  Up: RhostMUSH 3 2 4 p14

18.12.3 Admin Params
--------------------

muddb_name - admin param for db names to seperate from ‘mud_name’

        - Thanks <Milk@MattRhost>

global_error_obj - evaluate the VA attribute on the object if defined. this will evaluate the ‘huh?’ message(s).

        - Thanks <Zenty@RhostMUSH>

mail_autodeltime - specifies when mail is globally purged (default 21
days) global_parent_room - globally inherit attributes to room w/o
@parent global_parent_thing - globally inherit attributes to thing w/o
@parent global_parent_player - globally inherit attributes to player w/o
@parent global_parent_exit - globally inherit attributes to exit w/o
@parent hook_obj - globally define the ‘hook’ object.  hook_cmd -
process ‘hooks’ on specified commands:

              PERMIT   - to pass who can use/etc (bitmask 1)
              IGNORE   - to IGNORE who can use/etc (bitmask 2)
              BEFORE   - to pass what is done before command (bitmask 4)
              AFTER    - to pass what is done after command (bitmask 8)
              IGSWITCH - bypass error control on non-existant switches.

     - Thanks Moe@BrazilMUX (igswitch idea)

look_moreflags - if enabled, will show global flags on things with
examine.  stack_limit - nest check for ‘stack’ to throttle back a given
amount.  (Penn)


File: rhostmushhandbook.info,  Node: Bug Fixes<6>,  Prev: Admin Params<4>,  Up: RhostMUSH 3 2 4 p14

18.12.4 Bug Fixes
-----------------

HELPFILE - trigger() was not a command but was shown in help. -Fixed

        - Thanks <accela@AniMUSH>

HELPFILE - trim() had examples with args reversed. - Fixed

        - Thanks <accela@AniMUSH>

HELPFILE - locate() had ‘I’ instead of ‘i’. - Fixed

        - Thanks <DOSBoots@AniMUSH>

HELPFILE - Help on substitutions incorrect with %-subs. - Fixed

        - Thanks <DOSBoots@AniMUSH>

HELPFILE - wizhelp didn’t list ‘news’ and ‘newsdb’ in the main list. - Fixed

        - Thanks <Nyssa@Everywhere>

HELPFILE - help didn’t show the /quiet switch to @trigger. - Fixed

        - Thanks Deus <Maximas@TaintedEarth>

HELPFILE - modify help for twinklock to point to NOMODIFY flag.

        - Thanks Lyle

Option incorrectly shown in @list options mail.  - Fixed SESSION didn’t
cut the name off at 16 chars (formatting issue) - Fixed mailquick()’s
arg didn’t totally mirror MUX’s mail() - Fixed Fix for if who_unfindable
disabled, player_dark disabled, and allow_whodark enabled you’d never
get the connect flag of a wizard.  - Fixed

Linux and other weird unix systems tended to hang on AUTH lookups still. - Fixed

        - <Thorin@RhostMUSH>

v() wouldn’t handle special chars as first char if enabled via ATTR_HACK - Fixed

        - Thanks <Trispis@M*U*S*H>

parent() when used to set a new parent did not return the dbref# - Fixed
Fixed legacy bug in QUEUE which effected a-z setq() regs.  - Fixed
‘home’ check was broke if set disabled and ignore at the same time -
Fixed

@thaw didn’t handle semaphores properly. - Fixed

        - Thanks Dervish

Zone-ignores didn’t work for QUIT, LOGOUT, and it’s ilk. - Fixed

        - Thanks Nyssa

Debug Monitor stack had a conditional off-by-one state on @reboots - Fixed

        - Thanks Mac and Ambrosia

@extansi was broke when ZENTY_ANSI not defined - Fixed

        - Thanks Ambrosia & Lensman

plushelp_file and plushelp_index missing from wizhelp - Fixed

        - Thanks Ronan

wildcard matching could become problematic - Fixed.

        - Thanks <Sketch@M*U*S*H> & Javelin


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p13,  Next: RhostMUSH 3 2 4 p12,  Prev: RhostMUSH 3 2 4 p14,  Up: Changelog

18.13 RhostMUSH 3.2.4 p13
=========================

[02/01/2002]

* Menu:

* Changes: Changes<7>.
* Additions: Additions<5>.
* Admin Params: Admin Params<5>.
* Bug Fixes: Bug Fixes<7>.


File: rhostmushhandbook.info,  Node: Changes<7>,  Next: Additions<5>,  Up: RhostMUSH 3 2 4 p13

18.13.1 Changes
---------------

Help was missing for @admin parameter areg_lim.  - Added Help was
inconsistant for die() and dice().  - Changed

/quiet switch to @notify. Also added /quiet switch to @drain.

        - Thanks <Hellspawn@MUX2>

@cpattr modified so if no source given, assumes enactor (player) to be
source.  lattr() now takes 3rd argument.  ‘$’ for all $commands, ‘^’ for
listens.  /clear switch added to @toggle.  It only clears what you have
access to clear.  If there are more than 20 zones on an item, it
displays the dbref#’s only.  /## notation added to @site and all @admin
site information.  (0-32 range) ANSI highlight of @edit substitutions
added.  Follows NO_ANSI_EX toggle.  Multiple ‘types’ now allowed in
function remtype() On buffer problems, it records the line number and
file that it happened.  @list options handle sub-options now (config,
mail, boolean, values) Name field increased from 16 to 22 characters
(MUX2/TM3/PENN) /instant switch to @destroy (compatibility) - is the
‘default’ behavior.  (TM3) Immortals/#1 can use mail/recall to see mail
sent by others.  3rd argument to lrooms()’s to show level you’re in
(MUX2) LOGGING option to @flagdef.  Logs all setting/removing
(configurable)

Allow specifying filename to @dump/flat (filename restricted and ends in .flat)

        - Thanks <Reptile@CotM>

Modification to @lock/GetFrom to include target’s location as well.
Options added to mail[/read] for more flexability (ball, nall, uall)
Ports listing added to lwho() (boolean 1/0 - 0 (null) default) Ports
added to idle() (boolean 1/0 and optional specified port) Ports added to
conn() (boolean 1/0 and optional specified port) cmds() modified to
handle target port lattr() handles optional target of *player and player
now.


File: rhostmushhandbook.info,  Node: Additions<5>,  Next: Admin Params<5>,  Prev: Changes<7>,  Up: RhostMUSH 3 2 4 p13

18.13.2 Additions
-----------------

* Menu:

* Functions: Functions<8>.
* Commands: Commands<4>.
* De-Powers::
* Toggles: Toggles<7>.


File: rhostmushhandbook.info,  Node: Functions<8>,  Next: Commands<4>,  Up: Additions<5>

18.13.2.1 Functions
...................

safebuff() - function to go back in the function until the first matched
delimiter if strlen() is equal to or greater than the maximum.  (3998
characters)

     Note: this _WILL_ strip ansi.

floordiv() - return the ‘floor’ (rounded down) of result of division.
(MUX2) last() - return last word specified by delimiter (MUX2)
singletime() - return time rounded to lowest element (s, m, h, d, etc)
(MUX2) parenmatch() - (2 args, 1 just for error) (Idea from ChaoticMUX)
ansifies all bracket/paren/brace matches and RED’s nonmatch.  lrand() -
(4 arguments) - returns random numbers between two points (MUX2)
keeptype() - does reverse of remtype() lcmds() - List all commands ‘$’
or listens ‘^’ on object (MUX2) pack() - convert a number to base 2-64.
(MUX2) unpack() - convert a pack()’d number back to base 10 (MUX2)
crc32() - return a crc32 code for the specified string.  (MUX2) toggle()
- works like the @toggle command.  Follows SIDEFX restrictions.
moneyname() - returns the singular/plural name based on argument
(Discordia) config() - if no argument, displays all parameters (you have
access to), otherwise display the value of the specified parameter.


File: rhostmushhandbook.info,  Node: Commands<4>,  Next: De-Powers,  Prev: Functions<8>,  Up: Additions<5>

18.13.2.2 Commands
..................

@eval - force evaluation of functionality (TM3)


File: rhostmushhandbook.info,  Node: De-Powers,  Next: Toggles<7>,  Prev: Commands<4>,  Up: Additions<5>

18.13.2.3 De-Powers
...................

mortal_examine - if set, target always examines like a mortal. (@decompile/etc)

        - Thanks <Belial@Armageddon>


File: rhostmushhandbook.info,  Node: Toggles<7>,  Prev: De-Powers,  Up: Additions<5>

18.13.2.4 Toggles
.................

mail_lockdown - target is restricted in mail ‘monitoring’ like a mortal.
muxpage - allows ‘p <blah>’ to work like in MUX/TM3


File: rhostmushhandbook.info,  Node: Admin Params<5>,  Next: Bug Fixes<7>,  Prev: Additions<5>,  Up: RhostMUSH 3 2 4 p13

18.13.3 Admin Params
--------------------

log (parameter) god - log all activity of #1 heavy_cpu_max - ceilings
heavilly used cpu-intensive functions.  lastsite_paranoia - enable
auto-register/auto-forbid of hosts spamming site.  max_lastsite_cnt -
specify # of connects in period of time to allow from site.
min_con_attempt - specify the wait between ‘first’ connect and subquent
cons.  lattr_default_oldstyle - (default 0) snuffs the ‘#-1 NO MATCH’
(TM3) formats_are_local - localize @nameformat, @conformat, @exitformat
mail_def_object - default object for global aliases.  Handle
‘alias.name’ and ‘comment.name’.  wizard_queue_limit - distinguish
between wizard and mortals for queues.  max_pcreate_time - time range
allowed before max_pcreates reached.  max_pcreate_lim - number of
pcreates allowed in given timeframe pcreate_paranoia - level of action
you want to take against infidels (0-2) global_parent_obj - global
parent that attributes are inherited off of.


File: rhostmushhandbook.info,  Node: Bug Fixes<7>,  Prev: Admin Params<5>,  Up: RhostMUSH 3 2 4 p13

18.13.4 Bug Fixes
-----------------

convtime() used daylight savings - no longer uses daylight savings -
Fixed IDESC wouldn’t work with Reality Levels - Fixed Bad memory could
corrupt command parsing with sockets - Fixed @list alloc would scroll
values negative - Fixed @teleport and movement could ‘hide’ from wizards
in inventories - Fixed home, if @icmd’d, wouldn’t allow the command to
be overridden - Fixed The CLOAK flag would give ‘has left’ messages -
Fixed The lookup_player() code now handles ‘*’ as well as not.  - Fixed
If recycling was not enabled, you could still @destroy - Fixed

Trace output was broke with how it displayed enactor/target - Fixed

        - Thanks <Raevnos@M*U*S*H>

NOSTOP flag on objects in the master room could cause an infinite loop - Fixed

        - Thanks <Selene@TaintedEarth>

QueueMax attribute would not work unless owned by the target.  - Fixed

DNS/AUTH lookups could have unforseen behavior with non-printable chars - Fixed

        - Thanks <Morgan@RhostMUSH>

setqmatch() does not work like the help dictated it should. - Fixed

        - Thanks <Belial@Armageddon>

hastoggle() was wizard-only for no reason - Fixed

        - Thanks <Belial@Armageddon>

atof() could have buffer issues if string greater than 100 characters. - Fixed

        - Thanks <Brazil@BrazilMUX>

Counts for input, output, and lost fields were not accurate - Fixed

        - Thanks <Amos@RhostMUSH>

@conncheck could have unpredicatable results with the name of the door. - Fixed

        - Thanks <Amos@RhostMUSH>

MONITOR information had some uninitialized values that could crash - Fixed

        - Thanks <Amos@RhostMUSH>

DARK flags with wizards so it won’t show wiz as being connected. - Fixed

        - Thanks <Ian@Everywhere>

mid() didn’t work like it did in MUX2/PENN. It’s now an alias - Fixed

type() could bypass cloaked targets - Fixed

        - Thanks <Brazil@BrazilMUX>

quick_wild() could cause some SIGSEGV’s if not accurately verified -
Fixed

inventory doesn’t handle Reality Levles corrected - Fixed

        - Thanks <Zenty@BrazilMUX>

lcon(), next(), con(), lexits(), lcon(), xcon(), and sees() with
reguards to handling Reality Levles were broke.  - Fixed

Help for trim() had examples with it’s 2nd and 3rds arguments reversed - Fixed

        - Thanks <accela@AniMUSH>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p12,  Next: RhostMUSH 3 2 4 p11,  Prev: RhostMUSH 3 2 4 p13,  Up: Changelog

18.14 RhostMUSH 3.2.4 p12
=========================

[06/15/2001]

* Menu:

* Changes: Changes<8>.
* Additions: Additions<6>.
* Admin Params: Admin Params<6>.
* Bug Fixes: Bug Fixes<8>.


File: rhostmushhandbook.info,  Node: Changes<8>,  Next: Additions<6>,  Up: RhostMUSH 3 2 4 p12

18.14.1 Changes
---------------

Introduction of REALMS/Reality Levels

        - Thanks to <Shade@Mediterranian> for the code

randextract() handles 5th arg for output and can handle ‘1’ arg passed
Cleaned up handling of ndbm.h Improved validation for autoregistration
Improved logging

Added total commands on @conncheck

        - Thanks <Meglos@MyrkaMUX> (Zenty’s concept)

Modified @aconnect/@adisconnect behavior.  @aconnect accepts %0 as 1/0
based on existing connection @adisconnect accepts %0 (reason), %1 (time
on), %2 (1/0 based on conn) mail/status shows ‘-‘ on current message
read.  @list cmdslogged - shows current individual commands being logged
@list powers - shows powers @list depowers - shows depowers @list
rlevels - shows rlevels Added ‘+proof’ to mail/write command Cleaned up
help with the mail system for easier understanding Added protection to
functions that could be abused with poor coding practices

Added HILIGHT’ing to puppets when displaying messages.

        - Thanks to <Rynos@Armageddon>

Added LastIP attribute to house the IP address the person last connected from.

        - Thanks <Jeff@Sandbox>

Help fixes for wizhelp on permissions.

        - Thanks <Jeff@Sandbox>

Help fixes for help with regards to arbitrary commands.  Improved DoS
protection vers.  race conditions on connect screen.  switch() and
switchall() now recognize > and < as math-args (config param)


File: rhostmushhandbook.info,  Node: Additions<6>,  Next: Admin Params<6>,  Prev: Changes<8>,  Up: RhostMUSH 3 2 4 p12

18.14.2 Additions
-----------------

* Menu:

* Functions: Functions<9>.
* Commands: Commands<5>.
* Flags: Flags<8>.


File: rhostmushhandbook.info,  Node: Functions<9>,  Next: Commands<5>,  Up: Additions<6>

18.14.2.1 Functions
...................

rxlevel() - return RX reality level for source check txlevel() - return
TX reality level for target check listrlevels() - list all levels
hasrxlevel() - return ‘1’ if target has rxlevel() hastxlevel() - return
‘1’ if target has txlevel() cansee() - return ‘1’ if target can see
source (reality level based only)


File: rhostmushhandbook.info,  Node: Commands<5>,  Next: Flags<8>,  Prev: Functions<9>,  Up: Additions<6>

18.14.2.2 Commands
..................

@rxlevel - set/remove reality level source check @txlevel - set/remove
reality level target check mrpage (mrp) - respond to the player list
that you received in a page.  like rpage, this is seperate from lpage


File: rhostmushhandbook.info,  Node: Flags<8>,  Prev: Commands<5>,  Up: Additions<6>

18.14.2.3 Flags
...............

NONAME - if set on a target, the name is not displayed.


File: rhostmushhandbook.info,  Node: Admin Params<6>,  Next: Bug Fixes<8>,  Prev: Additions<6>,  Up: RhostMUSH 3 2 4 p12

18.14.3 Admin Params
--------------------

reality_level - define new reality level(s).  32 max.  wiz_always_real -
a wizard is defined as always seeing everything as ‘real’ def_exit_rx -
default exit RX value (1 default) def_exit_tx - default exit TX value (1
default) def_room_rx - default room RX value (1 default) def_room_tx -
default room TX value (1 default) def_player_rx - default room RX value
(1 default) def_player_tx - default room TX value (1 default)
def_thing_rx - default thing RX value (1 default) def_thing_tx - default
thing TX value (1 default)

validate_host - Specify invalid site-masks for autoregistration emails

        - Thanks <Zara@UnderGround> Labyrinth

log_command_list - Specify commands to individually log partial_conn -
Enable/disable @aconnect on partial connects partial_deconn -
Enable/disable @adisconnects on partial disconnects secure_functions -
Enable/disable security on listed functions FOREACH, WHILE, FOLD,
FILTER, MAP, STEP, and MIX max_logins_allowed (mudstate) - absolute
ceiling of connections allowed to avoid any type of DoS based attack.
This will always be 10 less than the OS can handle.  penn_switches - if
enabled, switch() and switchall() will work like PENN and accept < and >
as mathmatical operands.


File: rhostmushhandbook.info,  Node: Bug Fixes<8>,  Prev: Admin Params<6>,  Up: RhostMUSH 3 2 4 p12

18.14.4 Bug Fixes
-----------------

filter() would accept ‘1<blah>’ as well as ‘1’. - Fixed.

        - Thanks <Raevnos@M*U*S*H>

possible pointer-misalignment with internal messaging with MONITOR -
Fixed Rare occurance of getting inside a garbage object (non-crash-bug)
- Fixed @mvattr had small bug with copying over itself - Fixed @mvattr
had small bug with keeping original copy - Fixed Semaphores didn’t do
wait time correctly (introduced in p11) - Fixed Time/Create stamps
visible by anyone.  Shouldn’t be.  - Fixed LBUF not freed in mail/quota
- Fixed @dynhelp not able to parse subdirectories - Fixed (using a ‘^’)
@icmd not inherited in all instances - Fixed for everything Some side
effects had wrong security/permission checks - Fixed Side effects did
not check inheritance for permission - Fixed Iter()/list() and suite did
not handle ansi properly - Fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p11,  Next: RhostMUSH 3 2 4 p10,  Prev: RhostMUSH 3 2 4 p12,  Up: Changelog

18.15 RhostMUSH 3.2.4 p11
=========================

[03/15/2001]

* Menu:

* Changes: Changes<9>.
* Additions: Additions<7>.
* Admin Params: Admin Params<7>.
* Bug Fixes: Bug Fixes<9>.


File: rhostmushhandbook.info,  Node: Changes<9>,  Next: Additions<7>,  Up: RhostMUSH 3 2 4 p11

18.15.1 Changes
---------------

elist() has 5th argument (for string seperator)

        - Thanks <Talek@M*U*S*H>

@icmd has new switches to handle location/zone overriding:

     /droom - disable commands on room
     /iroom - ignore commands on room
     /croom - clear commands on room
     /lroom - list commands on room
     /lallroom - list all commands at current location

DoS Protection increased for vattr’s and object creation/destruction
@wait giving new /until switch to specify exact static time strmath()
has two new args.  First handles start location, second count Mail uses
~ to evaluate attributes for player targets

Enhanced email authorization for autoregistration.

        - Thanks <Jeff@SandBox>

Enhanced page to handle alias displaying

        - Thanks <Wolfie@CotM>

Pagelock to follow normal methodology when wizard-overrides in effect

Improved mail/write +list (proof) interface for mail with BRANDY_MAIL toggle.

        - Thanks <Belial@Armegeddon>

@pemit has /silent switch for PENN compatibility


File: rhostmushhandbook.info,  Node: Additions<7>,  Next: Admin Params<7>,  Prev: Changes<9>,  Up: RhostMUSH 3 2 4 p11

18.15.2 Additions
-----------------

* Menu:

* Functions: Functions<10>.
* Commands: Commands<6>.
* Toggles: Toggles<8>.


File: rhostmushhandbook.info,  Node: Functions<10>,  Next: Commands<6>,  Up: Additions<7>

18.15.2.1 Functions
...................

foreach() - (MUX) added for compatibility ilev() - Returns nest level of
an iter()


File: rhostmushhandbook.info,  Node: Commands<6>,  Next: Toggles<8>,  Prev: Functions<10>,  Up: Additions<7>

18.15.2.2 Commands
..................

@limit [/vmod /dmod /list /reset] - to limit max @destroy/vattr creation


File: rhostmushhandbook.info,  Node: Toggles<8>,  Prev: Commands<6>,  Up: Additions<7>

18.15.2.3 Toggles
.................

IGNOREZONE - toggles zone/location to enable zone/location command
disable/ignore VPAGE - toggles aliases to show/not show in pages you
receive.

PAGELOCK - toggles pages to normal methodologies when wizard lock overriding

        - Thanks <Jeff@Sandbox>

MAIL_NOPARSE - seperate toggle to break up translating %r’s and %t’s in
mail viewing.


File: rhostmushhandbook.info,  Node: Admin Params<7>,  Next: Bug Fixes<9>,  Prev: Additions<7>,  Up: RhostMUSH 3 2 4 p11

18.15.3 Admin Params
--------------------

ignore_zone - globally specify zone ignoring for a command

     Note: ignore_zone allows all other ignore_* params for level
     specifiers.)

disable_zone - globally specify zone disabling for a command
global_ansimask - globally define what ansi codes to allow/deny
expand_goto - force exit movement to use a ‘goto’.  max_dest_limit -
specify maximum @destroys allowed per player max_vattr_limit - specify
maximum _NEW_ vattrs allowed per player

hide_nospoof - if ‘1’ you have to control target to see NOSPOOF flag

        - Thanks <Jeff@SandBox>


File: rhostmushhandbook.info,  Node: Bug Fixes<9>,  Prev: Admin Params<7>,  Up: RhostMUSH 3 2 4 p11

18.15.4 Bug Fixes
-----------------

buffer issue with @decompile - fixed

remove lmath() from help. - fixed

        - Thanks <Raevnos@M*U*S*H>

mail showed cloaked wizzes being connected - fixed

        - Thanks <Morgan@RhostMUSH> Team

moon() didn’t handle full moons properly - fixed

        - Thanks <Jeff@SandBox>

isdbref() thought ‘#’ was a valid dbref. - fixed

        - Thanks <Raevnos@M*U*S*H>

Attribute setting issue introduced with P11

        - MUCH Thanks <Jeff@SandBox>

Logging options were a bit skewered with on/off settings. - fixed

        - Thanks <Sorien@Delphi>

Attempted to free mbufs in @disable login area twice.  - fixed

Parenting fix with possible recursion - fixed

        - Thanks <Brazil@MUX2>

@lock/chown not documented in help - fixed

@lock/chown required on CHOWN_OK object. Shouldn’t be. - Fixed

     -Thanks <Rynos@Armageddon>

@icmd for players broke with room/location addition - fixed.

     -Thanks <Jeff@SandBox>

Cloaked items didn’t trigger @startup - fixed.

     -Thanks <Rynos@Armageddon>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p10,  Next: RhostMUSH 3 2 4 p9,  Prev: RhostMUSH 3 2 4 p11,  Up: Changelog

18.16 RhostMUSH 3.2.4 p10
=========================

[02/15/2001]

* Menu:

* Changes: Changes<10>.
* Additions: Additions<8>.
* Admin Params: Admin Params<8>.
* Bug Fixes: Bug Fixes<10>.


File: rhostmushhandbook.info,  Node: Changes<10>,  Next: Additions<8>,  Up: RhostMUSH 3 2 4 p10

18.16.1 Changes
---------------

improved CPU handler for DoS protection


File: rhostmushhandbook.info,  Node: Additions<8>,  Next: Admin Params<8>,  Prev: Changes<10>,  Up: RhostMUSH 3 2 4 p10

18.16.2 Additions
-----------------

* Menu:

* Functions: Functions<11>.


File: rhostmushhandbook.info,  Node: Functions<11>,  Up: Additions<8>

18.16.2.1 Functions
...................

strfunc(<function>,<string of args>[,<optional seperator for args>) -
for lists


File: rhostmushhandbook.info,  Node: Admin Params<8>,  Next: Bug Fixes<10>,  Prev: Additions<8>,  Up: RhostMUSH 3 2 4 p10

18.16.3 Admin Params
--------------------

max_cpu_cycles admin param (default 3) cpu_secure_lvl admin param
(default 0)


File: rhostmushhandbook.info,  Node: Bug Fixes<10>,  Prev: Admin Params<8>,  Up: RhostMUSH 3 2 4 p10

18.16.4 Bug Fixes
-----------------

you could still get into a garbage object - fixed (MINOR) forwardlists
were not cleared on @wipe - fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p9,  Next: RhostMUSH 3 2 4 p8,  Prev: RhostMUSH 3 2 4 p10,  Up: Changelog

18.17 RhostMUSH 3.2.4 p9
========================

[12/15/2000]

* Menu:

* Changes: Changes<11>.
* Additions: Additions<9>.
* Admin Params: Admin Params<9>.
* Bug Fixes: Bug Fixes<11>.


File: rhostmushhandbook.info,  Node: Changes<11>,  Next: Additions<9>,  Up: RhostMUSH 3 2 4 p9

18.17.1 Changes
---------------

mail/write +acc added to allow extending player lists and not replacing.

mail/recall[/all] <playerlist> to list messages by player-name you sent to

        - Suggested by <Julius@Bermuda>

functionality for @flagdef for flagname filtering on display and paging.
Cleaned up some functionality more cases to valid() (name, attrname,
playername)

filler to columns() (new argument)

        - Thanks <Morgan@BrazilMUX>

‘save’ to helpfile showing that you do not need to save

        - Suggested by <Jamie@AdminMUSH>


File: rhostmushhandbook.info,  Node: Additions<9>,  Next: Admin Params<9>,  Prev: Changes<11>,  Up: RhostMUSH 3 2 4 p9

18.17.2 Additions
-----------------

* Menu:

* Functions: Functions<12>.
* Flags: Flags<9>.
* Toggles: Toggles<9>.


File: rhostmushhandbook.info,  Node: Functions<12>,  Next: Flags<9>,  Up: Additions<9>

18.17.2.1 Functions
...................

caseall() - works like switchall() but for case (Taken from PENN) cand()
- works like and() but stops processing on first ‘FALSE’ (from PENN)
cor() - works like or() but stops processing on first ‘TRUE’ (from PENN)
moon() - based on the POM code from berkley isword() - returns ‘TRUE’ if
entire string is all alpha (or has a hyphon) itext() - returns nth arg
(text ‘##’) of an iter() (from PENN) inum() - returns nth arg (num ‘#@’)
of an iter() (from PENN) modulo() - returns the modulus of the numbers
(from PENN)


File: rhostmushhandbook.info,  Node: Flags<9>,  Next: Toggles<9>,  Prev: Functions<12>,  Up: Additions<9>

18.17.2.2 Flags
...............

NO_PARSE - attribute flag that stops processing/evaluation of %0-%9 in
$commands.  SAFE - attribute flag that stops modification of attribute
it’s set on (TM 3.0) SHOWFAILCMD - when set on object any matching
failed $cmd uses the @ufail suite.


File: rhostmushhandbook.info,  Node: Toggles<9>,  Prev: Flags<9>,  Up: Additions<9>

18.17.2.3 Toggles
.................

MAIL_STRIPRETURN - when combining lines uses spaces instead of carrage
returns PENN_MAIL - when sending mail, use PENN like style


File: rhostmushhandbook.info,  Node: Admin Params<9>,  Next: Bug Fixes<11>,  Prev: Additions<9>,  Up: RhostMUSH 3 2 4 p9

18.17.3 Admin Params
--------------------

guest_namelist - specifies a dynamic namelist for guests (with
protection) hackattr_nowiz - defines if ‘_attr’ is wiz only or follows
normal rules hackattr_see - defines if ‘_attr’ is viewable by wizard
only.  penn_playercmds - $commands on player work only for that player
or inventory (from PENN)


File: rhostmushhandbook.info,  Node: Bug Fixes<11>,  Prev: Admin Params<9>,  Up: RhostMUSH 3 2 4 p9

18.17.4 Bug Fixes
-----------------

Bug with dynhelp(). Player (3rd arg) never resolved correctly - fixed

        - Thanks <Svlatmaer@BTW>

Possible (and very rare) overflow conditions with certain wiz commands -
fixed SIGSEGV bug with recursive @functions - fixed When @toggled
MONITOR_BAD, MONITOR_FAIL doubled up failed connections - fixed
Malaligned pointer in command.c.  Non-crash issue.  - fixed

setq() registers wern’t cleared for extreamly fast command input - fixed

        - Thanks <Brazil@BrazilMUX>

ex thing/`sta' returns ‘no attribs found’ if tstamps enabled - fixed
enhanced security for .txt file reading/verification (possible DoS) -
fixed attrib flag DARK could not be unset by non-god.  Only #1 can set
it now - fixed encrypt/decrypt really mangled with how it passed key -
fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p8,  Next: RhostMUSH 3 2 4 p7,  Prev: RhostMUSH 3 2 4 p9,  Up: Changelog

18.18 RhostMUSH 3.2.4 p8
========================

[10/12/2000]

* Menu:

* Changes: Changes<12>.
* Additions: Additions<10>.
* Admin Params: Admin Params<10>.
* Bug Fixes: Bug Fixes<12>.


File: rhostmushhandbook.info,  Node: Changes<12>,  Next: Additions<10>,  Up: RhostMUSH 3 2 4 p8

18.18.1 Changes
---------------

lnum() and lnum2() now can handle negative numbers.  @list options shows
if the COMMAND flag is used.  NOMODIFY can be configured to be
settable/unsettable/modifiable by imm only.  vector functions (vadd,
etc) that return a list now recognize output seps.  MAX_ARGS in
‘externs.h’ may be changed to increase the total number of arguments
functions like switch() may take.  MAX_ARGS is currently defaulted to
‘30’ though MUX 2.0 has it set to ‘100’.  This HAS to be a compile time
change else possible SIGSEGV’s could happen.  mail/write
+editall=old,new - argument to mail/write added.  Modifies ALL lines.
mail/write +feditall=old,new - modify ALL matches on ALL lines.
mail/write +fedit #=old,new - modify ALL matches on given line.
mail/write +cc/+bcc=new - if FORWARDING or SENDING (not reply!)  will
allow the user to redefine who the message is being sent out to.  _ATTR
can be compile-time added to be wiz-only settable/modifiable attributes.
Modified mail/write +justify, +insert, +edit, +editall to rehandle line
count Made option to make harder password guessing.  dice() takes ‘1’
for expanded, ‘2’ for expanded w/o totals, and optional output
seperator.  Also has optional argument for low-limit Can mimic TM 3.0’s
lrand() function.  modified connecting to @program based on toggle.
added modified/created with ‘examine’ and ‘examine/brief’ and ‘examine
thing/*’


File: rhostmushhandbook.info,  Node: Additions<10>,  Next: Admin Params<10>,  Prev: Changes<12>,  Up: RhostMUSH 3 2 4 p8

18.18.2 Additions
-----------------

* Menu:

* Functions: Functions<13>.
* Commands: Commands<7>.
* Flags: Flags<10>.
* Toggles: Toggles<10>.


File: rhostmushhandbook.info,  Node: Functions<13>,  Next: Commands<7>,  Up: Additions<10>

18.18.2.1 Functions
...................

mailalias() - returns the dbref# list of players in the given global mail alias

        - Suggested by <Stormwolf@CotF>

programmer() - returns the dbref# of thing that put target in @program
vcross() - taken from TinyMUX 2.0 (with permission) switchall() - idea
taken from TinyMUSH 3.0 (coded from scratch) brackets() - idea taken
from PENN 1.7.3 @@() - works like null() but does not evaluate (idea
from PENN 1.7.3)


File: rhostmushhandbook.info,  Node: Commands<7>,  Next: Flags<10>,  Prev: Functions<13>,  Up: Additions<10>

18.18.2.2 Commands
..................

@flagdef - define flag permission levels (/set, /unset, /see) @dynhelp -
dynamically read a specified <file>.txt file (needs matching .indx!)


File: rhostmushhandbook.info,  Node: Flags<10>,  Next: Toggles<10>,  Prev: Commands<7>,  Up: Additions<10>

18.18.2.3 Flags
...............

COMMANDS - optional #ifdef to define what uses commands or not (TinyMUSH compat) uses -DENABLE_COMMAND_FLAG

        - Idea from TinyMUSH 2.2.4

NO_CLONE - attribute flag to stop attributes from copying over when
@cloned

MARKER0 through MARKER9

        - idea from TinyMUSH 3.0

BOUNCE - allows players to pass what they hear to their contents w/o
effecting @ahear/@amhear/etc.


File: rhostmushhandbook.info,  Node: Toggles<10>,  Prev: Flags<10>,  Up: Additions<10>

18.18.2.4 Toggles
.................

MONITOR_BAD - monitor failed connections/creations to non-existant
players PROG_ON_CONNECT - reverses the current global logic of program
and connecting.


File: rhostmushhandbook.info,  Node: Admin Params<10>,  Next: Bug Fixes<12>,  Prev: Additions<10>,  Up: RhostMUSH 3 2 4 p8

18.18.3 Admin Params
--------------------

imm_nomod - when enabled (default disabled) specifies that only immortal
can set/unset the NOMODIFY flag and only immortals can modify things set
NOMODIFY. This will allow NOMODIFY to mimic CONSTANT ala TM 3.0

paranoid_exit_linking - when enabled, you MUST control exit to link.
This includes UNLINKED exits.  Also, exits won’t be @chowned to you
automatically.  (Default disabled)

notonerr_return - when DISABLED (default enabled) not() returns a ‘0’
for any function returning #-1.

safer_passwords - requires passwords be 5+ chars long and have one upper, one lower, and one special character.

        - Idea from TinyMUSH 2.2.4

max_sitecons - (default 50) specifies the maximum # of port connections
to site of that given site.


File: rhostmushhandbook.info,  Node: Bug Fixes<12>,  Prev: Admin Params<10>,  Up: RhostMUSH 3 2 4 p8

18.18.4 Bug Fixes
-----------------

NOMODIFY wasn’t strict enough - fixed BACKSTAGE/NOBACKSTAGE didn’t
handle @zones - fixed create() didn’t check command permissions first
for @dig, @open, and @pcreate put a temp fix for a possible SIGSEGV bug.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p7,  Next: RhostMUSH 3 2 4 p6,  Prev: RhostMUSH 3 2 4 p8,  Up: Changelog

18.19 RhostMUSH 3.2.4 p7
========================

[07/15/2000]

* Menu:

* Changes: Changes<13>.
* Admin Params: Admin Params<11>.
* Bug Fixes: Bug Fixes<13>.


File: rhostmushhandbook.info,  Node: Changes<13>,  Next: Admin Params<11>,  Up: RhostMUSH 3 2 4 p7

18.19.1 Changes
---------------

@set now recognizes the following attribute flags:

     GOD
     IMMORTAL
     WIZARD (suggested by Stormwolf@CotF)
     ROYALTY (alias for WIZARD)
     COUNCILOR
     ARCHITECT
     GUILDMASTER
     HIDDEN
     DARK


File: rhostmushhandbook.info,  Node: Admin Params<11>,  Next: Bug Fixes<13>,  Prev: Changes<13>,  Up: RhostMUSH 3 2 4 p7

18.19.2 Admin Params
--------------------


File: rhostmushhandbook.info,  Node: Bug Fixes<13>,  Prev: Admin Params<11>,  Up: RhostMUSH 3 2 4 p7

18.19.3 Bug Fixes
-----------------

@list options did not show RESTRICT_HOME config setting. Fixed

        - Reported by <Mercutio@ShatteredCathedrals>


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p6,  Next: RhostMUSH 3 2 4 p5,  Prev: RhostMUSH 3 2 4 p7,  Up: Changelog

18.20 RhostMUSH 3.2.4 p6
========================

[06/16/2000]

* Menu:

* Changes: Changes<14>.
* Admins Params::
* Bug Fixes: Bug Fixes<14>.


File: rhostmushhandbook.info,  Node: Changes<14>,  Next: Admins Params,  Up: RhostMUSH 3 2 4 p6

18.20.1 Changes
---------------

@list site_information now shows DNS blocking


File: rhostmushhandbook.info,  Node: Admins Params,  Next: Bug Fixes<14>,  Prev: Changes<14>,  Up: RhostMUSH 3 2 4 p6

18.20.2 Admins Params
---------------------

forbid_host - allows DNS entry/modify for forbidding hosts register_host
- allows DNS entry/modify for registered hosts autoreg_host - allows DNS
entry/modify for disallowing autoreg to hosts noguest_host - allows DNS
entry/modify for disallowing guests to hosts suspect_host - allows DNS
entry/modify for suspect hosts


File: rhostmushhandbook.info,  Node: Bug Fixes<14>,  Prev: Admins Params,  Up: RhostMUSH 3 2 4 p6

18.20.3 Bug Fixes
-----------------

ansi() didn’t recognize ‘u’ for underline. Fixed.

        - Reported by <LadyDraconis@BermudaByNight>

@program had small issue with prompt storage.  Fixed.

autoreg file inclusion didn’t count total lines right. Fixed.

        - Reported by <Rachel@AdminMUSH>

hastoggles(), haspowers(), and hasdepowers() didn’t work.  Fixed.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p5,  Next: RhostMUSH 3 2 4 p4,  Prev: RhostMUSH 3 2 4 p6,  Up: Changelog

18.21 RhostMUSH 3.2.4 p5
========================

[06/01/2000]

* Menu:

* Changes: Changes<15>.
* Admin Params: Admin Params<12>.
* Bug Fixes: Bug Fixes<15>.


File: rhostmushhandbook.info,  Node: Changes<15>,  Next: Admin Params<12>,  Up: RhostMUSH 3 2 4 p5

18.21.1 Changes
---------------

New /noauth and /nodns switches to @site Better timeout conditions for
AUTH lookups.  @list site_information now shows additional information


File: rhostmushhandbook.info,  Node: Admin Params<12>,  Next: Bug Fixes<15>,  Prev: Changes<15>,  Up: RhostMUSH 3 2 4 p5

18.21.2 Admin Params
--------------------

noauth_site – specifies site and mask that AUTH lookups are not to be
performed nodns_site – specifies site and mask that DNS lookups are not
to be performed


File: rhostmushhandbook.info,  Node: Bug Fixes<15>,  Prev: Admin Params<12>,  Up: RhostMUSH 3 2 4 p5

18.21.3 Bug Fixes
-----------------

AUTH hung if remote server was configured wrong.  Fix put in around the
OS limitation to handle this.  Command substitution (%c/%x) could cause
a SIGSEGV at random times.  Fixed.


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p4,  Next: RhostMUSH 3 2 4 p3,  Prev: RhostMUSH 3 2 4 p5,  Up: Changelog

18.22 RhostMUSH 3.2.4 p4
========================

[04/15/2000]

* Menu:

* Changes: Changes<16>.
* Additions: Additions<11>.
* Alias Additions::
* Admin Params: Admin Params<13>.
* Bug Fixes: Bug Fixes<16>.


File: rhostmushhandbook.info,  Node: Changes<16>,  Next: Additions<11>,  Up: RhostMUSH 3 2 4 p4

18.22.1 Changes
---------------

wizhelp has new topic for setting up guests (GUEST SETUP)

help has help for differences/useful (DIFFERENCE/USEFUL)

        - Suggested by <Sycorax@ShatteredCathedrals>

filter() now supports an output seperator

lnum() and lnum2() optionally return NULL if given a ‘0’.

        - Suggested by <Gorath@Rhostshyl>

mask() now takes ‘~’ for adding 1’s comp, ‘1’ for 1’s and ‘2’ for 2’s.
mailquick() takes 3rd argument for MUX mail() compatibility.
news/articlelife takes ‘forever’ as a valid argument.  mail/status takes
/subject, (U)nread, (N)ew, (B)oth new/unread, (S)aved, (M)arked, and
(O)ld mail as optional search params.  mail/number takes same new args
as mail/status news/read now marks messages as ‘read’.  @ansiname now
allows raw ansi (under controlled circumstances)

dig(), create(), open(), clone() all optionally return dbref#’s.

        - Suggested by <Corum@Underground>

@list options now shows more (and valuable) information.  @function/list
now shows flags for privalaged/preserved functions.  mail/status and
mail/read now show connected players.  mail/write and - now show how
many characters you have written.  mail/forward and mail/reply now
recognize the BRANDY_MAIL @toggle.


File: rhostmushhandbook.info,  Node: Additions<11>,  Next: Alias Additions,  Prev: Changes<16>,  Up: RhostMUSH 3 2 4 p4

18.22.2 Additions
-----------------

* Menu:

* Functions: Functions<14>.
* Commands: Commands<8>.
* Toggles: Toggles<11>.


File: rhostmushhandbook.info,  Node: Functions<14>,  Next: Commands<8>,  Up: Additions<11>

18.22.2.1 Functions
...................

listmatch(<string>,<wildcard>[,<delimiter>])
setqmatch(<string>,<wildcard>[,<delimiter>]) listnewsgroups([<player>])
inprogram(player)


File: rhostmushhandbook.info,  Node: Commands<8>,  Next: Toggles<11>,  Prev: Functions<14>,  Up: Additions<11>

18.22.2.2 Commands
..................

@program (idea from MUX) @quitprogram (idea from MUX)

@progprompt

        - Suggested by <Zara@Underground>

@extansi

train

        - Suggested by <Trey@GameHendge>

@function/preserve (idea from MUX) +help (hardcode) (idea from MUX)


File: rhostmushhandbook.info,  Node: Toggles<11>,  Prev: Commands<8>,  Up: Additions<11>

18.22.2.3 Toggles
.................

PROG (idea from MUX) NOSHPROG IMMPROG


File: rhostmushhandbook.info,  Node: Alias Additions,  Next: Admin Params<13>,  Prev: Additions<11>,  Up: RhostMUSH 3 2 4 p4

18.22.3 Alias Additions
-----------------------

* Menu:

* Commands: Commands<9>.


File: rhostmushhandbook.info,  Node: Commands<9>,  Up: Alias Additions

18.22.3.1 Commands
..................

@prog aliased to @program


File: rhostmushhandbook.info,  Node: Admin Params<13>,  Next: Bug Fixes<16>,  Prev: Alias Additions,  Up: RhostMUSH 3 2 4 p4

18.22.4 Admin Params
--------------------

login_to_prog

noshell_prog

        - Suggested by <Draken-Korin@Underground>

sidefx_returnval nospam_connect (idea from PENN)

noregist_onwho

        - Suggested by <Rachel@AdminMUSH>

lnum_compat

mailinclude_file

        - Suggested by <Rachel@AdminMUSH>

must_unlquota


File: rhostmushhandbook.info,  Node: Bug Fixes<16>,  Prev: Admin Params<13>,  Up: RhostMUSH 3 2 4 p4

18.22.5 Bug Fixes
-----------------

news/articlelife not in wizhelp

        - Reported by <Rachel@AdminMUSH>

filter() did not correctly parse arguments in some instances – fixed

        - Reported by <Troll@Bermuda>

@set thing/attr=_thing/attr would on rare occurances not work – fixed

        - Reported by <Troll@Bermuda>

lock() would not parse the second argument in some occurances – fixed

        - Reported by <Cerebus@Bermuda>

mail/reply didn’t function right when BRANDY_MAIL toggled – fixed

setunion() would not parse 3rd/4th args correctly on rare occurances –fixed

        - Reported by <Tyr@Forgotten> (Thanks for the patch)

news/articlelife wouldn’t reset articlelife with ‘-1’.  – fixed


File: rhostmushhandbook.info,  Node: RhostMUSH 3 2 4 p3,  Prev: RhostMUSH 3 2 4 p4,  Up: Changelog

18.23 RhostMUSH 3.2.4 p3
========================

[11/15/1999]

* Menu:

* Changes: Changes<17>.
* Additions: Additions<12>.
* Alias Additions: Alias Additions<2>.
* Admin Params: Admin Params<14>.
* Bug Fixes: Bug Fixes<17>.


File: rhostmushhandbook.info,  Node: Changes<17>,  Next: Additions<12>,  Up: RhostMUSH 3 2 4 p3

18.23.1 Changes
---------------

     Note: Make sure to make the appropiate aliases

@flag is not listed in ‘wizhelp commands’

        - reported by <Stormwolf@Children>

remtype(<string>,<type>[,<sep>,<osep>])

        - suggested by <Stormwolf@Children>

name(<target>[,<newname>]) examine/quick - Previous /brief functionality

examine/brief - Modified for MUX/PENN compatibility

        - suggested by <Rachel@AdminMUSH>

@function[/list] - for PENN compatibility

@pemit/zone[/list] <zone(s)>

     if zonemaster - all rooms in zone.  if !zonemaster - specified
     zone.

@dolist/notify ‘mail/next -‘ - reads previous mail ‘mail/zap -‘ - marks
current message and reads previous mail


File: rhostmushhandbook.info,  Node: Additions<12>,  Next: Alias Additions<2>,  Prev: Changes<17>,  Up: RhostMUSH 3 2 4 p3

18.23.2 Additions
-----------------

* Menu:

* Functions: Functions<15>.
* Commands: Commands<10>.
* Flags: Flags<11>.
* Powers::
* Toggles: Toggles<12>.


File: rhostmushhandbook.info,  Node: Functions<15>,  Next: Commands<10>,  Up: Additions<12>

18.23.2.1 Functions
...................

mailquick(<player>[,<folder>]) (wiz only) eval(<object>,<attr>) or
eval(<string>) translate(<string>,<(s)pace/un(p)arse>)
valid(name,<string>)
entrances(target[,(a)ll/(r)oom/(t)hing/(p)layer/(e)xit])
graball(<string>,<wildcard>[,<sep>]) remit(<list of rooms>,<string>)
rnum(<perspective>,<target>) wipe(<obj>[/attr]) destroy(<obj>) step()
(borrowed and modified from TinyMUSH 3.0) localize(<string>)
null(<string>) ladd(<string>[,<sep>]) lsub(<string>[,<sep>])
lmul(<string>[,<sep>]) ldiv(<string>[,<sep>]) land(<string>[,<sep>])
lavg(<string>[,<sep>]) lmax(<string>[,<sep>]) lmin(<string>[,<sep>])
lor(<string>[,<sep>]) lxor(<string>[,<sep>]) lnor(<string>[,<sep>])
lxnor(<string>[,<sep>]) lastcreate(<target>,<(r)oom, (t)hing, (e)xit,
(p)layer>) ncomp(<num>,<num>) streq(<str>,<str>) while() (borrowed and
modified from TinyMUSH 3.0)=20 xcon(<target>[/<switch>],<start>,<count>)
modifystamp(<target>) createdstamp(<target>) inzone(<zone>) zemit(<list
of zones>,<string>) zwho(<zone>) zfun([<zone>/]<attr>[,<args>])
zfun2([<zone>/]<attr>[,<args>]) zfunlocal([<zone>/]<attr>[,<args>])
zfun2local([<zone>/]<attr>[,<args>])
zfundefault([<zone>/]<attr>,<default>[,<args>])
zfun2default([<zone>/]<attr>,<default>[,<args>])
zfuneval([<zone>/]<attr>/<level>[,<args>])
zfunldefault([<zone>/]<attr>,<default>[,<args>])
zfunl2default([<zone>/]<attr>,<default>[,<args>])


File: rhostmushhandbook.info,  Node: Commands<10>,  Next: Flags<11>,  Prev: Functions<15>,  Up: Additions<12>

18.23.2.2 Commands
..................

@hide[/on/off] - For PENN compatibility @saystring - define what is
substituted instead of ‘says’


File: rhostmushhandbook.info,  Node: Flags<11>,  Next: Powers,  Prev: Commands<10>,  Up: Additions<12>

18.23.2.3 Flags
...............

NOWHO (internal) - mark who is @hidden LOGIN - bypass @disable logins
ZONECONTENTS - makes zonemaster behave like master room BACKSTAGE -
check to see if auto-inherited to ownership NOBACKSTAGE - marker for
backstage checks ANONYMOUS - return ‘Someone’ when cloaked when talk/say


File: rhostmushhandbook.info,  Node: Powers,  Next: Toggles<12>,  Prev: Flags<11>,  Up: Additions<12>

18.23.2.4 Powers
................

NOWHO - specify who can @hide EXAMINE_FULL - examine anything but #1,
cloaked, and noexamine things FULLTEL - teleport anywhere but #1 and
cloaked locations.


File: rhostmushhandbook.info,  Node: Toggles<12>,  Prev: Powers,  Up: Additions<12>

18.23.2.5 Toggles
.................

BRANDY_MAIL - send mail with ‘mail user-list=3Dsubject’ methodology
FORCEHALTED - force someone who is halted


File: rhostmushhandbook.info,  Node: Alias Additions<2>,  Next: Admin Params<14>,  Prev: Additions<12>,  Up: RhostMUSH 3 2 4 p3

18.23.3 Alias Additions
-----------------------

* Menu:

* Functions: Functions<16>.
* Commands: Commands<11>.
* Flags: Flags<12>.


File: rhostmushhandbook.info,  Node: Functions<16>,  Next: Commands<11>,  Up: Alias Additions<2>

18.23.3.1 Functions
...................

subeval() aliased to eval() grepi() aliased to grep() zone() aliased to
lzone() element aliased to elements() if() aliased to ifelse()
matchall() aliased to totmatch() nonzero() aliased to ifelse()
filterbool() aliased to filter() landbool() aliased to land() lorbool()
aliased to lor() lnorbool() aliased to lnor() andbool() aliased to and()
notbool() aliased to not() xorbool() aliased to xor() loop() aliased to
list() enumerate() aliased to elist() mean() aliased to avg()


File: rhostmushhandbook.info,  Node: Commands<11>,  Next: Flags<12>,  Prev: Functions<16>,  Up: Alias Additions<2>

18.23.3.2 Commands
..................

@brief aliased to examine/brief @lemit aliased to @emit/room @remit
aliased to @pemit/contents/list @zemit aliased to @pemit/zone/list


File: rhostmushhandbook.info,  Node: Flags<12>,  Prev: Commands<11>,  Up: Alias Additions<2>

18.23.3.3 Flags
...............

NO_COMMAND alias to NOCOMMAND


File: rhostmushhandbook.info,  Node: Admin Params<14>,  Next: Bug Fixes<17>,  Prev: Alias Additions<2>,  Up: RhostMUSH 3 2 4 p3

18.23.4 Admin Params
--------------------

mail_tolist (default 0) - enable/disable To: <players> in mail =
automatically mail_default (default 0) - change ‘mail’ from mail/quick
to mail/status


File: rhostmushhandbook.info,  Node: Bug Fixes<17>,  Prev: Admin Params<14>,  Up: RhostMUSH 3 2 4 p3

18.23.5 Bug Fixes
-----------------

depower - tel_anywhere (broke - fixed) look - could see cloaked things
if given long-finger ability (fixed) recover objects - could be examined
to find names of them and owner (fixed) grab() - crashed server if given
only one argument - fixed

go - couldn’t use ‘go’ through parent exits before

        - Reported by <Medwyn@Underground>

ueval() - fixed missing LBUF free mail/write +list - gave erraneous
results - fixed

lexits() - won’t show exits set PRIVATE at the ‘home’ of those exits.

        - Reported by <Medwyn@Underground>

min() - value shoved a double in an int

        - Reported by <Stormwolf@Children>

max() - value shoved a double in an int

        - Reported by <Stormwolf@Children>

wmail/size - tried to free null pointer

        - Reported by <Mercutio@Shattered>

host sites over 50 characters would cause the host parameter to not
properly null terminate.  - fixed.  @open would, under rare
circumstances, clobber the return exit from how tprintf() buffers.
-fixed.  andflags() and orflags() didn’t escape out ‘2’ or ‘1’ right.  -
fixed


File: rhostmushhandbook.info,  Node: Historical Non-Disclosure Agreement,  Next: Copyright,  Prev: Changelog,  Up: Top

19 Historical Non-Disclosure Agreement
**************************************

The following NDA comes from the time when RhostMUSH was not publially
available.  It is preserved here for historical reasons.  We are suckers
for looking back at things.  :) –Ambrosia

       1. I agree, to not give out the code, in part or in full, in any
          form of medium, to anyone or anything not previously allowed
          by the developers.

       2. I agree, to not let others look at the code, in part or in
          full, in any form of medium, to anyone or anything not
          previously allowed by the developers.

       3. I am aware that any modifications I make to the code is
          _FULLY_ permitted, and that I do _NOT_ have to return said
          patches to the developers.

     Note: The Rhost developers would like to see what was added, and
     possibly look at adding them to the main distro if we see others
     would like it (with full credits to you), but we belive once you
     have the code, you should be allowed to play with it fully as long
     as the first two rules are kept.


File: rhostmushhandbook.info,  Node: Copyright,  Next: Indices and tables,  Prev: Historical Non-Disclosure Agreement,  Up: Top

20 Copyright
************

Copyright >>|copy|<< 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021

Seawolf, Thorin, Ashen-Shugar, Kale, Lensman, Morgan, Odin, Kage,
Ambrosia, Rook

All rights, reserved.

The copyright includes but is not limited to all changes and
modifications to the code, the help files, and all information included
in this code.  Copying of these changes is not permitted without prior
approval.  Borrowing of ideas require notification of where idea
originated.  Please use ‘RhostMUSH’ when identifying source.
Modification of code is allowed as long as contact and acceptance is
made prior to changes with one (or more) of the original writers of the
code in writing.

This copyright does not include the original code that was given as GNU
freeware

This copyright information may not be changed, altered, or omitted.


File: rhostmushhandbook.info,  Node: Indices and tables,  Prev: Copyright,  Up: Top

Indices and tables
******************

   * genindex

   * search



Tag Table:
Node: Top367
Ref: index doc580
Ref: 0580
Node: Installing RhostMUSH25098
Ref: install doc25251
Ref: 125251
Ref: install id125251
Ref: 225251
Ref: install installing-rhostmush25251
Ref: 325251
Ref: install rhostmush-handbook25251
Ref: 425251
Node: RhostMUSH Requirements25625
Ref: install id225755
Ref: 525755
Ref: install rhostmush-requirements25755
Ref: 625755
Node: System Requirements25895
Ref: install id326014
Ref: 726014
Ref: install system-requirements26014
Ref: 826014
Node: Software Requirements26660
Ref: install id426808
Ref: 926808
Ref: install software-requirements26808
Ref: a26808
Node: Optional Packages27393
Ref: install optional-packages27479
Ref: b27479
Node: Hosting Requirements28274
Ref: install hosting-requirements28394
Ref: c28394
Ref: install id528394
Ref: d28394
Node: Obtaining RhostMUSH Source Code28920
Ref: install obtaining-rhostmush29084
Ref: e29084
Ref: install obtaining-rhostmush-source-code29084
Ref: f29084
Node: Options for making a MUSH30111
Ref: install options-for-making-a-mush30272
Ref: 1030272
Node: Compile time options31323
Ref: install compile-time-options31451
Ref: 1131451
Node: Configuration file options32344
Ref: install configuration-file-options32506
Ref: 1232506
Node: Starting database options33846
Ref: install starting-database-options34007
Ref: 1334007
Node: The Choices We Make35691
Ref: install the-choices-we-make35817
Ref: 1435817
Node: Compiling RhostMush37464
Ref: install compiling-rhostmush37614
Ref: 1537614
Ref: install id637614
Ref: 1637614
Node: Setup directory permissions37733
Ref: install setup-directory-permissions37859
Ref: 1737859
Node: Compile the source code38661
Ref: install compile-the-source-code38787
Ref: 1838787
Node: Saving your compile options39805
Ref: install saving-your-compile-options39942
Ref: 1939942
Node: Troubleshooting compile errors40533
Ref: install troubleshooting-compile-errors40706
Ref: 1a40706
Node: Recompiling the source code41252
Ref: install recompiling-the-source-code41389
Ref: 1b41389
Node: Configuring the game42156
Ref: install configuring-the-game42318
Ref: 1c42318
Node: Persistent configurable game options42470
Ref: install persistent-configurable-game-options42600
Ref: 1d42600
Node: Starting the game43667
Ref: install starting-the-game43829
Ref: 1e43829
Node: First login to the game44183
Ref: install first-login-to-the-game44300
Ref: 1f44300
Node: Creating RHostMUSH with a Provided DB44852
Ref: install creating-rhostmush-with-a-provided-db45042
Ref: 2045042
Node: Important before you actually start building45218
Ref: install important-before-you-actually-start-building45383
Ref: 2145383
Node: Using the prebuilt flatfile47204
Ref: install using-the-prebuilt-flatfile47369
Ref: 2247369
Node: To load a prebuilt flatfile48026
Ref: install to-load-a-prebuilt-flatfile48128
Ref: 2348128
Node: Basic Instructions for starting a new RhostMUSH49410
Ref: install basic-instructions-for-starting-a-new-rhostmush49618
Ref: 2449618
Node: Manual configuration of source code49981
Ref: install manual-configuration-of-source-code50152
Ref: 2550152
Node: Loading a database for your MUSH51095
Ref: install loading-a-database-for-your-mush51357
Ref: 2651357
Node: Option Only perform these steps if using a provided database51668
Ref: install option-only-perform-these-steps-if-using-a-provided-database51808
Ref: 2751808
Node: Option Things to do once you have connected if you did NOT use a provided database52270
Ref: install option-things-to-do-once-you-have-connected-if-you-did-not-use-a-provided-database52488
Ref: 2852488
Node: Customtize the textfiles for your game53998
Ref: install customtize-the-textfiles-for-your-game54202
Ref: 2954202
Node: Three Options for Starting a MUSH54570
Ref: install three-options-for-starting-a-mush54718
Ref: 2a54718
Node: Option 1 Creating a new game with a blank database55257
Ref: install option-1-creating-a-new-game-with-a-blank-database55461
Ref: 2b55461
Node: Options 2 Creating a new game with Ambrosia’s default database55713
Ref: install options-2-creating-a-new-game-with-ambrosia-s-default-database55988
Ref: 2c55988
Node: Option 3 Creating a new game with the generic default database57638
Ref: install option-3-creating-a-new-game-with-the-generic-default-database57854
Ref: 2d57854
Node: What RhostMUSH is about and what’s so great about RhostMUSH58288
Ref: features doc58471
Ref: 2e58471
Ref: features what-rhostmush-is-about-and-what-s-so-great-about-rhostmush58471
Ref: 2f58471
Node: Recycle bin61669
Ref: features recycle-bin61807
Ref: 3061807
Node: @snapshot62405
Ref: features snapshot62583
Ref: 3162583
Node: Wizard and Immortals by default62866
Ref: features wizard-and-immortals-by-default63073
Ref: 3263073
Node: Titles and Captions to a player’s name64057
Ref: features titles-and-captions-to-a-player-s-name64308
Ref: 3364308
Node: Have an alternate name with locks for NPC obfuscation64430
Ref: features have-an-alternate-name-with-locks-for-npc-obfuscation64678
Ref: 3464678
Node: Have multiple player aliases64824
Ref: features have-multiple-player-aliases65095
Ref: 3565095
Node: Actively control how dark works both game-wide and individually65276
Ref: features actively-control-how-dark-works-both-game-wide-and-individually65572
Ref: 3665572
Node: Make config file changes in-game without having to reboot or have shell access65948
Ref: features make-config-file-changes-in-game-without-having-to-reboot-or-have-shell-access66268
Ref: 3766268
Node: Execute any binary or script as a localized function66461
Ref: features execute-any-binary-or-script-as-a-localized-function66765
Ref: 3866765
Node: Customized percent substitutions like %n %# etc66920
Ref: features customized-percent-substitutions-like-n-etc67191
Ref: 3967191
Node: Redefine percent substitutions like %n %# etc67338
Ref: features redefine-percent-substitutions-like-n-etc67609
Ref: 3a67609
Node: Localize command and function overrides in a sandbox67753
Ref: features localize-command-and-function-overrides-in-a-sandbox67991
Ref: 3b67991
Node: Multiple Zones68154
Ref: features multiple-zones68395
Ref: 3c68395
Node: Optionally control enable or disable sideeffects68593
Ref: features optionally-control-enable-or-disable-sideeffects68831
Ref: 3d68831
Node: Have 31 cross-interactive realities for locations68984
Ref: features have-31-cross-interactive-realities-for-locations69242
Ref: 3e69242
Node: Override any command with softcode69829
Ref: features override-any-command-with-softcode70097
Ref: 3f70097
Node: The abilility to raise or lower permissions on the various70271
Ref: features the-abilility-to-raise-or-lower-permissions-on-the-various70534
Ref: 4070534
Node: Customize new commands on the connect screen70741
Ref: features customize-new-commands-on-the-connect-screen71008
Ref: 4171008
Node: Softcode any txt file like connect txt71135
Ref: features softcode-any-txt-file-like-connect-txt71410
Ref: 4271410
Node: Advanced tracing methods for debugging your code including labels!71602
Ref: features advanced-tracing-methods-for-debugging-your-code-including-labels71900
Ref: 4371900
Node: Built in pretty-printing of attributes with the parenmatch function72242
Ref: features built-in-pretty-printing-of-attributes-with-the-parenmatch-function72528
Ref: 4472528
Node: Plenty more not mentioned!73030
Ref: features plenty-more-not-mentioned73280
Ref: 4573280
Node: Advanced features of RhostMUSH73688
Ref: features advanced-features-of-rhostmush73918
Ref: 4673918
Node: Debugging/Tracing75315
Ref: features debugging-tracing75425
Ref: 4775425
Node: Zoning76021
Ref: features zoning76154
Ref: 4876154
Node: Reality Levels76686
Ref: features reality-levels76833
Ref: 4976833
Node: Function and Command Overriding77517
Ref: features function-and-command-overriding77673
Ref: 4a77673
Node: The Recycle Bin78828
Ref: features the-recycle-bin79008
Ref: 4b79008
Node: Percent Substitution Adding/Overriding79747
Ref: features percent-substitution-adding-overriding79903
Ref: 4c79903
Node: Hooking80400
Ref: features hooking80563
Ref: 4d80563
Node: Command based uselocks80882
Ref: features command-based-uselocks81054
Ref: 4e81054
Node: Differentating between command and listen locks81787
Ref: features differentating-between-command-and-listen-locks81995
Ref: 4f81995
Node: Wizard auto-overiding and how to disable it82403
Ref: features wizard-auto-overiding-and-how-to-disable-it82621
Ref: 5082621
Node: Advanced FLAG and TOGGLE control83215
Ref: features advanced-flag-and-toggle-control83407
Ref: 5183407
Node: Advanced site control84279
Ref: features advanced-site-control84445
Ref: 5284445
Node: Auto-Registration84973
Ref: features auto-registration85131
Ref: 5385131
Node: Which bit level is best?85516
Ref: features which-bit-level-is-best85703
Ref: 5485703
Node: What are the limits for size/growth for RhostMUSH?86765
Ref: features what-are-the-limits-for-size-growth-for-rhostmush86979
Ref: 5586979
Node: Sqlite and MySQL/Maria setup and why use it?89763
Ref: features sqlite-and-mysql-maria-setup-and-why-use-it90008
Ref: 5690008
Node: Executing outside scripts and binaries within RhostMUSH90509
Ref: features executing-outside-scripts-and-binaries-within-rhostmush90740
Ref: 5790740
Node: Pulling external data into RhostMUSH91315
Ref: features pulling-external-data-into-rhostmush91546
Ref: 5891546
Node: Integrating a unix cron right into RhostMUSH91877
Ref: features integrating-a-unix-cron-right-into-rhostmush92105
Ref: 5992105
Node: Signal handling how it works and when and why use it92581
Ref: features signal-handling-how-it-works-and-when-and-why-use-it92866
Ref: 5a92866
Node: Setting up global parents global @parents global attribute formatting and other global setups93679
Ref: features setting-up-global-parents-global-parents-global-attribute-formatting-and-other-global-setups93968
Ref: 5b93968
Node: RhostMUSH limitations and how to get around them96751
Ref: features rhostmush-limitations-and-how-to-get-around-them97055
Ref: 5c97055
Node: Things other mushes can do that Rhost can not and how to emulate it99694
Ref: features things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it99925
Ref: 5d99925
Node: PennMUSH100109
Ref: features pennmush100244
Ref: 5e100244
Node: MUX101242
Ref: features mux101377
Ref: 5f101377
Node: Advanced guest setup101837
Ref: features advanced-guest-setup102084
Ref: 60102084
Node: Attribute permission masking and the joys of the power behind it102543
Ref: features attribute-permission-masking-and-the-joys-of-the-power-behind-it102770
Ref: 61102770
Node: The amazing @cluster and what it can do for you103410
Ref: features the-amazing-cluster-and-what-it-can-do-for-you103644
Ref: 62103644
Node: What we plan for the future104397
Ref: features what-we-plan-for-the-future104608
Ref: 63104608
Node: Additional features not covered otherwise105088
Ref: features additional-features-not-covered-otherwise105243
Ref: 64105243
Node: Random notes and things to know about RhostMUSH105776
Ref: features random-notes-and-things-to-know-about-rhostmush105971
Ref: 65105971
Node: Note on bits their levels and things they do106939
Ref: features note-on-bits-their-levels-and-things-they-do107148
Ref: 66107148
Node: You need to @pcreate your guest characters and set them GUEST107825
Ref: features you-need-to-pcreate-your-guest-characters-and-set-them-guest108064
Ref: 67108064
Node: @powers are INHERITED108498
Ref: features powers-are-inherited108755
Ref: 68108755
Node: @depowers are automatically checked first before anything else109023
Ref: features depowers-are-automatically-checked-first-before-anything-else109235
Ref: 69109235
Node: Zones are unique109419
Ref: features zones-are-unique109648
Ref: 6a109648
Node: The db auto-repares itself when it can109742
Ref: features the-db-auto-repares-itself-when-it-can109951
Ref: 6b109951
Node: You can get your connect txt to parse ansi110232
Ref: features you-can-get-your-connect-txt-to-parse-ansi110473
Ref: 6c110473
Node: Re-compiled binaries do not require an @shutdown110736
Ref: features re-compiled-binaries-do-not-require-an-shutdown111003
Ref: 6d111003
Node: Softcode emulations of functions from other servers are included111282
Ref: features softcode-emulations-of-functions-from-other-servers-are-included111498
Ref: 6e111498
Node: Comparison of modern MUSH servers111890
Ref: differences doc112061
Ref: 6f112061
Ref: differences comparison-of-modern-mush-servers112061
Ref: 70112061
Node: Differences to expect to the end user between PennMUSH MUX and RhostMUSH113190
Ref: differences differences-to-expect-to-the-end-user-between-pennmush-mux-and-rhostmush113410
Ref: 71113410
Node: PennMUSH<2>114014
Ref: differences pennmush114160
Ref: 72114160
Node: MUX<2>114781
Ref: differences mux114945
Ref: 73114945
Node: RhostMUSH115480
Ref: differences rhostmush115624
Ref: 74115624
Node: Comparison of features between RhostMUSH PennMUSH and MUX2116358
Ref: differences comparison-of-features-between-rhostmush-pennmush-and-mux2116619
Ref: 75116619
Node: Organization of help and wizhelp117279
Ref: differences organization-of-help-and-wizhelp117506
Ref: 76117506
Node: Mail comsystem guests master rooms etc118264
Ref: differences mail-comsystem-guests-master-rooms-etc118456
Ref: 77118456
Node: Comparisons of features118846
Ref: differences comparisons-of-features119032
Ref: 78119032
Node: @commands with equivalents119184
Ref: differences commands-with-equivalents119361
Ref: 79119361
Node: @commands unique to RhostMUSH124821
Ref: differences commands-unique-to-rhostmush124992
Ref: 7a124992
Node: @lock equivalents125603
Ref: differences lock-equivalents125783
Ref: 7b125783
Node: @locks that only exist in RhostMUSH126909
Ref: differences locks-that-only-exist-in-rhostmush127087
Ref: 7c127087
Node: Flag and toggle equivalents127274
Ref: differences flag-and-toggle-equivalents127481
Ref: 7d127481
Node: Flags and toggles that only exist in RhostMUSH129667
Ref: differences flags-and-toggles-that-only-exist-in-rhostmush129857
Ref: 7e129857
Node: Flags129994
Ref: differences flags130109
Ref: 7f130109
Node: Toggles130543
Ref: differences toggles130658
Ref: 80130658
Node: @power equivalents131234
Ref: differences power-equivalents131418
Ref: 81131418
Node: @power unique to RhostMUSH133080
Ref: differences power-unique-to-rhostmush133172
Ref: 82133172
Node: Functions equivalents133521
Ref: differences functions-equivalents133762
Ref: 83133762
Node: Functions that only exist in RhostMUSH146780
Ref: differences functions-that-only-exist-in-rhostmush146887
Ref: 84146887
Node: What may need to be modified to get softcode from PennMUSH TinyMUSH2 TinyMUSH3 or MUX2 to work on Rhost148571
Ref: differences what-may-need-to-be-modified-to-get-softcode-from-pennmush-tinymush2-tinymush3-or-mux2-to-work-on-rhost148864
Ref: 85148864
Node: Problematic functions between codebases150138
Ref: differences problematic-functions-between-codebases150375
Ref: 86150375
Node: Problematic features between codebases150520
Ref: differences problematic-features-between-codebases150786
Ref: 87150786
Node: Problematic commands151023
Ref: differences problematic-commands151261
Ref: 88151261
Node: SIDEFX flag151387
Ref: differences sidefx-flag151601
Ref: 89151601
Node: Variable exits151873
Ref: differences variable-exits152072
Ref: 8a152072
Node: Zones152492
Ref: differences zones152687
Ref: 8b152687
Node: @powers153182
Ref: differences powers153379
Ref: 8c153379
Node: Attribute length153826
Ref: differences attribute-length154036
Ref: 8d154036
Node: Attribute contents154382
Ref: differences attribute-contents154594
Ref: 8e154594
Node: 256 color154879
Ref: differences color155087
Ref: 8f155087
Node: Unicode/UTF8155142
Ref: differences unicode-utf8155353
Ref: 90155353
Node: Attributes per object155576
Ref: differences attributes-per-object155788
Ref: 91155788
Node: Destroying156122
Ref: differences destroying156335
Ref: 92156335
Node: object id’s156842
Ref: differences object-id-s157052
Ref: 93157052
Node: lsearch and search157156
Ref: differences lsearch-and-search157379
Ref: 94157379
Node: @locks can be different157671
Ref: differences locks-can-be-different157900
Ref: 95157900
Node: Customer user-locks158055
Ref: differences customer-user-locks158281
Ref: 96158281
Node: Attribute trees158607
Ref: differences attribute-trees158835
Ref: 97158835
Node: Prefix permission locking159187
Ref: differences prefix-permission-locking159412
Ref: 98159412
Node: align and printf159713
Ref: differences align-and-printf159928
Ref: 99159928
Node: MySQL160152
Ref: differences mysql160353
Ref: 9a160353
Node: Mail System160493
Ref: differences mail-system160687
Ref: 9b160687
Node: Comsystem160798
Ref: differences comsystem161004
Ref: 9c161004
Node: Various Functions161110
Ref: differences various-functions161321
Ref: 9d161321
Node: Empty Attributes161864
Ref: differences empty-attributes162078
Ref: 9e162078
Node: Player Stats162310
Ref: differences player-stats162528
Ref: 9f162528
Node: Percent Substitutions162760
Ref: differences percent-substitutions162970
Ref: a0162970
Node: Switches163190
Ref: differences switches163396
Ref: a1163396
Node: Flags<2>163672
Ref: differences id1163864
Ref: a2163864
Node: Aliases164167
Ref: differences aliases164342
Ref: a3164342
Node: Things other mushes can do that Rhost can not and how to emulate it<2>164426
Ref: differences things-other-mushes-can-do-that-rhost-can-not-and-how-to-emulate-it164689
Ref: a4164689
Node: PennMUSH<3>164886
Ref: differences id2165030
Ref: a5165030
Node: MUX<3>165916
Ref: differences id3166060
Ref: a6166060
Node: Database166479
Ref: database doc166603
Ref: a7166603
Ref: database database166603
Ref: a8166603
Node: Loading an existing Database166750
Ref: database loading-an-existing-database166894
Ref: a9166894
Node: Converting a flatfile database for use in RhostMUSH168022
Ref: database converting-a-flatfile-database-for-use-in-rhostmush168195
Ref: aa168195
Node: Note about Compiling169397
Ref: database note-about-compiling169533
Ref: ab169533
Node: Gettin Started170744
Ref: gettingstarted doc170901
Ref: ac170901
Ref: gettingstarted gettin-started170901
Ref: ad170901
Node: What to ype to get the basics running if you did not choose a pre-existing flatfile171096
Ref: gettingstarted what-to-ype-to-get-the-basics-running-if-you-did-not-choose-a-pre-existing-flatfile171273
Ref: ae171273
Node: Login to #1 from the connect screen172571
Ref: gettingstarted login-to-1-from-the-connect-screen172820
Ref: af172820
Node: Change #1’s password to something you’ll remember but is hard to guess172961
Ref: gettingstarted change-1-s-password-to-something-you-ll-remember-but-is-hard-to-guess173230
Ref: b0173230
Node: Master Room173509
Ref: gettingstarted master-room173771
Ref: b1173771
Node: Flag and protect Master Room174114
Ref: gettingstarted flag-and-protect-master-room174326
Ref: b2174326
Node: Player Holder Characters174512
Ref: gettingstarted player-holder-characters174775
Ref: b3174775
Node: Immortal Holder175243
Ref: gettingstarted immortal-holder175360
Ref: b4175360
Node: Royalty/Wizard Holder175519
Ref: gettingstarted royalty-wizard-holder175667
Ref: b5175667
Node: Councilor/Admin Holder175837
Ref: gettingstarted councilor-admin-holder175992
Ref: b6175992
Node: Architect/Staff Holder176172
Ref: gettingstarted architect-staff-holder176329
Ref: b7176329
Node: Guildmaster/Lead Holder176509
Ref: gettingstarted guildmaster-lead-holder176635
Ref: b8176635
Node: Chown #0 The starting room and #2 The Master room to immholder176819
Ref: gettingstarted chown-0-the-starting-room-and-2-the-master-room-to-immholder177140
Ref: b9177140
Node: Create yourself your own immortal player then log off #1 and into this immortal player177487
Ref: gettingstarted create-yourself-your-own-immortal-player-then-log-off-1-and-into-this-immortal-player177831
Ref: ba177831
Node: Log out of #1 and log into your immortal player178165
Ref: gettingstarted log-out-of-1-and-log-into-your-immortal-player178475
Ref: bb178475
Node: Create your guest characters178711
Ref: gettingstarted create-your-guest-characters178994
Ref: bc178994
Node: Dig a closet to store important objects but non-master room179291
Ref: gettingstarted dig-a-closet-to-store-important-objects-but-non-master-room179574
Ref: bd179574
Node: Set the flags on the closet and ownership of it179784
Ref: gettingstarted set-the-flags-on-the-closet-and-ownership-of-it180094
Ref: be180094
Node: Create an Admin object for future ease of customization180359
Ref: gettingstarted create-an-admin-object-for-future-ease-of-customization180670
Ref: bf180670
Node: Set the flags on the admin object and ownership and location180823
Ref: gettingstarted set-the-flags-on-the-admin-object-and-ownership-and-location181120
Ref: c0181120
Node: Add admin object to configuration181509
Ref: gettingstarted add-admin-object-to-configuration181810
Ref: c1181810
Node: Reboot your mush to load up the change for the admin object182106
Ref: gettingstarted reboot-your-mush-to-load-up-the-change-for-the-admin-object182397
Ref: c2182397
Node: Do @admin/list to see if it shows the admin object182546
Ref: gettingstarted do-admin-list-to-see-if-it-shows-the-admin-object182850
Ref: c3182850
Node: Load in all the various softcode that you want183055
Ref: gettingstarted load-in-all-the-various-softcode-that-you-want183291
Ref: c4183291
Node: Myrddin MushCron183572
Ref: gettingstarted myrddin-mushcron183697
Ref: c5183697
Node: AshCom184260
Ref: gettingstarted ashcom184407
Ref: c6184407
Node: Mail Wrappers184742
Ref: gettingstarted mail-wrappers184884
Ref: c7184884
Node: Myrddin BBS185262
Ref: gettingstarted myrddin-bbs185412
Ref: c8185412
Node: Other Mushcode185697
Ref: gettingstarted other-mushcode185825
Ref: c9185825
Node: Minimal DB instructions186251
Ref: gettingstarted minimal-db-instructions186466
Ref: ca186466
Node: Startup Steps187037
Ref: gettingstarted startup-steps187121
Ref: cb187121
Node: Ambrosia’s Minimal Rhost DB187578
Ref: gettingstarted ambrosia-s-minimal-rhost-db187701
Ref: cc187701
Node: Version 1 0 5 2020-01-31187928
Ref: gettingstarted version-1-0-5-2020-01-31188050
Ref: cd188050
Node: Introduction190206
Ref: gettingstarted introduction190345
Ref: ce190345
Node: Features190543
Ref: gettingstarted features190667
Ref: cf190667
Node: Configuration190753
Ref: gettingstarted configuration190839
Ref: d0190839
Node: Softcode193816
Ref: gettingstarted softcode193920
Ref: d1193920
Node: Functions194520
Ref: gettingstarted functions194602
Ref: d2194602
Node: Bitlevels196611
Ref: gettingstarted bitlevels196728
Ref: d3196728
Node: Storytellers197224
Ref: gettingstarted storytellers197313
Ref: d4197313
Node: Builder-BCs197430
Ref: gettingstarted builder-bcs197541
Ref: d5197541
Node: Building Head198265
Ref: gettingstarted building-head198373
Ref: d6198373
Node: Enforcers198751
Ref: gettingstarted enforcers198854
Ref: d7198854
Node: Coders199043
Ref: gettingstarted coders199143
Ref: d8199143
Node: Head Coder199190
Ref: gettingstarted head-coder199291
Ref: d9199291
Node: MU* Head s199870
Ref: gettingstarted mu-head-s199976
Ref: da199976
Node: Site Admins200261
Ref: gettingstarted site-admins200364
Ref: db200364
Node: Globals200762
Ref: gettingstarted globals200846
Ref: dc200846
Node: Quota202981
Ref: gettingstarted quota203102
Ref: dd203102
Node: Functions<2>203395
Ref: gettingstarted id1203516
Ref: de203516
Node: Compiling203733
Ref: gettingstarted compiling203840
Ref: df203840
Node: What FLAGS TOGGLES POWERS DEPOWERS and BITLEVELS mean in RhostMUSH204199
Ref: toggles doc204356
Ref: e0204356
Ref: toggles what-flags-toggles-powers-depowers-and-bitlevels-mean-in-rhostmush204356
Ref: e1204356
Node: Flags<3>204636
Ref: toggles flags204777
Ref: e2204777
Node: Toggles<2>205028
Ref: toggles toggles205184
Ref: e3205184
Node: @power205520
Ref: toggles power205676
Ref: e4205676
Node: @depower206221
Ref: toggles depower206396
Ref: e5206396
Node: Multi-tiered bitlevel systems206684
Ref: toggles multi-tiered-bitlevel-systems206871
Ref: e6206871
Node: ghod #1 <bitlevel 7>207639
Ref: toggles ghod-1-bitlevel-7207780
Ref: e7207780
Node: Immortal i <Level 6> - Basically #1207946
Ref: toggles immortal-i-level-6-basically-1208135
Ref: e8208135
Node: Royalty W <Level 5> - FULL wizbit level208607
Ref: toggles royalty-w-level-5-full-wizbit-level208817
Ref: e9208817
Node: Councilor a <Level 4> - High wizbit level209365
Ref: toggles councilor-a-level-4-high-wizbit-level209583
Ref: ea209583
Node: Architect B <Level 3> - Middle wizbit level210166
Ref: toggles architect-b-level-3-middle-wizbit-level210390
Ref: eb210390
Node: Guildmaster g <Level 2> - Lowest wizbit level211258
Ref: toggles guildmaster-g-level-2-lowest-wizbit-level211462
Ref: ec211462
Node: Wanderer <bitlevel 0>212076
Ref: toggles wanderer-bitlevel-0212263
Ref: ed212263
Node: Guest <bitlevel 0 as well>212667
Ref: toggles guest-bitlevel-0-as-well212800
Ref: ee212800
Node: Altering bitlevels213097
Ref: toggles altering-bitlevels213267
Ref: ef213267
Node: Security213490
Ref: security doc213644
Ref: f0213644
Ref: security security213644
Ref: f1213644
Node: Considerations to locking down restrictions in RhostMUSH213927
Ref: security considerations-to-locking-down-restrictions-in-rhostmush214096
Ref: f2214096
Node: Online Blocking object abilities215201
Ref: security online-blocking-object-abilities215401
Ref: f3215401
Node: FLAGS access with @set215908
Ref: security flags-access-with-set216034
Ref: f4216034
Node: TOGGLES @toggle216496
Ref: security toggles-toggle216659
Ref: f5216659
Node: @powers @depowers and @locks216874
Ref: security powers-depowers-and-locks217006
Ref: f6217006
Node: Offline Blocking twinks from being abusive on your game217224
Ref: security offline-blocking-twinks-from-being-abusive-on-your-game217424
Ref: f7217424
Node: Extended lockdown of the mush and considerations217951
Ref: security extended-lockdown-of-the-mush-and-considerations218201
Ref: f8218201
Node: Attribute Restriction218771
Ref: security attribute-restriction218916
Ref: f9218916
Node: Command Restriction219172
Ref: security command-restriction219349
Ref: fa219349
Node: Flag/Toggle Restriction219708
Ref: security flag-toggle-restriction219883
Ref: fb219883
Node: Config restrictions220208
Ref: security config-restrictions220385
Ref: fc220385
Node: Function Restrictions220521
Ref: security function-restrictions220683
Ref: fd220683
Node: Flags<4>220949
Ref: security flags221102
Ref: fe221102
Node: Toggles<3>223382
Ref: security toggles223524
Ref: ff223524
Node: @powers<2>225545
Ref: security powers225688
Ref: 100225688
Node: @depowers227477
Ref: security depowers227627
Ref: 101227627
Node: Site Restrictions229165
Ref: security site-restrictions229296
Ref: 102229296
Node: IP based restrictions229576
Ref: security ip-based-restrictions229693
Ref: 103229693
Node: DNS based restrictions231228
Ref: security dns-based-restrictions231345
Ref: 104231345
Node: Methods to block anonymous connections and the pros and cons of doing so232622
Ref: security methods-to-block-anonymous-connections-and-the-pros-and-cons-of-doing-so232870
Ref: 105232870
Node: Blacklisting through external tor_pull sh script233413
Ref: security blacklisting-through-external-tor-pull-sh-script233638
Ref: 106233638
Node: Blacklisting through internal @blacklist command234076
Ref: security blacklisting-through-internal-blacklist-command234352
Ref: 107234352
Node: Blacklisting through internal @tor command234628
Ref: security blacklisting-through-internal-tor-command234900
Ref: 108234900
Node: Blacklisting through internal @admin command235230
Ref: security blacklisting-through-internal-admin-command235445
Ref: 109235445
Node: Setting up an SSL tunnel for secure connection options236178
Ref: security setting-up-an-ssl-tunnel-for-secure-connection-options236369
Ref: 10a236369
Node: Quickstart for SSL setup with stunnel236576
Ref: security quickstart-for-ssl-setup-with-stunnel236755
Ref: 10b236755
Node: Detailed SSL setup with stunnel238215
Ref: security detailed-ssl-setup-with-stunnel238394
Ref: 10c238394
Node: stunnel directory238995
Ref: security stunnel-directory239123
Ref: 10d239123
Node: Modifying netrhost conf239918
Ref: security modifying-netrhost-conf240088
Ref: 10e240088
Node: Running the stunnel setup program241209
Ref: security running-the-stunnel-setup-program241388
Ref: 10f241388
Node: Starting the stunnel proxy242113
Ref: security starting-the-stunnel-proxy242300
Ref: 110242300
Node: Shutting down the stunnel proxy242515
Ref: security shutting-down-the-stunnel-proxy242701
Ref: 111242701
Node: Configuring firewall on the host242887
Ref: security configuring-firewall-on-the-host243038
Ref: 112243038
Node: Maintenance243339
Ref: maintenance doc243442
Ref: 113243442
Ref: maintenance maintenance243442
Ref: 114243442
Node: Note about Patching243818
Ref: maintenance note-about-patching243932
Ref: 115243932
Node: Daily Backups for RhostMUSH245015
Ref: maintenance daily-backups-for-rhostmush245179
Ref: 116245179
Node: Signals and why you need them for control247555
Ref: maintenance signals-and-why-you-need-them-for-control247724
Ref: 117247724
Node: TERM kill -TERM or kill -15248143
Ref: maintenance term-kill-term-or-kill-15248283
Ref: 118248283
Node: USR1 kill -USR1248787
Ref: maintenance usr1-kill-usr1248951
Ref: 119248951
Node: USR2 kill -USR2249340
Ref: maintenance usr2-kill-usr2249503
Ref: 11a249503
Node: KILL kill -KILL or kill -9249889
Ref: maintenance kill-kill-kill-or-kill-9250028
Ref: 11b250028
Node: Shutting down gracefully250784
Ref: maintenance shutting-down-gracefully250945
Ref: 11c250945
Node: Rhostmush has many ways to shut down the game cleanly251133
Ref: maintenance rhostmush-has-many-ways-to-shut-down-the-game-cleanly251294
Ref: 11d251294
Node: WARNING Never kill -9 Rhost251626
Ref: maintenance warning-never-kill-9-rhost251787
Ref: 11e251787
Node: Autoshutdown script252361
Ref: maintenance autoshutdown-script252504
Ref: 11f252504
Node: Network Port redirector252876
Ref: maintenance network-port-redirector253059
Ref: 120253059
Node: Using the built-in cron system for periodically running commands253694
Ref: maintenance using-the-built-in-cron-system-for-periodically-running-commands253910
Ref: 121253910
Node: Syntax for rhost cron254107
Ref: maintenance syntax-for-rhost-cron254240
Ref: 122254240
Node: Example syntaxt for rhost cron255136
Ref: maintenance example-syntaxt-for-rhost-cron255235
Ref: 123255235
Node: The following scripts are used in the game directory255567
Ref: maintenance the-following-scripts-are-used-in-the-game-directory255783
Ref: 124255783
Node: Textfiles for RhostMUSH256737
Ref: maintenance textfiles-for-rhostmush256880
Ref: 125256880
Node: Textfile Frequently Asked Questions258666
Ref: maintenance textfile-frequently-asked-questions258772
Ref: 126258772
Node: Troubleshooting259757
Ref: troubleshooting doc259869
Ref: 127259869
Ref: troubleshooting troubleshooting259869
Ref: 128259869
Node: Reporting bugs or getting help260143
Ref: troubleshooting reporting-bugs-or-getting-help260270
Ref: 129260270
Node: Troubleshooting issues with starting up260688
Ref: troubleshooting troubleshooting-issues-with-starting-up260805
Ref: 12a260805
Node: Problem If it says the shared ID is already in use261466
Ref: troubleshooting problem-if-it-says-the-shared-id-is-already-in-use261669
Ref: 12b261669
Node: Problem Your log file is massive and your mush is running261925
Ref: troubleshooting problem-your-log-file-is-massive-and-your-mush-is-running262228
Ref: 12c262228
Node: Problem The database flatfile you’re loading can’t load because a db is already defined262438
Ref: troubleshooting problem-the-database-flatfile-you-re-loading-can-t-load-because-a-db-is-already-defined262758
Ref: 12d262758
Node: Problem The mail database won’t load and mail shows ‘offline’263026
Ref: troubleshooting problem-the-mail-database-won-t-load-and-mail-shows-offline263280
Ref: 12e263280
Node: Stack limit and debugging263477
Ref: troubleshooting stack-limit-and-debugging263645
Ref: 12f263645
Node: How to reset the password for #1264948
Ref: troubleshooting how-to-reset-the-password-for-1265134
Ref: 130265134
Node: Method 1 Reset to Default Password265545
Ref: troubleshooting method-1-reset-to-default-password265710
Ref: 131265710
Node: Method 2 Increase Permissions of Immortals265914
Ref: troubleshooting method-2-increase-permissions-of-immortals266079
Ref: 132266079
Node: Troubleshooting difficulties compiling RhostMUSH266299
Ref: troubleshooting troubleshooting-difficulties-compiling-rhostmush266486
Ref: 133266486
Node: Changes to conf for high-bit CPUs266684
Ref: troubleshooting changes-to-conf-for-high-bit-cpus266860
Ref: 134266860
Node: Changes to autconf for certain systems267677
Ref: troubleshooting changes-to-autconf-for-certain-systems267853
Ref: 135267853
Node: Dealing with DB Corruption268842
Ref: troubleshooting dealing-with-db-corruption269033
Ref: 136269033
Node: If the mush says it can’t find your database files269858
Ref: troubleshooting if-the-mush-says-it-can-t-find-your-database-files270053
Ref: 137270053
Node: Check the names of the database files in your ‘data’ directory270375
Ref: troubleshooting check-the-names-of-the-database-files-in-your-data-directory270579
Ref: 138270579
Node: Check your netrhost conf file270911
Ref: troubleshooting check-your-netrhost-conf-file271151
Ref: 139271151
Node: Check your mush config file271663
Ref: troubleshooting check-your-mush-config-file271828
Ref: 13a271828
Node: If the mush says it can’t read or load your database files272241
Ref: troubleshooting if-the-mush-says-it-can-t-read-or-load-your-database-files272573
Ref: 13b272573
Node: Verify you have enough disk space quota272982
Ref: troubleshooting verify-you-have-enough-disk-space-quota273178
Ref: 13c273178
Node: Verify you have enough disk space system273831
Ref: troubleshooting verify-you-have-enough-disk-space-system274027
Ref: 13d274027
Node: If the mush seems to load fine but I can’t log in anyone and when I do all the names and attributes of things seem to be gone!274803
Ref: troubleshooting if-the-mush-seems-to-load-fine-but-i-can-t-log-in-anyone-and-when-i-do-all-the-names-and-attributes-of-things-seem-to-be-gone275113
Ref: 13e275113
Node: The bad news275858
Ref: troubleshooting the-bad-news276068
Ref: 13f276068
Node: The good news276469
Ref: troubleshooting the-good-news276717
Ref: 140276717
Node: Now to restore your database?277459
Ref: troubleshooting now-to-restore-your-database277686
Ref: 141277686
Node: Bringing up your mail database277815
Ref: troubleshooting bringing-up-your-mail-database278056
Ref: 142278056
Node: If after restoring main database your mail database works278325
Ref: troubleshooting if-after-restoring-main-database-your-mail-database-works278534
Ref: 143278534
Node: If after restoring main database your mail database does not work279004
Ref: troubleshooting if-after-restoring-main-database-your-mail-database-does-not-work279213
Ref: 144279213
Node: Dealing with a corrupt mail database279469
Ref: troubleshooting dealing-with-a-corrupt-mail-database279603
Ref: 145279603
Node: Backing up your mail database280288
Ref: troubleshooting backing-up-your-mail-database280453
Ref: 146280453
Node: Automatically recovering your mail database280924
Ref: troubleshooting automatically-recovering-your-mail-database281136
Ref: 147281136
Node: Manually recovering your mail database281866
Ref: troubleshooting manually-recovering-your-mail-database282040
Ref: 148282040
Node: Advanced Features283610
Ref: advanced doc283733
Ref: 149283733
Ref: advanced advanced-features283733
Ref: 14a283733
Node: Installing using an ansible playbook284063
Ref: advanced ansible-install284197
Ref: 14b284197
Ref: advanced installing-using-an-ansible-playbook284197
Ref: 14c284197
Node: Adding hardcoded modules284801
Ref: advanced adding-hardcoded-modules284971
Ref: 14d284971
Node: Modifying sourcode to add a module285210
Ref: advanced modifying-sourcode-to-add-a-module285366
Ref: 14e285366
Node: Adding an @startup to make use of modules285694
Ref: advanced adding-an-startup-to-make-use-of-modules285897
Ref: 14f285897
Node: Contributing your module back to Rhost286476
Ref: advanced contributing-your-module-back-to-rhost286636
Ref: 150286636
Node: Shutting down gracefully<2>286945
Ref: advanced shutting-down-gracefully287093
Ref: 151287093
Node: Rhostmush has many ways to shut down the game cleanly<2>287343
Ref: advanced rhostmush-has-many-ways-to-shut-down-the-game-cleanly287513
Ref: 152287513
Node: WARNING Never kill -9 Rhost<2>287847
Ref: advanced warning-never-kill-9-rhost288017
Ref: 153288017
Node: Reality levels288593
Ref: advanced reality-levels288761
Ref: 154288761
Node: Visibility289229
Ref: advanced visibility289322
Ref: 155289322
Node: Descriptions290338
Ref: advanced descriptions290464
Ref: 156290464
Node: Configuration parameters291710
Ref: advanced configuration-parameters291843
Ref: 157291843
Node: Example mush conf293399
Ref: advanced example-mush-conf293528
Ref: 158293528
Node: Commands294080
Ref: advanced commands294197
Ref: 159294197
Node: Functions<3>294731
Ref: advanced functions294870
Ref: 15a294870
Node: Example 1 A simplified Witchcraft setup295870
Ref: advanced example-1-a-simplified-witchcraft-setup296022
Ref: 15b296022
Node: Example 2 A WoD setup299178
Ref: advanced example-2-a-wod-setup299336
Ref: 15c299336
Node: Example 3 Softcode302978
Ref: advanced example-3-softcode303088
Ref: 15d303088
Node: Execscript and external programs and scripts305060
Ref: advanced execscript-and-external-programs-and-scripts305238
Ref: 15e305238
Node: Mush variables305469
Ref: advanced mush-variables305594
Ref: 15f305594
Node: Built in variables305717
Ref: advanced built-in-variables305823
Ref: 160305823
Node: Dynamic variables306361
Ref: advanced dynamic-variables306494
Ref: 161306494
Node: Register variables306652
Ref: advanced register-variables306758
Ref: 162306758
Node: set object307031
Ref: advanced set-object307184
Ref: 163307184
Node: The format of the fields are307563
Ref: advanced the-format-of-the-fields-are307649
Ref: 164307649
Node: Dynamic variables<2>307824
Ref: advanced id65307950
Ref: 165307950
Node: Examples308077
Ref: advanced examples308153
Ref: 166308153
Node: Register variables<2>308468
Ref: advanced id66308594
Ref: 167308594
Node: Examples The last example clears register 0308801
Ref: advanced examples-the-last-example-clears-register-0308913
Ref: 168308913
Node: Example bash script309142
Ref: advanced example-bash-script309299
Ref: 169309299
Node: Notes and warnings309777
Ref: advanced notes-and-warnings309958
Ref: 16a309958
Node: Scripts to be used with execscript310493
Ref: advanced scripts-to-be-used-with-execscript310646
Ref: 16b310646
Node: Using printf for advanced text output312504
Ref: advanced using-printf-for-advanced-text-output312659
Ref: 16c312659
Node: Example one313009
Ref: advanced example-one313125
Ref: 16d313125
Node: Example two313577
Ref: advanced example-two313715
Ref: 16e313715
Node: Example three314265
Ref: advanced example-three314383
Ref: 16f314383
Node: Format for image files315271
Ref: advanced format-for-image-files315408
Ref: 170315408
Node: HELP key indexes for the values318511
Ref: advanced help-key-indexes-for-the-values318612
Ref: 171318612
Node: Requirements if Using Windows332919
Ref: windows doc333080
Ref: 172333080
Ref: windows requirements-if-using-windows333080
Ref: 173333080
Ref: windows windows-requirements333080
Ref: 174333080
Node: Installing on Windows 10 with BASH333381
Ref: windows installing-on-windows-10-with-bash333534
Ref: 175333534
Node: Installing on Windows with Cygwin334045
Ref: windows installing-on-windows-with-cygwin334235
Ref: 176334235
Node: Startig RhostMUSH on Windows334641
Ref: windows startig-rhostmush-on-windows334788
Ref: 177334788
Node: Upgrading a Legacy RhostMUSH Installation334918
Ref: legacy doc335076
Ref: 178335076
Ref: legacy upgrading-a-legacy-rhostmush-installation335076
Ref: 179335076
Node: Converting database betwen GDBM and QDBM335392
Ref: legacy converting-database-betwen-gdbm-and-qdbm335565
Ref: 17a335565
Node: Downgrading QDBM to GDBM335900
Ref: legacy downgrading-qdbm-to-gdbm336044
Ref: 17b336044
Node: Upgradging GDBM to QDBM337008
Ref: legacy upgradging-gdbm-to-qdbm337152
Ref: 17c337152
Node: While logged in to your mush issue the following commands337812
Ref: legacy while-logged-in-to-your-mush-issue-the-following-commands337971
Ref: 17d337971
Node: Verify the files exist338475
Ref: legacy verify-the-files-exist338660
Ref: 17e338660
Node: Shutdown the MUSH338986
Ref: legacy shutdown-the-mush339139
Ref: 17f339139
Node: From the Server directory339215
Ref: legacy from-the-server-directory339376
Ref: 180339376
Node: From the Server/game directory340469
Ref: legacy from-the-server-game-directory340668
Ref: 181340668
Node: While logged into the mush issue the following commands340927
Ref: legacy while-logged-into-the-mush-issue-the-following-commands341156
Ref: 182341156
Node: Verify that you have QDBM running and your valid values341512
Ref: legacy verify-that-you-have-qdbm-running-and-your-valid-values341702
Ref: 183341702
Node: Updating RhostMUSH prior to 3 9 5p2341899
Ref: legacy updating-rhostmush-prior-to-3-9-5p2342125
Ref: 184342125
Node: Adding MySQL to RhostMUSH older than 3 9 5p2345944
Ref: legacy adding-mysql-to-rhostmush-older-than-3-9-5p2346121
Ref: 185346121
Node: Comparison of Flags348874
Ref: flags doc349023
Ref: 186349023
Ref: flags comparison-of-flags349023
Ref: 187349023
Node: Comparison of powers355854
Ref: powers doc355991
Ref: 188355991
Ref: powers comparison-of-powers355991
Ref: 189355991
Node: RhostMUSH Internal Help Files358729
Ref: helpfile doc358879
Ref: 18a358879
Ref: helpfile rhostmush-internal-help-files358879
Ref: 18b358879
Node: RhostMUSH Internal Wizhelp Files358946
Ref: wizhelpfile doc359085
Ref: 18c359085
Ref: wizhelpfile rhostmush-internal-wizhelp-files359085
Ref: 18d359085
Node: Changelog359158
Ref: changelog doc359303
Ref: 18e359303
Ref: changelog changelog359303
Ref: 18f359303
Ref: changelog id1359303
Ref: 190359303
Node: RhostMUSH 4 0360286
Ref: changelog changelog-4-0360380
Ref: 191360380
Ref: changelog rhostmush-4-0360380
Ref: 192360380
Node: RhostMUSH 3 9 5363332
Ref: changelog changelog-3-9-5363450
Ref: 193363450
Ref: changelog rhostmush-3-9-5363450
Ref: 194363450
Node: RhostMUSH 3 9 4367848
Ref: changelog changelog-3-9-4367968
Ref: 195367968
Ref: changelog rhostmush-3-9-4367968
Ref: 196367968
Node: RhostMUSH 3 9 3369241
Ref: changelog changelog-3-9-3369361
Ref: 197369361
Ref: changelog rhostmush-3-9-3369361
Ref: 198369361
Node: RhostMUSH 3 9 2369543
Ref: changelog changelog-3-9-2369663
Ref: 199369663
Ref: changelog rhostmush-3-9-2369663
Ref: 19a369663
Node: RhostMUSH 3 9 1370444
Ref: changelog changelog-3-9-1370568
Ref: 19b370568
Ref: changelog rhostmush-3-9-1370568
Ref: 19c370568
Node: RhostMUSH 3 9 0 p00372331
Ref: changelog changelog-3-9-0p00372459
Ref: 19d372459
Ref: changelog rhostmush-3-9-0-p00372459
Ref: 19e372459
Node: Changes372646
Ref: changelog changes372738
Ref: 19f372738
Node: Additions381270
Ref: changelog additions381383
Ref: 1a0381383
Node: Functions<4>381522
Ref: changelog functions381611
Ref: 1a1381611
Node: Commands<2>384485
Ref: changelog commands384591
Ref: 1a2384591
Node: Flags<5>385850
Ref: changelog flags385954
Ref: 1a3385954
Node: Toggles<4>386075
Ref: changelog toggles386159
Ref: 1a4386159
Node: Admin Params386553
Ref: changelog admin-params386668
Ref: 1a5386668
Node: Bug Fixes387564
Ref: changelog bug-fixes387661
Ref: 1a6387661
Node: RhostMUSH 3 2 4 p18396220
Ref: changelog changelog-3-2-4p18396352
Ref: 1a7396352
Ref: changelog rhostmush-3-2-4-p18396352
Ref: 1a8396352
Node: Changes<2>396477
Ref: changelog id2396575
Ref: 1a9396575
Node: Bug Fixes<2>398764
Ref: changelog id3398862
Ref: 1aa398862
Node: RhostMUSH 3 2 4 p17401341
Ref: changelog changelog-3-2-4p17401473
Ref: 1ab401473
Ref: changelog rhostmush-3-2-4-p17401473
Ref: 1ac401473
Node: Changes<3>401599
Ref: changelog id4401697
Ref: 1ad401697
Node: Bug Fixes<3>402401
Ref: changelog id5402499
Ref: 1ae402499
Node: RhostMUSH 3 2 4 p16403284
Ref: changelog changelog-3-2-4p16403416
Ref: 1af403416
Ref: changelog rhostmush-3-2-4-p16403416
Ref: 1b0403416
Node: Changes<4>403603
Ref: changelog id6403701
Ref: 1b1403701
Node: Additions<2>405498
Ref: changelog id7405620
Ref: 1b2405620
Node: Functions<5>405694
Ref: changelog id8405766
Ref: 1b3405766
Node: Admin Params<2>405915
Ref: changelog id9406039
Ref: 1b4406039
Node: Bug Fixes<4>406766
Ref: changelog id10406869
Ref: 1b5406869
Node: RhostMUSH 3 2 4 p15408581
Ref: changelog changelog-3-2-4p15408713
Ref: 1b6408713
Ref: changelog rhostmush-3-2-4-p15408713
Ref: 1b7408713
Node: Changes<5>408900
Ref: changelog id11408998
Ref: 1b8408998
Node: Additions<3>411861
Ref: changelog id12411983
Ref: 1b9411983
Node: Functions<6>412099
Ref: changelog id13412188
Ref: 1ba412188
Node: Flags<6>412600
Ref: changelog id14412708
Ref: 1bb412708
Node: Toggles<5>413058
Ref: changelog id15413145
Ref: 1bc413145
Node: Admin Params<3>413417
Ref: changelog id16413541
Ref: 1bd413541
Node: Bug Fixes<5>415274
Ref: changelog id17415377
Ref: 1be415377
Node: RhostMUSH 3 2 4 p14417849
Ref: changelog changelog-3-2-4p14417981
Ref: 1bf417981
Ref: changelog rhostmush-3-2-4-p14417981
Ref: 1c0417981
Node: Changes<6>418168
Ref: changelog id18418266
Ref: 1c1418266
Node: Additions<4>420150
Ref: changelog id19420272
Ref: 1c2420272
Node: Functions<7>420413
Ref: changelog id20420505
Ref: 1c3420505
Node: Commands<3>421234
Ref: changelog id21421343
Ref: 1c4421343
Node: Flags<7>421878
Ref: changelog id22421985
Ref: 1c5421985
Node: Toggles<6>422269
Ref: changelog id23422356
Ref: 1c6422356
Node: Admin Params<4>422469
Ref: changelog id24422593
Ref: 1c7422593
Node: Bug Fixes<6>423907
Ref: changelog id25424010
Ref: 1c8424010
Node: RhostMUSH 3 2 4 p13426128
Ref: changelog changelog-3-2-4p13426260
Ref: 1c9426260
Ref: changelog rhostmush-3-2-4-p13426260
Ref: 1ca426260
Node: Changes<7>426447
Ref: changelog id26426545
Ref: 1cb426545
Node: Additions<5>428340
Ref: changelog id27428462
Ref: 1cc428462
Node: Functions<8>428598
Ref: changelog id28428690
Ref: 1cd428690
Node: Commands<4>429906
Ref: changelog id29430016
Ref: 1ce430016
Node: De-Powers430104
Ref: changelog de-powers430212
Ref: 1cf430212
Node: Toggles<7>430372
Ref: changelog id30430460
Ref: 1d0430460
Node: Admin Params<5>430631
Ref: changelog id31430755
Ref: 1d1430755
Node: Bug Fixes<7>431743
Ref: changelog id32431846
Ref: 1d2431846
Node: RhostMUSH 3 2 4 p12434203
Ref: changelog changelog-3-2-4p12434335
Ref: 1d3434335
Ref: changelog rhostmush-3-2-4-p12434335
Ref: 1d4434335
Node: Changes<8>434522
Ref: changelog id33434620
Ref: 1d5434620
Node: Additions<6>436049
Ref: changelog id34436171
Ref: 1d6436171
Node: Functions<9>436289
Ref: changelog id35436381
Ref: 1d7436381
Node: Commands<5>436747
Ref: changelog id36436856
Ref: 1d8436856
Node: Flags<8>437106
Ref: changelog id37437194
Ref: 1d9437194
Node: Admin Params<6>437284
Ref: changelog id38437408
Ref: 1da437408
Node: Bug Fixes<8>438677
Ref: changelog id39438780
Ref: 1db438780
Node: RhostMUSH 3 2 4 p11439667
Ref: changelog changelog-3-2-4p11439799
Ref: 1dc439799
Ref: changelog rhostmush-3-2-4-p11439799
Ref: 1dd439799
Node: Changes<9>439986
Ref: changelog id40440084
Ref: 1de440084
Node: Additions<7>441121
Ref: changelog id41441243
Ref: 1df441243
Node: Functions<10>441366
Ref: changelog id42441459
Ref: 1e0441459
Node: Commands<6>441584
Ref: changelog id43441696
Ref: 1e1441696
Node: Toggles<8>441809
Ref: changelog id44441899
Ref: 1e2441899
Node: Admin Params<7>442284
Ref: changelog id45442408
Ref: 1e3442408
Node: Bug Fixes<9>443013
Ref: changelog id46443116
Ref: 1e4443116
Node: RhostMUSH 3 2 4 p10444175
Ref: changelog changelog-3-2-4p10444306
Ref: 1e5444306
Ref: changelog rhostmush-3-2-4-p10444306
Ref: 1e6444306
Node: Changes<10>444495
Ref: changelog id47444594
Ref: 1e7444594
Node: Additions<8>444668
Ref: changelog id48444791
Ref: 1e8444791
Node: Functions<11>444866
Ref: changelog id49444939
Ref: 1e9444939
Node: Admin Params<8>445061
Ref: changelog id50445186
Ref: 1ea445186
Node: Bug Fixes<10>445308
Ref: changelog id51445412
Ref: 1eb445412
Node: RhostMUSH 3 2 4 p9445555
Ref: changelog changelog-3-2-4p9445685
Ref: 1ec445685
Ref: changelog rhostmush-3-2-4-p9445685
Ref: 1ed445685
Node: Changes<11>445872
Ref: changelog id52445970
Ref: 1ee445970
Node: Additions<9>446525
Ref: changelog id53446647
Ref: 1ef446647
Node: Functions<12>446764
Ref: changelog id54446854
Ref: 1f0446854
Node: Flags<9>447431
Ref: changelog id55447540
Ref: 1f1447540
Node: Toggles<9>447820
Ref: changelog id56447907
Ref: 1f2447907
Node: Admin Params<9>448075
Ref: changelog id57448199
Ref: 1f3448199
Node: Bug Fixes<11>448550
Ref: changelog id58448653
Ref: 1f4448653
Node: RhostMUSH 3 2 4 p8449464
Ref: changelog changelog-3-2-4p8449593
Ref: 1f5449593
Ref: changelog rhostmush-3-2-4-p8449593
Ref: 1f6449593
Node: Changes<12>449782
Ref: changelog id59449881
Ref: 1f7449881
Node: Additions<10>451326
Ref: changelog id60451450
Ref: 1f8451450
Node: Functions<13>451594
Ref: changelog id61451688
Ref: 1f9451688
Node: Commands<7>452149
Ref: changelog id62452261
Ref: 1fa452261
Node: Flags<10>452443
Ref: changelog id63452553
Ref: 1fb452553
Node: Toggles<10>452967
Ref: changelog id64453057
Ref: 1fc453057
Node: Admin Params<10>453249
Ref: changelog id65453375
Ref: 1fd453375
Node: Bug Fixes<12>454161
Ref: changelog id66454265
Ref: 1fe454265
Node: RhostMUSH 3 2 4 p7454519
Ref: changelog changelog-3-2-4p7454648
Ref: 1ff454648
Ref: changelog rhostmush-3-2-4-p7454648
Ref: 200454648
Node: Changes<13>454809
Ref: changelog id67454911
Ref: 201454911
Node: Admin Params<11>455163
Ref: changelog id68455287
Ref: 202455287
Node: Bug Fixes<13>455330
Ref: changelog id69455434
Ref: 203455434
Node: RhostMUSH 3 2 4 p6455589
Ref: changelog changelog-3-2-4p6455718
Ref: 204455718
Ref: changelog rhostmush-3-2-4-p6455718
Ref: 205455718
Node: Changes<14>455863
Ref: changelog id70455962
Ref: 206455962
Node: Admins Params456042
Ref: changelog admins-params456163
Ref: 207456163
Node: Bug Fixes<14>456529
Ref: changelog id71456630
Ref: 208456630
Node: RhostMUSH 3 2 4 p5457008
Ref: changelog changelog-3-2-4p5457137
Ref: 209457137
Ref: changelog rhostmush-3-2-4-p5457137
Ref: 20a457137
Node: Changes<15>457298
Ref: changelog id72457400
Ref: 20b457400
Node: Admin Params<12>457576
Ref: changelog id73457700
Ref: 20c457700
Node: Bug Fixes<15>457906
Ref: changelog id74458010
Ref: 20d458010
Node: RhostMUSH 3 2 4 p4458227
Ref: changelog changelog-3-2-4p4458356
Ref: 20e458356
Ref: changelog rhostmush-3-2-4-p4458356
Ref: 20f458356
Node: Changes<16>458565
Ref: changelog id75458664
Ref: 210458664
Node: Additions<11>459934
Ref: changelog id76460057
Ref: 211460057
Node: Functions<14>460181
Ref: changelog id77460275
Ref: 212460275
Node: Commands<8>460452
Ref: changelog id78460566
Ref: 213460566
Node: Toggles<11>460844
Ref: changelog id79460936
Ref: 214460936
Node: Alias Additions461012
Ref: changelog alias-additions461140
Ref: 215461140
Node: Commands<9>461224
Ref: changelog id80461298
Ref: 216461298
Node: Admin Params<13>461364
Ref: changelog id81461492
Ref: 217461492
Node: Bug Fixes<16>461813
Ref: changelog id82461917
Ref: 218461917
Node: RhostMUSH 3 2 4 p3462651
Ref: changelog changelog-3-2-4p3462753
Ref: 219462753
Ref: changelog rhostmush-3-2-4-p3462753
Ref: 21a462753
Node: Changes<17>462981
Ref: changelog id83463080
Ref: 21b463080
Node: Additions<12>463787
Ref: changelog id84463913
Ref: 21c463913
Node: Functions<15>464069
Ref: changelog id85464164
Ref: 21d464164
Node: Commands<10>465567
Ref: changelog id86465680
Ref: 21e465680
Node: Flags<11>465822
Ref: changelog id87465928
Ref: 21f465928
Node: Powers466246
Ref: changelog powers466351
Ref: 220466351
Node: Toggles<12>466545
Ref: changelog id88466632
Ref: 221466632
Node: Alias Additions<2>466784
Ref: changelog id89466915
Ref: 222466915
Node: Functions<16>467048
Ref: changelog id90467148
Ref: 223467148
Node: Commands<11>467667
Ref: changelog id91467785
Ref: 224467785
Node: Flags<12>467960
Ref: changelog id92468056
Ref: 225468056
Node: Admin Params<14>468120
Ref: changelog id93468251
Ref: 226468251
Node: Bug Fixes<17>468450
Ref: changelog id94468554
Ref: 227468554
Node: Historical Non-Disclosure Agreement469683
Ref: nda doc469805
Ref: 228469805
Ref: nda historical-non-disclosure-agreement469805
Ref: 229469805
Node: Copyright470923
Ref: index copyright471054
Ref: 22a471054
Node: Indices and tables472043
Ref: index indices-and-tables472130
Ref: 22b472130

End Tag Table


Local Variables:
coding: utf-8
End:
